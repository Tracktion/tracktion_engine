<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.9.1">
  <compound kind="file">
    <name>tracktion_AbletonLink.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__AbletonLink_8h.html</filename>
    <class kind="class">tracktion::engine::AbletonLink</class>
    <class kind="struct">tracktion::engine::AbletonLink::Listener</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ActiveNoteList.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__ActiveNoteList_8h.html</filename>
    <class kind="struct">tracktion::engine::ActiveNoteList</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AirWindows.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/airwindows/</path>
    <filename>tracktion__AirWindows_8h.html</filename>
    <class kind="class">tracktion::engine::AirWindowsCallback</class>
    <class kind="class">tracktion::engine::AirWindowsPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="define">
      <type>#define</type>
      <name>AIRWINDOWSPLUGIN</name>
      <anchorfile>tracktion__AirWindows_8h.html</anchorfile>
      <anchor>a4eb7742fcf649047c78ea5229fe97e4e</anchor>
      <arglist>(className, pluginName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_AirWindowsBase.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/airwindows/</path>
    <filename>tracktion__AirWindowsBase_8h.html</filename>
    <class kind="class">tracktion::engine::AirWindowsBase</class>
    <class kind="class">tracktion::engine::AirWindowsAutomatableParameter</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="define">
      <type>#define</type>
      <name>__audioeffect__</name>
      <anchorfile>tracktion__AirWindowsBase_8h.html</anchorfile>
      <anchor>a6c4ffedfdccbcd0c5eca9f33ef9cb0e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VstInt32</name>
      <anchorfile>tracktion__AirWindowsBase_8h.html</anchorfile>
      <anchor>a5f77bb76f49c387e79ff210e6cb95c2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AudioEffect</name>
      <anchorfile>tracktion__AirWindowsBase_8h.html</anchorfile>
      <anchor>a667410c83334b100a996ab5b08dddb60</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AudioEffectX</name>
      <anchorfile>tracktion__AirWindowsBase_8h.html</anchorfile>
      <anchor>a2f1d5f61255a8408d89029b74fc956c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>audioMasterCallback</name>
      <anchorfile>tracktion__AirWindowsBase_8h.html</anchorfile>
      <anchor>a66dc8d02795f1ee8d3c7046780101ac2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VstPlugCategory</name>
      <anchorfile>tracktion__AirWindowsBase_8h.html</anchorfile>
      <anchor>a519cbcbd6e9bfba49d862592d2321db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kPlugCategEffect</name>
      <anchorfile>tracktion__AirWindowsBase_8h.html</anchorfile>
      <anchor>a849814460b7c69b1000997b447452218</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kVstMaxProgNameLen</name>
      <anchorfile>tracktion__AirWindowsBase_8h.html</anchorfile>
      <anchor>af7387827e73aee3f0927d1028e14cf67</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kVstMaxParamStrLen</name>
      <anchorfile>tracktion__AirWindowsBase_8h.html</anchorfile>
      <anchor>a0fcf8249f76c93dc010fd854db752d41</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kVstMaxProductStrLen</name>
      <anchorfile>tracktion__AirWindowsBase_8h.html</anchorfile>
      <anchor>ac0cddcda3652b392fe162218e2627ef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kVstMaxVendorStrLen</name>
      <anchorfile>tracktion__AirWindowsBase_8h.html</anchorfile>
      <anchor>a3c9121de0bc67b9b9f440c23c7e5479d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>vst_strncpy</name>
      <anchorfile>tracktion__AirWindowsBase_8h.html</anchorfile>
      <anchor>ad2237e40a2487b7032283254afde42f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>float2string</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a638e70e2ab56fe6577ba34b38e5b9fc2</anchor>
      <arglist>(float f, char *text, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>int2string</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0f50efa6bb6c0a2811ebe90c93c9be75</anchor>
      <arglist>(float i, char *text, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dB2string</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae1bfebc47422a24cc0e7aee07d90b962</anchor>
      <arglist>(float value, char *text, int maxLen)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_AlphaTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/types/</path>
    <filename>tracktion__AlphaTrack_8h.html</filename>
    <class kind="class">tracktion::engine::AlphaTrackControlSurface</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AppFunctions.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__AppFunctions_8h.html</filename>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>tracktion::engine::AppFunctions</namespace>
    <member kind="function">
      <type>void</type>
      <name>cut</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a47e075e91e0b761b350425d3c4bd372e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a1a5187c6f2ed5dd86cf91647b8071a0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paste</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ad0e271c18c789de8cd873153e16ff6c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoProject</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ae2bb6cb48a71a04bf6f1deedf3892f8a</anchor>
      <arglist>(Project &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertPaste</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a046284c39db5f0af27f805908de004c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteSelected</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a2879abb2cffeb84dc4507c7fca646712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegion</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a94c8b4b88034add92328c01d6e1131ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionAndCloseGapFromSelected</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ac7261edf974453fb2d5b2b286380aebb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionAndCloseGap</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a46caffa99c7b3a1c97d8a1a2890f7f28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>goToStart</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a083cf56e92f2d2298e4ba0f9590b59ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>goToEnd</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a89db14c3973508e888a01dbe30d48afd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markIn</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>aa5f914a1772ef5bb704e0450c7fef70f</anchor>
      <arglist>(bool forceAtCursor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markOut</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>afd0acb05880427d6400d52d0fd809fe0</anchor>
      <arglist>(bool forceAtCursor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>aaed7799fceb937ffd101296baa7f765e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a63b4a8754aa2e0d3c17c1ed837223c30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startStopPlay</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a51d62237577de6d43b2997a76bf6fee0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>continueStopPlay</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a747d9ab5dd2c737229968889f1fdd31c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>record</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ac5c46ae9a6660ed9edb210a9c8d2df63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleTimecode</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>aabc5fa9a155947a706c914fb6258f227</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleLoop</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>abd79c0a82fd9c7447ff367dacc105d71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>togglePunch</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a09b098230e536ce238fd24d7aeed36a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleSnap</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a3a9bb6a14f5c346ba897b02d770da824</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleClick</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a62e21adb9922b2f4762aaf0dc9b0c15e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleMidiChase</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a1ddf7afa21695cd79bac3028c74d94a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tabBack</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a1a9e527173891f1543e919268b45cac7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tabForward</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a8f4271138f9c2de01bea187453bb27bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeUp</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a2dc425eaf32a9c81e5e2c86c3d1e3d48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeDown</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a97e48ef7ae95dcd9bd10fb37d3a19608</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeLeft</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a995680b7f4587789716bd85a1672257f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeRight</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>afbb54f96944464361c22b2659abe0fad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomIn</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>aafae0e2c20071bd56333dc71d1a39167</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomOut</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a293ee513eb553c2cf1319687ba215a09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksUp</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a4bd83e6c21fafe32730c17a57afe12fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksDown</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a900513ec122f982f5a2355733a25f28f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksLeft</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a9bab039c0b701ac60e8b2e5ecb04c907</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksRight</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a18b79f0f97fa138fd3df2dc0e8c39435</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleEndToEnd</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ae3a18ac76042971f8f6b72d82210a8d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveEdit</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a3b806ef00d08303b7dd2392a1c24dded</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveEditAs</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ad31a22647d2729e1bfd5b9bd9f96953d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>armOrDisarmAllInputs</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a8e6e5eb289b40216745a4d95981e5f5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>goToMarkIn</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a6cb752ce8b440bfe5869f0524b805c84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>goToMarkOut</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a844b8334c044714c5b82ab572fe718dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomTracksIn</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ae5e68f54e5fae85c307942d749f71d41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomTracksOut</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a45ef96a909913140a7f66d69253f3ce0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomToFitVertically</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ac47a78e5412b27ce7e84da484be626a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomToFitHorizontally</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ad7b7a75edfe9e92a18f065b6bc13fb0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomToFitAll</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>af276b63ba0396c69152aa9e44b90e27e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomToSelection</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>aa1ce19d04351b77315e6438f990ea5aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveToNextMarker</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a0e83e7af6ded3800e23e6a754b56e35c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveToPrevMarker</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a02e8ace5c7609597657f942294b12638</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redo</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ae5ded825ecc77b42f98ed869a8ca5d9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>undo</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>abcad4ccf4c833968037a2f80581ddbe9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleScroll</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a3835888531cb22ed1859327c7a252301</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isScrolling</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a489bde023ab028fbb32fc8460c27a82d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopRecordingAndDiscard</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a7e6f7150a707371cd6f479732567345e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopRecordingAndRestart</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a5b52edc5f5a49050d295fe0df322329b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertTempoChange</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a56b27e1a20e6052a2d62add7a420ccee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertPitchChange</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a112fc30dda781c7491f5e4e964685e84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertTimeSigChange</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a695d1b580f5423b619de49e562c82617</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertChord</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a21d1cb1e49fe182b3cd5ef64d5c53437</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideVideo</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a4b61314fefc597fd16f1e979bc3f1c6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideMixer</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a9e0dfbe937e9e63f7b2205c0da680573</anchor>
      <arglist>(bool fs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideMidiEditor</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>aeba0870c6695a4ec6c59cb7f9fa0f84d</anchor>
      <arglist>(bool fs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideTrackEditor</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>aaad4825d1d9d50ea4d702c93059e1ee0</anchor>
      <arglist>(bool zoom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideBrowser</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a0f9f62c3b44d3bf462aa128853741f21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideActions</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ae4addb706392c3b4b37a1e8d11b59842</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>performUserAction</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a632d12c1d521fe57d5609ba9f1d72650</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideAllPanes</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a782128b64e43af7f5070ec7cd3feac9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>split</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>af8e29bda14e7bb06099e1f69219133eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleAutomationReadMode</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a00f1620f16212cd23ae2096979363733</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleAutomationWriteMode</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a9c193039f34c5cb78090d3f99249527f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideBigMeters</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a086ca3a3f9c3d9436e510ae8a04aa7e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideInputs</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a23aba953b8377f2c0d3af8fb9f623e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideOutputs</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>afc93748f1d96893407da61d5f01d08cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showProjectScreen</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a6b1047f0641204420b3c861539f38e0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showSettingsScreen</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a5f0de7c91eba63572cd01c8e8adfb824</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showEditScreen</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a56baed5859a00bfbe4813cfb6e8012a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetOverloads</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a9ed970e0b6d1981b84541607d8953ad6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPeaks</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a53a7d53debc332f64c3870edb6e83a54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleTrackFreeze</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a201e3c8446b3dd47bd06443a160c0832</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_ARAWrapperFunctions.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/ARA/</path>
    <filename>tracktion__ARAWrapperFunctions_8h.html</filename>
    <class kind="struct">ArchivingFunctions</class>
    <class kind="struct">EditProxyFunctions</class>
    <class kind="struct">ModelUpdateFunctions</class>
    <class kind="struct">MusicalContextFunctions</class>
  </compound>
  <compound kind="file">
    <name>tracktion_ARAWrapperInterfaces.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/ARA/</path>
    <filename>tracktion__ARAWrapperInterfaces_8h.html</filename>
    <class kind="class">ARADocument</class>
    <class kind="struct">ARADocumentCreatorCallback</class>
    <class kind="class">MusicalContextWrapper</class>
    <class kind="class">NodeReader</class>
    <class kind="class">AudioSourceWrapper</class>
    <class kind="class">AudioModificationWrapper</class>
    <class kind="class">RegionSequenceWrapper</class>
    <class kind="class">PlaybackRegionWrapper</class>
    <class kind="class">PlaybackRegionAndSource</class>
  </compound>
  <compound kind="file">
    <name>tracktion_ArchiveFile.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/export/</path>
    <filename>tracktion__ArchiveFile_8h.html</filename>
    <class kind="class">tracktion::engine::TracktionArchiveFile</class>
    <class kind="struct">tracktion::engine::TracktionArchiveFile::IndexEntry</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ArrangerClip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__ArrangerClip_8h.html</filename>
    <class kind="class">tracktion::engine::ArrangerClip</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ArrangerLauncherSwitchingNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__ArrangerLauncherSwitchingNode_8h.html</filename>
    <class kind="class">tracktion::engine::SampleFader</class>
    <class kind="class">tracktion::engine::ArrangerLauncherSwitchingNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ArrangerTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__ArrangerTrack_8h.html</filename>
    <class kind="class">tracktion::engine::ArrangerTrack</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AsyncFunctionUtils.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__AsyncFunctionUtils_8h.html</filename>
    <includes id="tracktion__engine_2utilities_2tracktion__Threads_8h" name="tracktion_engine/utilities/tracktion_Threads.h" local="yes" imported="no">tracktion_Threads.h</includes>
    <class kind="struct">tracktion::engine::AsyncCaller</class>
    <class kind="struct">tracktion::engine::AsyncFunctionCaller</class>
    <class kind="class">tracktion::engine::LambdaTimer</class>
    <class kind="class">tracktion::engine::MessageThreadCallback</class>
    <class kind="struct">tracktion::engine::BlockingFunction</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>bool</type>
      <name>callBlocking</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0292b1e3fc9926303224136c8acba0fc</anchor>
      <arglist>(std::function&lt; void()&gt; f)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_AtomicWrapper.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__AtomicWrapper_8h.html</filename>
    <class kind="struct">tracktion::engine::DummyConstrainer</class>
    <class kind="struct">tracktion::engine::AtomicWrapper</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioBufferPool.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__AudioBufferPool_8h.html</filename>
    <class kind="class">tracktion::graph::AudioBufferPool</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioBufferStack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__AudioBufferStack_8h.html</filename>
    <class kind="class">tracktion::graph::AudioBufferStack</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioClipBase.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__AudioClipBase_8h.html</filename>
    <class kind="class">tracktion::engine::AudioClipBase</class>
    <class kind="struct">tracktion::engine::AudioClipBase::ProxyRenderingInfo</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::AudioClipBase::FadeBehaviour &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::AudioClipBase::AutoPitchMode &gt;</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>juce</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioFadeCurve.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__AudioFadeCurve_8h.html</filename>
    <class kind="struct">tracktion::engine::AudioFadeCurve</class>
    <class kind="struct">tracktion::engine::AudioFadeCurve::Linear</class>
    <class kind="struct">tracktion::engine::AudioFadeCurve::Convex</class>
    <class kind="struct">tracktion::engine::AudioFadeCurve::Concave</class>
    <class kind="struct">tracktion::engine::AudioFadeCurve::SCurve</class>
    <class kind="struct">tracktion::engine::AudioFadeCurve::CrossfadeLevels</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::AudioFadeCurve::Type &gt;</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>juce</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_engine/audio_files/tracktion_AudioFifo.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__engine_2audio__files_2tracktion__AudioFifo_8h.html</filename>
    <class kind="class">tracktion::engine::AudioFifo</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_graph/utilities/tracktion_AudioFifo.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__graph_2utilities_2tracktion__AudioFifo_8h.html</filename>
    <class kind="class">tracktion::graph::AudioFifo</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioFile.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__AudioFile_8h.html</filename>
    <class kind="struct">tracktion::engine::AudioFileInfo</class>
    <class kind="class">tracktion::engine::AudioFile</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioFileCache.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__AudioFileCache_8h.html</filename>
    <class kind="struct">tracktion::engine::FallbackReader</class>
    <class kind="class">tracktion::engine::AudioFileCache</class>
    <class kind="class">tracktion::engine::AudioFileCache::Reader</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioFileManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__AudioFileManager_8h.html</filename>
    <class kind="class">tracktion::engine::AudioFileManager</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioFileUtils.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__AudioFileUtils_8h.html</filename>
    <class kind="struct">tracktion::engine::AudioFileUtils</class>
    <class kind="struct">tracktion::engine::AudioFileUtils::MappedFileAndReader</class>
    <class kind="class">tracktion::engine::AudioFileUtils::EnvelopeFollower</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioFileWriter.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__AudioFileWriter_8h.html</filename>
    <class kind="class">tracktion::engine::AudioFileWriter</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioFormatManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__AudioFormatManager_8h.html</filename>
    <class kind="class">tracktion::engine::AudioFileFormatManager</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__AudioNode_8h.html</filename>
    <includes id="tracktion__engine_2playback_2audionodes_2tracktion__PlayHead_8h" name="tracktion_engine/playback/audionodes/tracktion_PlayHead.h" local="yes" imported="no">tracktion_PlayHead.h</includes>
    <includes id="tracktion__EditTimeRange_8h" name="tracktion_EditTimeRange.h" local="yes" imported="no">tracktion_EditTimeRange.h</includes>
    <class kind="struct">tracktion::engine::AudioNodeProperties</class>
    <class kind="struct">tracktion::engine::PlaybackInitialisationInfo</class>
    <class kind="struct">tracktion::engine::CreateAudioNodeParams</class>
    <class kind="struct">tracktion::engine::AudioRenderContext</class>
    <class kind="class">tracktion::engine::AudioNode</class>
    <class kind="class">tracktion::engine::SingleInputAudioNode</class>
    <class kind="struct">tracktion::engine::MuteAudioNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioProxyGenerator.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__AudioProxyGenerator_8h.html</filename>
    <class kind="class">tracktion::engine::AudioProxyGenerator</class>
    <class kind="struct">tracktion::engine::AudioProxyGenerator::GeneratorJob</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioScratchBuffer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__AudioScratchBuffer_8h.html</filename>
    <class kind="class">tracktion::engine::AudioScratchBuffer</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioSegmentList.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__AudioSegmentList_8h.html</filename>
    <class kind="class">tracktion::engine::AudioSegmentList</class>
    <class kind="struct">tracktion::engine::AudioSegmentList::Segment</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__AudioTrack_8h.html</filename>
    <class kind="class">tracktion::engine::AudioTrack</class>
    <class kind="struct">tracktion::engine::AudioTrack::FreezePointRemovalInhibitor</class>
    <class kind="struct">tracktion::engine::AudioTrack::Listener</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AudioUtilities.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__AudioUtilities_8h.html</filename>
    <class kind="class">tracktion::engine::AudioMidiFifo</class>
    <class kind="class">tracktion::engine::AudioBufferSnapshot</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::ResamplingQuality &gt;</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>juce</namespace>
    <member kind="typedef">
      <type>int64_t</type>
      <name>SampleCount</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a85052134975073481bd9888cbc71f3c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::Range&lt; SampleCount &gt;</type>
      <name>SampleRange</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a8944ee32cc6ed4eb531572d627f9538f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResamplingQuality</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a80cc60aadbaf1dca652f40a5544b3e6b</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a80cc60aadbaf1dca652f40a5544b3e6ba358bbd8944e77ed1509836a4fb9ad265">lagrange</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a80cc60aadbaf1dca652f40a5544b3e6baa72f77d7d8c1b76e929603e5964990cd">sincFast</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a80cc60aadbaf1dca652f40a5544b3e6baace0edda6e9949c6547a238e023d9a1c">sincMedium</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a80cc60aadbaf1dca652f40a5544b3e6ba68f771a1079c302c71e2526c357497d0">sincBest</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PanLaw</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a40238495220f5d933844bcfe2397d810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLawDefault</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a40238495220f5d933844bcfe2397d810aebabcdb59c49709439ce5b4f30e8f545</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLawLinear</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a40238495220f5d933844bcfe2397d810aed7f066574fd62bf7ad505132fab47ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLaw2point5dBCenter</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a40238495220f5d933844bcfe2397d810ad5b1719cd8ca63ecfac700f08c427293</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLaw3dBCenter</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a40238495220f5d933844bcfe2397d810a4b8e8b610e84ecef3c164e10af7da3e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLaw4point5dBCenter</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a40238495220f5d933844bcfe2397d810a14f75510187a8f1d9ded522b7353a019</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLaw6dBCenter</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a40238495220f5d933844bcfe2397d810a13930b9129878e3d54a8362be5586cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dbToGain</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9959a561e577cc680f7ccc85145f0a8c</anchor>
      <arglist>(float db) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>gainToDb</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ad40eb09e57907af7a7191f8ac0fcb808</anchor>
      <arglist>(float gain) noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>gainToDbString</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a58fab54f7bb273b92e814312623469d5</anchor>
      <arglist>(float gain, float infLevel=-96.0f, int decPlaces=2)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dbStringToDb</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab4d2ef3ea81e550a97b0a99444bbd64a</anchor>
      <arglist>(const juce::String &amp;dbStr)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dbStringToGain</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aaf32eee29d8f5033577799995ae4ecce</anchor>
      <arglist>(const juce::String &amp;dbStr)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPanString</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a398e344b7234c1c5fe64b8da9ffb4597</anchor>
      <arglist>(float pan)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSemitonesAsString</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a2bc451413f55e020c348804f5055fbdd</anchor>
      <arglist>(double semitones)</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>midiNoteToFrequency</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>adabb2b17dda824c467b22214ee9249eb</anchor>
      <arglist>(FloatType midiNote)</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>frequencyToMidiNote</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af7b3517b18082e90e83061a3eb5f49b8</anchor>
      <arglist>(FloatType freq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanitiseValues</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a1c05be5a2c59651a6def70ac3a09e7be</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;, int startSample, int numSamples, float maxAbsValue, float minAbsThreshold=1.0f/262144.0f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAntiDenormalisationNoise</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a8b26e17ae901ef258ce6e7333b7a3aa9</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;, int start, int numSamples) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetFP</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a25e75fe73cd04a87734130dae55caf33</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFloatingPointDenormaliseOccurred</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a36273c4a3f8cff9873a523394e4f6ea1</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zeroDenormalisedValuesIfNeeded</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ad43685ffed5afbfeb8551d522233e0a4</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAudioDataAlmostSilent</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae2ec74f20c24fa966e1a1349c80c0c68</anchor>
      <arglist>(const float *data, int num)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getAudioDataMagnitude</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae57ebbb60fa2b187fd97ef7d811aa51f</anchor>
      <arglist>(const float *data, int num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertIntsToFloats</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aae8f18d4d3c1e14b29450751d05c3c14</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertFloatsToInts</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab814d7c671ef5a64d9303c9cca7a4e4c</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yieldGUIThread</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a46088c3176177549ed24a5f75e59bbb7</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::BufferView&lt; SampleType, choc::buffer::SeparateChannelLayout &gt;</type>
      <name>toBufferView</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a3f2501a80903044874931a048b231e11</anchor>
      <arglist>(juce::AudioBuffer&lt; SampleType &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>PanLaw</type>
      <name>getDefaultPanLaw</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aba1426996eca5c89d11cfc8e1b4fb8bf</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultPanLaw</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a7a86651567d8754cdbc66448fcde7a13</anchor>
      <arglist>(PanLaw)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getPanLawChoices</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a257fe29968d8029ec65d28828b4c5ae6</anchor>
      <arglist>(bool includeDefault) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>decibelsToVolumeFaderPosition</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a3f9466b1fcbb874d7564f2f1347cb7fa</anchor>
      <arglist>(float dB) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>volumeFaderPositionToDB</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a32253fa191a31ade818aab6097ad15de</anchor>
      <arglist>(float position) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>volumeFaderPositionToGain</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a561e06eef999d0be41dadaf9d697d49d</anchor>
      <arglist>(float position) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>gainToVolumeFaderPosition</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a20c0770b5297330da94fb6dd1da93a14</anchor>
      <arglist>(float gain) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGainsFromVolumeFaderPositionAndPan</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>acc616046aabb4e54c97e940ca2a2f416</anchor>
      <arglist>(float volSliderPos, float pan, PanLaw lawToUse, float &amp;leftGain, float &amp;rightGain) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearChannels</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af548704ab6e2b2670245cbfa956a9b0f</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;buffer, int startChannel, int endChannel=-1, int startSample=0, int endSample=-1)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_AutomatableEditItem.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__AutomatableEditItem_8h.html</filename>
    <class kind="class">tracktion::engine::AutomatableEditItem</class>
    <class kind="struct">tracktion::engine::AutomatableEditItem::ParameterListChangeListener</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AutomatableParameter.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__AutomatableParameter_8h.html</filename>
    <class kind="class">tracktion::engine::AutomatableParameter</class>
    <class kind="struct">tracktion::engine::AutomatableParameter::ModifierSource</class>
    <class kind="struct">tracktion::engine::AutomatableParameter::ModifierAssignment</class>
    <class kind="struct">tracktion::engine::AutomatableParameter::Listener</class>
    <class kind="class">tracktion::engine::AutomationDragDropTarget</class>
    <class kind="class">tracktion::engine::ParameterisableDragDropSource</class>
    <class kind="struct">tracktion::engine::AutomationIterator</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; AssignmentType &gt;</type>
      <name>getAssignmentsOfType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab239e09de49359c23962e48a4538aabb</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ModifierType * &gt;</type>
      <name>getModifiersOfType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>abc3cdcd5b219205652a6fedc13c9b363</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; AssignmentType &gt;</type>
      <name>getAssignmentsForSource</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4f6ca88eb1cf03a815592c13840bb74d</anchor>
      <arglist>(EditType &amp;edit, const ModifierSourceType &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::ModifierSource *</type>
      <name>getSourceForAssignment</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>acb0013792be98c354e97e2d2d324cb3d</anchor>
      <arglist>(const AutomatableParameter::ModifierAssignment &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; AutomatableParameter &gt;</type>
      <name>getAllParametersBeingModifiedBy</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a3ce66da95fdec2841b8bac9100185a0d</anchor>
      <arglist>(Edit &amp;, AutomatableParameter::ModifierSource &amp;)</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter *</type>
      <name>getParameter</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9a8236ff7c884599861a4465a242bfee</anchor>
      <arglist>(AutomatableParameter::ModifierAssignment &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIntParamValue</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>acd4ebe86479d7b528dc90f269d149921</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getBoolParamValue</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a78650c121d9cebaedff12e345d159f82</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>getTypedParamValue</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a1a2159b3e62924be7e808a558fa966fe</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_AutomatableParameterTree.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__AutomatableParameterTree_8h.html</filename>
    <class kind="class">tracktion::engine::AutomatableParameterTree</class>
    <class kind="struct">tracktion::engine::AutomatableParameterTree::TreeNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AutomationCurve.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__AutomationCurve_8h.html</filename>
    <class kind="class">tracktion::engine::AutomationCurve</class>
    <class kind="struct">tracktion::engine::AutomationCurve::AutomationPoint</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>int</type>
      <name>simplify</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a7323140bc0794f96471d49cfcde34908</anchor>
      <arglist>(AutomationCurve &amp;, int strength, TimeRange)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_AutomationRecordManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__AutomationRecordManager_8h.html</filename>
    <class kind="class">tracktion::engine::AutomationRecordManager</class>
    <class kind="struct">tracktion::engine::AutomationRecordManager::AutomationParamData::Change</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AutomationTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__AutomationTrack_8h.html</filename>
    <class kind="class">tracktion::engine::AutomationTrack</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AuxReturn.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__AuxReturn_8h.html</filename>
    <class kind="class">tracktion::engine::AuxReturnPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AuxSend.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__AuxSend_8h.html</filename>
    <class kind="class">tracktion::engine::AuxSendPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_AuxSendNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__AuxSendNode_8h.html</filename>
    <class kind="class">tracktion::engine::AuxSendNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_BackgroundJobs.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__BackgroundJobs_8h.html</filename>
    <class kind="class">tracktion::engine::ThreadPoolJobWithProgress</class>
    <class kind="class">tracktion::engine::BackgroundJobManager</class>
    <class kind="struct">tracktion::engine::BackgroundJobManager::JobInfo</class>
    <class kind="class">tracktion::engine::BackgroundJobManager::Listener</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_BeatDetect.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/timestretch/</path>
    <filename>tracktion__BeatDetect_8h.html</filename>
    <class kind="struct">tracktion::engine::BeatDetect</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_BenchmarkUtilities.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__BenchmarkUtilities_8h.html</filename>
    <includes id="tracktion__EditNodeBuilder_8h" name="tracktion_EditNodeBuilder.h" local="yes" imported="no">tracktion_EditNodeBuilder.h</includes>
    <includes id="tracktion__TracktionEngineNode_8h" name="tracktion_TracktionEngineNode.h" local="yes" imported="no">../../playback/graph/tracktion_TracktionEngineNode.h</includes>
    <includes id="tracktion__TracktionNodePlayer_8h" name="tracktion_TracktionNodePlayer.h" local="yes" imported="no">../../playback/graph/tracktion_TracktionNodePlayer.h</includes>
    <includes id="tracktion__engine_2playback_2graph_2tracktion__MultiThreadedNodePlayer_8h" name="tracktion_engine/playback/graph/tracktion_MultiThreadedNodePlayer.h" local="yes" imported="no">../../playback/graph/tracktion_MultiThreadedNodePlayer.h</includes>
    <class kind="struct">tracktion::engine::benchmark_utilities::BenchmarkOptions</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>tracktion::engine::benchmark_utilities</namespace>
    <member kind="enumeration">
      <type></type>
      <name>MultiThreaded</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>acbaa9c9a2c7b9d5a33c3dbc121968924</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine_1_1benchmark__utilities.html" anchor="acbaa9c9a2c7b9d5a33c3dbc121968924a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine_1_1benchmark__utilities.html" anchor="acbaa9c9a2c7b9d5a33c3dbc121968924aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LockFree</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a63fd5578b92c0d393e77aa155a9bff96</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine_1_1benchmark__utilities.html" anchor="a63fd5578b92c0d393e77aa155a9bff96a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine_1_1benchmark__utilities.html" anchor="a63fd5578b92c0d393e77aa155a9bff96aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PoolMemoryAllocations</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>af922dd3f8b06e0e8071049c5aeedbdbb</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine_1_1benchmark__utilities.html" anchor="af922dd3f8b06e0e8071049c5aeedbdbba7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine_1_1benchmark__utilities.html" anchor="af922dd3f8b06e0e8071049c5aeedbdbbaa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ShareNodeMemory</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a1dc131828611e7721cdc0a42d0037477</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine_1_1benchmark__utilities.html" anchor="a1dc131828611e7721cdc0a42d0037477a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine_1_1benchmark__utilities.html" anchor="a1dc131828611e7721cdc0a42d0037477aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDescription</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a8cf478f9c5d50516e6c090e45df1ca72</anchor>
      <arglist>(const BenchmarkOptions &amp;opts)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; tracktion::graph::Node &gt;</type>
      <name>createNode</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a809cbe0aa6c772ad109f5b6abd15101e</anchor>
      <arglist>(Edit &amp;edit, ProcessState &amp;processState, double sampleRate, int blockSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareRenderAndDestroy</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a7f081772c3cd7b989ef01dc14fdac28c</anchor>
      <arglist>(juce::UnitTest &amp;ut, juce::String editName, juce::String description, tracktion::graph::test_utilities::TestProcess&lt; NodePlayerType &gt; &amp;testContext, tracktion::graph::PlayHeadState &amp;playHeadState, MultiThreaded isMultiThreaded)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderEdit</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a158071b552b0459b735802e21257c0ac</anchor>
      <arglist>(juce::UnitTest &amp;ut, BenchmarkOptions opts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderEdit</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>af671b2ddaa26f86d942155fc547af7af</anchor>
      <arglist>(juce::UnitTest &amp;ut, juce::String editName, Edit &amp;edit, tracktion::graph::test_utilities::TestSetup ts, MultiThreaded isMultiThreaded, LockFree isLockFree, tracktion::graph::ThreadPoolStrategy poolType)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>openEditfromArchiveData</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a1bddddf3fc523da38c656f72096fb1af</anchor>
      <arglist>(Engine &amp;engine, const char *data, int size)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>loadEditFromValueTree</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>afc76717c3a9fe887e71068cd4b952c44</anchor>
      <arglist>(Engine &amp;engine, const juce::ValueTree &amp;editState)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>openEditFromZipData</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a9583681d3840597f50607c060f1a30da</anchor>
      <arglist>(Engine &amp;engine, const void *data, size_t numBytes)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_BinaryData.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__BinaryData_8h.html</filename>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>tracktion::engine::TracktionBinaryData</namespace>
    <member kind="function">
      <type>const char *</type>
      <name>getNamedResource</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>ae76d8bc94ed84886cf0c840948c42108</anchor>
      <arglist>(const char *resourceNameUTF8, int &amp;dataSizeInBytes) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>patchnames_zip</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a3476f253f8f98f2a5af3e4cb02aa08a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>patchnames_zipSize</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>ab1b1205d23faedee380d2e36dc96bf57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>bigclick_wav</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a8e42ae8da7aacfc20f15e48d11c386c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>bigclick_wavSize</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a2c8593137e978bbb077d31a6e72b3762</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>littleclick_wav</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a5fd5db97a5c117e75154045d9554cf6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>littleclick_wavSize</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a1469d20b635d9b7a1e84c43971cbe3b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>groove_templates_xml</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>ad037e525ff774a6886f3de6b6f02232f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>groove_templates_xmlSize</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a6509c7e7d680549c9f5871136ede5d47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>groove_templates_2_xml</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a501c5c671406e1e9a6512002a40fc668</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>groove_templates_2_xmlSize</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a5efa0f4b90392a143abd4bbe14b614d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>namedResourceList</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a30c702f20ccfe16af00882ff5cb84c93</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>namedResourceListSize</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>abaed1201a14e27996973b004d67a0595</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_BreakpointOscillatorModifier.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/modifiers/</path>
    <filename>tracktion__BreakpointOscillatorModifier_8h.html</filename>
    <class kind="class">tracktion::engine::BreakpointOscillatorModifier</class>
    <class kind="struct">tracktion::engine::BreakpointOscillatorModifier::Assignment</class>
    <class kind="struct">tracktion::engine::BreakpointOscillatorModifier::Stage</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_BufferedAudioReader.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__BufferedAudioReader_8h.html</filename>
    <class kind="class">tracktion::engine::BufferedAudioReader</class>
    <class kind="class">tracktion::engine::BufferedFileReaderWrapper</class>
    <class kind="class">tracktion::engine::BufferedAudioFileManager</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_BufferedFileReader.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__BufferedFileReader_8h.html</filename>
    <class kind="class">tracktion::engine::BufferedFileReader</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ChordClip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__ChordClip_8h.html</filename>
    <class kind="class">tracktion::engine::ChordClip</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ChordTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__ChordTrack_8h.html</filename>
    <class kind="class">tracktion::engine::ChordTrack</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Chorus.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__Chorus_8h.html</filename>
    <class kind="class">tracktion::engine::ChorusPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ClickNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__ClickNode_8h.html</filename>
    <class kind="class">tracktion::engine::ClickGenerator</class>
    <class kind="class">tracktion::engine::ClickNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>tracktion::engine::Click</namespace>
    <member kind="function">
      <type>int</type>
      <name>getMidiClickNote</name>
      <anchorfile>namespacetracktion_1_1engine_1_1Click.html</anchorfile>
      <anchor>a92a94e50129578a5b5df63f1a9d18eef</anchor>
      <arglist>(Engine &amp;, bool big)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getClickWaveFile</name>
      <anchorfile>namespacetracktion_1_1engine_1_1Click.html</anchorfile>
      <anchor>a3fe0d70d7cc5f679bec090d748e2a4c1</anchor>
      <arglist>(Engine &amp;, bool big)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidiClickNote</name>
      <anchorfile>namespacetracktion_1_1engine_1_1Click.html</anchorfile>
      <anchor>a0b22f070a08dbc3a9ea2984c013cc6fc</anchor>
      <arglist>(Engine &amp;, bool big, int noteNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClickWaveFile</name>
      <anchorfile>namespacetracktion_1_1engine_1_1Click.html</anchorfile>
      <anchor>ab93b93c6198c10aeb6e3f343b8e91ca0</anchor>
      <arglist>(Engine &amp;, bool big, const juce::String &amp;filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_Clip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__Clip_8h.html</filename>
    <class kind="struct">tracktion::engine::ClipLevel</class>
    <class kind="struct">tracktion::engine::LiveClipLevel</class>
    <class kind="class">tracktion::engine::Clip</class>
    <class kind="struct">tracktion::engine::Clip::Listener</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::Clip::SyncType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::Clip::FollowActionDurationType &gt;</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>tracktion::engine::ClipConstants</namespace>
    <namespace>tracktion::engine::details</namespace>
    <namespace>juce</namespace>
    <member kind="function">
      <type>Clip::FollowActionDurationType</type>
      <name>followActionDurationTypeFromString</name>
      <anchorfile>namespacetracktion_1_1engine_1_1details.html</anchorfile>
      <anchor>ad1624d70e4c73563cc086784fa67c9e9</anchor>
      <arglist>(juce::String)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>toString</name>
      <anchorfile>namespacetracktion_1_1engine_1_1details.html</anchorfile>
      <anchor>a5598d0f0ef3396a982384182e4b95672</anchor>
      <arglist>(Clip::FollowActionDurationType)</arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>speedRatioMin</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ClipConstants.html</anchorfile>
      <anchor>a9e739085d094c774730db07f79cb822b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>speedRatioMax</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ClipConstants.html</anchorfile>
      <anchor>a698ca679308d1dcfa39d667ab5f0ca1b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_Clipboard.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/selection/</path>
    <filename>tracktion__Clipboard_8h.html</filename>
    <class kind="class">tracktion::engine::Clipboard</class>
    <class kind="struct">tracktion::engine::Clipboard::ContentType</class>
    <class kind="struct">tracktion::engine::Clipboard::ContentType::EditPastingOptions</class>
    <class kind="struct">tracktion::engine::Clipboard::ProjectItems</class>
    <class kind="struct">tracktion::engine::Clipboard::ProjectItems::ItemInfo</class>
    <class kind="struct">tracktion::engine::Clipboard::Clips</class>
    <class kind="struct">tracktion::engine::Clipboard::Clips::ClipInfo</class>
    <class kind="struct">tracktion::engine::Clipboard::Clips::AutomationCurveSection</class>
    <class kind="struct">tracktion::engine::Clipboard::Scenes</class>
    <class kind="struct">tracktion::engine::Clipboard::Scenes::SceneInfo</class>
    <class kind="struct">tracktion::engine::Clipboard::Tracks</class>
    <class kind="struct">tracktion::engine::Clipboard::TempoChanges</class>
    <class kind="struct">tracktion::engine::Clipboard::TempoChanges::TempoChange</class>
    <class kind="struct">tracktion::engine::Clipboard::AutomationPoints</class>
    <class kind="struct">tracktion::engine::Clipboard::MIDIEvents</class>
    <class kind="struct">tracktion::engine::Clipboard::Pitches</class>
    <class kind="struct">tracktion::engine::Clipboard::TimeSigs</class>
    <class kind="struct">tracktion::engine::Clipboard::Plugins</class>
    <class kind="struct">tracktion::engine::Clipboard::Takes</class>
    <class kind="struct">tracktion::engine::Clipboard::Modifiers</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>AudioTrack *</type>
      <name>getOrInsertAudioTrackNearestIndex</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a2c2fc20eca6d70248deda9a9b8da4164</anchor>
      <arglist>(Edit &amp;edit, int trackIndex)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_ClipEffects.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__ClipEffects_8h.html</filename>
    <class kind="class">tracktion::engine::ClipEffect</class>
    <class kind="class">tracktion::engine::ClipEffects</class>
    <class kind="struct">tracktion::engine::ClipEffects::Listener</class>
    <class kind="struct">tracktion::engine::ClipEffects::RenderInhibitor</class>
    <class kind="struct">tracktion::engine::ScopedPluginUnloadInhibitor</class>
    <class kind="struct">tracktion::engine::VolumeEffect</class>
    <class kind="struct">tracktion::engine::FadeInOutEffect</class>
    <class kind="struct">tracktion::engine::StepVolumeEffect</class>
    <class kind="struct">tracktion::engine::StepVolumeEffect::Pattern</class>
    <class kind="struct">tracktion::engine::PitchShiftEffect</class>
    <class kind="struct">tracktion::engine::WarpTimeEffect</class>
    <class kind="struct">tracktion::engine::PluginEffect</class>
    <class kind="struct">tracktion::engine::NormaliseEffect</class>
    <class kind="struct">tracktion::engine::MakeMonoEffect</class>
    <class kind="struct">tracktion::engine::ReverseEffect</class>
    <class kind="struct">tracktion::engine::InvertEffect</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ClipOwner.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__ClipOwner_8h.html</filename>
    <class kind="class">tracktion::engine::ClipOwner</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="enumeration">
      <type></type>
      <name>DeleteExistingClips</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>acb9cf874dc4e4feb1c368815603c6c9e</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="acb9cf874dc4e4feb1c368815603c6c9ea7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="acb9cf874dc4e4feb1c368815603c6c9eaa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>findClipForState</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a424d915816fce94fb9af7c6c8c820e9d</anchor>
      <arglist>(ClipOwner &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>findClipForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aa17f7f539896c575f7648c9cd6f83a86</anchor>
      <arglist>(ClipOwner &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertClipWithState</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af122ceb01516fd8eab5dc1593e4bd6e9</anchor>
      <arglist>(ClipOwner &amp;, juce::ValueTree)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertClipWithState</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a40faa74c310138e5161006df65ea3bb0</anchor>
      <arglist>(ClipOwner &amp;, const juce::ValueTree &amp;stateToUse, const juce::String &amp;name, TrackItem::Type, ClipPosition, DeleteExistingClips, bool allowSpottingAdjustment)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertNewClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9183c8dc31634b574a600f302f235e4c</anchor>
      <arglist>(ClipOwner &amp;, TrackItem::Type, EditTimeRange)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertNewClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a8b511de0d9b08a840c2e962e3dfca076</anchor>
      <arglist>(ClipOwner &amp;, TrackItem::Type, const juce::String &amp;name, EditTimeRange)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertNewClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a18fb32af4e33560e0a9cc73a14736235</anchor>
      <arglist>(ClipOwner &amp;, TrackItem::Type, const juce::String &amp;name, ClipPosition)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; WaveAudioClip &gt;</type>
      <name>insertWaveClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a6fd956ff5def788e9dc7251151116225</anchor>
      <arglist>(ClipOwner &amp;, const juce::String &amp;name, const juce::File &amp;sourceFile, ClipPosition, DeleteExistingClips)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; WaveAudioClip &gt;</type>
      <name>insertWaveClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae2413335c05ce95535e854eec4549b2e</anchor>
      <arglist>(ClipOwner &amp;, const juce::String &amp;name, ProjectItemID sourceID, ClipPosition, DeleteExistingClips)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; MidiClip &gt;</type>
      <name>insertMIDIClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>abd32d137357fe1a9d6f324aba389fcf5</anchor>
      <arglist>(ClipOwner &amp;, const juce::String &amp;name, TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; MidiClip &gt;</type>
      <name>insertMIDIClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aca4d87704bf49e8728bc60c49bd0cb46</anchor>
      <arglist>(ClipOwner &amp;, TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; EditClip &gt;</type>
      <name>insertEditClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0ff69f1c4f08dcda37e0631c3ba0e68c</anchor>
      <arglist>(ClipOwner &amp;, TimeRange, ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Clip * &gt;</type>
      <name>deleteRegion</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a3816c134835e1a0752e3522b8c9342be</anchor>
      <arglist>(ClipOwner &amp;, TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Clip * &gt;</type>
      <name>deleteRegion</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac02c955b64cc8cabe1f86c6fb90c5e7a</anchor>
      <arglist>(Clip &amp;, TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Clip * &gt;</type>
      <name>split</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ad52f63d32aaabe8b7e767e4f9c6183b4</anchor>
      <arglist>(ClipOwner &amp;, TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>split</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a6f33dc3327f6e53eb98c7e7f6c1f88fb</anchor>
      <arglist>(Clip &amp;, TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsAnyMIDIClips</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a1c2c64a9f961cf578fb0fd6175acef37</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ClipType * &gt;</type>
      <name>getClipsOfType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a04e2868f9a01a8d72610b9fc69be0c0e</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ClipType * &gt;</type>
      <name>getClipsOfTypeRecursive</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac6a69e00179990b2578fa4e566edd7bf</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMasterTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>afb324a5c0788c55450272935b6c8ef67</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTempoTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>afe9906c6968f309202ea1f319c032d9a</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAutomationTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a60ec9f68ae4b0d8ec6d65be121fc2d83</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAudioTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a79aa6cca822633b3a0b0cb7c589ddd7f</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFolderTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a72ef6d793d0c8c54bbebb85cf2a15783</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMarkerTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab3e0e2f5e2a5ba33dd4945400f02755f</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChordTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aca97f9000707b1cbe89b63a4819738d9</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isArrangerTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a844ae27339725c4a014b3f531fa7a4b3</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAudioTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aacebeb9301594bcbe97aaad9fb905787</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFolderTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ad99071613966ffc19e2180b5ef213968</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMarkerTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a5a5b6b174fb3924b4b94f5e568081200</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChordTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a16ce80c18cb2ff9311fabbb8f3bafa6a</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isArrangerTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac0fb3a8585f188b6cc703db29c2a80a9</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainMIDI</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a1ead560d6524f7008e20bf9a386a49cb</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainAudio</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a2327ec945ec11825d6481bb78777229d</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMovable</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a8298bd396d9de38aee1f38fc3fc4b67a</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOnTop</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4a884d27fad06ec84710c2ac9c370a38</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_ClipSlot.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__ClipSlot_8h.html</filename>
    <class kind="class">tracktion::engine::ClipSlot</class>
    <class kind="class">tracktion::engine::ClipSlotList</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ClipTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__ClipTrack_8h.html</filename>
    <class kind="class">tracktion::engine::ClipTrack</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_CmajorPluginFormat.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/cmajor/</path>
    <filename>tracktion__CmajorPluginFormat_8h.html</filename>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>getCmajorVersion</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a42453812204c457c55e8b236454830e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; juce::AudioPluginFormat &gt;</type>
      <name>createCmajorPatchPluginFormat</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a2cd1396b493761f883570b33eac59653</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCmajorPatchPluginFormat</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af6edb5eef7031809593f6169f1568109</anchor>
      <arglist>(const juce::PluginDescription &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCmajorPatchPluginFormat</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4feb875d4a7298314f3ec8929af84ae1</anchor>
      <arglist>(const juce::String &amp;formatName)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getCmajorPatchPluginFormatName</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ad6b7ea2657f84ff48290beffd5fd829f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getCmajorPatchCompileError</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>abd4073f3c724245e29625644452d76eb</anchor>
      <arglist>(Plugin &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_CollectionClip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__CollectionClip_8h.html</filename>
    <class kind="class">tracktion::engine::CollectionClip</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_CombiningAudioNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__CombiningAudioNode_8h.html</filename>
    <includes id="tracktion__AudioNode_8h" name="tracktion_AudioNode.h" local="yes" imported="no">tracktion_AudioNode.h</includes>
    <class kind="class">tracktion::engine::CombiningAudioNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_CombiningNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__CombiningNode_8h.html</filename>
    <class kind="class">tracktion::engine::CombiningNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_CompManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__CompManager_8h.html</filename>
    <class kind="class">tracktion::engine::CompManager</class>
    <class kind="class">tracktion::engine::CompFactory</class>
    <class kind="class">tracktion::engine::WaveCompManager</class>
    <class kind="class">tracktion::engine::MidiCompManager</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Compressor.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__Compressor_8h.html</filename>
    <class kind="class">tracktion::engine::CompressorPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ConnectedNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/nodes/</path>
    <filename>tracktion__ConnectedNode_8h.html</filename>
    <includes id="tracktion__LatencyNode_8h" name="tracktion_LatencyNode.h" local="yes" imported="no">tracktion_LatencyNode.h</includes>
    <class kind="struct">tracktion::graph::ChannelConnection</class>
    <class kind="class">tracktion::graph::ConnectedNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ConstrainedCachedValue.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__ConstrainedCachedValue_8h.html</filename>
    <class kind="class">tracktion::engine::ConstrainedCachedValue</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ContainerClip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__ContainerClip_8h.html</filename>
    <class kind="class">tracktion::engine::ContainerClip</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ContainerClipNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__ContainerClipNode_8h.html</filename>
    <class kind="class">tracktion::engine::ContainerClipNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ControlSurface.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/</path>
    <filename>tracktion__ControlSurface_8h.html</filename>
    <class kind="struct">tracktion::engine::ParameterSetting</class>
    <class kind="struct">tracktion::engine::MarkerSetting</class>
    <class kind="struct">tracktion::engine::MidiID</class>
    <class kind="class">tracktion::engine::ControlSurface</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_CpuMeasurement.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__CpuMeasurement_8h.html</filename>
    <class kind="struct">tracktion::engine::ScopedCpuMeter</class>
    <class kind="struct">tracktion::engine::StopwatchTimer</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SCOPED_REALTIME_CHECK</name>
      <anchorfile>tracktion__CpuMeasurement_8h.html</anchorfile>
      <anchor>aeb53df2190d8c1f9f9a32f6c1f654a46</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCOPED_REALTIME_CHECK_LONGER</name>
      <anchorfile>tracktion__CpuMeasurement_8h.html</anchorfile>
      <anchor>a8176a32faa2afe139512c07a8dd19b43</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_CrashTracer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__CrashTracer_8h.html</filename>
    <class kind="struct">tracktion::engine::CrashStackTracer</class>
    <class kind="struct">tracktion::engine::DeadMansPedalMessage</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CRASH_TRACER</name>
      <anchorfile>tracktion__CrashTracer_8h.html</anchorfile>
      <anchor>aa3c9c9aaf3db474439041b1ac5babb17</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CRASH_TRACER_PLUGIN</name>
      <anchorfile>tracktion__CrashTracer_8h.html</anchorfile>
      <anchor>a8fa50910309f1ebb6a0dc72340bcb54c</anchor>
      <arglist>(p)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_CurveEditor.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__CurveEditor_8h.html</filename>
    <class kind="struct">tracktion::engine::TransparentToMouseInTrackItemComp</class>
    <class kind="struct">tracktion::engine::CurvePoint</class>
    <class kind="class">tracktion::engine::CurveEditorPoint</class>
    <class kind="class">tracktion::engine::CurveEditor</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_CustomControlSurface.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/</path>
    <filename>tracktion__CustomControlSurface_8h.html</filename>
    <class kind="class">tracktion::engine::CustomControlSurface</class>
    <class kind="struct">tracktion::engine::CustomControlSurface::MappingSet</class>
    <class kind="struct">tracktion::engine::CustomControlSurface::Mapping</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Delay.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__Delay_8h.html</filename>
    <class kind="struct">tracktion::engine::DelayBufferBase</class>
    <class kind="class">tracktion::engine::DelayPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_DeviceManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__DeviceManager_8h.html</filename>
    <class kind="class">tracktion::engine::DeviceManager</class>
    <class kind="struct">tracktion::engine::DeviceManager::TracktionEngineAudioDeviceManager</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Ditherer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__Ditherer_8h.html</filename>
    <class kind="struct">tracktion::engine::Ditherer</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_DynamicOffsetNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__DynamicOffsetNode_8h.html</filename>
    <class kind="class">tracktion::engine::DynamicOffsetNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Edit.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__Edit_8h.html</filename>
    <class kind="class">tracktion::engine::Edit</class>
    <class kind="struct">tracktion::engine::Edit::LoadContext</class>
    <class kind="struct">tracktion::engine::Edit::Options</class>
    <class kind="struct">tracktion::engine::Edit::ScopedRenderStatus</class>
    <class kind="struct">tracktion::engine::Edit::UndoTransactionInhibitor</class>
    <class kind="struct">tracktion::engine::Edit::GlobalMacros</class>
    <class kind="struct">tracktion::engine::Edit::Metadata</class>
    <class kind="struct">tracktion::engine::Edit::LoadFinishedCallback</class>
    <class kind="struct">tracktion::engine::Edit::WastedMidiMessagesListener</class>
    <class kind="struct">tracktion::engine::EditDeleter</class>
    <class kind="struct">tracktion::engine::ActiveEdits</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EditClip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__EditClip_8h.html</filename>
    <class kind="class">tracktion::engine::EditClip</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EditClipRenderJob.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__EditClipRenderJob_8h.html</filename>
    <class kind="class">tracktion::engine::EditRenderJob</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EditFileOperations.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__EditFileOperations_8h.html</filename>
    <class kind="class">tracktion::engine::EditFileOperations</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>loadEditFromFile</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac0fcf69eb1498ff4218e53686dc7dd3a</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;, Edit::EditRole role=Edit::EditRole::forEditing)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>createEmptyEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aae825708f9508e570bc14043e71b4f0f</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>loadEditFromProjectManager</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4aa541258aaf959e9f971c99838bb16b</anchor>
      <arglist>(ProjectManager &amp;, ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>loadEditForExamining</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae31a86857c0dd8ae6d531ee4712dbb53</anchor>
      <arglist>(ProjectManager &amp;, ProjectItemID, Edit::EditRole role=Edit::EditRole::forExamining)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>loadEditFromFile</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4c99b6568e766dc5773cb8318a7140fc</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;, ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>createEmptyEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab1efdc2396029ca68f24d5240f32bb24</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>updateLegacyEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab6e53d2a24df14d596b0070a7464171b</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateLegacyEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a36a997dc7770cea7e15e52017f2bf15c</anchor>
      <arglist>(juce::XmlElement &amp;editXML)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_EditInputDevices.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__EditInputDevices_8h.html</filename>
    <class kind="class">tracktion::engine::EditInputDevices</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EditInsertPoint.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__EditInsertPoint_8h.html</filename>
    <class kind="class">tracktion::engine::EditInsertPoint</class>
    <class kind="struct">tracktion::engine::EditInsertPoint::Placement</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EditItem.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__EditItem_8h.html</filename>
    <class kind="struct">tracktion::engine::EditItemID</class>
    <class kind="class">tracktion::engine::EditItem</class>
    <class kind="struct">tracktion::engine::EditItemCache</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::EditItemID &gt;</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>juce</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EditLoader.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__EditLoader_8h.html</filename>
    <class kind="class">engine::EditLoader</class>
    <class kind="class">engine::EditLoader::Handle</class>
    <namespace>engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EditNodeBuilder.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__EditNodeBuilder_8h.html</filename>
    <class kind="struct">tracktion::engine::CreateNodeParams</class>
    <class kind="struct">tracktion::engine::EditNodeBuilder</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>std::unique_ptr&lt; tracktion::graph::Node &gt;</type>
      <name>createNodeForEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae6bd635dfddd3f1d7e8c2a1eba9f82f2</anchor>
      <arglist>(EditPlaybackContext &amp;, std::atomic&lt; double &gt; &amp;audibleTimeToUpdate, const CreateNodeParams &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; tracktion::graph::Node &gt;</type>
      <name>createNodeForEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4eae39e9fec55c44c6b5390321027eea</anchor>
      <arglist>(Edit &amp;, const CreateNodeParams &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_EditPlaybackContext.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__EditPlaybackContext_8h.html</filename>
    <class kind="class">tracktion::engine::EditPlaybackContext</class>
    <class kind="struct">tracktion::engine::EditPlaybackContext::ScopedDeviceListReleaser</class>
    <class kind="struct">tracktion::engine::EditPlaybackContext::RealtimePriorityDisabler</class>
    <class kind="struct">tracktion::engine::detail::ScopedActiveRecordingDevice</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>tracktion::engine::detail</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EditSnapshot.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__EditSnapshot_8h.html</filename>
    <class kind="class">tracktion::engine::EditSnapshot</class>
    <class kind="struct">tracktion::engine::EditSnapshot::Marker</class>
    <class kind="struct">tracktion::engine::EditSnapshot::Listener</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EditTime.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__EditTime_8h.html</filename>
    <class kind="struct">tracktion::engine::EditTime</class>
    <class kind="struct">tracktion::engine::EditTimeRange</class>
    <class kind="struct">tracktion::engine::ClipPosition</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::core::TimePosition &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::core::TimeDuration &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::core::BeatPosition &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::core::BeatDuration &gt;</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>juce</namespace>
    <member kind="function">
      <type>BeatPosition</type>
      <name>toBeats</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a86078b4c3af1bab0fa8e6f4c4d4c0016</anchor>
      <arglist>(TimePosition, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>toTime</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae67adc128e2ee1d34bd1fef7f21ef1ab</anchor>
      <arglist>(BeatPosition, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>BeatRange</type>
      <name>toBeats</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>afdd970102e969ca364b3574d489443a2</anchor>
      <arglist>(TimeRange, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>toTime</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4d5db5c71d7218e346355032823c042c</anchor>
      <arglist>(BeatRange, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>toTime</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a005c43559d1f8fa64e7156227147539a</anchor>
      <arglist>(EditTime, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>toBeats</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a584d4ba3c883672c2bead4d1ba40c6bf</anchor>
      <arglist>(EditTime, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>toTime</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0ac4ae904f79527089472a38e84288d7</anchor>
      <arglist>(EditTimeRange, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>BeatRange</type>
      <name>toBeats</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a53677fe52b2e7d61d34e343b70ad2c70</anchor>
      <arglist>(EditTimeRange, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ClipPosition</type>
      <name>createClipPosition</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a98835e892f35befe2365f84e884eee31</anchor>
      <arglist>(const TempoSequence &amp;, TimeRange, TimeDuration offset={})</arglist>
    </member>
    <member kind="function">
      <type>ClipPosition</type>
      <name>createClipPosition</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af998faa7c14d93fa2450d16c0accacc0</anchor>
      <arglist>(const TempoSequence &amp;, BeatRange, BeatDuration offset={})</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_EditTimeRange.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__EditTimeRange_8h.html</filename>
    <class kind="struct">tracktion::engine::legacy::EditTimeRange</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>tracktion::engine::legacy</namespace>
    <member kind="function">
      <type>TimeRange</type>
      <name>toTimeRange</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9036be9d384990705b8e9ea7af9b75ad</anchor>
      <arglist>(legacy::EditTimeRange r)</arglist>
    </member>
    <member kind="function">
      <type>legacy::EditTimeRange</type>
      <name>toEditTimeRange</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae758e56a7e1a7ce32da92d3eb320a869</anchor>
      <arglist>(TimeRange r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_EditUtilities.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__EditUtilities_8h.html</filename>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="enumeration">
      <type></type>
      <name>CloseGap</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a2b33ff26f5a23b76bceb9d152c43b34c</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a2b33ff26f5a23b76bceb9d152c43b34ca7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a2b33ff26f5a23b76bceb9d152c43b34caa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MoveClipAction</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>addf8245ddf875ad562228c1b4911c5ee</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="addf8245ddf875ad562228c1b4911c5eea689bf948adf5d301d601b677fe1d95a9">moveToEndOfLast</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="addf8245ddf875ad562228c1b4911c5eead98c519c261eac28a987e2cd523d2efb">moveToStartOfNext</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="addf8245ddf875ad562228c1b4911c5eea6c946346c9811d724e9aabb70d992aac">moveStartToCursor</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="addf8245ddf875ad562228c1b4911c5eea76fc3972a4183c47e5f8cebdc5371526">moveEndToCursor</enumvalue>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>getProjectForEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aae466a389e8e35257870b2d94a63cf04</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>getProjectItemForEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a7f2114ad4120a4a61a2181770dd462f7</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getEditFileFromProjectManager</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a01d8465701b6f02e86c7fc1dbf5acfc3</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>referencesProjectItem</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a06a4e52427c2509c81ad566f92eebb45</anchor>
      <arglist>(Edit &amp;, ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpaceIntoEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0aba895236d5599b5d11024b69aaeff7</anchor>
      <arglist>(Edit &amp;, TimeRange timeRangeToInsert)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpaceIntoEditFromBeatRange</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a245654947a66c50d5f154678fad82800</anchor>
      <arglist>(Edit &amp;, BeatRange)</arglist>
    </member>
    <member kind="function">
      <type>EditItem *</type>
      <name>findEditItemForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac161742cea6307e65faa1c7cae07a9a1</anchor>
      <arglist>(Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>getAllTracks</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab6cb66f72b2ef86a854be852286e7d0a</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>getTopLevelTracks</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aeecc5778a8a18b5697926b6cb03f6d24</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; TrackType * &gt;</type>
      <name>getTracksOfType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0fa51010fccb2e5d435cfc9f8ae68018</anchor>
      <arglist>(const Edit &amp;, bool recursive)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AudioTrack * &gt;</type>
      <name>getAudioTracks</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a334f8daa6a3d18b9b9aa582e01817666</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ClipTrack * &gt;</type>
      <name>getClipTracks</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0e424e2f3ee228d21ac19fe16ef2d71d</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalNumTracks</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9558cf662d9c0f275cb68aec4d963ebf</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>findTrackForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a174ed4d1d54041b11ed8733d53a923d6</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>AudioTrack *</type>
      <name>findAudioTrackForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a19e1f7f399ecf97415c004c0a4f5b06d</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>findTracksForIDs</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a41ad308eb23192d8e7557b4ccc34f022</anchor>
      <arglist>(const Edit &amp;, const juce::Array&lt; EditItemID &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>findTrackForState</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab154fe33f4b982e2ebd9cba277c688f7</anchor>
      <arglist>(const Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>AudioTrack *</type>
      <name>getFirstAudioTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a54c78f52a67314cebbf40245571b180f</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>findAllTracksContainingSelectedItems</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a7acf40792562d425be01291016324887</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ClipTrack *</type>
      <name>findFirstClipTrackFromSelection</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a518e63ded1e8499e7f1ea9ccea6cb81b</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4fe5b2d92d83baa75ae2d868d9df8e70</anchor>
      <arglist>(const Edit &amp;, const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TrackOutput *</type>
      <name>getTrackOutput</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae068ee1a6295cb9d7a060f133e92083e</anchor>
      <arglist>(Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::BigInteger</type>
      <name>toBitSet</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a63cc17d19aca7fd9dd0835666e6a312a</anchor>
      <arglist>(const juce::Array&lt; Track * &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>toTrackArray</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ad575b8b00deb9ca34d23a8a0ee8d592e</anchor>
      <arglist>(Edit &amp;, const juce::BigInteger &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; TrackItemType * &gt;</type>
      <name>getTrackItemsOfType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aeed6b8603d1bc17e7d90397ecd9234ac</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ClipOwner *</type>
      <name>findClipOwnerForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a65a7870026df98adea8a75be92c300dd</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>ClipSlot *</type>
      <name>findClipSlotForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aee1fceecfddb41842be4cc798a5d7002</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findClipSlotIndex</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a44d90c0517f23accae22a8c9106086dd</anchor>
      <arglist>(ClipSlot &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>findClipForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab6257fe64c38c421e5d57737c5ebfaf6</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>findClipForState</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>abf9a9cea542a63b447f0d15e363c8be9</anchor>
      <arglist>(const Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae3612dab8a8fb905aa5479594db73f1a</anchor>
      <arglist>(const Edit &amp;, Clip *)</arglist>
    </member>
    <member kind="function">
      <type>Clip::Ptr</type>
      <name>duplicateClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a29558aac7e748a12adfbd8c944b92c07</anchor>
      <arglist>(const Clip &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitAllTrackItems</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a5ef0e3f57d6d2c81f6775a01dc2f210a</anchor>
      <arglist>(const Edit &amp;, std::function&lt; bool(TrackItem &amp;)&gt;)</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>getTimeRangeForSelectedItems</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a292da5c810ea5afeebbed87d205aff8a</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionOfTracks</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a87276f33e55502d367018ceaf052efa7</anchor>
      <arglist>(Edit &amp;, TimeRange rangeToDelete, bool onlySelectedTracks, CloseGap, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionOfClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a7c6438cc2f31d066cb9b8924b408a68b</anchor>
      <arglist>(Clip &amp;, TimeRange rangeToDelete)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionOfSelectedClips</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9d319fb4fb956a5fba78c223ac1b81c6</anchor>
      <arglist>(SelectionManager &amp;, TimeRange rangeToDelete, CloseGap, bool moveAllSubsequentClipsOnTrack)</arglist>
    </member>
    <member kind="function">
      <type>SelectableList</type>
      <name>splitClips</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0ddaa472901ba7defc7ab640f9f2024b</anchor>
      <arglist>(const SelectableList &amp;clips, TimePosition time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveSelectedClips</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab505f520ae95a684bb81ae84e244c881</anchor>
      <arglist>(const SelectableList &amp;, Edit &amp;, MoveClipAction mode, bool alsoMoveAutomation)</arglist>
    </member>
    <member kind="function">
      <type>SelectableList</type>
      <name>getClipSelectionWithCollectionClipContents</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a18c1d8c7c001eda9903fd8ae833cf8e4</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ClipEffect * &gt;</type>
      <name>getAllClipEffects</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af93ad28d48d2939908d9b157f7b38822</anchor>
      <arglist>(Edit &amp;edit)</arglist>
    </member>
    <member kind="function">
      <type>MidiNote *</type>
      <name>findNoteForState</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a510e1ec7553e96ac2b794d514c20fc0d</anchor>
      <arglist>(const Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>mergeMidiClips</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a2823efb0387ec814c20b6e909981ceda</anchor>
      <arglist>(juce::Array&lt; MidiClip * &gt;, SelectionManager *sm=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>juce::OwnedArray&lt; MidiList &gt;</type>
      <name>readFileToMidiList</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a46ce0ca0a1577de863b7b33aa56c8f0c</anchor>
      <arglist>(juce::File midiFile, bool importAsNoteExpression)</arglist>
    </member>
    <member kind="function">
      <type>MidiClip::Ptr</type>
      <name>createClipFromFile</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae1026d32121b7f187f3b5056874913c3</anchor>
      <arglist>(juce::File midiFile, ClipOwner &amp;, bool importAsNoteExpression)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Array</type>
      <name>getAllPlugins</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae63b847e91e8ee3378257dcd5ee26b98</anchor>
      <arglist>(const Edit &amp;, bool includeMasterVolume)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>findPluginForState</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a6d007b1f094b948fc258ffb1851de950</anchor>
      <arglist>(const Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>findPluginForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a8548c91b6648c728aa54b714b7f66b1a</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrackContainingPlugin</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a08444a5db0c5e4ad726127cdaeda2e0e</anchor>
      <arglist>(const Edit &amp;, const Plugin *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areAnyPluginsMissing</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a345db08141a6bde661fcf0e920d1aebd</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; RackInstance * &gt;</type>
      <name>getRackInstancesInEditForType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9444b1a46e10f4c32c92c78c73b08520</anchor>
      <arglist>(const RackType &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>muteOrUnmuteAllPlugins</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aac0bf73a3ae386875f6df57b46881b14</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>midiPanic</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>abec75e330b13aa6aa67643a4d5d14be3</anchor>
      <arglist>(Edit &amp;, bool resetPlugins)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; PluginType &gt;</type>
      <name>insertNewPlugin</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab06103f2b654c81b0f74d2f567d8e7f9</anchor>
      <arglist>(Track &amp;, int index=0)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomatableEditItem * &gt;</type>
      <name>getAllAutomatableEditItems</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ad10842488931c334cadac593a7dfafb0</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteAutomation</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a1d375ae29d2e69f2120865b3820b2b8a</anchor>
      <arglist>(const SelectableList &amp;selectedClips)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomatableParameter::ModifierSource * &gt;</type>
      <name>getAllModifierSources</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a635c4b7ae6bc0d9fae26bd1e386e4945</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; Modifier &gt;</type>
      <name>getAllModifiers</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab7790bddd5194fe7abc1a68b0543298a</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType::Ptr</type>
      <name>findModifierTypeForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a5e66c2037c8694f26ec95b10ebc083e2</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Modifier::Ptr</type>
      <name>findModifierForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a7448489352bb5af8530fc78d411032ac</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Modifier::Ptr</type>
      <name>findModifierForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aedee9c54b7ee6c0d8f6cc4992eb596a7</anchor>
      <arglist>(const RackType &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrackContainingModifier</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab67dc8afa8d56759d90ddd9cfe0b283b</anchor>
      <arglist>(const Edit &amp;, const Modifier::Ptr &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; MacroParameterList * &gt;</type>
      <name>getAllMacroParameterLists</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab0bce96fb9edf8a48796f7c4cab119a2</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; MacroParameterElement * &gt;</type>
      <name>getAllMacroParameterElements</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac5c6acfd3b9bffb885bbf237a6cb8e91</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance::RecordingParameters</type>
      <name>getDefaultRecordingParameters</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac03348f3bb8498dad4e90b3ec3ef0546</anchor>
      <arglist>(const EditPlaybackContext &amp;, TimePosition playStart, TimePosition punchIn)</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>prepareAndPunchRecord</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aa12a1f79f693581dc59030621679ca79</anchor>
      <arglist>(InputDeviceInstance &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>tl::expected&lt; Clip::Array, juce::String &gt;</type>
      <name>punchOutRecording</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a2e5dbe7fc65c310e91306ecc8f6af588</anchor>
      <arglist>(InputDeviceInstance &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRecording</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab909bad277a9242846beb493f99bd48d</anchor>
      <arglist>(EditPlaybackContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance::Destination *</type>
      <name>assignTrackAsInput</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af2738f3ef9ba3cd1b1b2971226ad5be9</anchor>
      <arglist>(AudioTrack &amp;destinationTrack, const AudioTrack &amp;sourceTrack, InputDevice::DeviceType)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_Engine.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__Engine_8h.html</filename>
    <class kind="class">tracktion::engine::Engine</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EngineBehaviour.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__EngineBehaviour_8h.html</filename>
    <class kind="struct">tracktion::engine::EditLimits</class>
    <class kind="class">tracktion::engine::EngineBehaviour</class>
    <class kind="struct">tracktion::engine::EngineBehaviour::LevelMeterSettings</class>
    <class kind="struct">tracktion::engine::EngineBehaviour::ClipDefaults</class>
    <class kind="struct">tracktion::engine::EngineBehaviour::ControlSurfaces</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EnginePlayer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/testing/</path>
    <filename>tracktion__EnginePlayer_8h.html</filename>
    <includes id="tracktion__GlueCode_8h" name="tracktion_GlueCode.h" local="yes" imported="no">../../tracktion_graph/utilities/tracktion_GlueCode.h</includes>
  </compound>
  <compound kind="file">
    <name>tracktion_Envelope.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__Envelope_8h.html</filename>
    <class kind="class">tracktion::engine::ExpEnvelope</class>
    <class kind="struct">tracktion::engine::ExpEnvelope::Parameters</class>
    <class kind="class">tracktion::engine::LinEnvelope</class>
    <class kind="struct">tracktion::engine::LinEnvelope::Parameters</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_EnvelopeFollowerModifier.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/modifiers/</path>
    <filename>tracktion__EnvelopeFollowerModifier_8h.html</filename>
    <class kind="class">tracktion::engine::EnvelopeFollowerModifier</class>
    <class kind="struct">tracktion::engine::EnvelopeFollowerModifier::Assignment</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Equaliser.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__Equaliser_8h.html</filename>
    <class kind="class">tracktion::engine::EqualiserPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Exportable.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/export/</path>
    <filename>tracktion__Exportable_8h.html</filename>
    <class kind="class">tracktion::engine::Exportable</class>
    <class kind="struct">tracktion::engine::Exportable::ReferencedItem</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ExportJob.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/export/</path>
    <filename>tracktion__ExportJob_8h.html</filename>
    <class kind="class">tracktion::engine::ExportJob</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ExternalAutomatableParameter.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/external/</path>
    <filename>tracktion__ExternalAutomatableParameter_8h.html</filename>
    <class kind="class">tracktion::engine::ExternalAutomatableParameter</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ExternalController.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/</path>
    <filename>tracktion__ExternalController_8h.html</filename>
    <class kind="class">tracktion::engine::ExternalController</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ExternalControllerManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/</path>
    <filename>tracktion__ExternalControllerManager_8h.html</filename>
    <class kind="struct">tracktion::engine::ColourArea</class>
    <class kind="class">tracktion::engine::ExternalControllerManager</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ExternalPlayheadSynchroniser.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__ExternalPlayheadSynchroniser_8h.html</filename>
    <class kind="class">tracktion::engine::ExternalPlayheadSynchroniser</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>juce::AudioPlayHead::CurrentPositionInfo</type>
      <name>getCurrentPositionInfo</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae2258f5d9cc2f0c1ab6e145664edb5f0</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>synchroniseEditPosition</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a8ae9d5497d4841c8d300db949c2ae3b0</anchor>
      <arglist>(Edit &amp;, const juce::AudioPlayHead::CurrentPositionInfo &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_ExternalPlugin.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/external/</path>
    <filename>tracktion__ExternalPlugin_8h.html</filename>
    <class kind="class">tracktion::engine::ExternalPlugin</class>
    <class kind="struct">tracktion::engine::PluginWetDryAutomatableParam</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>juce::String</type>
      <name>createIdentifierString</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a736ab1213342cd9dd0b5677ab5fb391a</anchor>
      <arglist>(const juce::PluginDescription &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_ExternalPluginBlacklist.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/external/</path>
    <filename>tracktion__ExternalPluginBlacklist_8h.html</filename>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_FadeInOutAudioNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__FadeInOutAudioNode_8h.html</filename>
    <class kind="class">tracktion::engine::FadeInOutAudioNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_FadeInOutNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__FadeInOutNode_8h.html</filename>
    <class kind="class">tracktion::engine::FadeInOutNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_FFmpegEncoderAudioFormat.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/formats/</path>
    <filename>tracktion__FFmpegEncoderAudioFormat_8h.html</filename>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_FileUtilities.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__FileUtilities_8h.html</filename>
    <class kind="struct">tracktion::engine::ScopedDirectoryDeleter</class>
    <class kind="struct">tracktion::engine::FileDragList</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>bool</type>
      <name>isMidiFile</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a6af924a2c93c8c790b2f47f8b268aeea</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTracktionEditFile</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab23b7d701da3deada9bf714c16c2d175</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTracktionArchiveFile</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9de14a25ce140ee0870053c2d5e52685</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTracktionProjectFile</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>acccc63b0df9c7d5a0fba45d43be6e564</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTracktionPresetFile</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aa73b9395c9b79c25a3e249006ef6bcb9</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getNonExistentSiblingWithIncrementedNumberSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a5c7e43f5dfde80d18d12d8d661970b63</anchor>
      <arglist>(const juce::File &amp;, bool addHashSymbol)</arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>projectFileSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aaff412cade0bbcac962443d37d1d5413</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>editFileSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0750dbba2385d572c1502dc7550e2482</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>legacyEditFileSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0467400787bf63c0d686fbf7cd4965f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>archiveFileSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4a57d4ccc7a6105b30617b7409fa0db4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>soundFileWildCard</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a6df817fa28f72fc287d52a5380e14902</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>soundFileAndMidiWildCard</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac6f605889215895e37653dfaf67b2f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>midiFileWildCard</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aee430ae9d89a39a9dfd3be6ba7b75420</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>soundFileExtensions</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a5a649c510bb473e9cc542992a4d3b77b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>soundFileAndMidiExtensions</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a41b18766cfb995284cab2f45378c3e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>midiFileExtensions</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af95cea2db8943a48c156f92057694b17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>keyMapWildCard</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac099f7fa922c71a9e5025d30bf4844bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>keyMapSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9cbbe3be6814817ff65ab8f1ea2a5ba4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>customControllerFileSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a925f48dc4ba64d01138085de0ccfc594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>customProgramSetWildcard</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a7f5c0e8824cf4145c9df20f4dff64f12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>customProgramSetFileSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae5e5ab3dd625719faeb2e6971c10ae88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>presetFileSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a758bdf59ac7b3ffb8d675a4c935b3e6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>rackFileSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac368b7dafe38a687e216248ea378d8a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>scriptFileSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aca5fadaa571a81385795c6118ee95e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>grooveTemplateSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a965c7297def4170f8ccbc7f1d196ee9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>grooveTemplateWildCard</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aac88c92680ea1928e7f326675a261ac4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_FloatAudioFileFormat.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/formats/</path>
    <filename>tracktion__FloatAudioFileFormat_8h.html</filename>
    <class kind="class">tracktion::engine::FloatAudioFormat</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_FolderTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__FolderTrack_8h.html</filename>
    <class kind="class">tracktion::engine::FolderTrack</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_FollowActions.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__FollowActions_8h.html</filename>
    <class kind="class">engine::FollowActions</class>
    <class kind="struct">engine::FollowActions::Action</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::FollowAction &gt;</class>
    <namespace>engine</namespace>
    <namespace>juce</namespace>
    <member kind="enumeration">
      <type></type>
      <name>FollowAction</name>
      <anchorfile>namespaceengine.html</anchorfile>
      <anchor>a8adf9568644e9fd569d34ea8751bfdde</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddeac456cb28eeacbc581b046d213222b66f">globalStop</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea4c8570a6cb79b980dfeae85b23f75c7a">globalReturnToArrangement</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea47f0147f51842988f934e149e7e8caaa">globalPlayAgain</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddeaef3d2841cf4246e8b9f731941fdcd5ab">trackPrevious</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea36acab6e718fdbe3cad86bbd4c66b9a5">trackNext</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddeaa0423cb783ee63a100fd8ee8ecf10cf7">trackFirst</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea3e65b5ade6cd882ec1fea127d91cde89">trackLast</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea8c43284b6586cfeb4400f88ef70eb2f4">trackAny</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddeaa5e6e7ec14f7cfc9d318c9e39439b3be">trackOther</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddead19212628735bf203ef61085a310ba73">trackRoundRobin</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea9b671acea9d6903ceaedb125ff9ec0dc">currentGroupPrevious</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea051833ed22a7462c628356f0e3c68c61">currentGroupNext</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea0ec01b92ff0fd15ab7000fc00cc358a0">currentGroupFirst</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddeaadbe34fd022dd8a0f27064f1e134cab3">currentGroupLast</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea53284b089ec091e764e4c61382f686df">currentGroupAny</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea0fcb2c7f9aee87f3faac9ca6bb4156dc">currentGroupOther</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddeae785f60552a59533d8a01daa4eb764f8">currentGroupRoundRobin</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea052043fefd6705d4534070da78d5e1c6">previousGroupFirst</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea0456776f695d81268b58cda00ea241e4">previousGroupLast</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddeacc942fea2a26dae8b174d6aa4bbd8711">previousGroupAny</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea9816290541861b2d4cf0becf68f17764">nextGroupFirst</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddead937543b1c75fedc3dd8c868168941d2">nextGroupLast</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddeadfdd5f882185f9b50f24fe45509914c4">nextGroupAny</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea78949abcd4a4661279003b1afc897489">otherGroupFirst</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddeae9d9a48525e3046f3f5e6efcf13f5133">otherGroupLast</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea07e4a5758b30294d27a92b0b096a5aaa">otherGroupAny</enumvalue>
    </member>
    <member kind="function">
      <type>std::optional&lt; FollowAction &gt;</type>
      <name>followActionFromChoice</name>
      <anchorfile>namespaceengine.html</anchorfile>
      <anchor>aa07b83a67660d947ac6bd868d6a8d970</anchor>
      <arglist>(juce::String)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; FollowAction &gt;</type>
      <name>followActionFromString</name>
      <anchorfile>namespaceengine.html</anchorfile>
      <anchor>a529f143817fffbadfe408f74e3a46ad2</anchor>
      <arglist>(juce::String)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>toString</name>
      <anchorfile>namespaceengine.html</anchorfile>
      <anchor>a9dd1960b5f512aec90454c3e72bb60a9</anchor>
      <arglist>(FollowAction)</arglist>
    </member>
    <member kind="function">
      <type>std::function&lt; void(MonotonicBeat)&gt;</type>
      <name>createFollowAction</name>
      <anchorfile>namespaceengine.html</anchorfile>
      <anchor>a943f764db7a45607709ffcdb098ef23a</anchor>
      <arglist>(Clip &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_FourOscPlugin.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__FourOscPlugin_8h.html</filename>
    <class kind="class">tracktion::engine::ValueSmoother</class>
    <class kind="class">tracktion::engine::SimpleLFO</class>
    <class kind="struct">tracktion::engine::SimpleLFO::Parameters</class>
    <class kind="class">tracktion::engine::FourOscPlugin</class>
    <class kind="struct">tracktion::engine::FourOscPlugin::OscParams</class>
    <class kind="struct">tracktion::engine::FourOscPlugin::LFOParams</class>
    <class kind="struct">tracktion::engine::FourOscPlugin::MODEnvParams</class>
    <class kind="struct">tracktion::engine::FourOscPlugin::ModAssign</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_FreezePoint.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__FreezePoint_8h.html</filename>
    <class kind="class">tracktion::engine::FreezePointPlugin</class>
    <class kind="struct">tracktion::engine::FreezePointPlugin::ScopedTrackUnsoloer</class>
    <class kind="struct">tracktion::engine::FreezePointPlugin::ScopedTrackSoloIsolator</class>
    <class kind="struct">tracktion::engine::FreezePointPlugin::ScopedPluginDisabler</class>
    <class kind="struct">tracktion::engine::FreezePointPlugin::ScopedTrackFreezer</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_GlueCode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__GlueCode_8h.html</filename>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
    <member kind="function">
      <type>juce::AudioBuffer&lt; float &gt;</type>
      <name>toAudioBuffer</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a514ef258c89b58227b3f6ad2d8b3ee1f</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::BufferView&lt; SampleType, choc::buffer::SeparateChannelLayout &gt;</type>
      <name>toBufferView</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a4139f76d207395ded86b1969235644dd</anchor>
      <arglist>(juce::AudioBuffer&lt; SampleType &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::FrameRange</type>
      <name>createFrameRange</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a0bf4a996c7e326b2ccc25872ad558b83</anchor>
      <arglist>(std::integral auto start, std::integral auto end)</arglist>
    </member>
    <member kind="function">
      <type>juce::MidiMessage</type>
      <name>toMidiMessage</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a75610fd2541186d3d2577e14ac219446</anchor>
      <arglist>(const choc::midi::Sequence::Event &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiplyBy</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a646eb6e0395196d82b5f3532c5a08d8c</anchor>
      <arglist>(BufferViewType &amp;view, juce::SmoothedValue&lt; SampleType, SmoothingType &gt; &amp;value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyGainRamp</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>aa89f848b24ce52d37f797b335458178b</anchor>
      <arglist>(BufferType &amp;&amp;buffer, GainType startGain, GainType endGain) noexcept</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::FrameRange</type>
      <name>frameRangeWithStartAndLength</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>ab1e6a6c82ce30b1f839877327d96baa0</anchor>
      <arglist>(choc::buffer::FrameCount start, choc::buffer::FrameCount length)</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::ChannelRange</type>
      <name>channelRangeWithStartAndLength</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a4497898df2d88e7ec62c528015f994b1</anchor>
      <arglist>(choc::buffer::ChannelCount start, choc::buffer::ChannelCount length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanitise</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a0db582faaeca8844b714175eb0fa458d</anchor>
      <arglist>(Buffer &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanityCheckView</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a557f634035815360b710a944ea7e0c5b</anchor>
      <arglist>(const choc::buffer::BufferView&lt; SampleType, LayoutType &gt; &amp;view)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_GrooveTemplate.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__GrooveTemplate_8h.html</filename>
    <class kind="class">tracktion::engine::GrooveTemplate</class>
    <class kind="class">tracktion::engine::GrooveTemplateManager</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_HostedAudioDevice.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__HostedAudioDevice_8h.html</filename>
    <class kind="class">tracktion::engine::HostedAudioDeviceInterface</class>
    <class kind="struct">tracktion::engine::HostedAudioDeviceInterface::Parameters</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_HostedMidiInputDeviceNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__HostedMidiInputDeviceNode_8h.html</filename>
    <class kind="class">tracktion::engine::HostedMidiInputDeviceNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_IconProG2.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/types/</path>
    <filename>tracktion__IconProG2_8h.html</filename>
    <class kind="class">tracktion::engine::IconProG2</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Identifiers.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__Identifiers_8h.html</filename>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>tracktion::engine::IDs</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DECLARE_ID</name>
      <anchorfile>tracktion__Identifiers_8h.html</anchorfile>
      <anchor>abf02e2884272a18da07d3d127f259c9a</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_ImpulseResponsePlugin.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__ImpulseResponsePlugin_8h.html</filename>
    <class kind="class">tracktion::engine::ImpulseResponsePlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_InputDevice.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/devices/</path>
    <filename>tracktion__InputDevice_8h.html</filename>
    <class kind="class">tracktion::engine::InputDevice</class>
    <class kind="class">tracktion::engine::InputDeviceInstance</class>
    <class kind="struct">tracktion::engine::InputDeviceInstance::RecordingParameters</class>
    <class kind="class">tracktion::engine::InputDeviceInstance::RecordingContext</class>
    <class kind="struct">tracktion::engine::InputDeviceInstance::StopRecordingParameters</class>
    <class kind="struct">tracktion::engine::InputDeviceInstance::Destination</class>
    <class kind="struct">tracktion::engine::InputDeviceInstance::WaveInputDestination</class>
    <class kind="struct">tracktion::engine::InputDeviceInstance::MidiInputDestination</class>
    <class kind="struct">tracktion::engine::InputDeviceInstance::VirtualMidiInputDestination</class>
    <class kind="struct">tracktion::engine::InputDeviceInstance::DestinationList</class>
    <class kind="struct">tracktion::engine::InputDeviceInstance::Consumer</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>juce::Array&lt; std::pair&lt; AudioTrack *, int &gt; &gt;</type>
      <name>getTargetTracksAndIndexes</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aa07b81b67faf6bfdcd599ce7a09de387</anchor>
      <arglist>(InputDeviceInstance &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AudioTrack * &gt;</type>
      <name>getTargetTracks</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae51b18b7d4da819a2ca23ca636d72fd2</anchor>
      <arglist>(InputDeviceInstance &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOnTargetTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a76ef6c74bbdae7ebf1518ab31fec952e</anchor>
      <arglist>(InputDeviceInstance &amp;, const Track &amp;, int idx)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAttached</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a32c58952e58529d27bac31c7d29dd8b0</anchor>
      <arglist>(InputDeviceInstance &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>clearFromTargets</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4ffb1db47ff5013cf386ef9bdd61a7b5</anchor>
      <arglist>(InputDeviceInstance &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance::Destination *</type>
      <name>getDestination</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a5a7efd9a3159373fd2135fca298c4f6e</anchor>
      <arglist>(InputDeviceInstance &amp;, const Track &amp;track, int index)</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance::Destination *</type>
      <name>getDestination</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a172660cb030d260e7e153441b4ab9c63</anchor>
      <arglist>(InputDeviceInstance &amp;, const ClipSlot &amp;)</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance::Destination *</type>
      <name>getDestination</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac57c3124fc8b729515ca60ca054bdc9f</anchor>
      <arglist>(InputDeviceInstance &amp;, const juce::ValueTree &amp;destinationState)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasErrors</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a72a847da65b887222836b9349292eedd</anchor>
      <arglist>(const InputDeviceInstance::PreparedContext &amp;pc)</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance::PreparedContext &amp;</type>
      <name>append</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae274e8faf731a5250d52c65e2a14c26f</anchor>
      <arglist>(InputDeviceInstance::PreparedContext &amp;dest, InputDeviceInstance::PreparedContext &amp;&amp;src)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::vector&lt; std::unique_ptr&lt; InputDeviceInstance::RecordingContext &gt; &gt;, juce::StringArray &gt;</type>
      <name>extract</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a36bd6c662b8613ecbcaf3d0fce1df1ed</anchor>
      <arglist>(InputDeviceInstance::PreparedContext &amp;&amp;pc)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_InsertPlugin.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__InsertPlugin_8h.html</filename>
    <class kind="class">tracktion::engine::InsertPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_InsertSendNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__InsertSendNode_8h.html</filename>
    <class kind="class">tracktion::engine::InsertNode</class>
    <class kind="class">tracktion::engine::InsertSendNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LAMEManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/formats/</path>
    <filename>tracktion__LAMEManager_8h.html</filename>
    <class kind="class">tracktion::engine::LAMEManager</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LatencyNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/nodes/</path>
    <filename>tracktion__LatencyNode_8h.html</filename>
    <class kind="class">tracktion::graph::LatencyNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LatencyPlugin.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__LatencyPlugin_8h.html</filename>
    <class kind="class">tracktion::engine::LatencyPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LatencyProcessor.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__LatencyProcessor_8h.html</filename>
    <class kind="struct">tracktion::graph::LatencyProcessor</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LauncherClipPlaybackHandle.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__LauncherClipPlaybackHandle_8h.html</filename>
    <class kind="class">tracktion::engine::LauncherClipPlaybackHandle</class>
    <class kind="struct">tracktion::engine::LauncherClipPlaybackHandle::SplitBeatRange</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LaunchHandle.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__LaunchHandle_8h.html</filename>
    <class kind="class">engine::LaunchHandle</class>
    <class kind="struct">engine::LaunchHandle::SplitStatus</class>
    <namespace>engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LaunchQuantisation.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__LaunchQuantisation_8h.html</filename>
    <class kind="class">tracktion::engine::LaunchQuantisation</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::LaunchQType &gt;</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>juce</namespace>
    <member kind="enumeration">
      <type></type>
      <name>LaunchQType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae39e83d3d91167656e40c7d65b801e95</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95af2deebc8413aae20409eeb10bbd9431c">eightBars</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95aec08c8fecba7f3dea2d1bf3e8f2c51b4">fourBars</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a4e9b8cd9865ad579301facd6c315d948">twoBars</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a37b51d194a7513e45b56f6524f2d51f2">bar</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a998829c3bd4bd924a6ab5161eec428fd">halfT</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a7afe399f1415b137d0962f82662fa9d4">half</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95ac7c1d479f14e54e7784205a88f161e02">halfD</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95aac2527e879843b55ad31b5d983a30c50">quarterT</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95aac9e2504b3cf2cadf8ca121523b110b4">quarter</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a6009cd25211d9cb7c07ddc0ea48caaf1">quarterD</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a73910ed0856fbae6996c1fe8cdccc131">eighthT</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95aa76a3a8b8cba2cbe41bd4310b12ad2db">eighth</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a5aa4b6df735b84a7a115dd747ca9d8a2">eighthD</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95afaf9595af501765ae04c046a952bb19c">sixteenthT</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a80e1ed18749046947dd9aba3166b0f08">sixteenth</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a43412f87525e6a16c023d94359bba55e">sixteenthD</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a167e1e44dbf4b61a7137624d40b16971">thirtySecondT</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a442d0097548e01242ae77d3cc91c6585">thirtySecond</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a9beb6e597257c8ea614e19311ad2171c">thirtySecondD</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95ad03f20763bedd7c66fc4aed0ad26bdb0">sixtyFourthT</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a1cd670520c232df91f57d060f59b7c92">sixtyFourth</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a14430c1fe99d2a12c779c638628cc373">sixtyFourthD</enumvalue>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getLaunchQTypeChoices</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae80ed07c6e97b66ae96f72b6f501e252</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; LaunchQType &gt;</type>
      <name>launchQTypeFromName</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a22dad481cfb530163435ae114fdea618</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a1391e7da8a21eb9a58d872aea23fbf7a</anchor>
      <arglist>(LaunchQType)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>toBarFraction</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a152ce69edd7a1fa4f268fd2ce95d4124</anchor>
      <arglist>(LaunchQType) noexcept</arglist>
    </member>
    <member kind="function">
      <type>LaunchQType</type>
      <name>fromBarFraction</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab49d21c2223bd6644f185d3b874f90d2</anchor>
      <arglist>(double) noexcept</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getNext</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a38d6efbf9bca006f913c9cc016c6f41a</anchor>
      <arglist>(LaunchQType, const TempoSequence &amp;, BeatPosition) noexcept</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getNext</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a633b812c19677c2239936bfc5570a886</anchor>
      <arglist>(LaunchQType, const tempo::Sequence &amp;, BeatPosition) noexcept</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_LevelMeasurer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__LevelMeasurer_8h.html</filename>
    <class kind="struct">tracktion::engine::DbTimePair</class>
    <class kind="class">tracktion::engine::LevelMeasurer</class>
    <class kind="struct">tracktion::engine::LevelMeasurer::Client</class>
    <class kind="class">tracktion::engine::SharedLevelMeasurer</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LevelMeasurerProcessingNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__LevelMeasurerProcessingNode_8h.html</filename>
    <class kind="class">tracktion::engine::LevelMeasurerProcessingNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LevelMeasuringNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__LevelMeasuringNode_8h.html</filename>
    <class kind="class">tracktion::engine::LevelMeasuringNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LevelMeter.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__LevelMeter_8h.html</filename>
    <class kind="class">tracktion::engine::LevelMeterPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LFOModifier.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/modifiers/</path>
    <filename>tracktion__LFOModifier_8h.html</filename>
    <class kind="class">tracktion::engine::LFOModifier</class>
    <class kind="struct">tracktion::engine::LFOModifier::Assignment</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LiveMidiInjectingNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__LiveMidiInjectingNode_8h.html</filename>
    <class kind="class">tracktion::engine::LiveMidiInjectingNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LiveMidiOutputNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__LiveMidiOutputNode_8h.html</filename>
    <class kind="class">tracktion::engine::LiveMidiOutputNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LockFreeMultiThreadedNodePlayer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__LockFreeMultiThreadedNodePlayer_8h.html</filename>
    <class kind="class">tracktion::graph::LockFreeMultiThreadedNodePlayer</class>
    <class kind="struct">tracktion::graph::LockFreeMultiThreadedNodePlayer::ThreadPool</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LockFreeObject.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__LockFreeObject_8h.html</filename>
    <class kind="class">tracktion::graph::LockFreeObject</class>
    <class kind="class">tracktion::graph::LockFreeObject::ScopedRealTimeAccess</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LoopInfo.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__LoopInfo_8h.html</filename>
    <class kind="class">tracktion::engine::LoopInfo</class>
    <class kind="struct">tracktion::engine::LoopInfo::LoopPoint</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LoopingMidiNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__LoopingMidiNode_8h.html</filename>
    <class kind="class">tracktion::engine::LoopingMidiNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_LowPass.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__LowPass_8h.html</filename>
    <class kind="class">tracktion::engine::LowPassPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MackieC4.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/types/</path>
    <filename>tracktion__MackieC4_8h.html</filename>
    <class kind="class">tracktion::engine::MackieC4</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MackieMCU.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/types/</path>
    <filename>tracktion__MackieMCU_8h.html</filename>
    <class kind="class">tracktion::engine::MackieMCU</class>
    <class kind="struct">tracktion::engine::MackieMCU::CpuMeterTimer</class>
    <class kind="struct">tracktion::engine::MackieMCU::AuxTimer</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MackieXT.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/types/</path>
    <filename>tracktion__MackieXT_8h.html</filename>
    <class kind="class">tracktion::engine::MackieXT</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MacroParameter.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__MacroParameter_8h.html</filename>
    <class kind="class">tracktion::engine::MacroParameter</class>
    <class kind="struct">tracktion::engine::MacroParameter::Assignment</class>
    <class kind="class">tracktion::engine::MacroParameterList</class>
    <class kind="class">tracktion::engine::MacroParameterElement</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>MacroParameter::Ptr</type>
      <name>getMacroParameterForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a6e6c0ed11ef20e173700d375b05ce0fb</anchor>
      <arglist>(Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; Plugin &gt;</type>
      <name>getOwnerPlugin</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aa98cad821850e2c14ff86fcfa9b8f6a4</anchor>
      <arglist>(MacroParameterList *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_MarkerClip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__MarkerClip_8h.html</filename>
    <class kind="class">tracktion::engine::MarkerClip</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MarkerManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__MarkerManager_8h.html</filename>
    <class kind="class">tracktion::engine::MarkerManager</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MarkerTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__MarkerTrack_8h.html</filename>
    <class kind="class">tracktion::engine::MarkerTrack</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MasterTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__MasterTrack_8h.html</filename>
    <class kind="class">tracktion::engine::MasterTrack</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MelodyneFileReader.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/ARA/</path>
    <filename>tracktion__MelodyneFileReader_8h.html</filename>
    <class kind="class">tracktion::engine::MelodyneFileReader</class>
    <class kind="struct">tracktion::engine::ARADocumentHolder</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MelodyneInstanceFactory.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/ARA/</path>
    <filename>tracktion__MelodyneInstanceFactory_8h.html</filename>
    <class kind="struct">MelodyneInstance</class>
    <class kind="struct">MelodyneInstanceFactory</class>
  </compound>
  <compound kind="file">
    <name>tracktion_MelodyneNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__MelodyneNode_8h.html</filename>
    <class kind="class">tracktion::engine::MelodyneNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MemoryMappedFileReader.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/formats/</path>
    <filename>tracktion__MemoryMappedFileReader_8h.html</filename>
    <class kind="struct">tracktion::engine::MemoryMappedFileReader</class>
    <class kind="class">tracktion::engine::BufferingAudioReaderWrapper</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiChannel.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__MidiChannel_8h.html</filename>
    <class kind="struct">tracktion::engine::MidiChannel</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiClip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__MidiClip_8h.html</filename>
    <class kind="class">tracktion::engine::MidiClip</class>
    <class kind="struct">tracktion::engine::MidiClip::ScopedEventsList</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::MidiClip::LoopedSequenceType &gt;</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>juce</namespace>
    <member kind="function">
      <type>void</type>
      <name>mergeInMidiSequence</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab8f56799a4714693459f833ae271131b</anchor>
      <arglist>(MidiClip &amp;, juce::MidiMessageSequence, TimeDuration offsetToApply, MidiList::NoteAutomationType)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiControllerEvent.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__MidiControllerEvent_8h.html</filename>
    <class kind="class">tracktion::engine::MidiControllerEvent</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiExpression.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__MidiExpression_8h.html</filename>
    <class kind="struct">tracktion::engine::MidiExpression</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiInputDevice.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/devices/</path>
    <filename>tracktion__MidiInputDevice_8h.html</filename>
    <class kind="class">tracktion::engine::MidiInputDevice</class>
    <class kind="struct">tracktion::engine::MidiInputDevice::NoteFilterRange</class>
    <class kind="struct">tracktion::engine::MidiInputDevice::MidiKeyChangeDispatcher</class>
    <class kind="struct">tracktion::engine::MidiInputDevice::MidiKeyChangeDispatcher::Listener</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiInputDeviceNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__MidiInputDeviceNode_8h.html</filename>
    <class kind="class">tracktion::engine::MidiInputDeviceNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiLearn.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__MidiLearn_8h.html</filename>
    <class kind="class">tracktion::engine::MidiLearnState</class>
    <class kind="struct">tracktion::engine::MidiLearnState::ScopedChangeCaller</class>
    <class kind="struct">tracktion::engine::MidiLearnState::Listener</class>
    <class kind="class">tracktion::engine::MidiAssignable</class>
    <class kind="struct">tracktion::engine::MidiAssignable::Assignment</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiList.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__MidiList_8h.html</filename>
    <class kind="class">tracktion::engine::MidiList</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiMessageArray.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__MidiMessageArray_8h.html</filename>
    <class kind="struct">tracktion::engine::MidiMessageArray</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiMessageWithSource.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__MidiMessageWithSource_8h.html</filename>
    <class kind="struct">tracktion::engine::MidiMessageWithSource</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>MPESourceID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a48992ea02a0d6d6f423dcb9111351598</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiModifier.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__MidiModifier_8h.html</filename>
    <class kind="class">tracktion::engine::MidiModifierPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__MidiNode_8h.html</filename>
    <class kind="class">tracktion::engine::MidiNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiNodeHelpers.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__MidiNodeHelpers_8h.html</filename>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>tracktion::engine::MidiNodeHelpers</namespace>
    <member kind="function">
      <type>void</type>
      <name>createMessagesForTime</name>
      <anchorfile>namespacetracktion_1_1engine_1_1MidiNodeHelpers.html</anchorfile>
      <anchor>aa44ea3451a512b49958ede81d09ff645</anchor>
      <arglist>(MidiMessageArray &amp;destBuffer, juce::MidiMessageSequence &amp;sourceSequence, double time, juce::Range&lt; int &gt; channelNumbers, LiveClipLevel &amp;clipLevel, bool useMPEChannelMode, MPESourceID midiSourceID, juce::Array&lt; juce::MidiMessage &gt; &amp;controllerMessagesScratchBuffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNoteOffs</name>
      <anchorfile>namespacetracktion_1_1engine_1_1MidiNodeHelpers.html</anchorfile>
      <anchor>a3977b15e1c5da475a66f1bec58c58ffa</anchor>
      <arglist>(MidiMessageArray &amp;destination, const juce::MidiMessageSequence &amp;sourceSequence, MPESourceID midiSourceID, double time, double midiTimeOffset, bool isPlaying)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanityCheckMidiBuffer</name>
      <anchorfile>namespacetracktion_1_1engine_1_1MidiNodeHelpers.html</anchorfile>
      <anchor>afe685681eef1653d3a025b7570268b6f</anchor>
      <arglist>(const MidiMessageArray &amp;midi, double maxTimeStamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNoteOffs</name>
      <anchorfile>namespacetracktion_1_1engine_1_1MidiNodeHelpers.html</anchorfile>
      <anchor>ac2af7d6541190626a1ea431cacfd1ec7</anchor>
      <arglist>(ActiveNoteList &amp;activeNoteList, MidiMessageArray &amp;destination, MPESourceID midiSourceID, double midiTimeOffset, bool isPlaying)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiNote.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__MidiNote_8h.html</filename>
    <class kind="class">tracktion::engine::MidiNote</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiNoteDispatcher.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__MidiNoteDispatcher_8h.html</filename>
    <class kind="class">tracktion::engine::MidiNoteDispatcher</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiOutputDevice.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/devices/</path>
    <filename>tracktion__MidiOutputDevice_8h.html</filename>
    <class kind="class">tracktion::engine::MidiOutputDevice</class>
    <class kind="class">tracktion::engine::SoftwareMidiOutputDevice</class>
    <class kind="class">tracktion::engine::MidiOutputDeviceInstance</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiOutputDeviceInstanceInjectingNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__MidiOutputDeviceInstanceInjectingNode_8h.html</filename>
    <class kind="class">tracktion::engine::MidiOutputDeviceInstanceInjectingNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiPatchBay.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__MidiPatchBay_8h.html</filename>
    <class kind="class">tracktion::engine::MidiPatchBayPlugin</class>
    <class kind="struct">tracktion::engine::MidiPatchBayPlugin::Mappings</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiProgramManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__MidiProgramManager_8h.html</filename>
    <class kind="class">tracktion::engine::MidiProgramManager</class>
    <class kind="struct">tracktion::engine::MidiProgramManager::MidiBank</class>
    <class kind="struct">tracktion::engine::MidiProgramManager::MidiProgramSet</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MidiSysexEvent.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__MidiSysexEvent_8h.html</filename>
    <class kind="class">tracktion::engine::MidiSysexEvent</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MIDITrackerModifier.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/modifiers/</path>
    <filename>tracktion__MIDITrackerModifier_8h.html</filename>
    <class kind="class">tracktion::engine::MIDITrackerModifier</class>
    <class kind="struct">tracktion::engine::MIDITrackerModifier::Assignment</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MiscUtilities.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__MiscUtilities_8h.html</filename>
    <class kind="class">tracktion::engine::ScopedWaitCursor</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="typedef">
      <type>int64_t</type>
      <name>HashCode</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a134d0029d7c5db278db98865a49c1b84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AuxPosition</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9e8ea43658d2da6652d441bb65cdca4d</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a9e8ea43658d2da6652d441bb65cdca4da4f64bbe2baee5b3a2dca4855df1d0c63">byBus</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a9e8ea43658d2da6652d441bb65cdca4da85a22b5fd75556bce2a556429fb64823">byPosition</enumvalue>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSortedListToMenu</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>abebe09ff2579cd31c4dc6cdc25d01318</anchor>
      <arglist>(juce::PopupMenu &amp;m, juce::StringArray names, int startID)</arglist>
    </member>
    <member kind="function">
      <type>juce::AffineTransform</type>
      <name>getScaleAroundCentre</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a710c9d4dc28b809b518cf34843233807</anchor>
      <arglist>(juce::Rectangle&lt; float &gt; r, float numPixels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveXMLAttributeToStart</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>acfcf46ac54828204be2e06366050319a</anchor>
      <arglist>(juce::XmlElement &amp;xml, juce::StringRef att)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeIf</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4aa00742c535ee0c6c342c0ae0b8dad4</anchor>
      <arglist>(Vector &amp;v, Predicate &amp;&amp;pred)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>almostEqual</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a64829bb587e21890e5a821bec24b43a0</anchor>
      <arglist>(FloatingPointType firstValue, FloatingPointType secondValue, FloatingPointType precision=(FloatingPointType) 0.00001)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_Modifier.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__Modifier_8h.html</filename>
    <class kind="struct">tracktion::engine::ModifierTimer</class>
    <class kind="struct">tracktion::engine::Modifier</class>
    <class kind="class">tracktion::engine::ModifierList</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; ModifierType &gt;</type>
      <name>getModifiersOfType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a5b27ccda936c1b9fa60093365eab616e</anchor>
      <arglist>(const ModifierList &amp;ml)</arglist>
    </member>
    <member kind="function">
      <type>Modifier::Ptr</type>
      <name>findModifierForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a92172060d5623ea1950e31e5879815da</anchor>
      <arglist>(ModifierList &amp;, EditItemID)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_ModifierCommon.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/modifiers/</path>
    <filename>tracktion__ModifierCommon_8h.html</filename>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>tracktion::engine::ModifierCommon</namespace>
    <member kind="enumeration">
      <type></type>
      <name>RateType</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>hertz</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbac128a9cb1609c306129da1d194a20e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fourBars</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbaa14396b4906781aab32bee790e1dfc62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>twoBars</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba5550344b6e55f77f212bd71adab61db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bar</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba1db8ef3c4b1fd3f8bab2c981521813c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfT</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba388dacc09f742e90461e47fe19a7f2ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>half</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba4156de6c297f5e051db638795a9c09af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfD</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbafec7b66c0731e73a2ee2a6a5ef9e7a42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>quarterT</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbae0581745fe2aaf6a32e6b93076e09468</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>quarter</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba63aae0f7c2d6df0bc4ed85c7cb899c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>quarterD</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbad780c5d052494129144f256fab005a27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eighthT</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbafa96e7ae3c6ebe0b5235bd4a23fbcc4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eighth</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbab77e33fee58fb0c8bd5143a44647fb7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eighthD</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba6d7e3d53da294d9f68cd1f7efcc0551a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixteenthT</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba5faa86731f44667559d4de9b39405568</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixteenth</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbae7ab9d82bd5293bbb4421aea5e4d9b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixteenthD</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbadcfad79aa5604e68feb497e8e469ec23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>thirtySecondT</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbafaa466f701b59ff073cb0f98d2354c6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>thirtySecond</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba2a92a4b742c0a3b010316c5b7a42e27f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>thirtySecondD</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba240ed9a77ac432e646df5a94f9549e42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixtyFourthT</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba8878a745852e8494d5dd26c50d656c9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixtyFourth</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbaa9cfb3d2839f0424b69237560decf502</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixtyFourthD</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba48861fddc04af2490aae995371df103f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SyncType</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a4dcd9d7ff08bc5c648d14f9b798e6276</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>free</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a4dcd9d7ff08bc5c648d14f9b798e6276aa747f9ccdab493effaac15025515568f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>transport</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a4dcd9d7ff08bc5c648d14f9b798e6276a37862afecabd0f5070a76065c3b842d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>note</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a4dcd9d7ff08bc5c648d14f9b798e6276a58f6d378a6b4967604d43261e733e081</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getRateTypeChoices</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a825887025a67600211e7c1b683d6b8c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBarFraction</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5bc60b5d724b4850a12299319a83ab50</anchor>
      <arglist>(RateType) noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getSyncTypeChoices</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>ae83e1b872dabf5bf9813cc7016abfc10</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_ModifierInternal.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/modifiers/</path>
    <filename>tracktion__ModifierInternal_8h.html</filename>
    <class kind="struct">tracktion::engine::Ramp</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>tracktion::engine::PredefinedWavetable</namespace>
    <namespace>tracktion::engine::modifier</namespace>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getEnabledNames</name>
      <anchorfile>namespacetracktion_1_1engine_1_1modifier.html</anchorfile>
      <anchor>afadfb107b3125162e43191d0a7e736b9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_ModifierNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__ModifierNode_8h.html</filename>
    <class kind="class">tracktion::engine::ModifierNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_modules.dox</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/</path>
    <filename>tracktion__modules_8dox.html</filename>
  </compound>
  <compound kind="file">
    <name>tracktion_MouseHoverDetector.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__MouseHoverDetector_8h.html</filename>
    <class kind="class">tracktion::engine::MouseHoverDetector</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_MPEStartTrimmer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__MPEStartTrimmer_8h.html</filename>
    <class kind="struct">tracktion::engine::MPEStartTrimmer</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_engine/playback/graph/tracktion_MultiThreadedNodePlayer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__engine_2playback_2graph_2tracktion__MultiThreadedNodePlayer_8h.html</filename>
    <class kind="class">tracktion::engine::MultiThreadedNodePlayer</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_graph/tracktion_graph/tracktion_MultiThreadedNodePlayer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__graph_2tracktion__graph_2tracktion__MultiThreadedNodePlayer_8h.html</filename>
    <class kind="class">tracktion::graph::MultiThreadedNodePlayer</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Musicality.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__Musicality_8h.html</filename>
    <class kind="class">tracktion::engine::Chord</class>
    <class kind="class">tracktion::engine::Scale</class>
    <class kind="class">tracktion::engine::PatternGenerator</class>
    <class kind="struct">tracktion::engine::PatternGenerator::ProgressionItem</class>
    <class kind="struct">tracktion::engine::KeyResult</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::Chord::ChordType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::Scale::ScaleType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::PatternGenerator::Mode &gt;</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>juce</namespace>
    <member kind="function">
      <type>juce::Array&lt; KeyResult &gt;</type>
      <name>determineKeyOfNotes</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>afb8aba506ac87a1db1e93d91682f0bda</anchor>
      <arglist>(const juce::Array&lt; MidiNote * &gt; &amp;notes)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_Node.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__Node_8h.html</filename>
    <class kind="struct">tracktion::graph::NodeBuffer</class>
    <class kind="struct">tracktion::graph::NodeAndID</class>
    <class kind="struct">tracktion::graph::NodeGraph</class>
    <class kind="struct">tracktion::graph::PlaybackInitialisationInfo</class>
    <class kind="struct">tracktion::graph::NodeProperties</class>
    <class kind="struct">tracktion::graph::NodeOptimisations</class>
    <class kind="class">tracktion::graph::TransformCache</class>
    <class kind="class">tracktion::graph::Node</class>
    <class kind="struct">tracktion::graph::Node::AudioAndMidiBuffer</class>
    <class kind="struct">tracktion::graph::Node::ProcessContext</class>
    <class kind="struct">tracktion::graph::detail::VisitNodesWithRecord</class>
    <class kind="struct">tracktion::graph::detail::VisitNodesWithRecordBFS</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
    <namespace>tracktion::graph::detail</namespace>
    <member kind="enumeration">
      <type></type>
      <name>TransformResult</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>ae8337885018777ed501740f02dcbca0d</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="ae8337885018777ed501740f02dcbca0da334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="ae8337885018777ed501740f02dcbca0da2bc4ad49aaeeedd7b7b4cbbd3cc1835e">connectionsMade</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="ae8337885018777ed501740f02dcbca0daeeb724e7295815f3a8eec90846f596c8">nodesDeleted</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ClearBuffers</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a963afb16027e92506362c8076ba7d33d</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a963afb16027e92506362c8076ba7d33da7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a963afb16027e92506362c8076ba7d33daa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AllocateAudioBuffer</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a19c133dba445db6c09987c16ddd1c240</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a19c133dba445db6c09987c16ddd1c240a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a19c133dba445db6c09987c16ddd1c240aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VertexOrdering</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a6e378d0ba35c5e768fff3ed692e30c58</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a6e378d0ba35c5e768fff3ed692e30c58ac9a7dcee6c8867427cad06075090ea8c">preordering</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a6e378d0ba35c5e768fff3ed692e30c58aa594bbe6c0bebbd5e0ac45a054a7ea19">postordering</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a6e378d0ba35c5e768fff3ed692e30c58aae32c07adc26714e62b0e2cd5f77f72d">reversePreordering</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a6e378d0ba35c5e768fff3ed692e30c58afe1fe1181a7b661c316a10925c500c9e">reversePostordering</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a6e378d0ba35c5e768fff3ed692e30c58a867d33f817886982c81cc3934e489e24">bfsPreordering</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a6e378d0ba35c5e768fff3ed692e30c58a25f364f7adcbbf7a7cc5874f97ae1f12">bfsReversePreordering</enumvalue>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Node &gt;</type>
      <name>makeNode</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>afc2a8b4a5885756fefc95f2c81db5232</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a9a019ae7e8df5784887de4a9b90c9487</anchor>
      <arglist>(NodeAndID n1, NodeAndID n2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a75dd88b79b4ead64785c8e9be4a5ee9e</anchor>
      <arglist>(NodeAndID n1, NodeAndID n2)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; NodeGraph &gt;</type>
      <name>createNodeGraph</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>affddc1ea5f169421b306a7af1799cb0c</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitNodes</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a32023348ff2e4fef0dd312ffe050deec</anchor>
      <arglist>(Node &amp;, Visitor &amp;&amp;, bool preordering)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitNodesBFS</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a8616c2aebe687547f29be0af50553f50</anchor>
      <arglist>(Node &amp;node, Visitor &amp;&amp;visitor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNodesRecursive</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a679577226460cf0586b59680de93c387</anchor>
      <arglist>(std::vector&lt; NodeAndID &gt; &amp;nodeMap, Node &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NodeAndID &gt;</type>
      <name>createNodeMap</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>aca0fc95ac30e3afed7136e908c6d47ea</anchor>
      <arglist>(const std::vector&lt; Node * &gt; &amp;nodes)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_NodePlayer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__NodePlayer_8h.html</filename>
    <class kind="class">tracktion::graph::NodePlayer</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_NodePlayerThreadPools.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__NodePlayerThreadPools_8h.html</filename>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ThreadPoolStrategy</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a269844fbe17f2d681b0a3df8ae112f96</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a269844fbe17f2d681b0a3df8ae112f96a1c6ad0e53f832c22dd2da6ab1b03c14d">conditionVariable</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a269844fbe17f2d681b0a3df8ae112f96a9bfda1f9ada0dd18d1aacb35e1ac4e1e">realTime</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a269844fbe17f2d681b0a3df8ae112f96af7befc67e4b1ddf3a03d496537760671">hybrid</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a269844fbe17f2d681b0a3df8ae112f96ace1bc7755b9332cfacdf8ee58ef2e3c1">semaphore</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a269844fbe17f2d681b0a3df8ae112f96a86073a83d32632d6993e1dd75ff62947">lightweightSemaphore</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a269844fbe17f2d681b0a3df8ae112f96a8af14eb3725884652791f95d6016b355">lightweightSemHybrid</enumvalue>
    </member>
    <member kind="function">
      <type>LockFreeMultiThreadedNodePlayer::ThreadPoolCreator</type>
      <name>getPoolCreatorFunction</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a37f64bb3d9fbdc10da0f161a2b6f396e</anchor>
      <arglist>(ThreadPoolStrategy)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_NodePlayerUtilities.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/players/</path>
    <filename>tracktion__NodePlayerUtilities_8h.html</filename>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
    <namespace>tracktion::graph::node_player_utils</namespace>
    <member kind="function">
      <type>bool</type>
      <name>areNodeIDsUnique</name>
      <anchorfile>namespacetracktion_1_1graph_1_1node__player__utils.html</anchorfile>
      <anchor>a4b1c4e5cabcdcc57cc3f0fe522548177</anchor>
      <arglist>(Collection &amp;&amp;nodes, bool ignoreZeroIDs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserveAudioBufferPool</name>
      <anchorfile>namespacetracktion_1_1graph_1_1node__player__utils.html</anchorfile>
      <anchor>a3a2dcb31d870f9c43c952a91ecfc7a43</anchor>
      <arglist>(Node *rootNode, const std::vector&lt; Node * &gt; &amp;allNodes, AudioBufferPool &amp;audioBufferPool, size_t numThreads, int blockSize)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_NodeRenderContext.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__NodeRenderContext_8h.html</filename>
    <class kind="class">tracktion::engine::NodeRenderContext</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_NovationAutomap.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/types/</path>
    <filename>tracktion__NovationAutomap_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>tracktion_NovationRemoteSl.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/types/</path>
    <filename>tracktion__NovationRemoteSl_8h.html</filename>
    <class kind="class">tracktion::engine::NovationRemoteSl</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_OldEditConversion.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__OldEditConversion_8h.html</filename>
    <class kind="struct">tracktion::engine::OldEditConversion</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>updateLegacyEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab6e53d2a24df14d596b0070a7464171b</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateLegacyEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a36a997dc7770cea7e15e52017f2bf15c</anchor>
      <arglist>(juce::XmlElement &amp;editXML)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_Oscillators.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__Oscillators_8h.html</filename>
    <class kind="class">tracktion::engine::BandlimitedWaveLookupTables</class>
    <class kind="class">tracktion::engine::Oscillator</class>
    <class kind="class">tracktion::engine::MultiVoiceOscillator</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_OutputDevice.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/devices/</path>
    <filename>tracktion__OutputDevice_8h.html</filename>
    <class kind="class">tracktion::engine::OutputDevice</class>
    <class kind="class">tracktion::engine::OutputDeviceInstance</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ParameterChangeHandler.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__ParameterChangeHandler_8h.html</filename>
    <class kind="class">tracktion::engine::ParameterChangeHandler</class>
    <class kind="struct">tracktion::engine::ParameterChangeHandler::Listener</class>
    <class kind="struct">tracktion::engine::ParameterChangeHandler::Disabler</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ParameterControlMappings.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/</path>
    <filename>tracktion__ParameterControlMappings_8h.html</filename>
    <class kind="class">tracktion::engine::ParameterControlMappings</class>
    <class kind="struct">tracktion::engine::ParameterControlMappings::Mapping</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ParameterHelpers.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__ParameterHelpers_8h.html</filename>
    <class kind="struct">engine::DiscreteLabelledParameter</class>
    <class kind="struct">engine::SuffixedParameter</class>
    <class kind="struct">engine::ParameterWithStateValue</class>
    <namespace>engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PatchBay.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__PatchBay_8h.html</filename>
    <class kind="class">tracktion::engine::PatchBayPlugin</class>
    <class kind="struct">tracktion::engine::PatchBayPlugin::Wire</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PerformanceMeasurement.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__PerformanceMeasurement_8h.html</filename>
    <class kind="struct">tracktion::graph::ScopedSignpost</class>
    <class kind="class">tracktion::graph::PerformanceMeasurement</class>
    <class kind="struct">tracktion::graph::PerformanceMeasurement::Statistics</class>
    <class kind="class">tracktion::graph::ScopedPerformanceMeasurement</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Phaser.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__Phaser_8h.html</filename>
    <class kind="class">tracktion::engine::PhaserPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PhysicalMidiInputDevice.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/devices/</path>
    <filename>tracktion__PhysicalMidiInputDevice_8h.html</filename>
    <class kind="class">tracktion::engine::PhysicalMidiInputDevice</class>
    <class kind="class">tracktion::engine::PhysicalMidiInputDevice::Listener</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Pitch.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__Pitch_8h.html</filename>
    <class kind="struct">tracktion::engine::Pitch</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PitchSequence.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__PitchSequence_8h.html</filename>
    <class kind="class">tracktion::engine::PitchSequence</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PitchSetting.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__PitchSetting_8h.html</filename>
    <class kind="class">tracktion::engine::PitchSetting</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a09a6841a3e10b92f78ed1b26ecc861e0</anchor>
      <arglist>(const PitchSetting &amp;p1, const PitchSetting &amp;p2) noexcept</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_PitchShift.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__PitchShift_8h.html</filename>
    <class kind="class">tracktion::engine::PitchShiftPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_engine/playback/audionodes/tracktion_PlayHead.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__engine_2playback_2audionodes_2tracktion__PlayHead_8h.html</filename>
    <includes id="tracktion__EditTimeRange_8h" name="tracktion_EditTimeRange.h" local="yes" imported="no">tracktion_EditTimeRange.h</includes>
    <class kind="class">tracktion::engine::PlayHead</class>
    <class kind="struct">tracktion::engine::PlayHead::EditTimeWindow</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_graph/tracktion_graph/tracktion_PlayHead.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__graph_2tracktion__graph_2tracktion__PlayHead_8h.html</filename>
    <class kind="struct">tracktion::graph::SplitTimelineRange</class>
    <class kind="class">tracktion::graph::PlayHead</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PlayHeadPositionNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__PlayHeadPositionNode_8h.html</filename>
    <class kind="class">tracktion::engine::PlayHeadPositionNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PlayHeadState.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__PlayHeadState_8h.html</filename>
    <class kind="class">tracktion::graph::PlayHeadState</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Plugin.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/</path>
    <filename>tracktion__Plugin_8h.html</filename>
    <class kind="struct">tracktion::engine::PluginCreationInfo</class>
    <class kind="struct">tracktion::engine::PluginInitialisationInfo</class>
    <class kind="struct">tracktion::engine::PluginRenderContext</class>
    <class kind="class">tracktion::engine::Plugin</class>
    <class kind="struct">tracktion::engine::Plugin::Wire</class>
    <class kind="struct">tracktion::engine::Plugin::EditorComponent</class>
    <class kind="struct">tracktion::engine::Plugin::WindowState</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PluginAudioNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__PluginAudioNode_8h.html</filename>
    <includes id="tracktion__AudioNode_8h" name="tracktion_AudioNode.h" local="yes" imported="no">tracktion_AudioNode.h</includes>
    <class kind="class">tracktion::engine::PluginAudioNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PluginComponent.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__PluginComponent_8h.html</filename>
    <class kind="struct">tracktion::engine::PluginComponent</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PluginList.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/</path>
    <filename>tracktion__PluginList_8h.html</filename>
    <class kind="class">tracktion::engine::PluginList</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PluginManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/</path>
    <filename>tracktion__PluginManager_8h.html</filename>
    <class kind="class">tracktion::engine::PluginManager</class>
    <class kind="struct">tracktion::engine::PluginManager::BuiltInType</class>
    <class kind="struct">tracktion::engine::PluginManager::BuiltInTypeBase</class>
    <class kind="class">tracktion::engine::PluginCache</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PluginNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__PluginNode_8h.html</filename>
    <class kind="class">tracktion::engine::PluginNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PluginScanHelpers.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/</path>
    <filename>tracktion__PluginScanHelpers_8h.html</filename>
    <class kind="struct">tracktion::engine::PluginScanHelpers</class>
    <class kind="struct">tracktion::engine::PluginScanHelpers::PluginScanMasterProcess</class>
    <class kind="struct">tracktion::engine::PluginScanHelpers::PluginScanChildProcess</class>
    <class kind="struct">tracktion::engine::PluginScanHelpers::CustomScanner</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_PluginWindowState.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/</path>
    <filename>tracktion__PluginWindowState_8h.html</filename>
    <class kind="struct">tracktion::engine::PluginWindowState</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Project.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/project/</path>
    <filename>tracktion__Project_8h.html</filename>
    <class kind="class">tracktion::engine::Project</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ProjectItem.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/project/</path>
    <filename>tracktion__ProjectItem_8h.html</filename>
    <class kind="class">tracktion::engine::ProjectItem</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ProjectItemID.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/project/</path>
    <filename>tracktion__ProjectItemID_8h.html</filename>
    <class kind="class">tracktion::engine::ProjectItemID</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::ProjectItemID &gt;</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>juce</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ProjectManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/project/</path>
    <filename>tracktion__ProjectManager_8h.html</filename>
    <class kind="class">tracktion::engine::ProjectManager</class>
    <class kind="struct">tracktion::engine::ProjectManager::TempProject</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ProjectSearchIndex.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/project/</path>
    <filename>tracktion__ProjectSearchIndex_8h.html</filename>
    <class kind="class">tracktion::engine::ProjectSearchIndex</class>
    <class kind="class">tracktion::engine::SearchOperation</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>SearchOperation *</type>
      <name>createSearchForKeywords</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a3cda81c803722385e76aa065bfe880ff</anchor>
      <arglist>(const juce::String &amp;keywords)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_PropertyStorage.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__PropertyStorage_8h.html</filename>
    <class kind="class">tracktion::engine::PropertyStorage</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_QuantisationType.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__QuantisationType_8h.html</filename>
    <class kind="class">tracktion::engine::QuantisationType</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RackInstance.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__RackInstance_8h.html</filename>
    <class kind="class">tracktion::engine::RackInstance</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RackInstanceNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__RackInstanceNode_8h.html</filename>
    <class kind="class">tracktion::engine::RackInstanceNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RackNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__RackNode_8h.html</filename>
    <class kind="struct">tracktion::engine::InputProvider</class>
    <class kind="class">tracktion::engine::RackNodePlayer</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>tracktion::engine::RackNodeBuilder</namespace>
    <member kind="function">
      <type>std::unique_ptr&lt; tracktion::graph::Node &gt;</type>
      <name>createRackNode</name>
      <anchorfile>namespacetracktion_1_1engine_1_1RackNodeBuilder.html</anchorfile>
      <anchor>a04a7a746c4e0509e07c8a5f17420a113</anchor>
      <arglist>(tracktion::engine::RackType &amp;, double sampleRate, int blockSize, std::unique_ptr&lt; tracktion::graph::Node &gt;, ProcessState &amp;, bool isRendering)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_RackReturnNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__RackReturnNode_8h.html</filename>
    <class kind="class">tracktion::engine::RackReturnNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RackType.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__RackType_8h.html</filename>
    <class kind="struct">tracktion::engine::RackConnection</class>
    <class kind="class">tracktion::engine::RackType</class>
    <class kind="struct">tracktion::engine::RackType::WindowState</class>
    <class kind="class">tracktion::engine::RackTypeList</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RandomModifier.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/modifiers/</path>
    <filename>tracktion__RandomModifier_8h.html</filename>
    <class kind="class">tracktion::engine::RandomModifier</class>
    <class kind="struct">tracktion::engine::RandomModifier::Assignment</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ReadAheadTimeStretcher.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/timestretch/</path>
    <filename>tracktion__ReadAheadTimeStretcher_8h.html</filename>
    <class kind="class">engine::ReadAheadTimeStretcher</class>
    <namespace>engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RealTimeSpinLock.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__RealTimeSpinLock_8h.html</filename>
    <class kind="class">tracktion::graph::RealTimeSpinLock</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RecordingThumbnailManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__RecordingThumbnailManager_8h.html</filename>
    <class kind="class">tracktion::engine::RecordingThumbnailManager</class>
    <class kind="struct">tracktion::engine::RecordingThumbnailManager::Thumbnail</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ReferencedMaterialList.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/export/</path>
    <filename>tracktion__ReferencedMaterialList_8h.html</filename>
    <class kind="class">tracktion::engine::ReferencedMaterialList</class>
    <class kind="struct">tracktion::engine::ReferencedMaterialList::IntervalList</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RemoteSLCompact.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/types/</path>
    <filename>tracktion__RemoteSLCompact_8h.html</filename>
    <class kind="class">tracktion::engine::RemoteSLCompact</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Renderer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/export/</path>
    <filename>tracktion__Renderer_8h.html</filename>
    <class kind="class">engine::Renderer</class>
    <class kind="struct">engine::Renderer::Parameters</class>
    <class kind="class">engine::Renderer::RenderTask</class>
    <class kind="struct">engine::Renderer::Statistics</class>
    <class kind="struct">engine::Renderer::RenderResult</class>
    <class kind="struct">engine::Renderer::ScopedClipSlotDisabler</class>
    <class kind="class">engine::EditRenderer</class>
    <class kind="class">engine::EditRenderer::Handle</class>
    <namespace>graph</namespace>
    <namespace>engine</namespace>
    <namespace>engine::render_utils</namespace>
    <member kind="function">
      <type>juce::StringPairArray</type>
      <name>createAcidInfo</name>
      <anchorfile>namespaceengine.html</anchorfile>
      <anchor>ae6a89212d22c82b573d1471b23478e35</anchor>
      <arglist>(Edit &amp;, TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Renderer::RenderTask &gt;</type>
      <name>createRenderTask</name>
      <anchorfile>namespaceengine_1_1render__utils.html</anchorfile>
      <anchor>a44a3897f11c7a44c5d95f26b30856aac</anchor>
      <arglist>(Renderer::Parameters, juce::String desc, std::atomic&lt; float &gt; *progressToUpdate, juce::AudioFormatWriter::ThreadedWriter::IncomingDataReceiver *thumbnail)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_RenderManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/export/</path>
    <filename>tracktion__RenderManager_8h.html</filename>
    <class kind="class">tracktion::engine::RenderManager</class>
    <class kind="class">tracktion::engine::RenderManager::Job</class>
    <class kind="struct">tracktion::engine::RenderManager::Job::Listener</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_RenderOptions.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/export/</path>
    <filename>tracktion__RenderOptions_8h.html</filename>
    <class kind="class">tracktion::engine::RenderOptions</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::RenderOptions::RenderType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::RenderOptions::TargetFileFormat &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::RenderOptions::AddRenderOptions &gt;</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>juce</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Reverb.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__Reverb_8h.html</filename>
    <class kind="class">tracktion::engine::ReverbPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ReverseRenderJob.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__ReverseRenderJob_8h.html</filename>
    <class kind="class">tracktion::engine::ReverseRenderJob</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ReWirePlugin.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__ReWirePlugin_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>tracktion_RexFileFormat.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/formats/</path>
    <filename>tracktion__RexFileFormat_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>tracktion_RoundTripLatency.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/testing/</path>
    <filename>tracktion__RoundTripLatency_8h.html</filename>
    <namespace>engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_SafeScopedListener.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__SafeScopedListener_8h.html</filename>
    <class kind="class">tracktion::engine::SafeScopedListener</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="variable">
      <type>concept</type>
      <name>WeakReferenceable</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>abf177de2e03ea68a9c3c4da1dffd47da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_SamplerPlugin.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__SamplerPlugin_8h.html</filename>
    <class kind="class">tracktion::engine::SamplerPlugin</class>
    <class kind="struct">tracktion::engine::SamplerPlugin::SamplerSound</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Scene.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__Scene_8h.html</filename>
    <class kind="class">tracktion::engine::Scene</class>
    <class kind="class">tracktion::engine::SceneWatcher</class>
    <class kind="struct">tracktion::engine::SceneWatcher::Listener</class>
    <class kind="class">tracktion::engine::SceneList</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ScopedListener.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__ScopedListener_8h.html</filename>
    <class kind="class">tracktion::engine::ScopedListener</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ScopedSteadyLoad.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__ScopedSteadyLoad_8h.html</filename>
    <class kind="class">tracktion::engine::ScopedSteadyLoad</class>
    <class kind="struct">tracktion::engine::ScopedSteadyLoad::Context</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Selectable.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/selection/</path>
    <filename>tracktion__Selectable_8h.html</filename>
    <class kind="class">tracktion::engine::SelectableListener</class>
    <class kind="class">tracktion::engine::Selectable</class>
    <class kind="class">tracktion::engine::Selectable::Listener</class>
    <class kind="struct">tracktion::engine::SelectableList</class>
    <class kind="class">tracktion::engine::SafeSelectable</class>
    <class kind="class">tracktion::engine::LambdaSelectableListener</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>SafeSelectable&lt; SelectableType &gt;</type>
      <name>makeSafeRef</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9a916ab6aa43f5cd75071dc3910e537e</anchor>
      <arglist>(SelectableType &amp;selectable)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>makeSafeVector</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ad816a0b77df0e6473b704191ada77091</anchor>
      <arglist>(const Iterable &amp;selectables) -&gt; std::vector&lt; SafeSelectable&lt; typename std::remove_reference&lt; decltype(*selectables[0])&gt;::type &gt;&gt;</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_SelectableClass.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/selection/</path>
    <filename>tracktion__SelectableClass_8h.html</filename>
    <class kind="class">tracktion::engine::SelectableClass</class>
    <class kind="struct">tracktion::engine::SelectableClass::AddClipboardEntryParams</class>
    <class kind="struct">tracktion::engine::SelectableClass::DeleteSelectedParams</class>
    <class kind="struct">tracktion::engine::SelectableClass::SelectOtherObjectsParams</class>
    <class kind="struct">tracktion::engine::SelectableClass::ClassInstanceBase</class>
    <class kind="struct">tracktion::engine::SelectableClass::ClassInstance</class>
    <class kind="class">tracktion::engine::SelectableClassWithVolume</class>
    <class kind="class">tracktion::engine::SelectableClassWithPan</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DECLARE_SELECTABLE_OBJECT_AND_CLASS</name>
      <anchorfile>tracktion__SelectableClass_8h.html</anchorfile>
      <anchor>ab91a75f89b1cb9bb34425ceb6b9a0293</anchor>
      <arglist>(ObjectType, ClassType)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DECLARE_SELECTABLE_CLASS</name>
      <anchorfile>tracktion__SelectableClass_8h.html</anchorfile>
      <anchor>a2044e326173ac3f9eb26e625a7b612a6</anchor>
      <arglist>(ObjectType)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_SelectedMidiEvents.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/midi/</path>
    <filename>tracktion__SelectedMidiEvents_8h.html</filename>
    <class kind="class">tracktion::engine::SelectedMidiEvents</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_SelectionManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/selection/</path>
    <filename>tracktion__SelectionManager_8h.html</filename>
    <class kind="class">tracktion::engine::SelectionManager</class>
    <class kind="struct">tracktion::engine::SelectionManager::ChangedSelectionDetector</class>
    <class kind="struct">tracktion::engine::SelectionManager::ScopedSelectionState</class>
    <class kind="struct">tracktion::engine::SelectionManager::Iterator</class>
    <class kind="struct">tracktion::engine::SelectionManager::ComponentWithSelectionManager</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Semaphore.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__Semaphore_8h.html</filename>
    <class kind="class">tracktion::graph::Semaphore</class>
    <class kind="class">tracktion::graph::LightweightSemaphore</class>
    <namespace>moodycamel</namespace>
    <namespace>moodycamel::details</namespace>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_SettingID.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__SettingID_8h.html</filename>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="enumeration">
      <type></type>
      <name>SettingID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aef0092bdbd8a28c3968f7f81912f815e</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eafedb2d84cafe20862cb4399751a8a7e3">invalid</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaf4a6dd1d859d0c75be53bdd8e10903e6">addAntiDenormalNoise</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eabae1d66bf6e7bd077603dd923ab3ef3c">audio_device_setup</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea36ff6680f35223d9a37377f7e849d82c">audiosettings</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eab570b65e1f142172d29d10553384b1ba">autoFreeze</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaabdbefcb7beb917dea85d1ce8acedb14">autoTempoMatch</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea49d0b9d90b866b75dd141d2c139eeb82">autoTempoDetect</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea415ada9d2d71ce32a632151ae7131d33">automapVst</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eae0caca9a9974a0eb4e76cc511f42293f">automapNative</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea8abed3d089b4528c2023ebd418b934ba">automapGuids1</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eada19f4cd43cb28828063fcb18bee2a69">automapGuids2</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea146bdabbf35fb3c93ba9780757a03ef3">cacheSizeSamples</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaa8360068305889e0630dbea1c25fd008">compCrossfadeMs</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea64c13455dd1fe041ad15987c09caaaf9">countInMode</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaf9ceba609737c6c58f0ee7c4179db4a1">clickTrackMidiNoteBig</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eae126f9e6072e4c7b39fc46ac354a3922">clickTrackMidiNoteLittle</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eae4cb99e059e6526c7dd0bc4647ca6cdc">clickTrackSampleSmall</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea07fd0fba07d9b1098131ba5689befcd0">clickTrackSampleBig</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea33317b96a63f7c2c075553f62c40c988">crossfadeBlock</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ead9747e2da342bdb995f6389533ad1a3d">cpu</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea5b28355506754f09c1aefddd2b83ed0b">customMidiControllers</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea732b8be068c98a77b3b321705c16c9c4">deadMansPedal</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaa62e6a9b96a5a46ca1e8df8bdf61f22a">defaultMidiOutDevice</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea015769f76c6033c69d783a89b0afedf3">defaultWaveOutDevice</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eafea66fb91cbf2d78d2bace53a399d84f">defaultMidiInDevice</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea8873e2c579f6e0cdad6bf53c14440209">defaultWaveInDevice</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaab5dbffa8d328b4ee3c038b03db636a9">externControlIn</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea15b23b93b04ee1f66a8e853395711d8b">externControlOut</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ead3b6c594a822b4858b52daef222f5921">externControlNum</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eadb759e79468893b2baaf9556d47bf22d">externControlMain</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea31b14445c2b17c9d967b7319d731a1a8">externControlShowSelection</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea1918ff077a302b29d9bac97cc5eb70cc">externControlSelectionColour</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaf37db2cd80d1ec81f8201a888987e99e">externControlEnable</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea386ac11ab2989a84b771e586cb83ef80">externOscInputPort</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea8b69d1116ebfb1e0a04d282b51214bc8">externOscOutputPort</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea6c0181cbf07dc90e143aa5dabbee22d8">externOscOutputAddr</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea3a2da2036002bcc377f599727cf771d5">filterControlMappingPresets</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea93f5564cc510d197a37af4fae5acd88c">filterGui</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea133823cfadbff75b8d9d7b3c4f4fdaf4">fitClipsToRegion</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea6a7d0e75a9396fcc5c73218ffd2f1e6a">findExamples</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaea96cab3cbe5d21dbdc9f8834885a71e">freezePoint</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea1ef2784670057be89a5320f13bfcbca4">hasEnabledMidiDefaultDevs</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea13cdced4c5e7c68ee57a6667491a2fa4">glideLength</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eacb2c1d30fff1f26672afd4f682e279fe">grooveTemplates</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ead4be0f64bf0d12c19719d73ee2e7dd2a">knownPluginList</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea8f618cf8b9d6f75493e756fe3e742d40">knownPluginList64</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea0852db5a857dd043f95d3af0bb73fac9">lameEncoder</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eae35835e50542993db63c630df92d181f">lastClickTrackLevel</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea69eb61fb57e7ffd44f2b08134080f334">lastEditRender</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eadf6f056bd22d8a4e86d91b964bcb7163">lowLatencyBuffer</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea08742b9203bf4d5ffb9c20ee2111866f">MCUoneTouchRecord</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea7829fddc435afb7d958bdde7713394b1">maxLatency</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea3f76e19b8be570ab42fa74157fd3c8af">midiin</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea2e68786ada734ce9728d1738fb0b21d4">midiout</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eae492cd4c2633cc4beba787942b8d55c1">midiEditorOctaves</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaa77620469659abf39ab038d1a96cfd20">midiProgramManager</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea5cbf4c22d5264f26fe59bc8c4962f8b3">newMarker</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea5c055d665fa2b6d747d438549bb2b336">numThreadsForPluginScanning</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaab3be0baacb19d5b398e3ad4e760e2d5">projectList</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea35a2864c314e4367eb1684bfe126a967">projects</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea1c2daf6d2feb296a59ff633379d58480">recentProjects</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaff8ed4f53819dcf20438b964fec10fa2">renameClipRenamesSource</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea2cdbd15b771628de0256bab7909a8046">renameMode</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea4f0f5be4892f3fd7fe272df168c73857">renderRecentFilesList</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea35bb7b2bdacc8c03899179261a1ce7cf">resetCursorOnPlay</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea6118d3bbbb834510d5533f4d2b721cf0">retrospectiveRecord</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea51c42b14b1831fc29eec3a15c27b5f41">reWireEnabled</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea0cc34e5dab44f5677beb8606ddbd364e">safeRecord</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea4575629cfb51fb2d9487ee2d907ee1b8">sendControllerOffMessages</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eab2743c7f7477f7d812ecf5ad60fddd2b">simplifyAfterRecording</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eab25669aa29c4de54cf3e79e75630600e">snapCursor</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea7065a657acc31d03990ae857307cb984">tempDirectory</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaf20e670bd4b44c06095587c42c059a57">trackExpansionMode</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea117764216c0ac64c6b8db535df3eac30">use64Bit</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaa5d51cbdfb33b9d96114dd79348a8a0e">xFade</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea87154d5531917a96b35bae4993259a37">xtCount</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea49b2d1e2befcd40dfea67e1daf091dc4">xtIndices</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eadc17b81e0fcc4244d653e30e5552af7f">virtualmididevices</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea30c1138f8420913e5253a0fd215212f4">virtualmidiin</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eafe6b599e61fd47db5ec49770211a8873">midiScanIntervalSeconds</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eae09c5665396629f42adc7c8fd637137b">useSeparateProcessForScanning</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea060c0316a269e325c58b3984fec89e7a">useRealtime</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eac733e4221d487351d76843e7d172fa06">wavein</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea33871eeb66dd165b9d0482fb8585ab32">waveout</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eae044eeed17ec4bc3c3258fe518fa6460">windowsDoubleClick</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea0a161e311b986d94825458f8e192e54b">renderFormat</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eabfe9884d29a1bc6c20535b21feb81fcc">trackRenderSampRate</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea1b874b9100170a2bfc595c462997355e">trackRenderBits</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea32dc181ee9a3989f69390fd115610849">bypassFilters</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eab3d70f37909a1657efd2efeae8f95d86">markedRegion</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea82f6a120d0d01ec5ba611f8a4493d581">editClipRenderSampRate</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea67d48752bee2d7b159258294f638226f">editClipRenderBits</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea102baf00f489b06c966ec93503af4bdc">editClipRenderDither</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea2501b72cee1761c35c2e8b90d2741be3">editClipRealtime</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eac064c494b752ea8be2d4289a9c9c2fdf">editClipRenderStereo</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea71ca533d7470e635df1021f64cd6bf26">editClipRenderNormalise</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea2e6f92476054e669cc36cb60887a82ab">editClipRenderRMS</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaa9d038283f7b683fc08b5bd90c9d58c9">editClipRenderRMSLevelDb</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaff89a6921c18e2d9a340be45b0c8c7e2">editClipRenderPeakLevelDb</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea13e9ee05f30bd1994fa972300ba96f5a">editClipPassThroughFilters</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaf2632d3ae14c6bc38a44a524a1c3bfde">exportFormat</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eafba022231b903d6edb8fe1ee5b50c442">renderOnlySelectedClips</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea6355d6a086c29f993cf48fccab4b09bd">renderOnlyMarked</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea3e63b09d6c9384cf6189ae1cde6288cf">renderNormalise</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea08e87b5239d6cf0be149b139f3cb1836">renderRMS</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea5a4a44cc3a53ec31714031bf8801dc45">renderRMSLevelDb</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea49439ce96bbe5130e3c5573993eb2a3f">renderPeakLevelDb</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ead8de6460b5cb7402a2feef9655663462">renderTrimSilence</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eabd3bdf946b94629a735ee2e5cd30e44e">renderSampRate</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eadc32e81c91da85b1a1e87f4206aa8993">renderStereo</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea5d87425648c90ff47bb1d8b70a4c82be">renderBits</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea6a2c3de0c23697686dbcbd562dccc46e">renderDither</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ead66636b253cb346dbb6240e30def3618">quality</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaebf43e996821d24d05eda0d2450c1b0c">addId3Info</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea37e2a166d3ab28426a1d1a481d356d33">realtime</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea01372905495e6c5db01a5baa92da0d98">passThroughFilters</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea3de70b17fc38e2631a7c5ce85f1c4ed8">externControlShowClipSlotSelection</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eae9f0ae9d4723099d46d0fcdba664fd62">addAcidMetadata</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_SharedLevelMeasuringNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__SharedLevelMeasuringNode_8h.html</filename>
    <class kind="class">tracktion::engine::SharedLevelMeasuringNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_SharedTimer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__SharedTimer_8h.html</filename>
    <class kind="struct">tracktion::engine::HertzTag</class>
    <class kind="class">tracktion::engine::SharedTimer</class>
    <class kind="struct">tracktion::engine::SharedTimer::Listener</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="variable">
      <type>constexpr HertzTag</type>
      <name>HertzTag_t</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a96a975d8e8f2a0ca68dbad80e28c153e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_SimpleNodePlayer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/players/</path>
    <filename>tracktion__SimpleNodePlayer_8h.html</filename>
    <class kind="class">tracktion::graph::SimpleNodePlayer</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_SlotControlNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__SlotControlNode_8h.html</filename>
    <class kind="class">tracktion::engine::SlotControlNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_SmartThumbnail.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/audio_files/</path>
    <filename>tracktion__SmartThumbnail_8h.html</filename>
    <class kind="class">tracktion::engine::SmartThumbnail</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_SourceFileReference.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__SourceFileReference_8h.html</filename>
    <class kind="class">tracktion::engine::SourceFileReference</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_SpeedRampAudioNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__SpeedRampAudioNode_8h.html</filename>
    <class kind="class">tracktion::engine::SubSampleWaveAudioNode</class>
    <class kind="class">tracktion::engine::SpeedRampAudioNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_SpeedRampWaveNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__SpeedRampWaveNode_8h.html</filename>
    <class kind="struct">tracktion::engine::SpeedFadeDescription</class>
    <class kind="class">tracktion::engine::SpeedRampWaveNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Spline.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__Spline_8h.html</filename>
    <class kind="struct">tracktion::engine::Spline</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_StepClip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__StepClip_8h.html</filename>
    <class kind="class">tracktion::engine::StepClip</class>
    <class kind="struct">tracktion::engine::StepClip::Channel</class>
    <class kind="struct">tracktion::engine::StepClip::Pattern</class>
    <class kind="struct">tracktion::engine::StepClip::Pattern::CachedPattern</class>
    <class kind="struct">tracktion::engine::StepClip::PatternInstance</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_StepModifier.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/automation/modifiers/</path>
    <filename>tracktion__StepModifier_8h.html</filename>
    <class kind="class">tracktion::engine::StepModifier</class>
    <class kind="struct">tracktion::engine::StepModifier::Assignment</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_SummingNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/nodes/</path>
    <filename>tracktion__SummingNode_8h.html</filename>
    <class kind="class">tracktion::graph::SummingNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TempoDetect.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/timestretch/</path>
    <filename>tracktion__TempoDetect_8h.html</filename>
    <class kind="class">tracktion::engine::TempoDetect</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TemporaryFileManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__TemporaryFileManager_8h.html</filename>
    <class kind="class">tracktion::engine::TemporaryFileManager</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TempoSequence.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__TempoSequence_8h.html</filename>
    <class kind="class">tracktion::engine::TempoSequence</class>
    <class kind="struct">tracktion::engine::EditTimecodeRemapperSnapshot</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>tempo::Sequence::Position</type>
      <name>createPosition</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a564f980e2aa5935966c9c451de04fe57</anchor>
      <arglist>(const TempoSequence &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_TempoSetting.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__TempoSetting_8h.html</filename>
    <class kind="class">tracktion::engine::TempoSetting</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TempoTrack.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__TempoTrack_8h.html</filename>
    <class kind="class">tracktion::engine::TempoTrack</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TestNodes.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__TestNodes_8h.html</filename>
    <class kind="class">tracktion::graph::MidiNode</class>
    <class kind="class">tracktion::graph::SinNode</class>
    <class kind="class">tracktion::graph::SilentNode</class>
    <class kind="class">tracktion::graph::BasicSummingNode</class>
    <class kind="class">tracktion::graph::FunctionNode</class>
    <class kind="class">tracktion::graph::GainNode</class>
    <class kind="class">tracktion::graph::SendNode</class>
    <class kind="class">tracktion::graph::ReturnNode</class>
    <class kind="class">tracktion::graph::ChannelRemappingNode</class>
    <class kind="class">tracktion::graph::SinkNode</class>
    <class kind="class">tracktion::graph::ForwardingNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_engine/utilities/tracktion_TestUtilities.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__engine_2utilities_2tracktion__TestUtilities_8h.html</filename>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_graph/tracktion_graph/tracktion_TestUtilities.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__graph_2tracktion__graph_2tracktion__TestUtilities_8h.html</filename>
    <includes id="tracktion__FloatAudioFileFormat_8h" name="tracktion_FloatAudioFileFormat.h" local="yes" imported="no">../../tracktion_engine/audio_files/formats/tracktion_FloatAudioFileFormat.h</includes>
    <class kind="struct">tracktion::graph::test_utilities::SineOscillator</class>
    <class kind="struct">tracktion::graph::test_utilities::TestSetup</class>
    <class kind="struct">tracktion::graph::test_utilities::TestContext</class>
    <class kind="struct">tracktion::graph::test_utilities::TestProcess</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
    <namespace>tracktion::graph::test_utilities</namespace>
    <member kind="function">
      <type>void</type>
      <name>writeToFile</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>a5d40f4397abaca6c0c186e0962bc960c</anchor>
      <arglist>(juce::File file, choc::buffer::ChannelArrayView&lt; float &gt; block, double sampleRate, int qualityOptionIndex)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; juce::TemporaryFile &gt;</type>
      <name>writeToTemporaryFile</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>aa33c2029ce8b5e1a6ccc174be8310aa5</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; block, double sampleRate, int qualityOptionIndex=0)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>abfd4e10a5038e7f09625e88384d7f97b</anchor>
      <arglist>(ThreadPoolStrategy type)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ThreadPoolStrategy &gt;</type>
      <name>getThreadPoolStrategies</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>a8a3d2b96f7ff9fe3afe44af69a01b704</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logGraph</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>a79c19dc6bb0e3e4eaae305450b41b87b</anchor>
      <arglist>(Node &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>createGraphDescription</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>ad087d37360b2bd70408bcf191fa37bab</anchor>
      <arglist>(Node &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; juce::TemporaryFile &gt;</type>
      <name>getSinFile</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>aff3e7fc61eb18acfe550afcf7e31fe3d</anchor>
      <arglist>(double sampleRate, double durationInSeconds, int numChannels=1, float frequency=220.0f, int qualityOptionIndex=-1)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; juce::TemporaryFile &gt;</type>
      <name>getSquareFile</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>a13bb65070355467aebecb665ea51a28b</anchor>
      <arglist>(double sampleRate, double durationInSeconds, int numChannels=1, float frequency=220.0f, int qualityOptionIndex=-1)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; juce::TemporaryFile &gt;</type>
      <name>getTimeEncodedFile</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>a42cdc3d75afd1583451e0f49626fa4c8</anchor>
      <arglist>(double sampleRate, TimeDuration duration, TimeDuration stepDuration, int numChannels=1, int qualityOptionIndex=-1)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; juce::TemporaryFile &gt;</type>
      <name>getTransientFile</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>a2868bf5289237c91c88844aa1f84dc30</anchor>
      <arglist>(double sampleRate, TimeDuration duration, TimePosition transientPos, float transientVal, int numChannels=1, int qualityOptionIndex=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>buffersAreEqual</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>acd5fa4003dbc2bd842bf311aceee0100</anchor>
      <arglist>(const juce::AudioBuffer&lt; float &gt; &amp;a, const juce::AudioBuffer&lt; float &gt; &amp;b, float absSampleTolerance=0.0f)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>buffersAreEqual</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>aae86a05d5249a8634ce4b26b5402596e</anchor>
      <arglist>(const choc::buffer::ChannelArrayView&lt; float &gt; &amp;a, const choc::buffer::ChannelArrayView&lt; float &gt; &amp;b, float absSampleTolerance=0.0f)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::pair&lt; choc::buffer::FrameCount, float &gt; &gt;</type>
      <name>findFirstNonZeroSample</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>afc31d033b00391d0566cb9fa5bf3f4e6</anchor>
      <arglist>(choc::buffer::MonoView&lt; float &gt; buffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_TextPlugin.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__TextPlugin_8h.html</filename>
    <class kind="class">tracktion::engine::TextPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_engine/utilities/tracktion_Threads.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__engine_2utilities_2tracktion__Threads_8h.html</filename>
    <class kind="struct">engine::ScopedThreadExitStatusEnabler</class>
    <namespace>engine</namespace>
    <member kind="function">
      <type>bool</type>
      <name>isCurrentThreadSupplyingExitStatus</name>
      <anchorfile>namespaceengine.html</anchorfile>
      <anchor>ac427378780eb22c695cb6ffc6c5af8cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>signalThreadShouldExit</name>
      <anchorfile>namespaceengine.html</anchorfile>
      <anchor>a792bf2375807d23ca1e6ce5f9516d0b6</anchor>
      <arglist>(std::thread::id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldCurrentThreadExit</name>
      <anchorfile>namespaceengine.html</anchorfile>
      <anchor>a3e0b9dd13c3ba3d7fe6c9905e9368e27</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_graph/utilities/tracktion_Threads.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/utilities/</path>
    <filename>tracktion__graph_2utilities_2tracktion__Threads_8h.html</filename>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
    <member kind="function">
      <type>bool</type>
      <name>setThreadPriority</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>af3c29a82f756ecd6d9d36c1f77e049f4</anchor>
      <arglist>(std::thread &amp;, int priority)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tryToUpgradeCurrentThreadToRealtime</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a6f8debef577496d588684166661b8ce0</anchor>
      <arglist>(const juce::Thread::RealtimeOptions &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_TimecodeDisplayFormat.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__TimecodeDisplayFormat_8h.html</filename>
    <class kind="struct">tracktion::engine::TimecodeSnapType</class>
    <class kind="class">tracktion::engine::TimecodeDuration</class>
    <class kind="struct">tracktion::engine::TimecodeDisplayFormat</class>
    <class kind="struct">tracktion::engine::TimecodeDisplayIterator</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::TimecodeDisplayFormat &gt;</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>juce</namespace>
    <member kind="enumeration">
      <type></type>
      <name>TimecodeType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a106acf13adac6f34b462a0c4de6e4fe3</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a106acf13adac6f34b462a0c4de6e4fe3a89e893579b272eb562aa17cb401ac7b7">millisecs</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a106acf13adac6f34b462a0c4de6e4fe3a77c84d786e6839a25295c0e73b3342c9">barsBeats</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a106acf13adac6f34b462a0c4de6e4fe3aa2dc2407a46ee1b7331225183f4b34c0">fps24</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a106acf13adac6f34b462a0c4de6e4fe3a745ffcdd19b34f7d8d4028a0380f7808">fps25</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a106acf13adac6f34b462a0c4de6e4fe3a51b0fa64094004b47e32034da78f7a75">fps30</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_TimedMutingAudioNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__TimedMutingAudioNode_8h.html</filename>
    <includes id="tracktion__AudioNode_8h" name="tracktion_AudioNode.h" local="yes" imported="no">tracktion_AudioNode.h</includes>
    <class kind="class">tracktion::engine::TimedMutingAudioNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TimedMutingNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__TimedMutingNode_8h.html</filename>
    <class kind="class">tracktion::engine::TimedMutingNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TimeSigSetting.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/edit/</path>
    <filename>tracktion__TimeSigSetting_8h.html</filename>
    <class kind="class">tracktion::engine::TimeSigSetting</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TimeStretch.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/timestretch/</path>
    <filename>tracktion__TimeStretch_8h.html</filename>
    <class kind="class">tracktion::engine::TimeStretcher</class>
    <class kind="struct">tracktion::engine::TimeStretcher::ElastiqueProOptions</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::TimeStretcher::Mode &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::TimeStretcher::ElastiqueProOptions &gt;</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>juce</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TimeStretchingWaveNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__TimeStretchingWaveNode_8h.html</filename>
    <class kind="class">tracktion::engine::TimeStretchingWaveNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_ToneGenerator.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/effects/</path>
    <filename>tracktion__ToneGenerator_8h.html</filename>
    <class kind="class">tracktion::engine::ToneGeneratorPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Track.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__Track_8h.html</filename>
    <class kind="class">tracktion::engine::Track</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TrackCompAudioNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__TrackCompAudioNode_8h.html</filename>
    <includes id="tracktion__TimedMutingAudioNode_8h" name="tracktion_TimedMutingAudioNode.h" local="yes" imported="no">tracktion_TimedMutingAudioNode.h</includes>
    <includes id="tracktion__FadeInOutAudioNode_8h" name="tracktion_FadeInOutAudioNode.h" local="yes" imported="no">tracktion_FadeInOutAudioNode.h</includes>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>AudioNode *</type>
      <name>createTrackCompAudioNode</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a7d04cde27fc699e121b5f504138e3745</anchor>
      <arglist>(AudioNode *input, const juce::Array&lt; legacy::EditTimeRange &gt; &amp;muteTimes, const juce::Array&lt; legacy::EditTimeRange &gt; &amp;nonMuteTimes, double crossfadeTime)</arglist>
    </member>
    <member kind="function">
      <type>AudioNode *</type>
      <name>createTrackCompAudioNode</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9b8e25a345220d85979a8bd0d82ec32b</anchor>
      <arglist>(AudioNode *input, const juce::Array&lt; TimeRange &gt; &amp;muteTimes, const juce::Array&lt; TimeRange &gt; &amp;nonMuteTimes, TimeDuration crossfadeTime)</arglist>
    </member>
    <member kind="function">
      <type>AudioNode *</type>
      <name>createAudioNode</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ad89810c74bb8915dd6515060cdf9b48b</anchor>
      <arglist>(TrackCompManager::TrackComp &amp;trackComp, Track &amp;t, AudioNode *input)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_TrackCompManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__TrackCompManager_8h.html</filename>
    <class kind="class">tracktion::engine::TrackCompManager</class>
    <class kind="struct">tracktion::engine::TrackCompManager::CompSection</class>
    <class kind="struct">tracktion::engine::TrackCompManager::TrackComp</class>
    <class kind="struct">tracktion::engine::TrackCompManager::TrackComp::Section</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::TrackCompManager::TrackComp::TimeFormat &gt;</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>juce</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TrackItem.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__TrackItem_8h.html</filename>
    <class kind="class">tracktion::engine::TrackItem</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TrackMidiInputDeviceNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__TrackMidiInputDeviceNode_8h.html</filename>
    <class kind="class">tracktion::engine::TrackMidiInputDeviceNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TrackMutingNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__TrackMutingNode_8h.html</filename>
    <class kind="class">tracktion::engine::TrackMuteState</class>
    <class kind="class">tracktion::engine::TrackMutingNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TrackOutput.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__TrackOutput_8h.html</filename>
    <class kind="class">tracktion::engine::TrackOutput</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TracktionEngineNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__TracktionEngineNode_8h.html</filename>
    <class kind="struct">tracktion::engine::ProcessState</class>
    <class kind="class">tracktion::engine::TracktionEngineNode</class>
    <class kind="class">tracktion::engine::DynamicallyOffsettableNodeBase</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TracktionNodePlayer.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__TracktionNodePlayer_8h.html</filename>
    <class kind="class">tracktion::engine::TracktionNodePlayer</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TrackUtils.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/tracks/</path>
    <filename>tracktion__TrackUtils_8h.html</filename>
    <class kind="struct">tracktion::engine::TrackInsertPoint</class>
    <class kind="struct">tracktion::engine::TrackList</class>
    <class kind="struct">tracktion::engine::TrackSection</class>
    <class kind="struct">tracktion::engine::TrackAutomationSection</class>
    <class kind="struct">tracktion::engine::TrackAutomationSection::ActiveParameters</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>int</type>
      <name>countNumTracks</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a2a50aef21e8360a45b96daa81e6b1b96</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveAutomation</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9524435c5c2eed1256ff4f22793a54aa</anchor>
      <arglist>(const juce::Array&lt; TrackAutomationSection &gt; &amp;, TimeDuration offset, bool copy)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findIndexOfNextItemAt</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a3d25fb562b57876499b384ac8189a42d</anchor>
      <arglist>(const ArrayType &amp;items, TimePosition time)</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>findUnionOfEditTimeRanges</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab45ad0d328dc7d71bc055f042604c528</anchor>
      <arglist>(const ArrayType &amp;items)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_TrackWaveInputDeviceNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__TrackWaveInputDeviceNode_8h.html</filename>
    <class kind="class">tracktion::engine::TrackWaveInputDeviceNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_TransportControl.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/</path>
    <filename>tracktion__TransportControl_8h.html</filename>
    <class kind="class">tracktion::engine::TransportControl</class>
    <class kind="struct">tracktion::engine::TransportControl::ReallocationInhibitor</class>
    <class kind="struct">tracktion::engine::TransportControl::ScopedPlaybackRestarter</class>
    <class kind="struct">tracktion::engine::TransportControl::ScopedContextAllocator</class>
    <class kind="struct">tracktion::engine::TransportControl::Listener</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>void</type>
      <name>toStart</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a88daee5561f65d71651ea3ed879d1835</anchor>
      <arglist>(TransportControl &amp;, const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toEnd</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a98b2f38d48ccc0a562f6e16ed1ffbe87</anchor>
      <arglist>(TransportControl &amp;, const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tabBack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae29ce2e0dedff20542eb9343c76a6f96</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tabForward</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae48bb055ba87d22654520a4fc6a1d00f</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markIn</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>adb01a768216c31447b18ab2e3ce2a11f</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markOut</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a7ff0c9d1cbc64b226f11351cf835d63a</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrub</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af99084ce0af88559fff4b7dfe80baf72</anchor>
      <arglist>(TransportControl &amp;, double unitsForwards)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freePlaybackContextIfNotRecording</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a932b2a0eb111cb020335f88ec52eac04</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_Tranzport.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/control_surfaces/types/</path>
    <filename>tracktion__Tranzport_8h.html</filename>
    <class kind="class">tracktion::engine::TranzportControlSurface</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Types.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__Types_8h.html</filename>
    <class kind="struct">tracktion::engine::MonotonicBeat</class>
    <class kind="struct">tracktion::engine::MonotonicBeatRange</class>
    <class kind="struct">tracktion::engine::SyncPoint</class>
    <class kind="struct">tracktion::engine::SyncRange</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>MonotonicBeatRange</type>
      <name>getMonotonicBeatRange</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af597851a9154530afddc3ddbd28cfb96</anchor>
      <arglist>(const SyncRange &amp;)</arglist>
    </member>
    <member kind="function">
      <type>BeatRange</type>
      <name>getBeatRange</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab4f7df059bcfb9e4e9e7870c6d65e534</anchor>
      <arglist>(const SyncRange &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getNumSamples</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae85f2d84aff184bf9c6d40e3bd3bcdb7</anchor>
      <arglist>(const SyncRange &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_UIBehaviour.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__UIBehaviour_8h.html</filename>
    <class kind="class">tracktion::engine::UIBehaviour</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_Utility.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_graph/tracktion_graph/</path>
    <filename>tracktion__Utility_8h.html</filename>
    <namespace>tracktion</namespace>
    <namespace>tracktion::graph</namespace>
    <member kind="function">
      <type>constexpr double</type>
      <name>sampleToTime</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>aead11ad22d40aec3b67e52cca4dad2e2</anchor>
      <arglist>(IntType samplePosition, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>constexpr int64_t</type>
      <name>timeToSample</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>adb6b4da97d8e333b68b622ef5a030645</anchor>
      <arglist>(std::floating_point auto timeInSeconds, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>constexpr juce::Range&lt; double &gt;</type>
      <name>sampleToTime</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a7145ceca4209ca70966ae5ae76a13556</anchor>
      <arglist>(juce::Range&lt; IntType &gt; sampleRange, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>constexpr juce::Range&lt; int64_t &gt;</type>
      <name>timeToSample</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>abc6e1c1e50e586f192a49e411a366361</anchor>
      <arglist>(juce::Range&lt; double &gt; timeInSeconds, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>constexpr juce::Range&lt; int64_t &gt;</type>
      <name>timeToSample</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a3bc6b60f6939dc57a9cc932a222749cb</anchor>
      <arglist>(RangeType timeInSeconds, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>NodeType *</type>
      <name>findNode</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a2e7781d94eceb21ebd4a60276cfc9ba3</anchor>
      <arglist>(NodeGraph &amp;nodeGraph, Predicate pred)</arglist>
    </member>
    <member kind="function">
      <type>NodeType *</type>
      <name>findNodeWithID</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a4b113f1d6413b4d9d2297ce1c4582cce</anchor>
      <arglist>(NodeGraph &amp;nodeGraph, size_t nodeIDToLookFor)</arglist>
    </member>
    <member kind="function">
      <type>NodeType *</type>
      <name>findNodeWithIDIfNonZero</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a71cc05a34576c2310a79ebe2e66c1bd2</anchor>
      <arglist>(NodeGraph *nodeGraph, size_t nodeIDToLookFor)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_ValueTreeUtilities.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/utilities/</path>
    <filename>tracktion__ValueTreeUtilities_8h.html</filename>
    <class kind="struct">juce::VariantConverter&lt; Colour &gt;</class>
    <class kind="class">tracktion::engine::ValueTreeObjectList</class>
    <class kind="struct">tracktion::engine::SortedValueTreeObjectList</class>
    <class kind="struct">tracktion::engine::ValueTreeAllEventListener</class>
    <class kind="struct">tracktion::engine::ValueTreeComparator</class>
    <class kind="class">tracktion::engine::ReferenceCountedValueTree</class>
    <namespace>juce</namespace>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>void</type>
      <name>convertPropertyToType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a47184c19d1ade74fc5e926a1d147ffe5</anchor>
      <arglist>(juce::ValueTree &amp;v, const juce::Identifier &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matchesAnyOf</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aee0a9ef3d9926b450bc94d6f5d0f84b7</anchor>
      <arglist>(const Type &amp;needle, const std::initializer_list&lt; Type &gt; &amp;haystack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forEachItem</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a3d9878b62133b71510093f2f3eae0c7a</anchor>
      <arglist>(const juce::Array&lt; Type * &gt; &amp;items, const UnaryFunction &amp;fn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addValueTreeProperties</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a86ff4c6886cc9a39cc77c7f74bc9757c</anchor>
      <arglist>(juce::ValueTree &amp;v, const juce::Identifier &amp;name, const juce::var &amp;value, Others &amp;&amp;... others)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>createValueTree</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a3145152f582f07457d66eae07ce03858</anchor>
      <arglist>(const juce::Identifier &amp;name, Properties &amp;&amp;... properties)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; juce::ValueTree &gt; &amp;</type>
      <name>removeInvalidValueTrees</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a866cd9a4c66405e8026491910731bdbc</anchor>
      <arglist>(juce::Array&lt; juce::ValueTree &gt; &amp;trees)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; juce::ValueTree &gt;</type>
      <name>getTreesOfType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a511e77d2cba152cb03dd2f822d459ec0</anchor>
      <arglist>(const juce::Array&lt; juce::ValueTree &gt; &amp;trees, const juce::Identifier &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getChildTreesRecursive</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a2f69093e597e76c0308dadb3180e24ed</anchor>
      <arglist>(juce::Array&lt; juce::ValueTree &gt; &amp;result, const juce::ValueTree &amp;tree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renamePropertyRecursive</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0ae869b93cf61cf1b6ba878969835267</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;oldName, const juce::Identifier &amp;newName, juce::UndoManager *um)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_VCA.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__VCA_8h.html</filename>
    <class kind="class">tracktion::engine::VCAPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_VirtualMidiInputDevice.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/devices/</path>
    <filename>tracktion__VirtualMidiInputDevice_8h.html</filename>
    <class kind="class">tracktion::engine::VirtualMidiInputDevice</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_VolumeAndPan.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/internal/</path>
    <filename>tracktion__VolumeAndPan_8h.html</filename>
    <class kind="class">tracktion::engine::VolumeAndPanPlugin</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_VSTXML.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/plugins/external/</path>
    <filename>tracktion__VSTXML_8h.html</filename>
    <class kind="class">tracktion::engine::VSTXML</class>
    <class kind="struct">tracktion::engine::VSTXML::Base</class>
    <class kind="struct">tracktion::engine::VSTXML::Param</class>
    <class kind="struct">tracktion::engine::VSTXML::Group</class>
    <class kind="struct">tracktion::engine::VSTXML::Range</class>
    <class kind="struct">tracktion::engine::VSTXML::Entry</class>
    <class kind="struct">tracktion::engine::VSTXML::ValueType</class>
    <class kind="struct">tracktion::engine::VSTXML::Template</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_WarpTimeManager.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__WarpTimeManager_8h.html</filename>
    <class kind="struct">tracktion::engine::WarpMarker</class>
    <class kind="class">tracktion::engine::WarpTimeManager</class>
    <class kind="class">tracktion::engine::WarpTimeFactory</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_WarpTimeRenderJob.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__WarpTimeRenderJob_8h.html</filename>
    <class kind="class">tracktion::engine::WarpTimeRenderJob</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_WaveAudioClip.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/model/clips/</path>
    <filename>tracktion__WaveAudioClip_8h.html</filename>
    <class kind="class">tracktion::engine::WaveAudioClip</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_WaveAudioNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/audionodes/</path>
    <filename>tracktion__WaveAudioNode_8h.html</filename>
    <includes id="tracktion__AudioNode_8h" name="tracktion_AudioNode.h" local="yes" imported="no">tracktion_AudioNode.h</includes>
    <class kind="class">tracktion::engine::WaveAudioNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_WaveDeviceDescription.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/devices/</path>
    <filename>tracktion__WaveDeviceDescription_8h.html</filename>
    <class kind="struct">tracktion::engine::ChannelIndex</class>
    <class kind="struct">tracktion::engine::WaveDeviceDescription</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="function">
      <type>juce::String</type>
      <name>createDescriptionOfChannels</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a65a4a5fe4542e142e5d26cb4f222ce7f</anchor>
      <arglist>(const std::vector&lt; ChannelIndex &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioChannelSet</type>
      <name>createChannelSet</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a3c8112780d46e17c9850daf533cebc42</anchor>
      <arglist>(const std::vector&lt; ChannelIndex &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioChannelSet::ChannelType</type>
      <name>channelTypeFromAbbreviatedName</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a440427617e36d5762e2430245429a2b6</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioChannelSet</type>
      <name>channelSetFromSpeakerArrangmentString</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a8210dd18b3030c9c7c629b60322467c7</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_WaveInputDevice.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/devices/</path>
    <filename>tracktion__WaveInputDevice_8h.html</filename>
    <class kind="class">tracktion::engine::WaveInputDevice</class>
    <class kind="class">tracktion::engine::WaveInputRecordingThread</class>
    <class kind="struct">tracktion::engine::WaveInputRecordingThread::ScopedInitialiser</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_WaveInputDeviceNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__WaveInputDeviceNode_8h.html</filename>
    <class kind="class">tracktion::engine::WaveInputDeviceNode</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="file">
    <name>tracktion_WaveNode.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/graph/</path>
    <filename>tracktion__WaveNode_8h.html</filename>
    <includes id="tracktion__SpeedRampWaveNode_8h" name="tracktion_SpeedRampWaveNode.h" local="yes" imported="no">tracktion_SpeedRampWaveNode.h</includes>
    <class kind="struct">tracktion::engine::WarpPoint</class>
    <class kind="class">tracktion::engine::WaveNode</class>
    <class kind="class">tracktion::engine::WaveNodeRealTime</class>
    <class kind="struct">tracktion::engine::WaveNodeRealTime::BeatConfig</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
    <member kind="typedef">
      <type>std::vector&lt; WarpPoint &gt;</type>
      <name>WarpMap</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>adeeadbd2dea66b29cc5bb3586b64326a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tracktion_WaveOutputDevice.h</name>
    <path>/home/runner/work/tracktion_engine/tracktion_engine/doxygen/build/tracktion_engine/playback/devices/</path>
    <filename>tracktion__WaveOutputDevice_8h.html</filename>
    <class kind="class">tracktion::engine::WaveOutputDevice</class>
    <class kind="class">tracktion::engine::WaveOutputDeviceInstance</class>
    <namespace>tracktion</namespace>
    <namespace>tracktion::engine</namespace>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AbletonLink</name>
    <filename>classtracktion_1_1engine_1_1AbletonLink.html</filename>
    <class kind="struct">tracktion::engine::AbletonLink::Listener</class>
    <member kind="function">
      <type></type>
      <name>AbletonLink</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>a9413ca25fd8f073a81609ed1bea98c8e</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AbletonLink</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>a429a71b8a5be3d77d106c11b8a472748</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>aa9710300ffb478e2247d47c63e21814f</anchor>
      <arglist>(bool isEnabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>a7bc89c4c3393d9c0cc8e5add08e19045</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>a7709efe16e1d7cc08307edb7e119b480</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumPeers</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>a5f9a34ab8a049554ad97e303543e9b07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlaying</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>a6e04411636cda6eff1a52a213cd81bc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableStartStopSync</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>acb020ee07606dc1ee64ee57c417fa88b</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStartStopSyncEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>ae8223d07dcf19464fb3c2b310c82643c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; double &gt;</type>
      <name>getSessionTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>ae8f17ec26b8cae4cc87852bba76b6688</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBeatsUntilNextCycle</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>a15e6ce88013d2e6f56a1b227e3cbfa8d</anchor>
      <arglist>(double quantum) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCustomOffset</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>a08947d70746364ecacab6e2cecd4546e</anchor>
      <arglist>(int offsetMs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTempoConstraint</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>ae8d4e8161dad5d58b2e85ae6654fc6c9</anchor>
      <arglist>(juce::Range&lt; double &gt; minMaxTempo)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBarPhase</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>a57d15a31501bdcd5bf95170ac6a4e25b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getChaseProportion</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>a143c85754dd7a8b1f63012a7dd1b728b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>requestStartStopChange</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>ac941e518afb27408a5c71d989313e1cd</anchor>
      <arglist>(bool isPlaying)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>requestTempoChange</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>a39ed6733473bac42ef7b30222ae028bd</anchor>
      <arglist>(double newBpm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>a7e017fe6b25b42f86e7acf81eb0343f9</anchor>
      <arglist>(Listener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>aaff17df2b29407926f4d5422708d3b75</anchor>
      <arglist>(Listener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>syncronise</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>a49fad21b9ed69ce05b045323e4e4f5a2</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend struct</type>
      <name>LinkImpl</name>
      <anchorfile>classtracktion_1_1engine_1_1AbletonLink.html</anchorfile>
      <anchor>a0559ddaa2788a44d53cbe5385afd4504</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>engine::FollowActions::Action</name>
    <filename>structengine_1_1FollowActions_1_1Action.html</filename>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structengine_1_1FollowActions_1_1Action.html</anchorfile>
      <anchor>a6626f974422906ba9f02ef873b0ebb45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; FollowAction &gt;</type>
      <name>action</name>
      <anchorfile>structengine_1_1FollowActions_1_1Action.html</anchorfile>
      <anchor>a37a08796405fd1619939fcf3f3ec92c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>weight</name>
      <anchorfile>structengine_1_1FollowActions_1_1Action.html</anchorfile>
      <anchor>a5f0cd7e7fe67120e7eaeb4d433c6e5ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ActiveEdits</name>
    <filename>structtracktion_1_1engine_1_1ActiveEdits.html</filename>
    <member kind="function">
      <type>juce::Array&lt; Edit * &gt;</type>
      <name>getEdits</name>
      <anchorfile>structtracktion_1_1engine_1_1ActiveEdits.html</anchorfile>
      <anchor>a18d5202a4a7419d9c3081c4cfcdbd295</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Engine</name>
      <anchorfile>structtracktion_1_1engine_1_1ActiveEdits.html</anchorfile>
      <anchor>a3e1914489e4bed4f9f23cdeab34a43dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Edit</name>
      <anchorfile>structtracktion_1_1engine_1_1ActiveEdits.html</anchorfile>
      <anchor>a29ce00a70feb24568c516f4510436aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>TransportControl</name>
      <anchorfile>structtracktion_1_1engine_1_1ActiveEdits.html</anchorfile>
      <anchor>a81763d016a7d679f30b5245d9036d631</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ActiveNoteList</name>
    <filename>structtracktion_1_1engine_1_1ActiveNoteList.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structtracktion_1_1engine_1_1ActiveNoteList.html</anchorfile>
      <anchor>a73f9423e49714fe3138bd4f9fc0491dd</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNoteActive</name>
      <anchorfile>structtracktion_1_1engine_1_1ActiveNoteList.html</anchorfile>
      <anchor>ac25e2e37e44b8cc241288c2fa39b7edb</anchor>
      <arglist>(int channel, int note) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startNote</name>
      <anchorfile>structtracktion_1_1engine_1_1ActiveNoteList.html</anchorfile>
      <anchor>a863b72f9fd6fae06f0ee565baa6a9738</anchor>
      <arglist>(int channel, int note) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearNote</name>
      <anchorfile>structtracktion_1_1engine_1_1ActiveNoteList.html</anchorfile>
      <anchor>a03d6d68e11b96df80fb03217d222ee6f</anchor>
      <arglist>(int channel, int note) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areAnyNotesActive</name>
      <anchorfile>structtracktion_1_1engine_1_1ActiveNoteList.html</anchorfile>
      <anchor>ac4d514ba72bbc4a8c5308a0b8bf6d5e7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>iterate</name>
      <anchorfile>structtracktion_1_1engine_1_1ActiveNoteList.html</anchorfile>
      <anchor>ab9158fc2b8a4f1e8d23de9214292680c</anchor>
      <arglist>(Visitor &amp;&amp;v) const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isValidIndex</name>
      <anchorfile>structtracktion_1_1engine_1_1ActiveNoteList.html</anchorfile>
      <anchor>a84f7d7d5496aaed7235fea3911f9aee8</anchor>
      <arglist>(int channel, int note) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>juce::uint16</type>
      <name>activeChannels</name>
      <anchorfile>structtracktion_1_1engine_1_1ActiveNoteList.html</anchorfile>
      <anchor>aeba8c2f635506fd9f9643c052c938989</anchor>
      <arglist>[128]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::TrackAutomationSection::ActiveParameters</name>
    <filename>structtracktion_1_1engine_1_1TrackAutomationSection_1_1ActiveParameters.html</filename>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>param</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackAutomationSection_1_1ActiveParameters.html</anchorfile>
      <anchor>a6cc5954079b44f91934ca89b0819a04e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomationCurve</type>
      <name>curve</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackAutomationSection_1_1ActiveParameters.html</anchorfile>
      <anchor>a3901bb8453a15ec7634598e83ea0853f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::SelectableClass::AddClipboardEntryParams</name>
    <filename>structtracktion_1_1engine_1_1SelectableClass_1_1AddClipboardEntryParams.html</filename>
    <member kind="function">
      <type></type>
      <name>AddClipboardEntryParams</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableClass_1_1AddClipboardEntryParams.html</anchorfile>
      <anchor>a72a1784e2d763a276ec88376c32312a6</anchor>
      <arglist>(Clipboard &amp;c)</arglist>
    </member>
    <member kind="variable">
      <type>SelectableList</type>
      <name>items</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableClass_1_1AddClipboardEntryParams.html</anchorfile>
      <anchor>abe48ff87e99942c541a312c70746fc91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit *</type>
      <name>edit</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableClass_1_1AddClipboardEntryParams.html</anchorfile>
      <anchor>a6d4d971cc0e200df514000daf6efb766</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>editViewID</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableClass_1_1AddClipboardEntryParams.html</anchorfile>
      <anchor>a938233e9d3983fbc8bf7ef009034a154</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Clipboard &amp;</type>
      <name>clipboard</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableClass_1_1AddClipboardEntryParams.html</anchorfile>
      <anchor>ac997a6181a76f8ceb9ba51fb7b2c78f7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AirWindowsAutomatableParameter</name>
    <filename>classtracktion_1_1engine_1_1AirWindowsAutomatableParameter.html</filename>
    <base>tracktion::engine::AutomatableParameter</base>
    <member kind="function">
      <type></type>
      <name>AirWindowsAutomatableParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsAutomatableParameter.html</anchorfile>
      <anchor>ae1a5b5fa127a6e7ea4643eece025401b</anchor>
      <arglist>(AirWindowsPlugin &amp;p, int idx)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AirWindowsAutomatableParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsAutomatableParameter.html</anchorfile>
      <anchor>a672e45790d58ef535f665282ca249430</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsAutomatableParameter.html</anchorfile>
      <anchor>af78476a8ffb0f6b9670252503c6d3319</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>autodetectRange</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsAutomatableParameter.html</anchorfile>
      <anchor>a6b057402e9df86ca51f94705d0fb0cf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refresh</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsAutomatableParameter.html</anchorfile>
      <anchor>a9d461d8f56404e9368c8fb8522eb4c4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConversionRange</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsAutomatableParameter.html</anchorfile>
      <anchor>abfee0e75786ea8926f5a249d6561c16b</anchor>
      <arglist>(juce::NormalisableRange&lt; float &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameterChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsAutomatableParameter.html</anchorfile>
      <anchor>ac17c341b6f894e3ae5dbb2f079baa157</anchor>
      <arglist>(float newValue, bool byAutomation) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getCurrentValueAsString</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsAutomatableParameter.html</anchorfile>
      <anchor>a062a1deb130642c7e05466de262cb87e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markAsChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsAutomatableParameter.html</anchorfile>
      <anchor>a3e16b6ac6eea794f0791d326fb5e0e47</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getParamId</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsAutomatableParameter.html</anchorfile>
      <anchor>a2c04eb9159338017c2cb892f736e3d4d</anchor>
      <arglist>(AirWindowsPlugin &amp;p, int idx)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getParamName</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsAutomatableParameter.html</anchorfile>
      <anchor>a633042793f8a19fdee2c7a5f5245708b</anchor>
      <arglist>(AirWindowsPlugin &amp;p, int idx)</arglist>
    </member>
    <member kind="variable">
      <type>AirWindowsPlugin &amp;</type>
      <name>awPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsAutomatableParameter.html</anchorfile>
      <anchor>a9176cdfabf3e700117faad4ced643943</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsAutomatableParameter.html</anchorfile>
      <anchor>ac296376b05f70eeafb129e605ba086fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>defaultValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsAutomatableParameter.html</anchorfile>
      <anchor>a0d8a9403ba1a1311cc4c7eb876a9a66d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::NormalisableRange&lt; float &gt;</type>
      <name>conversionRange</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsAutomatableParameter.html</anchorfile>
      <anchor>afcf302f2f00f5e04ffe001f98ae708c1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AirWindowsBase</name>
    <filename>classtracktion_1_1engine_1_1AirWindowsBase.html</filename>
    <member kind="function">
      <type></type>
      <name>AirWindowsBase</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a172552da8fcbfdeaad5116f4d66077df</anchor>
      <arglist>(AirWindowsCallback *c, int prog, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AirWindowsBase</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>af633d1415c5bb0a7bc3c9fa3017acc02</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a1bf5e7c09c00d0dd449223eb73b82b8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputs</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a8a66d44a927e1326dc18eeea2ddedf76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumParameters</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a0545548b344dd82b019dcd0034476489</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getEffectName</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>aa4bbb0479c0fd11a6268c3397518c81b</anchor>
      <arglist>(char *name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VstPlugCategory</type>
      <name>getPlugCategory</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a8d9c74a94c83dde47232eb9f95417d83</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getProductString</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>af270571c626c7b55951a1b6c42948c76</anchor>
      <arglist>(char *text)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getVendorString</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a83cca6e6d7f1d846a577a3b41de15ec3</anchor>
      <arglist>(char *text)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VstInt32</type>
      <name>getVendorVersion</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a2ea40a972c411ceab6310dd74676d3b9</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>processReplacing</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>ac46c449e6c8f37b8b3095a827901f2a7</anchor>
      <arglist>(float **inputs, float **outputs, VstInt32 sampleFrames)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>processDoubleReplacing</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a8a867956c4a9aad3b85225cd8763022c</anchor>
      <arglist>(double **inputs, double **outputs, VstInt32 sampleFrames)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getProgramName</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>af58915571b2905e91596a47836f1b8b5</anchor>
      <arglist>(char *name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setProgramName</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a80b38ca81c63a5fff572c27405a57ce6</anchor>
      <arglist>(char *name)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VstInt32</type>
      <name>getChunk</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a63cedffced0808512d27e9c3774bf703</anchor>
      <arglist>(void **data, bool isPreset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VstInt32</type>
      <name>setChunk</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>ad365b8d0886ab474236857f2ad043834</anchor>
      <arglist>(void *data, VstInt32 byteSize, bool isPreset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a41647e85f654d50c6e6b867c2b33fc0d</anchor>
      <arglist>(VstInt32 index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a03e627d18e3fcd8173bcd099d641d289</anchor>
      <arglist>(VstInt32 index, float value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getParameterLabel</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a018784ae648fdfb5d246571f9079f27e</anchor>
      <arglist>(VstInt32 index, char *text)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getParameterName</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>ac1233793a186653f356acc66945fddef</anchor>
      <arglist>(VstInt32 index, char *text)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getParameterDisplay</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a3d2a5d4623c5f7f09e194eb9395c8983</anchor>
      <arglist>(VstInt32 index, char *text)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual VstInt32</type>
      <name>canDo</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a3184f93451b0f2a0519884140dc85898</anchor>
      <arglist>(char *text)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setNumInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a6f743e047c6aa98ea2f7e85bdc0c5683</anchor>
      <arglist>(int numIn)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setNumOutputs</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>ace8c19315ccc089a8da384680ef9e729</anchor>
      <arglist>(int numOut)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setUniqueID</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a7310ea159a1b8ca547a6730e7c806c86</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>canProcessReplacing</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>aef21c2c7a3cde1f5d98df7cda88cec23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>canDoubleReplacing</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a3e3fdd446233c786725ed50fd9dc152e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>programsAreChunks</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a6dedf0077c9ad771512e4fe2e63568e5</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a2686466893a8be8db12a6a2e9b1e8598</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a4bda9add56e1c482debed0fb012884e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numOutputs</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a7ee62c4686c0b7ac8e302bb448824b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numPrograms</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>ad2bd90787b3a8dd80f690f7e2cee1b08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numParams</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a6847cf76c5fdf3dca3fef9ba807f2b25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AirWindowsCallback *</type>
      <name>callback</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsBase.html</anchorfile>
      <anchor>a1355efb433b5ffb660283d8afff5f463</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AirWindowsCallback</name>
    <filename>classtracktion_1_1engine_1_1AirWindowsCallback.html</filename>
    <member kind="function">
      <type></type>
      <name>AirWindowsCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsCallback.html</anchorfile>
      <anchor>add2c975f606b7c78e372225d867a4ca5</anchor>
      <arglist>(AirWindowsPlugin &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AirWindowsCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsCallback.html</anchorfile>
      <anchor>a51d54d2a7217d3171fbffc18d7de953b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsCallback.html</anchorfile>
      <anchor>afae6c2a0d54f6926dfb45e765b92b0b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AirWindowsPlugin &amp;</type>
      <name>owner</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsCallback.html</anchorfile>
      <anchor>aad33386e3f2ff916a054e1c16a951c95</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AirWindowsPlugin</name>
    <filename>classtracktion_1_1engine_1_1AirWindowsPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>delay</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253ac9119a35f96ae880212bff0a1813b1c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dither</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253a1b03ef101993269e97075d9bf548d2b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>distortion</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253aa71b3e4edb0f3e0ac714f3b00c2aa868</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dynamics</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253a154c736d146751005d77aebc4452e5ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>emulation</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253ab51bde6f7cd2ca5d2ebbae86a9289920</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eq</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253a3835f78590ddd3c2a681f95c5a1e3c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>filter</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253a3b4a27a0cc27f4b4808703df01f1050d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>imaging</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253a40632f3a9ff4c159eae63740d019bf25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>modulation</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253a2ce4302ba297cc984e32967a51230d8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>reverb</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253ac7c210c3884cb2eac2df90113c9d8bfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>utility</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253ab98dbec9231f0798714ca31f387b066e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>delay</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253ac9119a35f96ae880212bff0a1813b1c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dither</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253a1b03ef101993269e97075d9bf548d2b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>distortion</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253aa71b3e4edb0f3e0ac714f3b00c2aa868</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dynamics</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253a154c736d146751005d77aebc4452e5ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>emulation</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253ab51bde6f7cd2ca5d2ebbae86a9289920</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eq</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253a3835f78590ddd3c2a681f95c5a1e3c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>filter</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253a3b4a27a0cc27f4b4808703df01f1050d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>imaging</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253a40632f3a9ff4c159eae63740d019bf25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>modulation</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253a2ce4302ba297cc984e32967a51230d8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>reverb</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253ac7c210c3884cb2eac2df90113c9d8bfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>utility</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a018c2cfe196308b4575b753fe7ec1253ab98dbec9231f0798714ca31f387b066e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AirWindowsPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a58442bc1742d6bed0af83ea62f1b6fa4</anchor>
      <arglist>(PluginCreationInfo, std::unique_ptr&lt; AirWindowsBase &gt;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AirWindowsPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>ab141ce9938536517ceb04d41ea2f6668</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Type</type>
      <name>getPluginCategory</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>acfe2ffdc626c466e14871ff4c9a61f2c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a173a618d8d56d365253fc2109350d411</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a44d6050f4f32c40d56351299ba545c6a</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a540eeb27999e4f28e88efb9cb8b7d46c</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a35fe83f0e01b1073b1ffb73bc7751e09</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a48387187bffb4e3dbd9aa87c3585c309</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a63a2dfe91f1750a972634faf74ae3ec9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a0ed2180ff94f6d4dcb580aa1de2c1724</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesMidiInput</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a1564b5a51042ce5ec6a6b38c965648c0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a95e0f58b82cc25ece3ec0bd1a1dda20c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>ab1458a3d88e378315ce148b525b29e39</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a7b9687e565dc09c5173816fc1062ecfb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>aacb3fc64d32975c9ad6dcfb5cb1c4ee1</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPluginStateToValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>aedd5739b7d1b23f40caa80ae4dcc122c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::ReferenceCountedArray&lt; AutomatableParameter &gt;</type>
      <name>parameters</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>aaecc2c725c56531722584be3b3470e51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>dryValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a61a14f1ef271f78080aec0daf8ddd462</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>wetValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a6a50ca0aa0f7fbd1f8da8ad91535f2f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>dryGain</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a6bf65d8f16bccd89e52e14beec0bbb07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>wetGain</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a8e9cdaa4e9574f777c0afff353022ad2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setConversionRange</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a77541a3c4bbb5880f42dfb000e15fb7a</anchor>
      <arglist>(int param, juce::NormalisableRange&lt; float &gt; range)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>processBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a0bafd69432a4976fa59427cada16ab9c</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;buffer)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>friend</type>
      <name>AirWindowsAutomatableParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>acea9e3012407b737af502aaf372d6bf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>friend</type>
      <name>AirWindowsCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>ab591cc35154e52c8f8d77c81d5939c58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CriticalSection</type>
      <name>lock</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a809a72b3f633c8e791b2af9501d00de2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AirWindowsCallback</type>
      <name>callback</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a48f1be3b355c873965488602c7c1f33d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; AirWindowsBase &gt;</type>
      <name>impl</name>
      <anchorfile>classtracktion_1_1engine_1_1AirWindowsPlugin.html</anchorfile>
      <anchor>a1400d7e93df29f424d24f68a3b42bf19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AlphaTrackControlSurface</name>
    <filename>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</filename>
    <base>tracktion::engine::ControlSurface</base>
    <member kind="enumvalue">
      <name>alphaTrackF1</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aedac366d5920010df325cc23e6a589d0a3e520b70ac77a7d24cbc4f043b7a11af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF2</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aedac366d5920010df325cc23e6a589d0a5fbf57c3a93715c3ae0d3921305b187f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF3</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aedac366d5920010df325cc23e6a589d0adab86c856c4556c8e53e10ae909ef2c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF4</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aedac366d5920010df325cc23e6a589d0a846019626d8236495ebbbbd48ccd7e9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF5</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aedac366d5920010df325cc23e6a589d0a4639bf7fb5063103eaed183f67529771</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF6</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aedac366d5920010df325cc23e6a589d0a1a8ae24a90c7a3a45c0332b204c7f162</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF7</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aedac366d5920010df325cc23e6a589d0a33b72cd73184677d88508ddeb4ce2619</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF8</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aedac366d5920010df325cc23e6a589d0a3f20a6e70ef6b4aa30e1481fdd294da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackFoot</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aedac366d5920010df325cc23e6a589d0a4fc7db554b831e5fbe2b335d9bc8c1f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF1</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aedac366d5920010df325cc23e6a589d0a3e520b70ac77a7d24cbc4f043b7a11af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF2</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aedac366d5920010df325cc23e6a589d0a5fbf57c3a93715c3ae0d3921305b187f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF3</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aedac366d5920010df325cc23e6a589d0adab86c856c4556c8e53e10ae909ef2c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF4</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aedac366d5920010df325cc23e6a589d0a846019626d8236495ebbbbd48ccd7e9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF5</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aedac366d5920010df325cc23e6a589d0a4639bf7fb5063103eaed183f67529771</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF6</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aedac366d5920010df325cc23e6a589d0a1a8ae24a90c7a3a45c0332b204c7f162</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF7</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aedac366d5920010df325cc23e6a589d0a33b72cd73184677d88508ddeb4ce2619</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackF8</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aedac366d5920010df325cc23e6a589d0a3f20a6e70ef6b4aa30e1481fdd294da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>alphaTrackFoot</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>aedac366d5920010df325cc23e6a589d0a4fc7db554b831e5fbe2b335d9bc8c1f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AlphaTrackControlSurface</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a4baf3d58cca2a3b0dc154677b3b6b8b4</anchor>
      <arglist>(ExternalControllerManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AlphaTrackControlSurface</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a150de9c87eb0d24fb56c720b87a868f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a87444c705b30927176f61bcfaee8b6e7</anchor>
      <arglist>(bool connect) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutDownDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a2ec46c5263572b6f4ad83f19e0a52770</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMiscFeatures</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>ac90a04aa8c70065080d7095a276d2f37</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>ae52921997002cec18e3ef7890b1d072e</anchor>
      <arglist>(int, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveFader</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a5165d0bae8a8e12624bf4eb474d68fda</anchor>
      <arglist>(int channelNum, float newSliderPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePanPot</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>ad3c2478d5ea5fd062a6a816d948dae3a</anchor>
      <arglist>(int channelNum, float newPan) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloCountChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a4b08fb26c518e97886c126fd3946ee9b</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSoloAndMute</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>ab5b79b015df38d49f78a6b6765fbd65f</anchor>
      <arglist>(int channelNum, Track::MuteAndSoloLightState, bool isBright) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>ae489f12de0be1c79aeba5c929b337153</anchor>
      <arglist>(bool isRecording) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationReadModeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a062fdae4104e03e6a7537112431521c0</anchor>
      <arglist>(bool isReading) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationWriteModeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a36c9ebe3946d36620d7c76105dbdb66b</anchor>
      <arglist>(bool isWriting) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>ab4654da274c26dd04d5acb6341afa97b</anchor>
      <arglist>(int newStartChannelNumber, const juce::StringArray &amp;trackNames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackRecordEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a7bcf928b92c6f3e9fd31faa9725b37ab</anchor>
      <arglist>(int channel, bool isEnabled) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a1fdf1516ac9483d0bdd3e07dc0c11698</anchor>
      <arglist>(bool isLoopOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>punchOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a2394a72ffcbbf14fd4ac53ea1d240f55</anchor>
      <arglist>(bool isPunching) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pluginBypass</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a63e0adf20e32feb2c9afb02060c19599</anchor>
      <arglist>(bool b) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPluginSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1AlphaTrackControlSurface.html</anchorfile>
      <anchor>a4e429e823b929eba2b9b4c003507898c</anchor>
      <arglist>(Plugin *) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ARADocument</name>
    <filename>classARADocument.html</filename>
    <member kind="function">
      <type></type>
      <name>ARADocument</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a76ae9f7b9f061aa0272bb9dd0f8a03e9</anchor>
      <arglist>(Edit &amp;sourceEdit, MelodyneInstance *validPluginWrapper, const ARAPlugInExtensionInstance &amp;, const ARADocumentControllerInstance &amp;dc, ARADocumentControllerHostInstance *dchi)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ARADocument</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a27a3393488d556e3b580ed495ad89a63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canEdit</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>aec391580c9bf5675fd88538b698b895c</anchor>
      <arglist>(bool dontCheckMusicalContext) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginEditing</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a588bdbfe82f2c60c51bec181c63fc4db</anchor>
      <arglist>(bool dontCheckMusicalContext)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endEditing</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>aebca067b4d36ae34e1e464baf693599e</anchor>
      <arglist>(bool dontCheckMusicalContext)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a2ce6147bfbfa445cef44c9e340e990de</anchor>
      <arglist>(juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginRestoringState</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a8335741ce06f35a63db6180ff888b877</anchor>
      <arglist>(const juce::ValueTree &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endRestoringState</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a71649f72ecfbd09f1062001c1007a922</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>willCreatePlaybackRegionOnTrack</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a3e5d2363ef4524e00265ec3c41fd9ef2</anchor>
      <arglist>(Track *track)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>willDestroyPlaybackRegionOnTrack</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a8cd9393a9d15f940d6b090e719eed48c</anchor>
      <arglist>(Track *track)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>accc6da280cdc6f60ac861200553c35f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ARADocumentControllerInterface *</type>
      <name>dci</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>adc8483434966159b9e5554855f9cd701</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ARADocumentControllerRef</type>
      <name>dcRef</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>ac4ecbd3d352c0ec71c4402d9091f3981</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; MusicalContextWrapper &gt;</type>
      <name>musicalContext</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a2ba4adbaf907fbf3865baba1e03105b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; Track *, std::unique_ptr&lt; RegionSequenceWrapper &gt; &gt;</type>
      <name>regionSequences</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>aa880cbc473f88dd4640a7d31a6d9a366</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; Track *, int &gt;</type>
      <name>regionSequencePlaybackRegionCount</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a9018a63f8df80e957a6a0709c9e3dd5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; juce::MemoryBlock &gt;</type>
      <name>lastArchiveState</name>
      <anchorfile>classARADocument.html</anchorfile>
      <anchor>a737e49adc3f68f12f06b75d918b7d7b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ARADocumentCreatorCallback</name>
    <filename>structARADocumentCreatorCallback.html</filename>
    <member kind="function">
      <type></type>
      <name>ARADocumentCreatorCallback</name>
      <anchorfile>structARADocumentCreatorCallback.html</anchorfile>
      <anchor>ab2509e16a996a22f9858af996bcf685a</anchor>
      <arglist>(Edit &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>performAction</name>
      <anchorfile>structARADocumentCreatorCallback.html</anchorfile>
      <anchor>a1ab0823a26a44a5aa4ddcd821a60f250</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ARADocumentCreatorCallback</name>
      <anchorfile>structARADocumentCreatorCallback.html</anchorfile>
      <anchor>a308e6b78c0dea86b9228f80a9b015edc</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARADocument *</type>
      <name>perform</name>
      <anchorfile>structARADocumentCreatorCallback.html</anchorfile>
      <anchor>abff52e223c0cb8a9623387b7b4e84d12</anchor>
      <arglist>(Edit &amp;edit)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structARADocumentCreatorCallback.html</anchorfile>
      <anchor>ad5674141610c60f997a423851a478294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; ARADocument &gt;</type>
      <name>result</name>
      <anchorfile>structARADocumentCreatorCallback.html</anchorfile>
      <anchor>a9dfcd13a927dc092b1d0b12c2954c720</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ARADocumentHolder</name>
    <filename>structtracktion_1_1engine_1_1ARADocumentHolder.html</filename>
    <member kind="function">
      <type></type>
      <name>ARADocumentHolder</name>
      <anchorfile>structtracktion_1_1engine_1_1ARADocumentHolder.html</anchorfile>
      <anchor>ad9767782e16199c0635e483db16503c2</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ARADocumentHolder</name>
      <anchorfile>structtracktion_1_1engine_1_1ARADocumentHolder.html</anchorfile>
      <anchor>a908f09481650c63602a5a149cf712abb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>structtracktion_1_1engine_1_1ARADocumentHolder.html</anchorfile>
      <anchor>a76c802f6b6fd9d3e28004e52ce390c90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Pimpl *</type>
      <name>getPimpl</name>
      <anchorfile>structtracktion_1_1engine_1_1ARADocumentHolder.html</anchorfile>
      <anchor>a6110a353f0025e957f1d707d2742a2da</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ArchivingFunctions</name>
    <filename>structArchivingFunctions.html</filename>
    <member kind="function" static="yes">
      <type>static ARASize ARA_CALL</type>
      <name>getArchiveSize</name>
      <anchorfile>structArchivingFunctions.html</anchorfile>
      <anchor>a2d023f993ec5668f3feed951b266151a</anchor>
      <arglist>(ARAArchivingControllerHostRef, ARAArchiveReaderHostRef ref)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARABool ARA_CALL</type>
      <name>readBytesFromArchive</name>
      <anchorfile>structArchivingFunctions.html</anchorfile>
      <anchor>af37fdab382c7099f33f18a9461f07333</anchor>
      <arglist>(ARAArchivingControllerHostRef, ARAArchiveReaderHostRef ref, ARASize pos, ARASize length, ARAByte buffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARABool ARA_CALL</type>
      <name>writeBytesToArchive</name>
      <anchorfile>structArchivingFunctions.html</anchorfile>
      <anchor>a3925dba173b6ad45770a1da2fd138c0e</anchor>
      <arglist>(ARAArchivingControllerHostRef, ARAArchiveWriterHostRef ref, ARASize position, ARASize length, const ARAByte buffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>notifyDocumentArchivingProgress</name>
      <anchorfile>structArchivingFunctions.html</anchorfile>
      <anchor>a8515cc9a2fac40552094743c3f6f2680</anchor>
      <arglist>(ARAArchivingControllerHostRef, float p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>notifyDocumentUnarchivingProgress</name>
      <anchorfile>structArchivingFunctions.html</anchorfile>
      <anchor>a841d1b11b0e15bda5bfaa9cf1b365067</anchor>
      <arglist>(ARAArchivingControllerHostRef, float p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARAPersistentID ARA_CALL</type>
      <name>getDocumentArchiveID</name>
      <anchorfile>structArchivingFunctions.html</anchorfile>
      <anchor>af5cd02d1e082e95806c58c544ac8b65e</anchor>
      <arglist>(ARAArchivingControllerHostRef, ARAArchiveReaderHostRef)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ArrangerClip</name>
    <filename>classtracktion_1_1engine_1_1ArrangerClip.html</filename>
    <base>tracktion::engine::Clip</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; ArrangerClip &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerClip.html</anchorfile>
      <anchor>af820bfab4ee9fb0843eb861fa1baf5fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrangerClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerClip.html</anchorfile>
      <anchor>a5988b25768300ed4412a2c7cdb70c80c</anchor>
      <arglist>(const juce::ValueTree &amp;, EditItemID, ClipOwner &amp;targetParent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrangerClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerClip.html</anchorfile>
      <anchor>ad2d2869866f55a8a8f3f8fb98ce0f195</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerClip.html</anchorfile>
      <anchor>aa3e2b95ab42c09114a589c0c9a3972cc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedTo</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerClip.html</anchorfile>
      <anchor>a04f86a3d3990826c20deff0ec248b4b9</anchor>
      <arglist>(ClipOwner &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getDefaultColour</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerClip.html</anchorfile>
      <anchor>a6c9256ca26f3082fb84f311fe68ca60f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerClip.html</anchorfile>
      <anchor>a03b300b0d4cfda42dd6229f44bae8a4e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerClip.html</anchorfile>
      <anchor>a703162bd8a98c1f26d79f45df1e06cdd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerClip.html</anchorfile>
      <anchor>aef5298c27a3862b9573582721a5d8abe</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerClip.html</anchorfile>
      <anchor>a59efa4646f27339e51e6b9be289f63db</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ArrangerLauncherSwitchingNode</name>
    <filename>classtracktion_1_1engine_1_1ArrangerLauncherSwitchingNode.html</filename>
    <base>tracktion::graph::Node</base>
    <base>tracktion::engine::TracktionEngineNode</base>
    <base>tracktion::engine::SharedTimer::Listener</base>
    <member kind="function">
      <type></type>
      <name>ArrangerLauncherSwitchingNode</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerLauncherSwitchingNode.html</anchorfile>
      <anchor>a42aa367c14759e81f42d85a92795aca3</anchor>
      <arglist>(ProcessState &amp;, AudioTrack &amp;, std::unique_ptr&lt; Node &gt; arrangerNode, std::vector&lt; std::unique_ptr&lt; SlotControlNode &gt;&gt; launcherNodes)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerLauncherSwitchingNode.html</anchorfile>
      <anchor>a5a2eabb8953d14abf1f4eda47e8d7cc0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getInternalNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerLauncherSwitchingNode.html</anchorfile>
      <anchor>a586e7e4739d4df27062519561ef65748</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerLauncherSwitchingNode.html</anchorfile>
      <anchor>a945c499406176abd09f69739ea2e299a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerLauncherSwitchingNode.html</anchorfile>
      <anchor>a8b7d993a19ca370c97080984a2a1ac42</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerLauncherSwitchingNode.html</anchorfile>
      <anchor>aa49c4505b5bb3472081a8e39561efb53</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prefetchBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerLauncherSwitchingNode.html</anchorfile>
      <anchor>a9c69b3097bd59be0d33129da877407f8</anchor>
      <arglist>(juce::Range&lt; int64_t &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerLauncherSwitchingNode.html</anchorfile>
      <anchor>a22154b903b5dd48002e33f7efa8ed34e</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ArrangerTrack</name>
    <filename>classtracktion_1_1engine_1_1ArrangerTrack.html</filename>
    <base>tracktion::engine::ClipTrack</base>
    <member kind="function">
      <type></type>
      <name>ArrangerTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerTrack.html</anchorfile>
      <anchor>a8afe4cf2efe98b3bc1d8426d1b70c08f</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrangerTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerTrack.html</anchorfile>
      <anchor>a8b36eecd78ccbf1dfe9c0094bff17c2e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isArrangerTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerTrack.html</anchorfile>
      <anchor>a26f03f04fcc5792aa64d5593f260b351</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerTrack.html</anchorfile>
      <anchor>a27e8e98b9d307f6634f4f0ba4ea02b65</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerTrack.html</anchorfile>
      <anchor>a708330dadb91a1ccb8c0f12791462f42</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ArrangerTrack.html</anchorfile>
      <anchor>a8c2dda002224ae3d7b9a36d356731679</anchor>
      <arglist>(Plugin *) const override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::BreakpointOscillatorModifier::Assignment</name>
    <filename>structtracktion_1_1engine_1_1BreakpointOscillatorModifier_1_1Assignment.html</filename>
    <base>tracktion::engine::AutomatableParameter::ModifierAssignment</base>
    <member kind="function">
      <type></type>
      <name>Assignment</name>
      <anchorfile>structtracktion_1_1engine_1_1BreakpointOscillatorModifier_1_1Assignment.html</anchorfile>
      <anchor>a9f9ff2b09fbb87f7d60d0693d39d7c85</anchor>
      <arglist>(const juce::ValueTree &amp;, const BreakpointOscillatorModifier &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForModifierSource</name>
      <anchorfile>structtracktion_1_1engine_1_1BreakpointOscillatorModifier_1_1Assignment.html</anchorfile>
      <anchor>a5ffe4c2a827df5762b10c0802720f410</anchor>
      <arglist>(const ModifierSource &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; BreakpointOscillatorModifier &gt;</type>
      <name>getModifier</name>
      <anchorfile>structtracktion_1_1engine_1_1BreakpointOscillatorModifier_1_1Assignment.html</anchorfile>
      <anchor>a291b6f698ae172a01a386ee745cb3cf6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>breakpointOscillatorModifierID</name>
      <anchorfile>structtracktion_1_1engine_1_1BreakpointOscillatorModifier_1_1Assignment.html</anchorfile>
      <anchor>abda7c514b542bf2e6a396d3062eba6ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::EnvelopeFollowerModifier::Assignment</name>
    <filename>structtracktion_1_1engine_1_1EnvelopeFollowerModifier_1_1Assignment.html</filename>
    <base>tracktion::engine::AutomatableParameter::ModifierAssignment</base>
    <member kind="function">
      <type></type>
      <name>Assignment</name>
      <anchorfile>structtracktion_1_1engine_1_1EnvelopeFollowerModifier_1_1Assignment.html</anchorfile>
      <anchor>aa2ab38ff0deef16bb502e58de4ce9369</anchor>
      <arglist>(const juce::ValueTree &amp;, const EnvelopeFollowerModifier &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForModifierSource</name>
      <anchorfile>structtracktion_1_1engine_1_1EnvelopeFollowerModifier_1_1Assignment.html</anchorfile>
      <anchor>a66901efb01bb2829c68ded7780dc5b0a</anchor>
      <arglist>(const ModifierSource &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>EnvelopeFollowerModifier::Ptr</type>
      <name>getEnvelopeFollowerModifier</name>
      <anchorfile>structtracktion_1_1engine_1_1EnvelopeFollowerModifier_1_1Assignment.html</anchorfile>
      <anchor>a494e3a5011c61d3adaa907f78eb0e871</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>envelopeFollowerModifierID</name>
      <anchorfile>structtracktion_1_1engine_1_1EnvelopeFollowerModifier_1_1Assignment.html</anchorfile>
      <anchor>ac521979aa6f205aad9c4028e64a8f235</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::LFOModifier::Assignment</name>
    <filename>structtracktion_1_1engine_1_1LFOModifier_1_1Assignment.html</filename>
    <base>tracktion::engine::AutomatableParameter::ModifierAssignment</base>
    <member kind="function">
      <type></type>
      <name>Assignment</name>
      <anchorfile>structtracktion_1_1engine_1_1LFOModifier_1_1Assignment.html</anchorfile>
      <anchor>a06eabc5c6d48af9dc053c9b0984d539e</anchor>
      <arglist>(const juce::ValueTree &amp;, const LFOModifier &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForModifierSource</name>
      <anchorfile>structtracktion_1_1engine_1_1LFOModifier_1_1Assignment.html</anchorfile>
      <anchor>a010bd6f192c0c44be7459a44efe07866</anchor>
      <arglist>(const ModifierSource &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; LFOModifier &gt;</type>
      <name>getLFOModifier</name>
      <anchorfile>structtracktion_1_1engine_1_1LFOModifier_1_1Assignment.html</anchorfile>
      <anchor>a0e847f8331b1e4210468e7ee3c7799f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>lfoModifierID</name>
      <anchorfile>structtracktion_1_1engine_1_1LFOModifier_1_1Assignment.html</anchorfile>
      <anchor>a92646fe6be63ae8b0b20226adccdb3fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MacroParameter::Assignment</name>
    <filename>structtracktion_1_1engine_1_1MacroParameter_1_1Assignment.html</filename>
    <base>tracktion::engine::AutomatableParameter::ModifierAssignment</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; Assignment &gt;</type>
      <name>Ptr</name>
      <anchorfile>structtracktion_1_1engine_1_1MacroParameter_1_1Assignment.html</anchorfile>
      <anchor>a6fb5b368751ceabe97e1c8b6d400dae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Assignment</name>
      <anchorfile>structtracktion_1_1engine_1_1MacroParameter_1_1Assignment.html</anchorfile>
      <anchor>a0c2508a7328f17b6724fc140c4a85405</anchor>
      <arglist>(const juce::ValueTree &amp;, const MacroParameter &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForModifierSource</name>
      <anchorfile>structtracktion_1_1engine_1_1MacroParameter_1_1Assignment.html</anchorfile>
      <anchor>a82cfcbeb9b4263b5a956a8d2950f5e4c</anchor>
      <arglist>(const AutomatableParameter::ModifierSource &amp;) const override</arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>macroParamID</name>
      <anchorfile>structtracktion_1_1engine_1_1MacroParameter_1_1Assignment.html</anchorfile>
      <anchor>ab7ee590a9584196fc6caf5229febcfe3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MidiAssignable::Assignment</name>
    <filename>structtracktion_1_1engine_1_1MidiAssignable_1_1Assignment.html</filename>
    <member kind="function">
      <type></type>
      <name>Assignment</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiAssignable_1_1Assignment.html</anchorfile>
      <anchor>aabd9f2ff88bec365ba4770451c638ed4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Assignment</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiAssignable_1_1Assignment.html</anchorfile>
      <anchor>a66fd97ecad701eb22a5818afec038fa4</anchor>
      <arglist>(juce::String n, CustomControlSurface::ActionID i)</arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiAssignable_1_1Assignment.html</anchorfile>
      <anchor>ac7eb91119b724b386e6352b9210a9477</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CustomControlSurface::ActionID</type>
      <name>id</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiAssignable_1_1Assignment.html</anchorfile>
      <anchor>a1e0625956d9e26494fdc2a9472dbe42d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MIDITrackerModifier::Assignment</name>
    <filename>structtracktion_1_1engine_1_1MIDITrackerModifier_1_1Assignment.html</filename>
    <base>tracktion::engine::AutomatableParameter::ModifierAssignment</base>
    <member kind="function">
      <type></type>
      <name>Assignment</name>
      <anchorfile>structtracktion_1_1engine_1_1MIDITrackerModifier_1_1Assignment.html</anchorfile>
      <anchor>a0e7fa2194c9f8272cb34c978a4b15730</anchor>
      <arglist>(const juce::ValueTree &amp;, const MIDITrackerModifier &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForModifierSource</name>
      <anchorfile>structtracktion_1_1engine_1_1MIDITrackerModifier_1_1Assignment.html</anchorfile>
      <anchor>a919ce9c65464568d4de345cf041cc03b</anchor>
      <arglist>(const ModifierSource &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; MIDITrackerModifier &gt;</type>
      <name>getMIDITrackerModifier</name>
      <anchorfile>structtracktion_1_1engine_1_1MIDITrackerModifier_1_1Assignment.html</anchorfile>
      <anchor>abf32ed29e8352fbf99bde71613156dc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>midiTrackerModifierID</name>
      <anchorfile>structtracktion_1_1engine_1_1MIDITrackerModifier_1_1Assignment.html</anchorfile>
      <anchor>a0164588afec24f843b3f56fd261966db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::RandomModifier::Assignment</name>
    <filename>structtracktion_1_1engine_1_1RandomModifier_1_1Assignment.html</filename>
    <base>tracktion::engine::AutomatableParameter::ModifierAssignment</base>
    <member kind="function">
      <type></type>
      <name>Assignment</name>
      <anchorfile>structtracktion_1_1engine_1_1RandomModifier_1_1Assignment.html</anchorfile>
      <anchor>a5a846dd11c2923e19a111822f6040edf</anchor>
      <arglist>(const juce::ValueTree &amp;, const RandomModifier &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForModifierSource</name>
      <anchorfile>structtracktion_1_1engine_1_1RandomModifier_1_1Assignment.html</anchorfile>
      <anchor>a232b435b5ec635df7dc3667b12393fe5</anchor>
      <arglist>(const ModifierSource &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; RandomModifier &gt;</type>
      <name>getRandomModifier</name>
      <anchorfile>structtracktion_1_1engine_1_1RandomModifier_1_1Assignment.html</anchorfile>
      <anchor>a7b4fe723f7c8a31a3f9dbf86b25cca41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>randomModifierID</name>
      <anchorfile>structtracktion_1_1engine_1_1RandomModifier_1_1Assignment.html</anchorfile>
      <anchor>aab2d2845b6c55a7eb9c871be148c0432</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::StepModifier::Assignment</name>
    <filename>structtracktion_1_1engine_1_1StepModifier_1_1Assignment.html</filename>
    <base>tracktion::engine::AutomatableParameter::ModifierAssignment</base>
    <member kind="function">
      <type></type>
      <name>Assignment</name>
      <anchorfile>structtracktion_1_1engine_1_1StepModifier_1_1Assignment.html</anchorfile>
      <anchor>ab32c581941a474bf265ecc953df5f2b4</anchor>
      <arglist>(const juce::ValueTree &amp;, const StepModifier &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForModifierSource</name>
      <anchorfile>structtracktion_1_1engine_1_1StepModifier_1_1Assignment.html</anchorfile>
      <anchor>a02eca681db8601fa88090f7e341499f4</anchor>
      <arglist>(const ModifierSource &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; StepModifier &gt;</type>
      <name>getStepModifier</name>
      <anchorfile>structtracktion_1_1engine_1_1StepModifier_1_1Assignment.html</anchorfile>
      <anchor>a1a93426aac42bd7d980c4ec0b1737381</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>stepModifierID</name>
      <anchorfile>structtracktion_1_1engine_1_1StepModifier_1_1Assignment.html</anchorfile>
      <anchor>aa667874898706b43ae547ae707bde18d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AsyncCaller</name>
    <filename>structtracktion_1_1engine_1_1AsyncCaller.html</filename>
    <member kind="function">
      <type></type>
      <name>AsyncCaller</name>
      <anchorfile>structtracktion_1_1engine_1_1AsyncCaller.html</anchorfile>
      <anchor>aca735e4fdf5bd20d17113702f1b45e1e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AsyncCaller</name>
      <anchorfile>structtracktion_1_1engine_1_1AsyncCaller.html</anchorfile>
      <anchor>a8f5360599a7ab821c0f37a00981362d6</anchor>
      <arglist>(std::function&lt; void()&gt; f)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AsyncCaller</name>
      <anchorfile>structtracktion_1_1engine_1_1AsyncCaller.html</anchorfile>
      <anchor>aa10f851db2f6bc4b1d7dae43246a2222</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFunction</name>
      <anchorfile>structtracktion_1_1engine_1_1AsyncCaller.html</anchorfile>
      <anchor>a64bdd14eccdf0368cad9199337754fd3</anchor>
      <arglist>(std::function&lt; void()&gt; f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleAsyncUpdate</name>
      <anchorfile>structtracktion_1_1engine_1_1AsyncCaller.html</anchorfile>
      <anchor>ae73b13b18a489ca704fd9b7ec1aa7de9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void()&gt;</type>
      <name>function</name>
      <anchorfile>structtracktion_1_1engine_1_1AsyncCaller.html</anchorfile>
      <anchor>a3ddd191b3794465efef6290adaaea165</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AsyncFunctionCaller</name>
    <filename>structtracktion_1_1engine_1_1AsyncFunctionCaller.html</filename>
    <member kind="function">
      <type></type>
      <name>AsyncFunctionCaller</name>
      <anchorfile>structtracktion_1_1engine_1_1AsyncFunctionCaller.html</anchorfile>
      <anchor>aa33266dbe8be4bf7b955ddd89f673094</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AsyncFunctionCaller</name>
      <anchorfile>structtracktion_1_1engine_1_1AsyncFunctionCaller.html</anchorfile>
      <anchor>ae04603ce5842fd74c12441a9902d52fb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFunction</name>
      <anchorfile>structtracktion_1_1engine_1_1AsyncFunctionCaller.html</anchorfile>
      <anchor>ad385ba3e9ab02c6990b08f0d3dbf3a99</anchor>
      <arglist>(int functionID, const std::function&lt; void()&gt; &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateAsync</name>
      <anchorfile>structtracktion_1_1engine_1_1AsyncFunctionCaller.html</anchorfile>
      <anchor>a22b96f71756f09602ab299b4da5f5ba5</anchor>
      <arglist>(int functionID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleUpdateNowIfNeeded</name>
      <anchorfile>structtracktion_1_1engine_1_1AsyncFunctionCaller.html</anchorfile>
      <anchor>a9c6581ddac9e97c8a10c76437f0956de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleAsyncUpdate</name>
      <anchorfile>structtracktion_1_1engine_1_1AsyncFunctionCaller.html</anchorfile>
      <anchor>a37e3ed5324bdbfc073b80cd03bed214d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; int, std::pair&lt; bool, std::function&lt; void(void)&gt; &gt; &gt;</type>
      <name>functions</name>
      <anchorfile>structtracktion_1_1engine_1_1AsyncFunctionCaller.html</anchorfile>
      <anchor>a8325c5b9dad09d750b6191254480a321</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AtomicWrapper</name>
    <filename>structtracktion_1_1engine_1_1AtomicWrapper.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>AtomicWrapper</name>
      <anchorfile>structtracktion_1_1engine_1_1AtomicWrapper.html</anchorfile>
      <anchor>a9fd5e06fe6bba701eee0b4e615d9cca8</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AtomicWrapper</name>
      <anchorfile>structtracktion_1_1engine_1_1AtomicWrapper.html</anchorfile>
      <anchor>abff00cc88fb6e20dcb8f87002e90ce4e</anchor>
      <arglist>(const OtherType &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AtomicWrapper</name>
      <anchorfile>structtracktion_1_1engine_1_1AtomicWrapper.html</anchorfile>
      <anchor>acacb592a580691f2bd55dad5f5581295</anchor>
      <arglist>(const AtomicWrapper &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>AtomicWrapper &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion_1_1engine_1_1AtomicWrapper.html</anchorfile>
      <anchor>a98a3d98e226892f499875494c2668c1f</anchor>
      <arglist>(const AtomicWrapper &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion_1_1engine_1_1AtomicWrapper.html</anchorfile>
      <anchor>a6aaf022dd53538bdacd9caa3e21ec25f</anchor>
      <arglist>(const AtomicWrapper &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion_1_1engine_1_1AtomicWrapper.html</anchorfile>
      <anchor>a89586c70ac2231af84d26c02514eebe7</anchor>
      <arglist>(const AtomicWrapper &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator juce::var</name>
      <anchorfile>structtracktion_1_1engine_1_1AtomicWrapper.html</anchorfile>
      <anchor>acb3356acf94e5a10bb80f7dccb3757b2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Type</name>
      <anchorfile>structtracktion_1_1engine_1_1AtomicWrapper.html</anchorfile>
      <anchor>a2dfd04f5b7e2288001868fa6514a5c7f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::Node::AudioAndMidiBuffer</name>
    <filename>structtracktion_1_1graph_1_1Node_1_1AudioAndMidiBuffer.html</filename>
    <member kind="variable">
      <type>choc::buffer::ChannelArrayView&lt; float &gt;</type>
      <name>audio</name>
      <anchorfile>structtracktion_1_1graph_1_1Node_1_1AudioAndMidiBuffer.html</anchorfile>
      <anchor>a91fc332ab1679601b24dbd8c3014ddfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tracktion_engine::MidiMessageArray &amp;</type>
      <name>midi</name>
      <anchorfile>structtracktion_1_1graph_1_1Node_1_1AudioAndMidiBuffer.html</anchorfile>
      <anchor>a647f129f99b88eba23ee946c71e24511</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::AudioBufferPool</name>
    <filename>classtracktion_1_1graph_1_1AudioBufferPool.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioBufferPool</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>a7aeeecd85a4978ea061aaa0cb1301ae1</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioBufferPool</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>a67294980ebb224b33c76dcd917c2a4c5</anchor>
      <arglist>(size_t maxCapacity)</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::ChannelArrayBuffer&lt; float &gt;</type>
      <name>allocate</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>a2384fe781418b1c39f5c71cc0c11395b</anchor>
      <arglist>(choc::buffer::Size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>release</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>a4091103c1abdd9974dd64f44e241a0fd</anchor>
      <arglist>(choc::buffer::ChannelArrayBuffer&lt; float &gt; &amp;&amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>a57baa86d696055088c47fcfaa182d8c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCapacity</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>ac3fa164b0cef0174b0e52b64a9af294d</anchor>
      <arglist>(size_t)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCapacity</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>a83d1b227e2b0f8f4f324ebd41d79c327</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>ab9c6b512799e86e6f3dbc7570c612cbc</anchor>
      <arglist>(size_t numBuffers, choc::buffer::Size)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumBuffers</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>acb51fecfaf1b2dfd74c5bb6a72f79878</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getAllocatedSize</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioBufferPool.html</anchorfile>
      <anchor>a6fa6ab1b1e41147e17163c4e39322341</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AudioBufferSnapshot</name>
    <filename>classtracktion_1_1engine_1_1AudioBufferSnapshot.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioBufferSnapshot</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioBufferSnapshot.html</anchorfile>
      <anchor>a01c54034db4c30febc9f4b2545ab39d0</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBufferBeenReallocated</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioBufferSnapshot.html</anchorfile>
      <anchor>a8691b1d5ef2e97968882a66c39a7d565</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::AudioBufferStack</name>
    <filename>classtracktion_1_1graph_1_1AudioBufferStack.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioBufferStack</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioBufferStack.html</anchorfile>
      <anchor>a7062b37e2d4d72452d7658ce3aba0ab8</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::ChannelArrayBuffer&lt; float &gt;</type>
      <name>allocate</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioBufferStack.html</anchorfile>
      <anchor>a22e7fd471fd925f6613f6cf695f516bf</anchor>
      <arglist>(choc::buffer::Size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioBufferStack.html</anchorfile>
      <anchor>afcc072b94d884281d71c484d239f9b37</anchor>
      <arglist>(choc::buffer::ChannelArrayBuffer&lt; float &gt; &amp;&amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioBufferStack.html</anchorfile>
      <anchor>a364ebd6471794733dd4bbeeb35569c0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioBufferStack.html</anchorfile>
      <anchor>aac20d06e1cabc0df16a54c476642924b</anchor>
      <arglist>(size_t numBuffers, choc::buffer::Size)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumBuffers</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioBufferStack.html</anchorfile>
      <anchor>ac07caab4088192f94fb7c97322e3dc5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getAllocatedSize</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioBufferStack.html</anchorfile>
      <anchor>a3dc9885b04fecc9c3be1186282150bb8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AudioClipBase</name>
    <filename>classtracktion_1_1engine_1_1AudioClipBase.html</filename>
    <base>tracktion::engine::Clip</base>
    <base>tracktion::engine::RenderManager::Job::Listener</base>
    <class kind="struct">tracktion::engine::AudioClipBase::ProxyRenderingInfo</class>
    <member kind="enumeration">
      <type></type>
      <name>FadeBehaviour</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a02bb26c86c226f50eae674e40ab39ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gainFade</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a02bb26c86c226f50eae674e40ab39ddca5926118a95d7c0a60556e8e3f7ff4252</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>speedRamp</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a02bb26c86c226f50eae674e40ab39ddcabdee3d36d68487bba30ab6414fce0ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AutoPitchMode</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae58fcb2433dfaf2e5d543089c64f3bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pitchTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae58fcb2433dfaf2e5d543089c64f3bbfaead1d768dd43e9596e4c4bcc934368df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chordTrackMono</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae58fcb2433dfaf2e5d543089c64f3bbfa3a2a59c37f173999ffd2dcf53e00045f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chordTrackPoly</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae58fcb2433dfaf2e5d543089c64f3bbfa98b0c978518ea8a0e70eb9808d81db27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ClipDirection</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad8f885dd3dfab9f6928a33a74089d992</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1AudioClipBase.html" anchor="ad8f885dd3dfab9f6928a33a74089d992a2327346e833efcd6b2e7b3f0a4df8ebb">previous</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1AudioClipBase.html" anchor="ad8f885dd3dfab9f6928a33a74089d992ad0cab90d8d20d57e2f2b9be52f7dd25d">next</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1AudioClipBase.html" anchor="ad8f885dd3dfab9f6928a33a74089d992a334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; AudioClipBase &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a664bf5d6ca1e162c6f65ad657dc3e224</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>gainFade</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a02bb26c86c226f50eae674e40ab39ddca5926118a95d7c0a60556e8e3f7ff4252</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>speedRamp</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a02bb26c86c226f50eae674e40ab39ddcabdee3d36d68487bba30ab6414fce0ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pitchTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae58fcb2433dfaf2e5d543089c64f3bbfaead1d768dd43e9596e4c4bcc934368df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chordTrackMono</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae58fcb2433dfaf2e5d543089c64f3bbfa3a2a59c37f173999ffd2dcf53e00045f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chordTrackPoly</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae58fcb2433dfaf2e5d543089c64f3bbfa98b0c978518ea8a0e70eb9808d81db27</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioClipBase</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aeb475e4217eca93e4e911d1a842d00a2</anchor>
      <arglist>(const juce::ValueTree &amp;, EditItemID, Type, ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioClipBase</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aa2ac7edc7ef0dc5a51724099c1d31ac0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getMaximumLength</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad249c3ea4c7b63f85492b0b22efec59a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TimeDuration</type>
      <name>getSourceLength</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a1af16733fcba0d67d0137b1e5d909322</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AudioFile</type>
      <name>getAudioFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a4f14d25802d6a3f9073bfccbb3d912d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AudioFile</type>
      <name>getPlaybackFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af62b7b443d5cc1386f3751c8cd3041e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::File</type>
      <name>getOriginalFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0c37d216025f545e723b59151cf38a18</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a71dc65d442357583934361c036ab33e3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual AudioFileInfo</type>
      <name>getWaveInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aaca4b64381d1ed1edeb672e8a2918b9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markAsDirty</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad060d71b9d7eea932207ec7c0520ae96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSourceFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a235484bc7a42afd8ec9b421442d3efc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>needsRender</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a02f2d10689194e62b0c365f8f43dc1d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RenderManager::Job::Ptr</type>
      <name>getRenderJob</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad7a0d801b3e30f1fbb3e12242d325cb1</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderComplete</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a64e872ad63a4fa06e63b179340869a41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getRenderMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ace19da5c99238bf71f9ed449bda4e869</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getClipMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aa7068f9c5815d68e1cf252264b7862ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancelCurrentRender</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a712070e08ba7bd9712f2ea86dbe7a0d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGainDB</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a40240297b388500a91da8081142cdd3c</anchor>
      <arglist>(float dB)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getGainDB</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aa38e27ff34f3c965490a066cd3299b75</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getGain</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ace985954462a0b70bbf63b550c7e5bba</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPan</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a4b53791f44d1014e3791348975fad6ac</anchor>
      <arglist>(float pan)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getPan</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a5ae416139fd2709524c0e3b3ef2b1f8d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aa43f3cc4db9328ddb16292d09ef435d9</anchor>
      <arglist>(bool shouldBeMuted) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a51a5df1fb6657df317b504007228d672</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>LiveClipLevel</type>
      <name>getLiveClipLevel</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a95358db8d2d5dd6c091cc7a5a1058500</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLeftChannelActive</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a3876546d4b777bca828c1849ba2ca9e0</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLeftChannelActive</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ab3f0746f196776dc7b2f63c21dfded2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRightChannelActive</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a4882d2f8a0bc14183c020c148d13b989</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRightChannelActive</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a2aab538cbf0690e47b38cb811a27d32c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioChannelSet</type>
      <name>getActiveChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af5e40fc7895ff6e576dd2391247b9ed6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setFadeIn</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a5814f891698b9dd0005bdafd96f6bc5c</anchor>
      <arglist>(TimeDuration length)</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getFadeIn</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a4599d277cad3d834c6280e230a4a0c1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setFadeOut</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ab7bd6cfff60da798e73c4639950fc287</anchor>
      <arglist>(TimeDuration length)</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getFadeOut</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a1435f8dd99c3d3c66769116685843d7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFadeInType</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a754ecf37c3694fb35f99ebf2b01cb8d7</anchor>
      <arglist>(AudioFadeCurve::Type)</arglist>
    </member>
    <member kind="function">
      <type>AudioFadeCurve::Type</type>
      <name>getFadeInType</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ac3165e2f4a76109d82e6cdb5fb8fadaa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFadeOutType</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a9c5d3119e012dc9b1722e2c425ba5ae2</anchor>
      <arglist>(AudioFadeCurve::Type newType)</arglist>
    </member>
    <member kind="function">
      <type>AudioFadeCurve::Type</type>
      <name>getFadeOutType</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aaee76a5f7173815f7ba8349da14517a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoCrossfade</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0d9fe9eda90adb2c547f9ef3834d79be</anchor>
      <arglist>(bool shouldAutoCrossfade)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAutoCrossfade</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a3f1d1e336af651fe79a2a61772a6482c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateAutoCrossfadesAsync</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a46cdf6f33be8c9d109ee460621339e41</anchor>
      <arglist>(bool updateOverlapped)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyEdgeFades</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad31a121f5814535d8f6c6a07ad89c235</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyFadeToAutomation</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ab79a5d1f36f7ae2bfc01c24e93683a0c</anchor>
      <arglist>(bool fadeIn, bool removeClipFade)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFadeInBehaviour</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a4a98d19bff804bb7fba88d2477d10f6b</anchor>
      <arglist>(FadeBehaviour newBehaviour)</arglist>
    </member>
    <member kind="function">
      <type>FadeBehaviour</type>
      <name>getFadeInBehaviour</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a4c694cdce95f16307a77881e87a7ee6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFadeOutBehaviour</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a66bdb45a51cf744676c47969b97c407b</anchor>
      <arglist>(FadeBehaviour newBehaviour)</arglist>
    </member>
    <member kind="function">
      <type>FadeBehaviour</type>
      <name>getFadeOutBehaviour</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a8e8e7426837d1c553f73e082d1d280bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setLoopDefaults</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a7c44270128c522f96f5617e1936dcc6b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad2576c7e40d17aeae4aa5ccbad28b777</anchor>
      <arglist>(const LoopInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const LoopInfo &amp;</type>
      <name>getLoopInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>acbfe3b7f91818baed7523c71e722df1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>LoopInfo &amp;</type>
      <name>getLoopInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>acb07be3c9e1b8bdcce71b8df8110e9bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>getLoopRange</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a9fd35746d2d99441303fc2f83b2cffc5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canLoop</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a729f03ae7ac3ad640cad2ed93b0425be</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLooping</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a940fd759aa1295f5040af8d98ab990a6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beatBasedLooping</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>abdd3853de1efdb42ceb54fb3763775ae</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumberOfLoops</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a7c81fec7d7be9c39eceb1aabcb2bf961</anchor>
      <arglist>(int num) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableLooping</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a62f3a389aac162b8ac4653dffef341de</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getLoopStartBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>afdd1793aecff368b8ebbfaca0cafeae0</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getLoopStart</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a577f801f1ba51cbe21f29716d7695ac6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>BeatDuration</type>
      <name>getLoopLengthBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a520f35c291b0e8cfb0e32e08ba8daa3f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getLoopLength</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a64e290fec5a31cd8b4021f73fdba032d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopRange</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a8340d74cff335e0aeda52c6547164c5d</anchor>
      <arglist>(TimeRange) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopRangeBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a58281274e90a178a121e7fe0e46db100</anchor>
      <arglist>(BeatRange) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoDetectBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>acc6b16146a88f5e652a4bb207955e683</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAutoDetectBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad1949ad03c87778b97eed84cbe0a48b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBeatSensitivity</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a77a8843be317a9dff8c5a813d8bcb72a</anchor>
      <arglist>(float s)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getBeatSensitivity</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a30ec5086aba379d3f0788d651740a15f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pitchTempoTrackChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a6d4928423adc35ed37a3862ce524587a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeedRatio</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ab2ca4308affae348fbc74b2653664c2b</anchor>
      <arglist>(double newSpeed) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeStretchMode</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0854df78e5a4f692be344cbe65fc66ce</anchor>
      <arglist>(TimeStretcher::Mode mode)</arglist>
    </member>
    <member kind="function">
      <type>TimeStretcher::Mode</type>
      <name>getTimeStretchMode</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aabe115533ae0585d033c3667a480656e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TimeStretcher::Mode</type>
      <name>getActualTimeStretchMode</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a4f941dbced68952c236c268c5b40fef3</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>afd05eedbe95a6f6e90bdcf6c7f96937f</anchor>
      <arglist>(bool shouldUseAutoTempo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAutoTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a94203894218e23e016a1c258fc5caecb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoPitch</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ab0954c1c82d2b3bcdb48938c8c3258be</anchor>
      <arglist>(bool shouldUseAutoPitch)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAutoPitch</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ac71078655e0e7827e107105e80710510</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoPitchMode</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a2c345ad265accb41f03b890008923824</anchor>
      <arglist>(AutoPitchMode m)</arglist>
    </member>
    <member kind="function">
      <type>AutoPitchMode</type>
      <name>getAutoPitchMode</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a22dd7c50919a9ee3c9fe5a16340d667d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWarpTime</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a1463b01326b3efc71867c17af34a83f4</anchor>
      <arglist>(bool shouldUseWarpTime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getWarpTime</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a923332e4c32a6a21c8961390c2352127</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WarpTimeManager &amp;</type>
      <name>getWarpTimeManager</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>acab6bb711f639e068bcfffef00d07666</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTranspose</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ab8791b4223a18e6c8d96a290d18a42bd</anchor>
      <arglist>(int numSemitones)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTransposeSemiTones</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a5152171771ff844b23f0c21ee8601b5a</anchor>
      <arglist>(bool includeAutoPitch) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPitchChange</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a61e96c35d8f86ea4fdb28169d56ffdc7</anchor>
      <arglist>(float semitones)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getPitchChange</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a8751124baf2505be9a9f5c753d3b9a58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getPitchRatio</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0f13cdc798c4d74adc8d0c39920792db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsReversed</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0bf5544625eaf2b0d429704c12e6d07e</anchor>
      <arglist>(bool shouldBeReversed)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsReversed</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aba683df73782ad704b0fb49d557e2cb8</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>LoopInfo</type>
      <name>autoDetectBeatMarkers</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a233bdd52268ed7a5024bb7d64d7a2820</anchor>
      <arglist>(const LoopInfo &amp;current, bool autoBeat, float sensitivity) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>performTempoDetect</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a15f0ac13221a288fc2326a0b7edec4a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getPitchChoices</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a9af91ebaab34fe78ebb953059f976711</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canHaveEffects</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a1bbe8ae62a16492a47e2ed60898e54d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableEffects</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a6c13caca276a3923b1b9f77a7a8dd584</anchor>
      <arglist>(bool enable, bool warn)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>effectsEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ada4f8d89309ece8eade95af941bb0268</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEffect</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af62658123e2490cf1ecc1976579cbaf2</anchor>
      <arglist>(const juce::ValueTree &amp;effectsTree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEffectsVisible</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>abf285d5c083cb2b10af552da83cac084</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getEffectsVisible</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a1313d9e56deb940952b592dddc909931</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ClipEffects *</type>
      <name>getClipEffects</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0dcb4fdce4870d7b89c246ae34b097b5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canSnapToOriginalBWavTime</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af4d1a8944a3dc90ec0247b5bced5a7e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapToOriginalBWavTime</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ac93a5d3b670aab7cba33fdaef8d11fdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::Array&lt; ProjectItemID &gt;</type>
      <name>getTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad1e7b8c1af7e0fab98c456417e482886</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>canAddClipPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a284250626cc2e6e77cd9201364ebbc70</anchor>
      <arglist>(const Plugin::Ptr &amp;) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isUsingFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a00a5595286a94ce28eb6b8373e5408db</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>AudioFile</type>
      <name>getProxyFileToCreate</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a779dcc881a06a596d5282835d885b4ba</anchor>
      <arglist>(bool renderTimestretched)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUsesProxy</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af60dec41fd31c44187431889216c196e</anchor>
      <arglist>(bool canUseProxy) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canUseProxy</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>adff0ade84cf5357bb657e0e24b67ab58</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesTimeStretchedProxy</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ab186a864771552c86727ce7e8edf7365</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; ProxyRenderingInfo &gt;</type>
      <name>createProxyRenderingInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a2e7863a10da93b6a4c274c461df2a3d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getProxyHash</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae3cb57de144ffd4edd3680eafef5f37d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginRenderingNewProxyIfNeeded</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a3b4b565bf854961af8b52f3d42ca3864</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const AudioSegmentList &amp;</type>
      <name>getAudioSegmentList</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad3318abebe34d8c2a2eb2975bbd34679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResamplingQuality</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae9432459ae370ede018e28a3fa0ddf8f</anchor>
      <arglist>(ResamplingQuality)</arglist>
    </member>
    <member kind="function">
      <type>ResamplingQuality</type>
      <name>getResamplingQuality</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a3a18a65e4b01714920e02c33005100b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reverseLoopPoints</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0ba2d7aaf8b2b0f468ee4797feeb0770</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkFadeLengthsForOverrun</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aaac53d72916afbcca2da99700c2bf267</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AudioClipBase *</type>
      <name>getOverlappingClip</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a27e99b6a0b09e7a6224481ad515676d5</anchor>
      <arglist>(ClipDirection) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingMelodyne</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a9670c7861ec0c2f59c9edb3559e27ea6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showMelodyneWindow</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a682426e9185a2b5e25f303ef63050817</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideMelodyneWindow</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af8e5efe9a1f1099815e4cd1d837a6347</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>melodyneConvertToMIDI</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae1e287cd0c11e466943820e2b4300cf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadMelodyneState</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a2f0d07c496356e9fe76afbc4c067fce3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setupARA</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aca198e1f0182f7fc80acae446b19c430</anchor>
      <arglist>(bool dontPopupErrorMessages)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ab834e36af1d28924b941bbcc3ae9148c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cloneFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae89c11b34557add82248db9a2f3acaac</anchor>
      <arglist>(Clip *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a75d6744425bb2f37f4b0f1e4d8cbc30e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParent</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a3867297cffac18471ea49ffd4ed58d28</anchor>
      <arglist>(ClipOwner *) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedTo</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae08d11c6d3219fd7603f262b1d07dcbf</anchor>
      <arglist>(ClipOwner &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changed</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae5725d0693c4eb72f71e9653ea5c3ce3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getDefaultColour</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a36d48b847bfa336b35aa566995dfcbbd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>PatternGenerator *</type>
      <name>getPatternGenerator</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a80ad59c630a2132a272548f42552a14c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMark</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a05433a649328703c4d3c3e9360c5236e</anchor>
      <arglist>(TimePosition relCursorPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveMarkTo</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aeb653f89dd19588e426def659950615d</anchor>
      <arglist>(TimePosition relCursorPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteMark</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a515cc206a8c917fd8928fee462613dc1</anchor>
      <arglist>(TimePosition relCursorPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getRescaledMarkPoints</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ae21c7d7ee748ff93ebdd08773e9dce3f</anchor>
      <arglist>(juce::Array&lt; TimePosition &gt; &amp;rescaled, juce::Array&lt; int &gt; &amp;orig) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; TimePosition &gt;</type>
      <name>getRescaledMarkPoints</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a4ef2e24eca748b839885e0fc661e4b2c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ReferencedItem &gt;</type>
      <name>getReferencedItems</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a537303262b5ac12b1106b24b448c0be8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reassignReferencedItem</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a9e4c0c4d1ae77888e8501797d8bfabb8</anchor>
      <arglist>(const ReferencedItem &amp;, ProjectItemID newID, double newStartTime) override</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; LaunchHandle &gt;</type>
      <name>getLaunchHandle</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0e9e7f15da5b8cadc385b20f33230bda</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUsesGlobalLaunchQuatisation</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad56bf48c0464aedb158807ae1d2f66c5</anchor>
      <arglist>(bool useGlobal) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesGlobalLaunchQuatisation</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0bd3f9584238b26d74321a70780b82ae</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>LaunchQuantisation *</type>
      <name>getLaunchQuantisation</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a7b50a10d601dbe6f84f2aa3e139ac61a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FollowActions *</type>
      <name>getFollowActions</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a49fbeae229f85b05aac16b78ca96c918</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addClipPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a39f4b10bd425350d51ba92d1c18e9da1</anchor>
      <arglist>(const Plugin::Ptr &amp;, SelectionManager &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Array</type>
      <name>getAllPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a539b00a5ceb69152df5f2f2ad5f50b6f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMirrorUpdateToAllPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a03e0a437fe42588f02b0aabdd2184274</anchor>
      <arglist>(Plugin &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>PluginList *</type>
      <name>getPluginList</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aa84dc8e16b901043ebf3dffaacd47bce</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getRootNoteChoices</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a46dcbb2064219685f4811d07fb1a8969</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ReferenceCountedObjectPtr&lt; MelodyneFileReader &gt;</type>
      <name>melodyneProxy</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad3746f92cdbe8f43ed271c9b61ad0af6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; TimeStretcher::ElastiqueProOptions &gt;</type>
      <name>elastiqueProOptions</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>afde026dcce30911a3aa75b20daee7dd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLeftRightChannelActivenessFlags</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a4b7c12d5b9fac5a6d1ae0ca9b0818e64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createNewProxyAsync</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aa8271db41a92055636772cb791e98718</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a75be4537b0e24362be52ae6a5ebd51d9</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a18dc9912eceb6617ec86822d2cacac99</anchor>
      <arglist>(juce::ValueTree &amp;parent, juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a2b16ca944c5931e0ca7d0ebd0cf003e4</anchor>
      <arglist>(juce::ValueTree &amp;parent, juce::ValueTree &amp;, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a761b06f71f9d762cd7ce3d78e882953f</anchor>
      <arglist>(juce::ValueTree &amp;, int, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a8365f4efa0093668b7ea9c2d4611fca7</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; ClipLevel &gt;</type>
      <name>level</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad0f09e78595a2e40b5d667f1dfc22cc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>channels</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ab79ed28a17a74760c76ca4f45948dcdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; TimeDuration &gt;</type>
      <name>fadeIn</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0b3d54430ad1403139aa622e50764350</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; TimeDuration &gt;</type>
      <name>fadeOut</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a3ce86c11ab9bb6b9cb2b26c7dbf31662</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TimeDuration</type>
      <name>autoFadeIn</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>af3f7eca6df386c9cafaba4cfaba92a07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TimeDuration</type>
      <name>autoFadeOut</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a406b52b2229dc032478609ef048b71be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; AudioFadeCurve::Type &gt;</type>
      <name>fadeInType</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aea214b1f805840d960a7dde8c3674e1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; AudioFadeCurve::Type &gt;</type>
      <name>fadeOutType</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a4de8c4c1706131d66eb6c0ae0510903b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>autoCrossfade</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a5d7bd9a2a439963e4d80b79170fff813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; FadeBehaviour &gt;</type>
      <name>fadeInBehaviour</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a669255edf8bf0c6bce4ad9ec867db0a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; FadeBehaviour &gt;</type>
      <name>fadeOutBehaviour</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a7ad7f9a2aedb72d3ef80c4a0d3059e42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; ResamplingQuality &gt;</type>
      <name>resamplingQuality</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a6ae53fdea331cd38e3b057909a7bc8a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; TimePosition &gt;</type>
      <name>loopStart</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a9ec86dea67aec4ed1436b33ee581aec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; TimeDuration &gt;</type>
      <name>loopLength</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a210cfa34f79b46afd3c89a1cb1f1e5ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; BeatPosition &gt;</type>
      <name>loopStartBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a15294906274b30ecd119132d0fd1ef02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; BeatDuration &gt;</type>
      <name>loopLengthBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a49e482f9a2d2ac08a35e845c3fecea18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>proxyAllowed</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a680741091a7980f273d8ebd030984f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>transpose</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>abf08683366419ad20f6a4d1be47c8321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>pitchChange</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a56db9fcfe17be5f7680ab6e255ebf29d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LoopInfo</type>
      <name>loopInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a59fcfed8fe35c1c618d453a393c7fa64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>beatSensitivity</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0210154180762ae8aa6a27242a9cc0dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; TimeStretcher::Mode &gt;</type>
      <name>timeStretchMode</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a2559704df566d0ed34b1b13235008398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>autoPitch</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a13eec6fd70d823c4e62147db77347a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>autoTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a67cdfaaecb89dcd3567b9fd9fc435161</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>isReversed</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a81f208d4dac37b81116a38135c74cb6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>autoDetectBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a78a709fd863b2a50bd6fa2fd3fb1a98b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>warpTime</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>ad4e594a184cc9ba42df06d722375f40d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>clipEffectsVisible</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a10051f28ba447ed837896cae535b35a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; AutoPitchMode &gt;</type>
      <name>autoPitchMode</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a1fa8f67508e983e90e5b8691271b277a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WarpTimeManager::Ptr</type>
      <name>warpTimeManager</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a0317d543d469adf12763bd71896fd8b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; AudioSegmentList &gt;</type>
      <name>audioSegmentList</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>acdd774c1ef04f9bd7ce6b91c516d4039</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; ClipEffects &gt;</type>
      <name>clipEffects</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a1e97673de709b12b91c5d5eed40bbc23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AsyncFunctionCaller</type>
      <name>asyncFunctionCaller</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a1f75e2202c7fe250304cfbf0a2adff4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::AudioChannelSet</type>
      <name>activeChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a5a2f75b2a19b791de8039bcff8c5379a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PluginList</type>
      <name>pluginList</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a9cbc0011ec3e298f2bc92c4f2ccf4218</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>lastRenderJobFailed</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a489b75f4d8df33baf39865726f4c6a3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RenderManager::Job::Ptr</type>
      <name>renderJob</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>aab35880d5a94429c81ef060b0d6bcb4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AudioFile</type>
      <name>lastProxy</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>abe37178e14b8811464d9af1c72b55fa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>WaveCompManager</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioClipBase.html</anchorfile>
      <anchor>a665c5653caf7bc08cf4a3e16cbc597fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AudioFadeCurve</name>
    <filename>structtracktion_1_1engine_1_1AudioFadeCurve.html</filename>
    <class kind="struct">tracktion::engine::AudioFadeCurve::Concave</class>
    <class kind="struct">tracktion::engine::AudioFadeCurve::Convex</class>
    <class kind="struct">tracktion::engine::AudioFadeCurve::CrossfadeLevels</class>
    <class kind="struct">tracktion::engine::AudioFadeCurve::Linear</class>
    <class kind="struct">tracktion::engine::AudioFadeCurve::SCurve</class>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a538e19bf0da8d5d6add9e2ebe93c9405</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>linear</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a538e19bf0da8d5d6add9e2ebe93c9405ad0fb74a0d1d3a02f110bcc7f9f8957d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>convex</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a538e19bf0da8d5d6add9e2ebe93c9405aea354b8878d057c806535ed3d5aa45bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>concave</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a538e19bf0da8d5d6add9e2ebe93c9405ac8c2cc6683894e56e18fb5c25826c77a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sCurve</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a538e19bf0da8d5d6add9e2ebe93c9405afb3bc58c8a5d873aee5ae3c732a9886e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>linear</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a538e19bf0da8d5d6add9e2ebe93c9405ad0fb74a0d1d3a02f110bcc7f9f8957d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>convex</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a538e19bf0da8d5d6add9e2ebe93c9405aea354b8878d057c806535ed3d5aa45bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>concave</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a538e19bf0da8d5d6add9e2ebe93c9405ac8c2cc6683894e56e18fb5c25826c77a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sCurve</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a538e19bf0da8d5d6add9e2ebe93c9405afb3bc58c8a5d873aee5ae3c732a9886e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>alphaToGain</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a4b87ba7538482b92d9af89820ab35707</anchor>
      <arglist>(float alpha) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>alphaToGainForType</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a70e4d7e19fee602b9ffa5143f13adfbe</anchor>
      <arglist>(Type type, float alpha) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>renderBlock</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>ac4a3654f1ee68086d4bb36f17daa3a43</anchor>
      <arglist>(DestSamplePointer &amp;dest, int numSamples, float startAlpha, float endAlpha) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>renderBlockForType</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a6fede954f711525f902a0c5ae3b2fd0b</anchor>
      <arglist>(DestSamplePointer &amp;dest, int numSamples, float startAlpha, float endAlpha, Type type) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>applyCrossfadeSection</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>aa78432d30c8803c06f4da12727f66087</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;, int channel, int startSample, int numSamples, Type type, float startAlpha, float endAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>applyCrossfadeSection</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>a9b001d2b100ca8e9be9136d0047b3d6c</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;, int startSample, int numSamples, Type type, float startAlpha, float endAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addWithCrossfade</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>afbb8eef639d602c6f59299e3946d9822</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;dest, const juce::AudioBuffer&lt; float &gt; &amp;src, int destChannel, int destStartIndex, int sourceChannel, int sourceStartIndex, int numSamples, Type type, float startAlpha, float endAlpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>drawFadeCurve</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve.html</anchorfile>
      <anchor>ac7a1d466c4e851d0211280ae81bb48d8</anchor>
      <arglist>(juce::Graphics &amp;, const AudioFadeCurve::Type, float x1, float x2, float top, float bottom, juce::Rectangle&lt; int &gt; clip)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AudioFifo</name>
    <filename>classtracktion_1_1engine_1_1AudioFifo.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioFifo</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFifo.html</anchorfile>
      <anchor>abb93a1ee273be1f293dd6e3f027a3a35</anchor>
      <arglist>(int channels, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFifo.html</anchorfile>
      <anchor>ab55d1b25d52ec57cf010ca9713e7cc76</anchor>
      <arglist>(int numChannels, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFreeSpace</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFifo.html</anchorfile>
      <anchor>a6d27ccc88c870f087d3cc0b13e540bda</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumReady</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFifo.html</anchorfile>
      <anchor>a5ef6789e3e20195001cba2e64d5ea054</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFifo.html</anchorfile>
      <anchor>aa052d60905eebf7053ef592b0cafe6f0</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFifo.html</anchorfile>
      <anchor>a4a4f3a6b05d096014792175119d1ca33</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureFreeSpace</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFifo.html</anchorfile>
      <anchor>a573cf4d62bfe9f5bb63b901b8752e050</anchor>
      <arglist>(int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFifo.html</anchorfile>
      <anchor>a3cffe9a5d1e7f449f79ad43af9050a00</anchor>
      <arglist>(const juce::AudioBuffer&lt; float &gt; &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFifo.html</anchorfile>
      <anchor>a1f0d64259a793120dadda1a56674e2dc</anchor>
      <arglist>(const juce::AudioBuffer&lt; float &gt; &amp;src, int startSample, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFifo.html</anchorfile>
      <anchor>acb4fb1e587400dacaf1a97bbbecbeb59</anchor>
      <arglist>(const float *const *data, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeSilence</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFifo.html</anchorfile>
      <anchor>a77c7fb6e43a5a2b2ef204522a6d09911</anchor>
      <arglist>(int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFifo.html</anchorfile>
      <anchor>adc8d0358ad595b42c70a3593af157fdf</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;dest, int startSampleInDestBuffer)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFifo.html</anchorfile>
      <anchor>aa4e7a0bb63e60e1d19e4cb0080221f44</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;dest, int startSampleInDestBuffer, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readAdding</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFifo.html</anchorfile>
      <anchor>a05bfec0cde91df5f6c98780adb2f77a7</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;dest, int startSampleInDestBuffer)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readAdding</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFifo.html</anchorfile>
      <anchor>a33562b4541126738fef534c8338bb560</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;dest, int startSampleInDestBuffer, int numSamples)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::AudioFifo</name>
    <filename>classtracktion_1_1graph_1_1AudioFifo.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioFifo</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioFifo.html</anchorfile>
      <anchor>a308c68e42169583a08fa87aa354390e9</anchor>
      <arglist>(choc::buffer::ChannelCount numChannels, choc::buffer::FrameCount numFrames)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioFifo.html</anchorfile>
      <anchor>a7916f4835495c9e95bcbbd811795fdc7</anchor>
      <arglist>(choc::buffer::ChannelCount numChannels, choc::buffer::FrameCount numFrames)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFreeSpace</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioFifo.html</anchorfile>
      <anchor>aec08a5e51aaf7807aef148f12d1eff91</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumReady</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioFifo.html</anchorfile>
      <anchor>aefbe0a20fd0a4f22fe368869302c3e38</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::ChannelCount</type>
      <name>getNumChannels</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioFifo.html</anchorfile>
      <anchor>a7a7488624c83f9dafeee57284a31844e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioFifo.html</anchorfile>
      <anchor>acced32bf1eb6cec7ed073164feb76f55</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureFreeSpace</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioFifo.html</anchorfile>
      <anchor>a0f2964fb79b146e6dc3b9195d000b62e</anchor>
      <arglist>(int numFrames)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioFifo.html</anchorfile>
      <anchor>a9088fc0241d0f97c308d8c57255d7ca8</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; block)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeSilence</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioFifo.html</anchorfile>
      <anchor>a965f2fa4561c44350458fb816ebcf743</anchor>
      <arglist>(choc::buffer::FrameCount numFrames)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readAdding</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioFifo.html</anchorfile>
      <anchor>a0c9727bc6a9bebb0beea4a3bf5f80521</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; dest)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readOverwriting</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioFifo.html</anchorfile>
      <anchor>a0e28184f89311310cf679d2b865a047a</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; dest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSamples</name>
      <anchorfile>classtracktion_1_1graph_1_1AudioFifo.html</anchorfile>
      <anchor>ae9b19ecd0d290c82ca0345d9ed7d540c</anchor>
      <arglist>(int numSamples)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AudioFile</name>
    <filename>classtracktion_1_1engine_1_1AudioFile.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>ae7814008681d99caae5c9dc8d17cc8f5</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>ab9ceaad5011acd8eb41a5f7ac4b88c36</anchor>
      <arglist>(Engine &amp;e) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>ab53f5381f918b9613f4b03a9f657d2ca</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>af22ea50c6632d15ad6e80a49edc00cae</anchor>
      <arglist>(const AudioFile &amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>AudioFile &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>ad334d0c920bff3f35e39ec543c15b8a2</anchor>
      <arglist>(const AudioFile &amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>a6a120b0ad9e1337604b53c4620895bb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const juce::File &amp;</type>
      <name>getFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>aa7980a54985d37a8fcbdc1e8c288e751</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>a9ca610883239b2d1cb8051bece922be2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getHashString</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>a6a75f4bfffe4e3f4855156bacf396da9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>a8c48bf27315a131438a04d85f7569a72</anchor>
      <arglist>(const AudioFile &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>a5326af9e1b4b1cf32bfefd65b3188fea</anchor>
      <arglist>(const AudioFile &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>a2f19218af7d25305b4e11baf722bc983</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>moveToTrash</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>a0a297e68c9348a231b9a2fdd78734918</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>aeff631605308f2d21e42b08cb7a61e24</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>a146b8b8ead4bdfa47db1210a611c9699</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AudioFileInfo</type>
      <name>getInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>a804908bef48364927aa1ceb4f3ad43a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getLengthInSamples</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>acca1b7c31d405ab16bd2d4944cef4571</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLength</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>ae6700c40b842876ce67f0b4f2aaa0a75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>abddbed66a8cd67e31b0b3a07d7bb699f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>aa957be1e052d91138351ed6ea22999e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBitsPerSample</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>aa09d2c6e50e95fc22d4482fa2183cada</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFloatingPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>af43e901f64632bb20dfc7f7853c8c91c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringPairArray</type>
      <name>getMetadata</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>a067ea66319be2db406a1e4b92fba5e11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>a72560e42254667467787e09d5add1a6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWavFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>ae75072192755e84655cfd117583cc888</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAiffFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>a7a4e31c073539d411ac187c0196d38a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOggFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>ad740fe153d6375737bbe92a5b89241f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMp3File</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>a1c258c562289ac1b0b3786bc63ceab9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFlacFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>ac334ada8ae242607d4c4b4637184cb53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRexFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>ad9a7c113192828e835a674cfa9d02855</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>deleteFiles</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>a9e1a926e9fdabd5df9b2bad8153711ef</anchor>
      <arglist>(Engine &amp;, const juce::Array&lt; juce::File &gt; &amp;files)</arglist>
    </member>
    <member kind="variable">
      <type>Engine *</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFile.html</anchorfile>
      <anchor>ab97b3451969d72787a23afa03c2b6c86</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AudioFileCache</name>
    <filename>classtracktion_1_1engine_1_1AudioFileCache.html</filename>
    <class kind="class">tracktion::engine::AudioFileCache::Reader</class>
    <member kind="function">
      <type></type>
      <name>AudioFileCache</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache.html</anchorfile>
      <anchor>a3d7ebdc795594b2ac8647c8c9fd67bc0</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioFileCache</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache.html</anchorfile>
      <anchor>ad2e1fe67ba3ea763936a21bd284b4334</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Reader::Ptr</type>
      <name>createReader</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache.html</anchorfile>
      <anchor>a139cf804b307ab96a2eb09ae1ec99287</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Reader::Ptr</type>
      <name>createReader</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache.html</anchorfile>
      <anchor>a94dd65def675401e6981423cbbda8f85</anchor>
      <arglist>(const AudioFile &amp;, const std::function&lt; std::unique_ptr&lt; FallbackReader &gt;(juce::AudioFormatReader *sourceReader, juce::TimeSliceThread &amp;timeSliceThread, int samplesToBuffer)&gt; &amp;createFallbackReader)</arglist>
    </member>
    <member kind="function">
      <type>Reader::Ptr</type>
      <name>createFallbackReader</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache.html</anchorfile>
      <anchor>a58caea862210a8201d986c05b1e5315d</anchor>
      <arglist>(const std::function&lt; std::unique_ptr&lt; FallbackReader &gt;(juce::TimeSliceThread &amp;timeSliceThread, int samplesToBuffer)&gt; &amp;createFallbackReader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCacheSizeSamples</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache.html</anchorfile>
      <anchor>aa958e45806f62ff76eace0b31b8a0ab9</anchor>
      <arglist>(SampleCount samplesPerFile)</arglist>
    </member>
    <member kind="function">
      <type>SampleCount</type>
      <name>getCacheSizeSamples</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache.html</anchorfile>
      <anchor>aeec84edea2d01948ba15d8b46b63b742</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SampleCount</type>
      <name>getBytesInUse</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache.html</anchorfile>
      <anchor>af9d0c761508b20a2dce77a256a32f9eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasCacheMissed</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache.html</anchorfile>
      <anchor>a8922e04a71fa20704fd00cfe06390244</anchor>
      <arglist>(bool clearMissedFlag)</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getCpuUsage</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache.html</anchorfile>
      <anchor>a2f4fc40f93623851b37cd307930fd486</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nextBlockStarted</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache.html</anchorfile>
      <anchor>a8011222b99cbf5a2f1b3b1cf108d9a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMappedReader</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache.html</anchorfile>
      <anchor>abf4e726d8ecbfe2a5c74ada00ef4f488</anchor>
      <arglist>(const AudioFile &amp;, SampleCount) const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AudioFileManager</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache.html</anchorfile>
      <anchor>ad44ecfb19d676832e3346150091b1e02</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AudioFileFormatManager</name>
    <filename>classtracktion_1_1engine_1_1AudioFileFormatManager.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioFileFormatManager</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a556aa79a375e6396092fc64fcb320ca9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioFileFormatManager</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a63b984bde08b66e0a9330a34b96d60a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; juce::AudioFormat * &gt; &amp;</type>
      <name>getWriteFormats</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>ae1d893cdfd18bfade2673d297e7c8f7f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLameFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>ae4429784fdee3166d670e4ce323ba35e</anchor>
      <arglist>(std::unique_ptr&lt; juce::AudioFormat &gt; lameForArray, std::unique_ptr&lt; juce::AudioFormat &gt; lameForAccess)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>af2259ded97824646d99cdb528c90b441</anchor>
      <arglist>(std::function&lt; juce::AudioFormat *()&gt; formatCreator, bool isWritable, bool isMemoryMappable)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getFormatFromFileName</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>ac836864c47e31aba7cbf1910448684b1</anchor>
      <arglist>(const juce::File &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getNamedFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>abf631a14cfa21d7e7b9bd37b2e8c7a7b</anchor>
      <arglist>(const juce::String &amp;formatName) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canOpen</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a53a9e94a29ddd4013945a70e166dd456</anchor>
      <arglist>(const juce::File &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getValidFileExtensions</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a74af1837c34ac1a3e099b2391bfcd5ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getDefaultFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>ad9454667055a012b949463b2320db24f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getWavFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>ae6d094f9a4c32400bca558bf5513087c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getAiffFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a0bdc0876280b8c9f98fe6b697b9f231f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getFrozenFileFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a30309ca6674c2300394c8028876564b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getOggFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a2608eca4bf551bdcfcf2a4f340f3b474</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getFlacFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>abd0e9446f0586fdf32f8bb1906dd61bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getNativeAudioFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a44d44da84ded86945a18551508666f28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getLameFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a93b59efd704a0e8818b896f03b7b7df7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioFormatManager</type>
      <name>readFormatManager</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>acbde59c6ee9f86e42690c1ae46f7a8fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioFormatManager</type>
      <name>writeFormatManager</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a43aeedd6b5ce4edecd46801fe482b228</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioFormatManager</type>
      <name>memoryMappedFormatManager</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileFormatManager.html</anchorfile>
      <anchor>a6f8af410f658baa1c1187e2470638008</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AudioFileInfo</name>
    <filename>structtracktion_1_1engine_1_1AudioFileInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioFileInfo</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a570ce88e9e91eb146149c3323ff1f91d</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioFileInfo</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a8a5b7d340f81e0889fdfae0ddafdd443</anchor>
      <arglist>(const AudioFile &amp;, juce::AudioFormatReader *, juce::AudioFormat *)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLengthInSeconds</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a76596b4919821b882465a5aae671a5f9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getLongDescription</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a5838b43f8b0b49ae3329e2a60e3c78e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AudioFileInfo</type>
      <name>parse</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a0eefb3ae4f1cbad3b3af091bc6d2be3d</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>Engine *</type>
      <name>engine</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a593ab9daebe1d79087eb3c33f79893a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>wasParsedOk</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a1295c9231f6b910af09ecffb07ead2d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HashCode</type>
      <name>hashCode</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a7036cfc3c4603f87927f70a97f1ec4e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioFormat *</type>
      <name>format</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a1bcf1df730c6235d09873ab72ed83916</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a1ce007bbc83fb0ed0cc9d07dad82273b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SampleCount</type>
      <name>lengthInSamples</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>aacaaa8713314515c4183215c2bcff14b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numChannels</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>adf961872363656f13b346ab0b5aba391</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bitsPerSample</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>aa7959aeee989f063d747ca1569b55b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isFloatingPoint</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a5b3dce938350da09a55f8dbe5fafb0e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>needsCachedProxy</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a3bfbbf295d9e67303656078b089657be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::StringPairArray</type>
      <name>metadata</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a73a3d6716a4c77d52b8d8bcc41b3241d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Time</type>
      <name>fileModificationTime</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a12f4bbfa6e5ef59c8401ac6dbc1c9ce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LoopInfo</type>
      <name>loopInfo</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileInfo.html</anchorfile>
      <anchor>a5f4052b634198b7f5911d53b23d315de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AudioFileManager</name>
    <filename>classtracktion_1_1engine_1_1AudioFileManager.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioFileManager</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileManager.html</anchorfile>
      <anchor>ac6c1f23032c3b81efb157d5dab6424d9</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioFileManager</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileManager.html</anchorfile>
      <anchor>a515a2c358819e268f5e7b13acfa1b679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AudioFile</type>
      <name>getAudioFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileManager.html</anchorfile>
      <anchor>a5e0bcdf6237690f8a364b965cbf414b8</anchor>
      <arglist>(ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>AudioFileInfo</type>
      <name>getInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileManager.html</anchorfile>
      <anchor>ac76bb952f6f0bfde3d585eaa8f9bac52</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkFileForChangesAsync</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileManager.html</anchorfile>
      <anchor>aa425840e19b2912d3044ab70fe8fcdb9</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkFileForChanges</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileManager.html</anchorfile>
      <anchor>aac32a5dcdf7b3d8399ce31d8ad64c972</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkFilesForChanges</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileManager.html</anchorfile>
      <anchor>a09ce505278cea43685f9fb33aa28eb90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forceFileUpdate</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileManager.html</anchorfile>
      <anchor>aeba444c4782526cf347619f17534a153</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validateFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileManager.html</anchorfile>
      <anchor>ae33a06b7f6b326b44bb50bb4e3f1ecac</anchor>
      <arglist>(const AudioFile &amp;, bool updateInfo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseFile</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileManager.html</anchorfile>
      <anchor>ab6c38adbc8576ce5122367dfdb79c3cf</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseAllFiles</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileManager.html</anchorfile>
      <anchor>aa1a18031be76d555ce02cf4a4a994d3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioThumbnailCache &amp;</type>
      <name>getAudioThumbnailCache</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileManager.html</anchorfile>
      <anchor>ac29315f99e9c1b347cecf2c561b5f55b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileManager.html</anchorfile>
      <anchor>ab1374c8d76a8f4fdfef30d87d23ce721</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioProxyGenerator</type>
      <name>proxyGenerator</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileManager.html</anchorfile>
      <anchor>a45d66a0f37c97390fd356c286c4f285e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioFileCache</type>
      <name>cache</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileManager.html</anchorfile>
      <anchor>aefb6e49ba26e1493ee35cea391d772a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>TracktionThumbnailCache</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileManager.html</anchorfile>
      <anchor>aa6cecf210977bf49716b69ce51e10026</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>SmartThumbnail</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileManager.html</anchorfile>
      <anchor>a165e166aa555079606df673362725cc4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AudioFileUtils</name>
    <filename>structtracktion_1_1engine_1_1AudioFileUtils.html</filename>
    <class kind="class">tracktion::engine::AudioFileUtils::EnvelopeFollower</class>
    <class kind="struct">tracktion::engine::AudioFileUtils::MappedFileAndReader</class>
    <member kind="function" static="yes">
      <type>static juce::AudioFormatReader *</type>
      <name>createReaderFor</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a9777db3dd7187f0179c23e9608ace718</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::AudioFormatReader *</type>
      <name>createReaderFindingFormat</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>ade775e9c80775bc7fc93ac4108dc34dd</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;, juce::AudioFormat *&amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::MemoryMappedAudioFormatReader *</type>
      <name>createMemoryMappedReader</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a4b3f366f74b8a0a5bd646dc31325ba6e</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;, juce::AudioFormat *&amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; MappedFileAndReader &gt;</type>
      <name>createMappedFileAndReaderFor</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>ae8b05ddbab0848a4cce8e24cbdf81aee</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::AudioFormatWriter *</type>
      <name>createWriterFor</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>afcd6fb67ce5cedbd1b86efdfa6e6a109</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;, double sampleRate, unsigned int numChannels, int bitsPerSample, const juce::StringPairArray &amp;metadata, int quality)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::AudioFormatWriter *</type>
      <name>createWriterFor</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>ac7f231f557de9969e85aa68792cc1bef</anchor>
      <arglist>(juce::AudioFormat *, const juce::File &amp;, double sampleRate, unsigned int numChannels, int bitsPerSample, const juce::StringPairArray &amp;metadata, int quality)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SampleRange</type>
      <name>scanForNonZeroSamples</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a011407a67a80d889ec8f0e556028ceff</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;, float maxZeroLevelDb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SampleRange</type>
      <name>copyNonSilentSectionToNewFile</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a8c763432f82ec2cc7084b4a9bb6781ff</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;sourceFile, const juce::File &amp;destFile, float maxZeroLevelDb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SampleRange</type>
      <name>trimSilence</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>af6bcc8df391a02a5709a62814e2a5101</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;, float maxZeroLevelDb)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>reverse</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a9581a4cda7c7d177ad2587b4ba357a89</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;source, const juce::File &amp;destination, std::atomic&lt; float &gt; &amp;progress, juce::ThreadPoolJob *job=nullptr, bool canCreateWavIntermediate=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SampleCount</type>
      <name>copySectionToNewFile</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a889e23c1f24cafc485adb53fc25bc8d2</anchor>
      <arglist>(Engine &amp;e, const juce::File &amp;sourceFile, const juce::File &amp;destFile, SampleRange range)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SampleCount</type>
      <name>copySectionToNewFile</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a2b9b0d0918b88993b49470c6dba81c40</anchor>
      <arglist>(Engine &amp;e, const juce::File &amp;sourceFile, const juce::File &amp;destFile, TimeRange range)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addBWAVStartToMetadata</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a6b79b761890bd82c71417b3fb66ba52c</anchor>
      <arglist>(juce::StringPairArray &amp;metadata, SampleCount start)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>applyBWAVStartTime</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a27a65ad535070a609974f607a860a42e</anchor>
      <arglist>(const juce::File &amp;, SampleCount start)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SampleCount</type>
      <name>getFileLengthSamples</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>ac47b7711dcaa4c2110709e25fa548b6b</anchor>
      <arglist>(Engine &amp;e, const juce::File &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>convertToFormat</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>afe72abfaf59a1c168998756b8d78c4fc</anchor>
      <arglist>(Engine &amp;e, const juce::File &amp;sourceFile, juce::OutputStream &amp;destStream, int quality, const juce::StringPairArray &amp;metadata, juce::int64 blockSize=-1, std::function&lt; bool()&gt; continuePredicate={}, std::function&lt; void(float)&gt; updateProgress={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>convertToFormat</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a5f62fa60f96251eaec99846f6fe3bc06</anchor>
      <arglist>(juce::AudioFormatReader *reader, juce::OutputStream &amp;destStream, int quality, const juce::StringPairArray &amp;metadata, juce::int64 blockSize=-1, std::function&lt; bool()&gt; continuePredicate={}, std::function&lt; void(float)&gt; updateProgress={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>readFromFormat</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils.html</anchorfile>
      <anchor>a748ab45aa53a92eb8d6883b3b74d5b37</anchor>
      <arglist>(Engine &amp;engine, juce::InputStream &amp;source, const juce::File &amp;dest)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AudioFileWriter</name>
    <filename>classtracktion_1_1engine_1_1AudioFileWriter.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioFileWriter</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>ad565465c7ed43ea98831858f34e345ae</anchor>
      <arglist>(const AudioFile &amp;file, juce::AudioFormat *formatToUse, int numChannels, double sampleRate, int bitsPerSample, const juce::StringPairArray &amp;metadata, int quality)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioFileWriter</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>a098b78f025a1451ad7d3e6beb57a5fd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>ae4eef1e6efc0b1894592155d97c2cb4e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>a05b70a78399bb4a5c59704b975e17882</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>abe17875fb7328a0ef7a1a5d3f44c8998</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>appendBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>ab03f29e040732795f06460ffe85d4cc7</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;buffer, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>appendBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>af8c8dd125d563b2e4c78ede9dd832c66</anchor>
      <arglist>(const int **buffer, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeFromAudioReader</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>ad44929849e610719852be217dbc15ccc</anchor>
      <arglist>(juce::AudioFormatReader &amp;, SampleCount startSample, SampleCount numSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeForWriting</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>ae7ff5b0c04dcfeb54523df2a0d38cb7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AudioFile</type>
      <name>file</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileWriter.html</anchorfile>
      <anchor>aa790dcc67bcf8880a4756a8697ec683a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AudioMidiFifo</name>
    <filename>classtracktion_1_1engine_1_1AudioMidiFifo.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioMidiFifo</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioMidiFifo.html</anchorfile>
      <anchor>a2d361a1cef14fc1ed3555d6d76ff0d3f</anchor>
      <arglist>(int channels=2, int maxSize=1024)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioMidiFifo.html</anchorfile>
      <anchor>a898428f5369775358c79d15e3f102a63</anchor>
      <arglist>(int channels, int maxSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioMidiFifo.html</anchorfile>
      <anchor>a78b4aefaa35fac941dd7534ea39ba605</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSamplesAvailable</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioMidiFifo.html</anchorfile>
      <anchor>ac94d54078d0d4f6891b20530403275d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSamplesFree</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioMidiFifo.html</anchorfile>
      <anchor>a4555937741b7972403d91772fc6ebf83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeSilence</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioMidiFifo.html</anchorfile>
      <anchor>a35f0ba5b112fe3d5386709b7c0e692ea</anchor>
      <arglist>(int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeAudioAndMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioMidiFifo.html</anchorfile>
      <anchor>a5cb8a117e7b57070e4bcd0c496b46620</anchor>
      <arglist>(const juce::AudioBuffer&lt; float &gt; &amp;audioSrc, const juce::MidiBuffer &amp;midiSrc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readAudioAndMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioMidiFifo.html</anchorfile>
      <anchor>a15c961cd1f2321485b731e164fb64945</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;audioDst, juce::MidiBuffer &amp;midiDst)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AudioModificationWrapper</name>
    <filename>classAudioModificationWrapper.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioModificationWrapper</name>
      <anchorfile>classAudioModificationWrapper.html</anchorfile>
      <anchor>ab8e025764ef18f2e0e5bc04a544cb821</anchor>
      <arglist>(ARADocument &amp;d, AudioSourceWrapper &amp;source, const juce::String &amp;itemID, AudioModificationWrapper *instanceToClone)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioModificationWrapper</name>
      <anchorfile>classAudioModificationWrapper.html</anchorfile>
      <anchor>a9ea64893c5fda34f4d68bb4fe316bac1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SizedStruct&lt; ARA_STRUCT_MEMBER(ARAAudioModificationProperties, persistentID)&gt;</type>
      <name>getAudioModificationProperties</name>
      <anchorfile>classAudioModificationWrapper.html</anchorfile>
      <anchor>a486ae486e16d0d471878965289c34b4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ARADocument &amp;</type>
      <name>doc</name>
      <anchorfile>classAudioModificationWrapper.html</anchorfile>
      <anchor>acb800caadecef6dc03ef28391b154325</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioSourceWrapper &amp;</type>
      <name>audioSource</name>
      <anchorfile>classAudioModificationWrapper.html</anchorfile>
      <anchor>a7a852e770362c22df78c61ece2034d29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ARAAudioModificationRef</type>
      <name>audioModificationRef</name>
      <anchorfile>classAudioModificationWrapper.html</anchorfile>
      <anchor>a1988458616dbba2ffc7cc6cdd96018e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AudioNode</name>
    <filename>classtracktion_1_1engine_1_1AudioNode.html</filename>
    <member kind="typedef">
      <type>std::function&lt; void(AudioNode &amp;)&gt;</type>
      <name>VisitorFn</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioNode.html</anchorfile>
      <anchor>a52c19135ada560f55f79654428c89dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioNode</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioNode.html</anchorfile>
      <anchor>a9c2a6673e7429ac3420a2f60f30094b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AudioNode</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioNode.html</anchorfile>
      <anchor>a7933c647c5a68f89405dd59f70611122</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getAudioNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioNode.html</anchorfile>
      <anchor>a0de60f376aeb8a304efd1aa41c31d951</anchor>
      <arglist>(AudioNodeProperties &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>prepareAudioNodeToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioNode.html</anchorfile>
      <anchor>aa9c01ef3c279c114e400df5669a23bd2</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>purgeSubNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioNode.html</anchorfile>
      <anchor>a44c1ca2b7ba63a8f29c2166adc0b2e60</anchor>
      <arglist>(bool keepAudio, bool keepMidi)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>releaseAudioNodeResources</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioNode.html</anchorfile>
      <anchor>a4148912f8931e49b09ceec46a4d29838</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>visitNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioNode.html</anchorfile>
      <anchor>a579daf2892779594e253733139a76cf6</anchor>
      <arglist>(const VisitorFn &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::ReferenceCountedObjectPtr&lt; Plugin &gt;</type>
      <name>getPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioNode.html</anchorfile>
      <anchor>a4010199445d4fe55add44b5b250e76c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prepareForNextBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioNode.html</anchorfile>
      <anchor>a046be169e999676a3c83df7046ad4da0</anchor>
      <arglist>(const AudioRenderContext &amp;)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isReadyToRender</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioNode.html</anchorfile>
      <anchor>a0bcc82583a8cf797423e2b40ee299eb5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>renderOver</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioNode.html</anchorfile>
      <anchor>a439d0c0695c021e5308a71a926f956a6</anchor>
      <arglist>(const AudioRenderContext &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>renderAdding</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioNode.html</anchorfile>
      <anchor>ad0e96fe6ffc138aa54c2a5de0191a760</anchor>
      <arglist>(const AudioRenderContext &amp;)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callRenderAdding</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioNode.html</anchorfile>
      <anchor>a4f89992b04917375210333a3bbf0cafc</anchor>
      <arglist>(const AudioRenderContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callRenderOver</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioNode.html</anchorfile>
      <anchor>a6b82225987c4292c9dee4850ea06253c</anchor>
      <arglist>(const AudioRenderContext &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>invokeSplitRender</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioNode.html</anchorfile>
      <anchor>a8c46c312a79e968af389589efb24a0bb</anchor>
      <arglist>(const AudioRenderContext &amp;rc, CallbackType &amp;target)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AudioNodeProperties</name>
    <filename>structtracktion_1_1engine_1_1AudioNodeProperties.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>hasAudio</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioNodeProperties.html</anchorfile>
      <anchor>afc92747608cfb3799b0145ea2124d568</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hasMidi</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioNodeProperties.html</anchorfile>
      <anchor>a52c1b5eb681413d57ad0095a548e952e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numberOfChannels</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioNodeProperties.html</anchorfile>
      <anchor>aea17a27c9578e6e4549220633e57525e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AudioProxyGenerator</name>
    <filename>classtracktion_1_1engine_1_1AudioProxyGenerator.html</filename>
    <class kind="struct">tracktion::engine::AudioProxyGenerator::GeneratorJob</class>
    <member kind="function">
      <type></type>
      <name>AudioProxyGenerator</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioProxyGenerator.html</anchorfile>
      <anchor>a362b106ec6b53cdac65c96650d29511a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioProxyGenerator</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioProxyGenerator.html</anchorfile>
      <anchor>a7ee004d5b0bf14b241f5cb28b2e1eefc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteProxy</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioProxyGenerator.html</anchorfile>
      <anchor>a5516e50bcfc8284aee5294bbbff2137a</anchor>
      <arglist>(const AudioFile &amp;proxyFile)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isProxyBeingGenerated</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioProxyGenerator.html</anchorfile>
      <anchor>acba1bb81a4857b9c822482b25b3c7aec</anchor>
      <arglist>(const AudioFile &amp;proxyFile) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getProportionComplete</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioProxyGenerator.html</anchorfile>
      <anchor>a30605535a20ccd6d7a36eebe68e11245</anchor>
      <arglist>(const AudioFile &amp;proxyFile) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginJob</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioProxyGenerator.html</anchorfile>
      <anchor>a771f3b5dfb8ec86311c0bda1afa3d3cf</anchor>
      <arglist>(GeneratorJob *)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AudioRenderContext</name>
    <filename>structtracktion_1_1engine_1_1AudioRenderContext.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ContinuityFlags</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>af677a61efc8ba15458a11a3170aa6b78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>contiguous</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>af677a61efc8ba15458a11a3170aa6b78af32c8b33106c90c712a633c2065e17aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>playheadJumped</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>af677a61efc8ba15458a11a3170aa6b78acb0d6b4e1401630a8be774b1d9fb8e39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lastBlockBeforeLoop</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>af677a61efc8ba15458a11a3170aa6b78ae04a0d0c5db76cc5bc2b919aaef9be8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>firstBlockOfLoop</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>af677a61efc8ba15458a11a3170aa6b78ad800987ce912fe0392ff379d105968e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>contiguous</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>af677a61efc8ba15458a11a3170aa6b78af32c8b33106c90c712a633c2065e17aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>playheadJumped</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>af677a61efc8ba15458a11a3170aa6b78acb0d6b4e1401630a8be774b1d9fb8e39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lastBlockBeforeLoop</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>af677a61efc8ba15458a11a3170aa6b78ae04a0d0c5db76cc5bc2b919aaef9be8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>firstBlockOfLoop</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>af677a61efc8ba15458a11a3170aa6b78ad800987ce912fe0392ff379d105968e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioRenderContext</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a8ac438b0d41b5c048a66d5ee7a7972b3</anchor>
      <arglist>(PlayHead &amp;ph, legacy::EditTimeRange stream, juce::AudioBuffer&lt; float &gt; *buffer, const juce::AudioChannelSet &amp;bufferChannels, int bufferStart, int bufferSize, MidiMessageArray *midiBuffer, double midiOffset, int continuityFlags, bool rendering) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioRenderContext</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a4c8a9c0aaee67f0d916f89fe31cb9636</anchor>
      <arglist>(const AudioRenderContext &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioRenderContext</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a6dbea7e3fd9196904f69ed019f5aa911</anchor>
      <arglist>(AudioRenderContext &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>AudioRenderContext &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a1d8fa00ca2ba8717ea45deaf545b43fb</anchor>
      <arglist>(const AudioRenderContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AudioRenderContext &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a0300cad4f5a95d0949dc0e5bf31c79fa</anchor>
      <arglist>(AudioRenderContext &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContiguousWithPreviousBlock</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>ae6fe68bc98a082dbbbb4ba3c3f3341a7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFirstBlockOfLoop</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a25f06a30f1794ad665561f12ffc2312c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLastBlockOfLoop</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a19ea93082f902f2a4d403b12e84e1c93</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>didPlayheadJump</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a64b1858058382c6324b52a42a1a11b98</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>PlayHead::EditTimeWindow</type>
      <name>getEditTime</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>ae593c36791cca5b37d48ebd42b0aa717</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAudioBuffer</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>ac50cce276a8d7b98412bf05c1e2bd5a2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearMidiBuffer</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>ae682d980484d65f4163ee526171db4e5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAll</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a515c5d171ca9ae5c2db071d6a0fa5a4d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAntiDenormalisationNoise</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a235685543068606bd7752085f62bd20f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanityCheck</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a690ae9b7fb7b3fab8bfefb30f8b90c25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>PlayHead &amp;</type>
      <name>playhead</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a7645886316a69163fbfb1b5a2f57b6f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>legacy::EditTimeRange</type>
      <name>streamTime</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>afc57dcdb5976ba618d4f882d89c653c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioBuffer&lt; float &gt; *</type>
      <name>destBuffer</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>abd66885778db6bc7f808fc3f2290bd67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioChannelSet</type>
      <name>destBufferChannels</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a11649583b9538391f817f3d3a24d607f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bufferStartSample</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a51aff9a454a26544836803677fcdb104</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bufferNumSamples</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a1b4c139fd64b62b5850eaa8f0c2b2e83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MidiMessageArray *</type>
      <name>bufferForMidiMessages</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a23bb34b74ec1e6b8a6f5c35577b9f8e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>midiBufferOffset</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>adc3742b1f42c9abfed53c1f4437b48f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>continuity</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>aec1dbcecdbc6e4d1974c39db4a0f2bbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isRendering</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioRenderContext.html</anchorfile>
      <anchor>a1b4071e85822ce67260fb5087a29b22e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AudioScratchBuffer</name>
    <filename>classtracktion_1_1engine_1_1AudioScratchBuffer.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioScratchBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioScratchBuffer.html</anchorfile>
      <anchor>a7ef514bee575e1333fbb5fb390956c25</anchor>
      <arglist>(int numChans, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioScratchBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioScratchBuffer.html</anchorfile>
      <anchor>a72910cf02b6873e59c40e20e325a8c72</anchor>
      <arglist>(const juce::AudioBuffer&lt; float &gt; &amp;bufferToCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioScratchBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioScratchBuffer.html</anchorfile>
      <anchor>a4cb51699078cd93645d397213e2824e3</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioScratchBuffer.html</anchorfile>
      <anchor>aa8a8009072331bcc66928e23ea3d13ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioBuffer&lt; float &gt; &amp;</type>
      <name>buffer</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioScratchBuffer.html</anchorfile>
      <anchor>a41f2fe55fa0fc658d20963ab1e8310bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AudioSegmentList</name>
    <filename>classtracktion_1_1engine_1_1AudioSegmentList.html</filename>
    <class kind="struct">tracktion::engine::AudioSegmentList::Segment</class>
    <member kind="function">
      <type>const juce::Array&lt; Segment &gt; &amp;</type>
      <name>getSegments</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>ac1a2440061f00b65995fcc649c6fcaa9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getStart</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>a32803317ab5c58f02cf4478ed6207785</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getEnd</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>ae4ba63effa8625c932415783894fa7fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getLength</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>acbdbee41a6da9da10227ad3e1b5aae08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getCrossfadeLength</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>ad315d24eea27d984af080952c3fc9cf9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>a79bff437bb43b6dd2ee5690f601ca018</anchor>
      <arglist>(const AudioSegmentList &amp;) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>ab2f7fdf9bd60282b2e48985105dbf385</anchor>
      <arglist>(const AudioSegmentList &amp;) const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; AudioSegmentList &gt;</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>a128d9ec49ffe2f2a39f7851ebdeaa4d5</anchor>
      <arglist>(AudioClipBase &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; AudioSegmentList &gt;</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>a5b79b7219894b40c9c4f74f76d91180a</anchor>
      <arglist>(AudioClipBase &amp;, bool relativeTime, bool crossFade)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; AudioSegmentList &gt;</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>a032df140a91e017c308ad897e5e528fa</anchor>
      <arglist>(AudioClipBase &amp;, const WarpTimeManager &amp;, const AudioFile &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; AudioSegmentList &gt;</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioSegmentList.html</anchorfile>
      <anchor>a14ae4daf6100de2e41acd5bc7c9590df</anchor>
      <arglist>(AudioClipBase &amp;, const WarpTimeManager &amp;, const AudioFileInfo &amp;, const LoopInfo &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AudioSourceWrapper</name>
    <filename>classAudioSourceWrapper.html</filename>
    <member kind="function">
      <type></type>
      <name>AudioSourceWrapper</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>ad27c0d85cc3ac293c4e309c33de97c11</anchor>
      <arglist>(ARADocument &amp;d, AudioClipBase &amp;audioClip)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioSourceWrapper</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>a7ab47be6377ff39c7cf731004e0712d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NodeReader *</type>
      <name>createReader</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>ae65e26a2696bab6c4a01e7f277b9841f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableAccess</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>ae1c92beb12adfa6090b8d5b5f55d1861</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>SizedStruct&lt; ARA_STRUCT_MEMBER(ARAAudioSourceProperties, merits64BitSamples)&gt;</type>
      <name>getAudioSourceProperties</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>abaf8c6187ec25d5f43cf8ae3d10d9e6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARAAudioReaderHostRef ARA_CALL</type>
      <name>createAudioReaderForSource</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>a1e4289e373b1c097a2ca63a7b9b1a1d7</anchor>
      <arglist>(ARAAudioAccessControllerHostRef, ARAAudioSourceHostRef hostAudioSourceRef, ARABool)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARABool ARA_CALL</type>
      <name>readAudioSamples</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>a0526e39aa694565aa8388ac5fd3a6943</anchor>
      <arglist>(ARAAudioAccessControllerHostRef, ARAAudioReaderHostRef hostReaderRef, ARASamplePosition samplePosition, ARASampleCount samplesPerChannel, void *const *buffers)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>destroyAudioReader</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>a727d95ac5f99b9fbe730383775e7c81c</anchor>
      <arglist>(ARAAudioAccessControllerHostRef, ARAAudioReaderHostRef hostReaderRef)</arglist>
    </member>
    <member kind="variable">
      <type>ARADocument &amp;</type>
      <name>doc</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>a50e455bc5ad9f834f8c7b8e97f0e26fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioClipBase &amp;</type>
      <name>clip</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>a5518053b506dbc5c57db1f8633437c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ARAAudioSourceRef</type>
      <name>audioSourceRef</name>
      <anchorfile>classAudioSourceWrapper.html</anchorfile>
      <anchor>aa7f72ec701a1be113fc614bd52302d2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AudioTrack</name>
    <filename>classtracktion_1_1engine_1_1AudioTrack.html</filename>
    <base>tracktion::engine::ClipTrack</base>
    <base>tracktion::engine::MacroParameterElement</base>
    <class kind="struct">tracktion::engine::AudioTrack::FreezePointRemovalInhibitor</class>
    <class kind="struct">tracktion::engine::AudioTrack::Listener</class>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; AudioTrack &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a0bc387f3f06f26005be2279a55e130fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AudioTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a4d6305d348d2f0b3cfeeda4f265bfb8f</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AudioTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>acfb5f4e36cdcb743b95275daa1439315</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a3bb61627a832bc4b9ce73c79ab1066dc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAudioTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a98477081f7ac3b661088b2996bf72f3f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>ad5748c2f1bc8157e34513518b023f88d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAudioTrackNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a6fae13c7fdf219dbf87aae38a356444f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanityCheckName</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a4e0678b07c0857bb6d85bfe7c86190c8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a8c3596278ac2fb200b909301097de0e8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getNameAsTrackNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>af48c818c6eb39c35530dab9625b89a5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getNameAsTrackNumberWithDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>ad334543e01a20718b7e7d451de6be465</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a126f994223a9ee8108e052a1232d778d</anchor>
      <arglist>(Plugin *) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>processAudioNodesWhileMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a28e0de2c583d5f6bdc37849912dc1f58</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTrackPlayabilityWarning</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a5ec63b1ecaa5dd645f5bdbb04a3f7896</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getLauncherPlayabilityWarning</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a9539bd3d47b395745e992bfab3b5670c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VolumeAndPanPlugin *</type>
      <name>getVolumePlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a813159d54fd5775645600a1fa754de8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LevelMeterPlugin *</type>
      <name>getLevelMeterPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>aa53c8c493ee786ea25004e835fff14fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EqualiserPlugin *</type>
      <name>getEqualiserPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>af20f016102124f5acc0d272339f77f59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AuxSendPlugin *</type>
      <name>getAuxSendPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a2018dd515b0a36b1894706dd8b238100</anchor>
      <arglist>(int bus=-1, AuxPosition ap=AuxPosition::byBus) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getNameForMidiNoteNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a1dafc60fb4f0d9a242f294d8a0d22856</anchor>
      <arglist>(int note, int midiChannel, bool preferSharp=true) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getNameForProgramNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>ad9bb2f1a6134ac4e6b80b59285b6a4df</anchor>
      <arglist>(int programNumber, int bank) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getNameForBank</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a7885c42bdf8ae42f7a2618f279ef13b1</anchor>
      <arglist>(int bank) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIdForBank</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>ac3f7353b351c063fdcbcdf4c9eab0506</anchor>
      <arglist>(int bank) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areMidiPatchesZeroBased</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>ae1027a4eb7d98041dd17c18b654a97f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WaveInputDevice &amp;</type>
      <name>getWaveInputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a4607a476d628d784ca5544a5790c5a26</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>MidiInputDevice &amp;</type>
      <name>getMidiInputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>add0a9c917ccb1d3439d41f4c828c9ab3</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TrackOutput &amp;</type>
      <name>getOutput</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a20fa742896717a5f9890aa8bbdd7284c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNumOfInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a009b53e5e58416b00b4d63b58eb9d685</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxNumOfInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a37a9bcefd32c6eaf82756aeb2fb0f455</anchor>
      <arglist>(int newMaxNumber)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canPlayAudio</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a1bc4a9cc0dd5fecf0686ec28e2799430</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canPlayMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>abd31a07803c72828fa028529b4def70b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ClipSlotList &amp;</type>
      <name>getClipSlotList</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a9ab14c683022b44d7133b81041beb140</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFrozen</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a6108715e0b83e25bdc5aa2db80ac2470</anchor>
      <arglist>(FreezeType) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrozen</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a94be1224031172ec710964de518ad7a1</anchor>
      <arglist>(bool, FreezeType) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertFreezePointAfterPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a625e90e64bf21b6334ba19197e699fae</anchor>
      <arglist>(const Plugin::Ptr &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFreezePoint</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a508d3ac2a99badea0a6ba1b08cf3286a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freezeTrackAsync</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a38ecd15ea2861c6abb42acb1c7bb2873</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAnyLiveInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>ade9cf5352c33af0043b1ea9125af348d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAnyTracksFeedingIn</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a9d4858923c52167de17f58155c959b10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>getInputTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a424410c39bcc074a18f7137b4f2f64ce</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>findSidechainSourceTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a96e0ea6eded4d36ab11bdf0e8f7067d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>injectLiveMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a1ade3e0160fc555d6f9a6a65062fad4f</anchor>
      <arglist>(const MidiMessageWithSource &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>injectLiveMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>ad0204a26b17a0f6311cec931ed1379ad</anchor>
      <arglist>(const juce::MidiMessage &amp;, MPESourceID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a930c680836f894b9029124a45fc93f95</anchor>
      <arglist>(bool includeMutingByDestination) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSolo</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a30d873c9e0bb4cde78d9bf1f004d8faa</anchor>
      <arglist>(bool includeIndirectSolo) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSoloIsolate</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>aa4f303f9d8a48854d8aa8cd410528558</anchor>
      <arglist>(bool includeIndirectSolo) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMute</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a9fb2412426e7e5980a7c3b6b975fe6ed</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSolo</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a682d44747bc9a5d29f7bb4a6b48d47a0</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoloIsolate</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a97e4a4264a7bb512d8258360658df26b</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMidiVisibleProportion</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>acecd188fd1174d5bff98f84aa505466f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMidiVerticalOffset</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>aaac1f621e592976e57a732332279c4e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidiVerticalPos</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>aa0b95650ba032011fc1026c469ff1853</anchor>
      <arglist>(double visibleProp, double offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleVerticallyToFitMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a172c9ae37dc560237c2606878df83140</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerticalScaleToDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a370d88ecff3fa2cebdd50ef2bb805e42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTrackToGhost</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a9a7846001be4e9b3e14aa2dfd29b758e</anchor>
      <arglist>(AudioTrack *, bool shouldGhost)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearGhostTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a5154c994bb3331d8d4b0f4f04a54ac1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AudioTrack * &gt;</type>
      <name>getGhostTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a4e9a9d5e01fb4ae436d1c84e494cbac0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCompGroup</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>aae97ebcf41e8cd9e27974c6ea8ca696b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCompGroup</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a4286f008c70d69d73145ffe412d101de</anchor>
      <arglist>(int groupIndex)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMidiNoteNames</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>afea093b4e8dedf2ba1ffe6745b756c6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearMidiNoteNames</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>acd3e78fb8934a330cc87ea292f0e8760</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadMidiNoteNames</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>aa0ef6b45587ea44ba58895394eacb3c2</anchor>
      <arglist>(const juce::String namesFile)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mergeInMidiSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a158980cd171edd515ed4ef1b451e517c</anchor>
      <arglist>(juce::MidiMessageSequence, TimePosition startTime, MidiClip *, MidiList::NoteAutomationType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playGuideNote</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a4045f35b669f4a0e05203a1868f436fa</anchor>
      <arglist>(int note, MidiChannel midiChannel, int velocity, bool stopOtherFirst=true, bool forceNote=false, bool autorelease=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playGuideNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a7ebd247950bc0f5dacae586beadc0448</anchor>
      <arglist>(const juce::Array&lt; int &gt; &amp;notes, MidiChannel midiChannel, const juce::Array&lt; int &gt; &amp;velocities, bool stopOthersFirst=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>turnOffGuideNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a2959f90c2246d9e6cee0042a4f1b5e61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>turnOffGuideNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>ac87c3de937d2b5fa663175f141b138d3</anchor>
      <arglist>(MidiChannel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a8d9e63fe3afd6285a33fc00a2119a28e</anchor>
      <arglist>(Listener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a75224af3254a7f10657d69b716ed3f66</anchor>
      <arglist>(Listener *)</arglist>
    </member>
    <member kind="function">
      <type>juce::ListenerList&lt; Listener &gt; &amp;</type>
      <name>getListeners</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>ad48749bd088e8e1818ae293ba4e6699c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; AtomicWrapper&lt; bool &gt; &gt;</type>
      <name>playSlotClips</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a1be8af23bc6090f5a841604b6069218a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a0e9bee837139daaf8e36a58fe8e2c244</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a8b535171a8231ad33fc60a6bd88a8e8a</anchor>
      <arglist>(juce::ValueTree &amp;v) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isTrackAudible</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a5498beb471f00d25690c0831429b4840</anchor>
      <arglist>(bool areAnyTracksSolo) const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a4d9f8808150cf20d6c2e980fa90a4f7b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend struct</type>
      <name>TrackMuter</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a15870834926e87a5d0fca6115fd44cbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Edit</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a29ce00a70feb24568c516f4510436aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Clip</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioTrack.html</anchorfile>
      <anchor>a54cda048f452a2acf4d0cf488fece5cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AutomatableEditItem</name>
    <filename>classtracktion_1_1engine_1_1AutomatableEditItem.html</filename>
    <base>tracktion::engine::EditItem</base>
    <class kind="struct">tracktion::engine::AutomatableEditItem::ParameterListChangeListener</class>
    <member kind="function">
      <type></type>
      <name>AutomatableEditItem</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>af91d93e444e7a61f353e7f662ef2369e</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AutomatableEditItem</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a3f608afa44811968133b7ffdb894a507</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>flushPluginStateToValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>aa341d6975fca9c013b95e6bb84484314</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a8022e309a5cc0b6a8cb320dd12636533</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomatableParameter * &gt;</type>
      <name>getAutomatableParameters</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a004e1f22ebcd9ca9f60efc87bba4c889</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumAutomatableParameters</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>afe67d24b2f9ee15324eadf59119cb481</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::Ptr</type>
      <name>getAutomatableParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>ae70adaf741c5b4e8087ab57537dc2172</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::Ptr</type>
      <name>getAutomatableParameterByID</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a414d73213241a4b66d1ab8383f4d01ac</anchor>
      <arglist>(const juce::String &amp;paramID) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitAllAutomatableParams</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a52316c3a3a92a7bafe60d47c56a978ef</anchor>
      <arglist>(const std::function&lt; void(AutomatableParameter &amp;)&gt; &amp;visit) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a1da30513d7db5a718a0063dd37701dee</anchor>
      <arglist>(AutomatableParameter *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteAutomatableParameters</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a51a8dc5a1ebab769be44495100cf4f86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfAutomatableParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>abd9333ec3d2331a30bdc3a9a1a3f158a</anchor>
      <arglist>(const AutomatableParameter::Ptr &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameterTree &amp;</type>
      <name>getParameterTree</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>aaa5d29ded924926bed35c8c57d81a733</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; AutomatableParameter &gt;</type>
      <name>getFlattenedParameterTree</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a785679ec3fbcb8863db07cbfbfde919a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addParameterListChangeListener</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a5cb6fe7ad9ff4043b3d28df2aebfc9c1</anchor>
      <arglist>(ParameterListChangeListener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeParameterListChangeListener</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>ad193c72212d626efdb6167ac94806ae0</anchor>
      <arglist>(ParameterListChangeListener *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAutomationNeeded</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a907f9f7bed93caa5b9f34bccecb7cb67</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutomatableParamPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a3953f894e4f40d5350aa201beda1712f</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBeingActivelyPlayed</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a761550a1c3eef918140cdc37fb2011c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateAutomatableParamPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>afd19900c581ad1056c5d21e20734178e</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParameterStreams</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>acfc5589b65922bc1c2c50283f722af24</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateActiveParameters</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>aa30b3e93096387728829dca4e7de3879</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetRecordingStatus</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a0b9813efc3d04e5b7978c79cc7955eba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>elementState</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a80d4d5cd72c16da7976c2b91162507ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>remapOnTempoChange</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a531cca5c042faae2a4acee1bcd347801</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>buildParameterTree</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>ac381cf292240937dbf87aecdd9779344</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLastPlaybackTime</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a80a868d7cc27d947d1d86fed84d7f666</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearParameterList</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>ad1f22e24b463b7b02f2a6a3d21c31d05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addAutomatableParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>aad49be9acc166e2d06ff18596cba300e</anchor>
      <arglist>(const AutomatableParameter::Ptr &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>rebuildParameterTree</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a3dfad77afd756554e6bfc2d7fc160d28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>saveChangedParametersToState</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a8895516ec824d26a8b33eb94d9f1cb7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>restoreChangedParametersFromState</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableEditItem.html</anchorfile>
      <anchor>a73601dcc451f94e9e63b7b0a68c28b57</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AutomatableParameter</name>
    <filename>classtracktion_1_1engine_1_1AutomatableParameter.html</filename>
    <base>tracktion::engine::Selectable</base>
    <class kind="struct">tracktion::engine::AutomatableParameter::Listener</class>
    <class kind="struct">tracktion::engine::AutomatableParameter::ModifierAssignment</class>
    <class kind="struct">tracktion::engine::AutomatableParameter::ModifierSource</class>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; AutomatableParameter &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a52cf1de436f7a69de68cf9845a4294fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; AutomatableParameter &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ab4746d9c9663430beba5b4fb901b683d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AutomatableParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a8722db88ad19fea0fe0a01bcf5e79a18</anchor>
      <arglist>(const juce::String &amp;paramID, const juce::String &amp;name, AutomatableEditItem &amp;, juce::NormalisableRange&lt; float &gt; valueRange)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AutomatableParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a67b806730496f43daf61a4d73b021caf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; float &gt;</type>
      <name>getValueRange</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a17e13071a03f742785c522e39ece03a1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Plugin *</type>
      <name>getPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>aa444df09a923f0a038c8928b48b2e986</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Engine &amp;</type>
      <name>getEngine</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a96727ceb9c02f93863f23e70ad8977d2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Edit &amp;</type>
      <name>getEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>aed487de8d8396a1961762b6d4f8bbe4f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>add167f636468e21107623aedcc4a76f9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AutomationCurve &amp;</type>
      <name>getCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>aa941e83fd72c657d00f9ed14caf4b262</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attachToCurrentValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a918b2cab734fb96ea6412554b7666bd3</anchor>
      <arglist>(juce::CachedValue&lt; float &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attachToCurrentValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a15c30068ee4e941c1cec434c218f308e</anchor>
      <arglist>(juce::CachedValue&lt; int &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attachToCurrentValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ae6dbd900f12f9100db014a39c91208e8</anchor>
      <arglist>(juce::CachedValue&lt; bool &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFromAttachedValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>af93bc302b09f7de51dcc884b552a4c08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detachFromCurrentValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>acdf592b30d053a20a81e88afd47a2d4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getParameterName</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ad901860610f3995165567dd79a09b659</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getParameterShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ad9a95658eca66fa30143e05f22f32623</anchor>
      <arglist>(int) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getLabel</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>abc7156127f4ecfd46d7b94b9266bc92b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getPluginAndParamName</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a6c9d693fe0441081a8d4f2162fb45bbc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getFullName</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a652fef901f2593fd7a51dc75f48e82e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Selectable *</type>
      <name>getOwnerSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ad782657ee1666a5be00643e04a92a1a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>getOwnerID</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>aca398d257d87af196ce9b615fbe4c7ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a935681c062d468a452eb0219a1045a81</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentNormalisedValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ad37aced8c4c603ae1bd412427feba32d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>valueToString</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a2d3327eca55e877e8d6ef2646bc815cd</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>stringToValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a9b832cc1aa5edfd92d5e8372ffc5ab0a</anchor>
      <arglist>(const juce::String &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getCurrentValueAsString</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ad84306ee9fb7807c554adcd1dd51ea83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getCurrentValueAsStringWithLabel</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a60fd8396c77c50fb96f5891d5f698cd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>beginParameterChangeGesture</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a97835602c3c5e4eb776f76dc5116a4d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endParameterChangeGesture</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a05864c95e4da3306c0b951d56929f23e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a472899e6572a9022eade9880ad48813b</anchor>
      <arglist>(float value, juce::NotificationType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNormalisedParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>afe67a286bce60340e70e6551f9278e59</anchor>
      <arglist>(float value, juce::NotificationType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateToFollowCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a39b368aafd3c5074a6f97756558bbf0f</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameterChangeGestureBegin</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a0ec22fb983742f4276fcd5705d5bce67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameterChangeGestureEnd</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>af5ed60a8f081da4ead90a81278211033</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAutomationPoints</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a80543c2a7aeb447bee9782502b68c0ea</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ModifierAssignment::Ptr</type>
      <name>addModifier</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>abde8c499041c160f27ebe6ba89a37619</anchor>
      <arglist>(ModifierSource &amp;, float value=1.0f, float offset=0.0f, float curve=0.5f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeModifier</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a0a1fb1ad319d3476cbb0ff92d6c8d56b</anchor>
      <arglist>(ModifierAssignment &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeModifier</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>abbd68ddbafde89315a718613cf52a046</anchor>
      <arglist>(ModifierSource &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasActiveModifierAssignments</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a550a57d07dec0398cce3fda9ec2bcd52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; ModifierAssignment &gt;</type>
      <name>getAssignments</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a6d6159b8ab3fc6d7ff52be36047f0216</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ModifierSource * &gt;</type>
      <name>getModifiers</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a34eb14e88874a0a33dcde7d62a465cca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentExplicitValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a84ac6e339338267fb86a33d28828babc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentBaseValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ab312f920615a2745318b031ea04949d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentModifierValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ab96e18903b5416d74a1caf9fde042cf9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAutomationActive</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>aa73c927c0ad55f90b04ff17052356656</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateStream</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a9439def839c6a8bb6816c2a8f3c776f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFromAutomationSources</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>aa4d694aea64c991c13ea07651435f2d3</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isParameterActive</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a01029e8d780c7e866c9e9703df121e86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDiscrete</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a005b491fd79664376ea613caa80dba3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumberOfStates</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ae7e01b3593f218a8b070ab8b9a8bb67d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getValueForState</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a5d23178d173dea518851f77611fced12</anchor>
      <arglist>(int) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getStateForValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ae6d8d4fc3b1c8b7cf3fa899cf6e7ae7b</anchor>
      <arglist>(float) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::optional&lt; float &gt;</type>
      <name>getDefaultValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a35f62b37f4b18644357e34e81eb51da5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasLabels</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a7a345bf17ffe89d11588026c1765cb11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getLabelForValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>afded15d9dbf25466aca7358c8893aa72</anchor>
      <arglist>(float) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>snapToState</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a80c91cfef7677788461ade596e6b07df</anchor>
      <arglist>(float val) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::StringArray</type>
      <name>getAllLabels</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a76a3a804f8c0e28642d220220b4bb66e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCurrentlyRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a271a05d9ac60597f55360ee2fb9443ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetRecordingStatus</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a5eadf9b15ef4aac7924271d8619f993b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>midiControllerMoved</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a68dce21b0051d5c6813f62d5432d0984</anchor>
      <arglist>(float newPosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>midiControllerPressed</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a2fdde07827fc12c14f2e46204d5c6f91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>curveHasChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>abc62f9241db95f1a873f87f3f5e3ccef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a596da8a1e990a5dfb1f79cf318a0b752</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a657b960313e91562fb33630b1c955ad7</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ab59cf0035fcef2a2a401cb71f326a953</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="variable">
      <type>const juce::String</type>
      <name>paramID</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ab3759490de0d851f7e1bd8d05a29377f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const juce::NormalisableRange&lt; float &gt;</type>
      <name>valueRange</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a663e359c12676da7f3132c01b8db4297</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableEditItem &amp;</type>
      <name>automatableEditElement</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ab45276a19bf3aaf9e05f4f1e476bbf95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; juce::String(float)&gt;</type>
      <name>valueToStringFunction</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a62c73d54e55b3269808106fc72ddff2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; float(const juce::String &amp;)&gt;</type>
      <name>stringToValueFunction</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a6ee7aa8817c994c357d027eaad902621</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const juce::String</type>
      <name>paramName</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a801ddd315b45c04238e4c35b93fa7c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>parentState</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>afa834c236480cc69c6f8733fde7987ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>AutomationSourceList &amp;</type>
      <name>getAutomationSourceList</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a63e77c17c65581cefeba1381e4d8560f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setParameterValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>afdc65d7201d154b69e26bd3dac589309</anchor>
      <arglist>(float value, bool isFollowingCurve)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a38e6ee4efaeec2cc3408eec99098353b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a9e79aa0d10c8103a051c51849ea806b8</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ae16e06277303b6f35226de9e1da9579d</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a91d1c7d5ac222e305a364163dfef7edd</anchor>
      <arglist>(juce::ValueTree &amp;, int, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>acef4930f42b1f13b5753648ba9de0f77</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a2390a66a4e0e4be72b3f75e1cee17c6f</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>parameterChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>aeee173fe96b136abd76326a823aef59c</anchor>
      <arglist>(float, bool)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; AttachedValue &gt;</type>
      <name>attachedValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a6d8c169d98f5bf78209502c5846c22ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ListenerList&lt; Listener &gt;</type>
      <name>listeners</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a6a47e13b8a0c0442d1c0ac9ccd3e8428</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SafeSelectable&lt; Edit &gt;</type>
      <name>editRef</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ab46bdf19746c361c98e3081f74f62031</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Plugin *</type>
      <name>plugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>aaf5865090dca8d713e3ecb976328c9da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Modifier *</type>
      <name>modifierOwner</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a7aa789b212342af8a34be0ac2342c77d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MacroParameterList *</type>
      <name>macroOwner</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a1c913d159336dc8249cf3c588eff71ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; AutomationCurveSource &gt;</type>
      <name>curveSource</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ab2f0b9079d5978de48f30f2711e4e203</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; float &gt;</type>
      <name>currentValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ac275660b06b07c5e0ff0a2b0aa150c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; float &gt;</type>
      <name>currentParameterValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a17d86db277c4242fb8627fb8ea9c3e88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; float &gt;</type>
      <name>currentBaseValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a372be32c8a0a5266b61931bbecb0454c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; float &gt;</type>
      <name>currentModifierValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a165e0aaaf18c52ee4d44a15ff6325e60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; bool &gt;</type>
      <name>isRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>ab18f9fc6a954e490a45a9f23b0786a5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>updateParametersRecursionCheck</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a5a2a44f883b8320b13fbf844b98608ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AsyncCaller</type>
      <name>parameterChangedCaller</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>acd231e0c4710cc935dace59367fc9151</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>modifiersState</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a7cdc68429805d804546e588f9d2811f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; AutomationSourceList &gt;</type>
      <name>automationSourceList</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameter.html</anchorfile>
      <anchor>a9e6b6cf2f8bc640c537f4cb00d474ef4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AutomatableParameterTree</name>
    <filename>classtracktion_1_1engine_1_1AutomatableParameterTree.html</filename>
    <class kind="struct">tracktion::engine::AutomatableParameterTree::TreeNode</class>
    <member kind="enumeration">
      <type></type>
      <name>NodeType</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameterTree.html</anchorfile>
      <anchor>a7fae26c556e0bb8413d916eb3e9aa484</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Parameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameterTree.html</anchorfile>
      <anchor>a7fae26c556e0bb8413d916eb3e9aa484a2c57eb61744867721497b33296b34882</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Group</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameterTree.html</anchorfile>
      <anchor>a7fae26c556e0bb8413d916eb3e9aa484afc71e51f42a7defdad27ed479e8f2f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Parameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameterTree.html</anchorfile>
      <anchor>a7fae26c556e0bb8413d916eb3e9aa484a2c57eb61744867721497b33296b34882</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Group</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameterTree.html</anchorfile>
      <anchor>a7fae26c556e0bb8413d916eb3e9aa484afc71e51f42a7defdad27ed479e8f2f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AutomatableParameterTree</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameterTree.html</anchorfile>
      <anchor>a6b8063d69bdab56bbab55b60d808547e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TreeNode *</type>
      <name>getNodeForParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameterTree.html</anchorfile>
      <anchor>ac752bb7237206a932e052e86368c5fd8</anchor>
      <arglist>(AutomatableParameter &amp;param) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameterTree.html</anchorfile>
      <anchor>a3c411e0ead104d16488e9fb64f421ebc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; TreeNode &gt;</type>
      <name>rootNode</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomatableParameterTree.html</anchorfile>
      <anchor>a5c2d08c636704d938a0d592f24917814</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AutomationCurve</name>
    <filename>classtracktion_1_1engine_1_1AutomationCurve.html</filename>
    <class kind="struct">tracktion::engine::AutomationCurve::AutomationPoint</class>
    <member kind="function">
      <type></type>
      <name>AutomationCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a4d731b658ebeb30a51d1d9a9a31c25ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AutomationCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a33949f3f3b868f05a0aac25b41341e14</anchor>
      <arglist>(const juce::ValueTree &amp;parent, const juce::ValueTree &amp;state)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AutomationCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a640f6adc40f5a7aa56ee9055af9feaf9</anchor>
      <arglist>(const AutomationCurve &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AutomationCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a8aba4f0aaaa82737e2c75bdd5a1dbfad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a6e2e5eaa68d34632616ddfe9a28d2e6a</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParentState</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a50b7013b48ef80532e00bdaf52958805</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOwnerParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>add65104e57fea7102c405bf4a027f50c</anchor>
      <arglist>(AutomatableParameter *)</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter *</type>
      <name>getOwnerParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>ac73ee398c44c7ff04bf781867befe2ed</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumPoints</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a1bf31c565c275f5fa3579d9b173f0352</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getLength</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>af48aa2f1ef5b91a6085c90e8e75953c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; float &gt;</type>
      <name>getValueLimits</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a26c2dd36aea3ef464c240f4b665c165f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AutomationPoint</type>
      <name>getPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>abfced9ee32018bc1681dd098ff3ca205</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getPointTime</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a245b764257e7fbb84de9ff8f0289f372</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getPointValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a48852a714f50fe827317ac3e8614f9bf</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getPointCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>ad7582f6e2c8021a8036a3a0a232b7e93</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CurvePoint</type>
      <name>getBezierHandle</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a0b33c397eeed584a1feab797ac9736b6</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CurvePoint</type>
      <name>getBezierPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a2992bac9ea6c358fe8f9bc7c2169ed8c</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBezierEnds</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>ae50905dede3ceb2acce5e9d064c70a74</anchor>
      <arglist>(int index, double &amp;x1, float &amp;y1, double &amp;x2, float &amp;y2) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getValueAt</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>af2b6b207c9a8ab54d55c2684faa51573</anchor>
      <arglist>(TimePosition) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexBefore</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a1120a17da5126a6502360a6b557a83d0</anchor>
      <arglist>(TimePosition) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nextIndexAfter</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>ac59734e593a36c1d38008363f0c9b575</anchor>
      <arglist>(TimePosition) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNearestPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a633b43b688fd65ab809168f55ec5c7b4</anchor>
      <arglist>(TimePosition &amp;, float &amp;v, double xToYRatio) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>countPointsInRegion</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a98638dd2ea3869dd910b1c0fddabfb36</anchor>
      <arglist>(TimeRange) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a4920c0ae6aa24790d79e32aa2f2fea19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a74597942e451e4234943e4375e4a59ed</anchor>
      <arglist>(TimePosition, float value, float curve)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePoint</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a5d9ab391e2d05bf17453354d98ab0c53</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePointsInRegion</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a57b4a288fa6556273ff6121acf92cb44</anchor>
      <arglist>(TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeRegionAndCloseGap</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a87211f15819bdab374c7410f5ebf3e59</anchor>
      <arglist>(TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeRedundantPoints</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a8a9928c5e6ccc535f929a7dfa4890e25</anchor>
      <arglist>(TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomationPoint &gt;</type>
      <name>getPointsInRegion</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>aaea72751bd6aaa4869bfd8cfc497eb41</anchor>
      <arglist>(TimeRange) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>movePoint</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a1453e1735620289c7fa5c34c11f3e8a8</anchor>
      <arglist>(int index, TimePosition, float newValue, bool removeInterveningPoints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPointTime</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a34441ac71da527934b36df36ad6084a6</anchor>
      <arglist>(int index, TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPointValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a50d3f7cb12599e4298b25900011dd149</anchor>
      <arglist>(int index, float newValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurveValue</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a7a7c6f5dfe3690fc9bcba1288cc57c53</anchor>
      <arglist>(int index, float newCurve)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeOtherCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a002b8ca1fa88b2875f5ee9fe4ca04066</anchor>
      <arglist>(const AutomationCurve &amp;source, TimeRange destRange, TimePosition sourceStartTime, TimeDuration fadeLength, bool leaveOpenAtStart, bool leaveOpenEnded)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>simplify</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a6139e3c1f09af95f2b26cf9ee4b5b031</anchor>
      <arglist>(TimeRange, double minTimeDifference, float minValueDifference)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rescaleAllTimes</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a21a139e75bf86e62e5fbc3f986b0c2a3</anchor>
      <arglist>(double factor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToAllTimes</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a9b5ed989b56d09b538b3bd1efe3132f1</anchor>
      <arglist>(TimeDuration delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rescaleValues</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>ad63ed7bebbebd1f7d812f23fd3b10a6a</anchor>
      <arglist>(float factor, TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToValues</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a5dd5fa7d97759d3722e9b01f1c6dce16</anchor>
      <arglist>(float valueDelta, TimeRange)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getBezierXfromT</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>ae489f3e68b679af6c5a56aa516f4ee81</anchor>
      <arglist>(double t, double x1, double xb, double x2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>getBezierYFromX</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a7f6d0e972e6f2fd7cfdee363306f94e6</anchor>
      <arglist>(double t, double x1, float y1, double xb, float yb, double x2, float y2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removeAllAutomationCurvesRecursively</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a0750fe813cbb05263d4bbef941fa2020</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>parentState</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>a4045fd7b250f8724b2aa87618e8e416d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationCurve.html</anchorfile>
      <anchor>af266835758c45cd604da7cd6d322d761</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::Clips::AutomationCurveSection</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1Clips_1_1AutomationCurveSection.html</filename>
    <member kind="variable">
      <type>juce::String</type>
      <name>pluginName</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips_1_1AutomationCurveSection.html</anchorfile>
      <anchor>a437fb69900f7139811596690f77f06bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>paramID</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips_1_1AutomationCurveSection.html</anchorfile>
      <anchor>af718b2f47bdd0a21fceb08fc0efa5a87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>trackOffset</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips_1_1AutomationCurveSection.html</anchorfile>
      <anchor>a98f209266c42691d4298585336d6d976</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; AutomationCurve::AutomationPoint &gt;</type>
      <name>points</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips_1_1AutomationCurveSection.html</anchorfile>
      <anchor>a63dd62163c0bb6c3dfa5a77d9f07afb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Range&lt; float &gt;</type>
      <name>valueRange</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips_1_1AutomationCurveSection.html</anchorfile>
      <anchor>a9ef760e8723a36561a83da4838d92894</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AutomationDragDropTarget</name>
    <filename>classtracktion_1_1engine_1_1AutomationDragDropTarget.html</filename>
    <member kind="function">
      <type></type>
      <name>AutomationDragDropTarget</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>ab6d065e030aa78c2558ab91779fdad1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AutomationDragDropTarget</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>a6609c37507f34791a969f878d7d9d9eb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasAnAutomatableParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>a0cf52b7128b4caf0a73ad132ec5443dd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>chooseAutomatableParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>aa0e3feae7bf293a58d628c007a548e10</anchor>
      <arglist>(std::function&lt; void(AutomatableParameter::Ptr)&gt; handleChosenParam, std::function&lt; void()&gt; startLearnMode)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startParameterLearn</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>aed963ec08dbc0775d3845fdac8198566</anchor>
      <arglist>(std::function&lt; void(AutomatableParameter::Ptr)&gt;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAutomatableParameterBeingDraggedOver</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>a3e41e6b9a96d8141fb577e9b71a46c62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInterestedInDragSource</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>ae904b5ba233cb8b518a82346cbd11c80</anchor>
      <arglist>(const SourceDetails &amp;details) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>itemDragEnter</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>a971ceb7945338f91f8bd25e2318fc5d1</anchor>
      <arglist>(const SourceDetails &amp;dragSourceDetails) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>itemDragExit</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>a6bc2bda2208c2661fc3315a44f2bd950</anchor>
      <arglist>(const SourceDetails &amp;dragSourceDetails) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>itemDropped</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>aa481bea6710d4b0fa63cf86e48dc9404</anchor>
      <arglist>(const SourceDetails &amp;dragSourceDetails) override</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>automatableDragString</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationDragDropTarget.html</anchorfile>
      <anchor>afaddbed30548a9fc9ebe3ae98477d04e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AutomationIterator</name>
    <filename>structtracktion_1_1engine_1_1AutomationIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>AutomationIterator</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomationIterator.html</anchorfile>
      <anchor>ad46504cb6bfdd10da854a0ec6c452f86</anchor>
      <arglist>(const AutomatableParameter &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomationIterator.html</anchorfile>
      <anchor>ad8166a1b02ad506f1c7055267c69e2fe</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomationIterator.html</anchorfile>
      <anchor>a7ea9867127a1703917a72099797af659</anchor>
      <arglist>(TimePosition) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomationIterator.html</anchorfile>
      <anchor>a5e6d5353032d771ded31caef78a43b9e</anchor>
      <arglist>() noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AutomationCurve::AutomationPoint</name>
    <filename>structtracktion_1_1engine_1_1AutomationCurve_1_1AutomationPoint.html</filename>
    <member kind="function">
      <type></type>
      <name>AutomationPoint</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomationCurve_1_1AutomationPoint.html</anchorfile>
      <anchor>a9498a5f6cede749d03ddcdd028827b69</anchor>
      <arglist>() noexcept=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AutomationPoint</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomationCurve_1_1AutomationPoint.html</anchorfile>
      <anchor>af74ff844edfe3e90a9b2227309b7f635</anchor>
      <arglist>(TimePosition t, float v, float c) noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>toValueTree</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomationCurve_1_1AutomationPoint.html</anchorfile>
      <anchor>a82cb136b2ba9df8d28080c6b792b7523</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomationCurve_1_1AutomationPoint.html</anchorfile>
      <anchor>a18e87c85c8edf69528741ea9337f34f0</anchor>
      <arglist>(const AutomationPoint &amp;other) const</arglist>
    </member>
    <member kind="variable">
      <type>TimePosition</type>
      <name>time</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomationCurve_1_1AutomationPoint.html</anchorfile>
      <anchor>ae329726ebf0e8e57f3320219f484c490</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>value</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomationCurve_1_1AutomationPoint.html</anchorfile>
      <anchor>a650ba82ca4d00dece278bbd2a226221e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>curve</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomationCurve_1_1AutomationPoint.html</anchorfile>
      <anchor>a30419dd1fe4c8b22b9c9af0d46dbe719</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::AutomationPoints</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1AutomationPoints.html</filename>
    <base>tracktion::engine::Clipboard::ContentType</base>
    <member kind="function">
      <type></type>
      <name>AutomationPoints</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1AutomationPoints.html</anchorfile>
      <anchor>aa67e0fe249d327f28cb4aa135fbc463d</anchor>
      <arglist>(const AutomationCurve &amp;, TimeRange)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AutomationPoints</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1AutomationPoints.html</anchorfile>
      <anchor>aa7bf52c52c99a062a19f2136e75116fa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1AutomationPoints.html</anchorfile>
      <anchor>a45a3ad31413f9f8574d4af786d8ac955</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteAutomationCurve</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1AutomationPoints.html</anchorfile>
      <anchor>a5e6e7fe016ea017bb82ea80255dff6b2</anchor>
      <arglist>(AutomationCurve &amp;, TimeRange targetRange) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1AutomationPoints.html</anchorfile>
      <anchor>ae3179b071e4302d9007657da52f29b5a</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1AutomationPoints.html</anchorfile>
      <anchor>a2b8ac2e249e6721e16dd1ca7831b15da</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; AutomationCurve::AutomationPoint &gt;</type>
      <name>points</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1AutomationPoints.html</anchorfile>
      <anchor>ab16810006c872f6554e86c7043196f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Range&lt; float &gt;</type>
      <name>valueRange</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1AutomationPoints.html</anchorfile>
      <anchor>a12f22e5497a59937eed13c2adad09441</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AutomationRecordManager</name>
    <filename>classtracktion_1_1engine_1_1AutomationRecordManager.html</filename>
    <member kind="function">
      <type></type>
      <name>AutomationRecordManager</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>acf24d2c1b1288ce19400d1b2742ddf68</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AutomationRecordManager</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>ae7070fcb0504d025da44609ca66d6383</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadingAutomation</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>aee6b4337b69bd65808ac4c2451902b94</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadingAutomation</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>af4b85b8578207ced9a30e22496a735f2</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWritingAutomation</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a5f76ee8d8ebc74e4e75b400c512f8299</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWritingAutomation</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a060a5f4c26fbad51f3a399753173fd02</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleWriteAutomationMode</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a7394ea8a563b5d7cba862c7fd32ae0fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playStartedOrStopped</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a6f10c136fc35c3952dd1e5a44f6e859b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRecordingAutomation</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a13d24f38e94415ceff3c9381de987734</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isParameterRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a47ae2c673c8e4d6eb2ccdb69983be43a</anchor>
      <arglist>(AutomatableParameter *) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>punchOut</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a616d84153ca64f66db929c4f233e1711</anchor>
      <arglist>(bool toEnd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeDuration</type>
      <name>getGlideSeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a1fb74434c8005a8d324b65926b62bf54</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setGlideSeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a0755006502d2a1255e6a6d7bee3322ec</anchor>
      <arglist>(Engine &amp;, TimeDuration)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>a3e9bd7594d48e7d55e22219bc3e9dc0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AutomatableParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationRecordManager.html</anchorfile>
      <anchor>ab28b5abc6c53acca6ad4abc28e0e4e52</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AutomationTrack</name>
    <filename>classtracktion_1_1engine_1_1AutomationTrack.html</filename>
    <base>tracktion::engine::Track</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; AutomationTrack &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationTrack.html</anchorfile>
      <anchor>ab78def4742663a4430d5aefce1b3108a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AutomationTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationTrack.html</anchorfile>
      <anchor>a549ff4bb63bd41939d47402c3cbbbb62</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AutomationTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationTrack.html</anchorfile>
      <anchor>a27b81e950e77271717e5d74ce02655e4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAutomationTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationTrack.html</anchorfile>
      <anchor>adf24756ece4495fc2fd38d8f208233ad</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationTrack.html</anchorfile>
      <anchor>afac1c996da4db9acb7afce9783e9e4a4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationTrack.html</anchorfile>
      <anchor>af8d665a298147dec8a191a3d2011af68</anchor>
      <arglist>(Plugin *) const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1AutomationTrack.html</anchorfile>
      <anchor>a3052139d3a8ffe5db16766a0ebf3e5ab</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AuxReturnPlugin</name>
    <filename>classtracktion_1_1engine_1_1AuxReturnPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>AuxReturnPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>af9428ce26dd7c15e610751bb2c2ac382</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AuxReturnPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a3ddb1d4bb314dd326dbb9c6435e7f646</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a58504debce65511f3c949f70e3e0ad16</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a35ab4b3c7c2c1037588196b97ae71c46</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a4426cb3a686f05efc06e99e36e5a8bfb</anchor>
      <arglist>(int suggestedMaxLength) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a573b9ed31124c2c1d3c9a5e107a41055</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a63327de77d94682f2045ddd858cc1a2f</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>aeec4eca3d8670bf500a01446c6483a10</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a017540a9330eee090f4be738c2721dfe</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>af2ae2deacf3c8cdfd834d921eec05e3a</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a909972b3295b5e639793349aa826ec1a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesMidiInput</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a65c2fbd1d992af01dd210455e4cbf132</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>aba52a1223c1c6d9d9acf6c231b27f6bc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a1dfbe56411486203bc22d30908efb2a6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a96a8a8ccbbb21fc646a257dd0b451f4c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a78e69548efe347f91dc8bdcf7e616883</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>abaae4026dbc711e242b8938060ebce11</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a42723e685de4d6ac01fa0b67b956892a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>busNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a0dbb70e738d7092b566bcffa0ee1997b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxReturnPlugin.html</anchorfile>
      <anchor>a99c7cea56bf5d672440e615a30c6bc4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AuxSendNode</name>
    <filename>classtracktion_1_1engine_1_1AuxSendNode.html</filename>
    <base>tracktion::graph::SendNode</base>
    <member kind="function">
      <type></type>
      <name>AuxSendNode</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendNode.html</anchorfile>
      <anchor>ae6140141f03092616489ee4e4adb1127</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; inputNode, int busIDToUse, SampleRateAndBlockSize, AuxSendPlugin &amp;, tracktion::graph::PlayHeadState &amp;, const TrackMuteState *, bool processAuxSendsWhenTrackIsMuted)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AuxSendNode</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendNode.html</anchorfile>
      <anchor>ad4dfdfbc3f0b1f5a1ce9ebdde1e87b6b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendNode.html</anchorfile>
      <anchor>a03abc7eae6c9d6ea389ebb6e2e5e6e70</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendNode.html</anchorfile>
      <anchor>add8263ddb4760f5d935c343cee2c52a6</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendNode.html</anchorfile>
      <anchor>ad327a651615c89a29911a7a5b6a749c1</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AuxSendPlugin</name>
    <filename>classtracktion_1_1engine_1_1AuxSendPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>AuxSendPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a330b0dc7b25e55d860bd0fe2ca5e4653</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AuxSendPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a3e8716e979c958a8eb1c81696525dc9e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGainDb</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>ae79df417edb77e2197c8dfa284402ce5</anchor>
      <arglist>(float newDb)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getGainDb</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a337c1b9cdb4ebf0d91cc62ded0f1c366</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMute</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a2e5e8f0ef61f8c5b83343fa8a44f4ff2</anchor>
      <arglist>(bool m)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMute</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>ae63335936e7ce45323514dd0d549234b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBusNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>ae521efa17bacfd94baab4bbef518036f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getBusName</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>ad877fc678588d8d9386b50871301705b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>ac923ae981b25eded72ebf0a9d5d48eec</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a5fa850f860d82742902050f5c57e0a5e</anchor>
      <arglist>(int suggestedMaxLength) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a710cdb687daee349f8ce8322d7321eea</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>ab96a9454b1365fdefc32054f016a45b9</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a60e402cfe83b43c1e76578881bbb9b98</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseWithoutStopping</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a5129da916251649efc6fe54cdce11d3a</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a4f0745f6dedbfff261fedf56bd11d8c3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>ab40c37b907db1f3e8b69bf8ca2ee4de6</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a540c1b1751ecbc923c7b86e74983c3e2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a371e1844fcd3ceafb9cf407143d36a4e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a7257d20af5c551c6c49aa55703f6cf15</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a0bd5a243682abfbb30a68580f135f679</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a239469c18bf78032ee9674ad33c458a7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a01e15a2756917a9753603607a1c254c9</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOwnedBy</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>af67ff677d1f04350ad7ee4af4b85bd41</anchor>
      <arglist>(Track &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getBusNames</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>aaf833040741b9af92a89369782c404ca</anchor>
      <arglist>(Edit &amp;, int maxNumBusses)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getDefaultBusName</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>ae87837c5a5cd58e72d5ac76cd753f00e</anchor>
      <arglist>(int busIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a0b5ceba1c5fd7ddd15e972c19ad8de85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>ac543a04e73b87f1c073aa5abf9faf9dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>busNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a04e7e0c6266c0f3114cbf33c7d5e5f37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>gainLevel</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a4eb1cd1bb7b56fdf6043b90e4ed3d0f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>invertPhase</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>af1ddfab4cc5eea671479a63d7126b114</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>gain</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a53528a90c7d2ecae9fa7ca63470e6901</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1AuxSendPlugin.html</anchorfile>
      <anchor>a60217fce4fc1075fd8f5d82da2be46e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MackieMCU::AuxTimer</name>
    <filename>structtracktion_1_1engine_1_1MackieMCU_1_1AuxTimer.html</filename>
    <member kind="function">
      <type></type>
      <name>AuxTimer</name>
      <anchorfile>structtracktion_1_1engine_1_1MackieMCU_1_1AuxTimer.html</anchorfile>
      <anchor>aedf2002e936d2c94a8df5c2691bccb9e</anchor>
      <arglist>(MackieMCU &amp;mcu)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>structtracktion_1_1engine_1_1MackieMCU_1_1AuxTimer.html</anchorfile>
      <anchor>a34f729ccccd724ca60a0e7901d3461c0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>MackieMCU &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion_1_1engine_1_1MackieMCU_1_1AuxTimer.html</anchorfile>
      <anchor>a18472b8a134a5e6cd0de2da17e222db1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::BackgroundJobManager</name>
    <filename>classtracktion_1_1engine_1_1BackgroundJobManager.html</filename>
    <class kind="struct">tracktion::engine::BackgroundJobManager::JobInfo</class>
    <class kind="class">tracktion::engine::BackgroundJobManager::Listener</class>
    <member kind="function">
      <type></type>
      <name>BackgroundJobManager</name>
      <anchorfile>classtracktion_1_1engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>a087a844ab751c2fa59b690044478f6c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BackgroundJobManager</name>
      <anchorfile>classtracktion_1_1engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>aa209d7606d99495b5a13607276547ce3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addJob</name>
      <anchorfile>classtracktion_1_1engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>a5a05e5104e2acd93cc4b30d9b001c628</anchor>
      <arglist>(ThreadPoolJobWithProgress *job, bool takeOwnership)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeJob</name>
      <anchorfile>classtracktion_1_1engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>a7d591b20ec19f7a80deff765c7b792f1</anchor>
      <arglist>(ThreadPoolJobWithProgress *job, bool interruptIfRunning, int timeOutMilliseconds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopAndDeleteAllRunningJobs</name>
      <anchorfile>classtracktion_1_1engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>adb85e3935164112e24c7a78e28d0116c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>signalJobShouldExit</name>
      <anchorfile>classtracktion_1_1engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>adc4eb5fcf87ac2efc7755578d0a2c3f7</anchor>
      <arglist>(const JobInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>JobInfo</type>
      <name>getJobInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>ab25ff01c28452b5b70b455b0e33dc2f1</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumJobs</name>
      <anchorfile>classtracktion_1_1engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>a0ce94cb882c840ecf5ab2fc0905ef549</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getTotalProgress</name>
      <anchorfile>classtracktion_1_1engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>a5dea1354ab941746b198fc29c6a0c278</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::ThreadPool &amp;</type>
      <name>getPool</name>
      <anchorfile>classtracktion_1_1engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>abf196766bad0304da43d837ce099c192</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion_1_1engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>a0caf017c6e97f7c640f3103ad669f531</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion_1_1engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>a39811383ab94dbaa9dbabd43fd44f324</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ThreadPoolJobWithProgress</name>
      <anchorfile>classtracktion_1_1engine_1_1BackgroundJobManager.html</anchorfile>
      <anchor>a712a9a0e72e14a48553acc597846c3ec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::BandlimitedWaveLookupTables</name>
    <filename>classtracktion_1_1engine_1_1BandlimitedWaveLookupTables.html</filename>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; BandlimitedWaveLookupTables &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1BandlimitedWaveLookupTables.html</anchorfile>
      <anchor>a68ee938978f8bcca7b2ecad985581de1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BandlimitedWaveLookupTables</name>
      <anchorfile>classtracktion_1_1engine_1_1BandlimitedWaveLookupTables.html</anchorfile>
      <anchor>a864f0be6d1df67bf8524f55dd7910783</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr</type>
      <name>getLookupTables</name>
      <anchorfile>classtracktion_1_1engine_1_1BandlimitedWaveLookupTables.html</anchorfile>
      <anchor>a2adf7bae8fac43e363a0789d57222b58</anchor>
      <arglist>(double sampleRate)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1BandlimitedWaveLookupTables.html</anchorfile>
      <anchor>a5a80d4e261c60042470019b1f0374651</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::dsp::LookupTableTransform&lt; float &gt;</type>
      <name>sineFunction</name>
      <anchorfile>classtracktion_1_1engine_1_1BandlimitedWaveLookupTables.html</anchorfile>
      <anchor>aea7bdca35325a4a4941f7f92e7ea4c45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; juce::dsp::LookupTableTransform&lt; float &gt; &gt;</type>
      <name>triangleFunctions</name>
      <anchorfile>classtracktion_1_1engine_1_1BandlimitedWaveLookupTables.html</anchorfile>
      <anchor>a9cf3492594b1b23a21f5a76631b0c575</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; juce::dsp::LookupTableTransform&lt; float &gt; &gt;</type>
      <name>sawUpFunctions</name>
      <anchorfile>classtracktion_1_1engine_1_1BandlimitedWaveLookupTables.html</anchorfile>
      <anchor>a269b7c453f0c88912e581c024bfd13b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; juce::dsp::LookupTableTransform&lt; float &gt; &gt;</type>
      <name>sawDownFunctions</name>
      <anchorfile>classtracktion_1_1engine_1_1BandlimitedWaveLookupTables.html</anchorfile>
      <anchor>a8724b24dde3603eb0e874f5897e5395f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>tablePerNumNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1BandlimitedWaveLookupTables.html</anchorfile>
      <anchor>a62dbaa7ca63f2fd9160df070df13efb1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::VSTXML::Base</name>
    <filename>structtracktion_1_1engine_1_1VSTXML_1_1Base.html</filename>
    <member kind="function">
      <type></type>
      <name>Base</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Base.html</anchorfile>
      <anchor>ad7acdffd25495af8ed948ea9d655529e</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Base</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Base.html</anchorfile>
      <anchor>a663aa69b1e4c5f8d7287357e1ccc10dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Group *</type>
      <name>parent</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Base.html</anchorfile>
      <anchor>a575e6ea4fcd11976b7ecf0eea0f8955a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::BasicSummingNode</name>
    <filename>classtracktion_1_1graph_1_1BasicSummingNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>BasicSummingNode</name>
      <anchorfile>classtracktion_1_1graph_1_1BasicSummingNode.html</anchorfile>
      <anchor>a3b1a22636c8b44d585a3cbead63c4c72</anchor>
      <arglist>(std::vector&lt; std::unique_ptr&lt; Node &gt;&gt; inputs)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1graph_1_1BasicSummingNode.html</anchorfile>
      <anchor>ac127853f7fb778952126794dcaa7cd69</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1graph_1_1BasicSummingNode.html</anchorfile>
      <anchor>ac2373c3f3ddcc5c49a9d0be049d1b3a0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1graph_1_1BasicSummingNode.html</anchorfile>
      <anchor>a5cb4eba6024b97d8d8572e0b4bfb8dca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1BasicSummingNode.html</anchorfile>
      <anchor>ad8ad604c991192e5d716ca7cc4b01f3d</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::WaveNodeRealTime::BeatConfig</name>
    <filename>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</filename>
    <member kind="variable">
      <type>ProcessState &amp;</type>
      <name>processState</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>aa965a3bb18c58d5d313b75c823e06376</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const AudioFile &amp;</type>
      <name>audioFile</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>a57888e0d51c6eaab61b3e14d85733873</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeStretcher::Mode</type>
      <name>timeStretchMode</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>a7bd845e4b7ba88269ea1285eef6256ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeStretcher::ElastiqueProOptions</type>
      <name>elastiqueProOptions</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>a9b57f97d54387c09e54914361378030e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BeatRange</type>
      <name>editTime</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>a694dd0b61f9b30bf919a933649e9f39d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BeatDuration</type>
      <name>offset</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>a65f5b82613388d8b54b69f8ee8986995</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BeatRange</type>
      <name>loopSection</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>a6fdbdd98421f6dc57dcec9a4e4e66955</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LiveClipLevel</type>
      <name>liveClipLevel</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>aafe16bfe4bcf05c0123beff8036447a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioChannelSet</type>
      <name>sourceChannelsToUse</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>a34dcbd349067dba94f5be3ff0cb9612c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioChannelSet</type>
      <name>destChannelsToFill</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>ab9995c3a264f71416f8c854c8c70aa6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditItemID</type>
      <name>itemID</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>a2cf2ef75194e08ded5701758da2dc150</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOfflineRender</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>a6c0946345d13ca1244973a0b4b83467a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ResamplingQuality</type>
      <name>resamplingQuality</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>a40c9954387916b1d616470cb5a4a65b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SpeedFadeDescription</type>
      <name>speedFadeDescription</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>a70ba98c5f6a089e96e3df21f3009df94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; tempo::Sequence::Position &gt;</type>
      <name>editTempoSequence</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>a169cdba043d1a965217fb35056626ff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; WarpMap &gt;</type>
      <name>warpMap</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>ae073893de65f4be685564feb6c52edc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tempo::Sequence</type>
      <name>sourceFileTempoMap</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>adebac87dce15f9f3bf660f99aafa72ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SyncTempo</type>
      <name>syncTempo</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>a9491016eed934d7cbfbf88bb88415b8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SyncPitch</type>
      <name>syncPitch</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>a098a8beaa5c7db0620d80aae17875c05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; tempo::Sequence &gt;</type>
      <name>chordPitchSequence</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>a2b0a4976fd735393b0c4d67b61d23219</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>pitchChangeSemitones</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>a66ab99040f78929733d490f7da0b8761</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ReadAhead</type>
      <name>readAhead</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveNodeRealTime_1_1BeatConfig.html</anchorfile>
      <anchor>a0d4ba8b374487f4dc495a9f6076adfdf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::BeatDetect</name>
    <filename>structtracktion_1_1engine_1_1BeatDetect.html</filename>
    <member kind="function">
      <type></type>
      <name>BeatDetect</name>
      <anchorfile>structtracktion_1_1engine_1_1BeatDetect.html</anchorfile>
      <anchor>ac89aa40ffcab015884d4cda0238e486c</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>structtracktion_1_1engine_1_1BeatDetect.html</anchorfile>
      <anchor>a85aa7d84b747ddefbb7586eb45739b95</anchor>
      <arglist>(double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSensitivity</name>
      <anchorfile>structtracktion_1_1engine_1_1BeatDetect.html</anchorfile>
      <anchor>a09094a83b063ff52af7b8b4b2ac54981</anchor>
      <arglist>(double newSensitivity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>audioProcess</name>
      <anchorfile>structtracktion_1_1engine_1_1BeatDetect.html</anchorfile>
      <anchor>ae3c630f4b0c28ddabdba824d0e974045</anchor>
      <arglist>(const Buffer &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>SampleCount</type>
      <name>getBlockSize</name>
      <anchorfile>structtracktion_1_1engine_1_1BeatDetect.html</anchorfile>
      <anchor>a963fb0f246c65ac2f79ca5297c3c3dde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; SampleCount &gt; &amp;</type>
      <name>getBeats</name>
      <anchorfile>structtracktion_1_1engine_1_1BeatDetect.html</anchorfile>
      <anchor>a42cf67599311a1f6659199322085b768</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::benchmark_utilities::BenchmarkOptions</name>
    <filename>structtracktion_1_1engine_1_1benchmark__utilities_1_1BenchmarkOptions.html</filename>
    <member kind="variable">
      <type>Edit *</type>
      <name>edit</name>
      <anchorfile>structtracktion_1_1engine_1_1benchmark__utilities_1_1BenchmarkOptions.html</anchorfile>
      <anchor>ab39a4a6c4ef5c055fe1a1e80cfd28d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>editName</name>
      <anchorfile>structtracktion_1_1engine_1_1benchmark__utilities_1_1BenchmarkOptions.html</anchorfile>
      <anchor>ac621ac03f9445abf91b1fd62156e8834</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tracktion::graph::test_utilities::TestSetup</type>
      <name>testSetup</name>
      <anchorfile>structtracktion_1_1engine_1_1benchmark__utilities_1_1BenchmarkOptions.html</anchorfile>
      <anchor>aacb1f1e3529ad0292354d2d3c7ac265e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MultiThreaded</type>
      <name>isMultiThreaded</name>
      <anchorfile>structtracktion_1_1engine_1_1benchmark__utilities_1_1BenchmarkOptions.html</anchorfile>
      <anchor>a736b02c541948ae393bcd745b3f28446</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LockFree</type>
      <name>isLockFree</name>
      <anchorfile>structtracktion_1_1engine_1_1benchmark__utilities_1_1BenchmarkOptions.html</anchorfile>
      <anchor>a0ddc52687ada0c41a1c19d945d5cc7d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tracktion::graph::ThreadPoolStrategy</type>
      <name>poolType</name>
      <anchorfile>structtracktion_1_1engine_1_1benchmark__utilities_1_1BenchmarkOptions.html</anchorfile>
      <anchor>a30ab245a2892a6832c82eddbb636187f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PoolMemoryAllocations</type>
      <name>poolMemoryAllocations</name>
      <anchorfile>structtracktion_1_1engine_1_1benchmark__utilities_1_1BenchmarkOptions.html</anchorfile>
      <anchor>afb3f70824c1693612e1e70030b46c0df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ShareNodeMemory</type>
      <name>shareNodeMemory</name>
      <anchorfile>structtracktion_1_1engine_1_1benchmark__utilities_1_1BenchmarkOptions.html</anchorfile>
      <anchor>af90c9d0e2e49f32b3c64026c40dc1c6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::BlockingFunction</name>
    <filename>structtracktion_1_1engine_1_1BlockingFunction.html</filename>
    <base>tracktion::engine::MessageThreadCallback</base>
    <member kind="function">
      <type></type>
      <name>BlockingFunction</name>
      <anchorfile>structtracktion_1_1engine_1_1BlockingFunction.html</anchorfile>
      <anchor>a4d095d96ffbcdbfbf64a0833eae8ab8e</anchor>
      <arglist>(std::function&lt; void()&gt; f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::BreakpointOscillatorModifier</name>
    <filename>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</filename>
    <base>tracktion::engine::Modifier</base>
    <base protection="private">tracktion::engine::ValueTreeAllEventListener</base>
    <class kind="struct">tracktion::engine::BreakpointOscillatorModifier::Assignment</class>
    <class kind="struct">tracktion::engine::BreakpointOscillatorModifier::Stage</class>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; BreakpointOscillatorModifier &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a8e17d76b19ec9408dd31cb12960cbc05</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; BreakpointOscillatorModifier &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a114864c0abce24136c9682fddd8bd1f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BreakpointOscillatorModifier</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a0a2aeccbb287a488269167a56af63b44</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BreakpointOscillatorModifier</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>af1736325eac18a2d8f5bcc09bf3fe7a9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>ad7dcb5dc281ea86d12006e2182d44d01</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a7f7cb8876389beac30c6adfdf148d970</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a59e9a8b82ee3e174e33de6c2c4dbdb9c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentEnvelopeValue</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>ab931fad85bb0ad8de0c5468f67ab92c1</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentPhase</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a75812404368cbba7d65ee1ea8f737ba8</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getTotalTime</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a2f44e456b476343dc22b64601d7a1295</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::ModifierAssignment *</type>
      <name>createAssignment</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>ad8dbc9744d635b1e73e2a22eedbcb8b2</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>ProcessingPosition</type>
      <name>getProcessingPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a9bfe7790d33f19369185e2533f389ae6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a102355c3192c67b2244ed74f594da14e</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a539570d51fc5c097c4aaa98f6a1f88dd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Stage</type>
      <name>getStage</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a6e4144e17820df28a345694d4289722e</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a7910b344c687168c108702bc3ddd2323</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a08b0ce6145809240435352b1112fc5fe</anchor>
      <arglist>(double, int)</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>numActivePoints</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a0333884b860c2f54473a34761a329834</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>syncType</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a2c3cfb1c6cff2fd12650b5df50c8eedf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rate</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>acc192e9aee0ea8ddfc326494c09909c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rateType</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a35881d1152f6b43ceedf7e6889e71de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>depth</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a45519b936c10d2171b745d525871d15b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>bipolar</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a01c06156e00913649f5793a11922b5f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageZeroValue</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a64bacee015d244360f1c0787db1fab05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageOneValue</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a6f8ee6e35909310b5b6f7c6b1c4fccbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageOneTime</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a62f0e2d8c08d30ea42687835fefaa7e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageOneCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>ae66e93c4adc8e60f4f0c1058948e52fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageTwoValue</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>ad4323078732dcb0d375eada3d4f9a4d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageTwoTime</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>afab4be30599279fbdcf2569a8f675d35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageTwoCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>adfa0d64bd07ef65a994f170e5f1a190c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageThreeValue</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a0b0071076184bd5543f5ff8e23885298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageThreeTime</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>ad5a309762f867908c51d2f22cf65e30f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageThreeCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>ad456a8e78c0ed6b100e3fd9539abc56d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageFourValue</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>aae938ee0fa0aa21191de48263ef8a702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageFourTime</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>aea31fb2b0f84ea74963413a64f422113</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stageFourCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>ac39299c149f3feabf2f85f8c5bd83b10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>numActivePointsParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a4340ad216c26de67c69028894d6e6937</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>syncTypeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a0546a616bc337b3b375117bf27b91c53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rateParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a99750d17fd5cceb8496efad4ce4ab427</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rateTypeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a72b04e843b53cbb8c400617bbac2e3d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>depthParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a83fc5bfcd21379926057efc3e55ff1c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>bipolarParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a20e876ec5fe4d0732203bb42d5dafd15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageZeroValueParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a70880d72504bb4074d4ae8a94645c381</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageOneValueParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>af32801539aab91ef2ee802cbf79af4dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageOneTimeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>aaabfe787fb9c436352abc17194ca9660</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageOneCurveParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a213ed4d73b487684221f7f7b1f22222d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageTwoValueParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>af3ed43133f4f3261c95d5fb5310293ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageTwoTimeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>af2130c3701c8561852110581059cb5e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageTwoCurveParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a02cf0cb803c8a28864e7b348bd31bd17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageThreeValueParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a05afe8b35f0c900145b5374294fe1ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageThreeTimeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a608380f553eb8a04216a3711da44ec67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageThreeCurveParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a33365867114a6cc6c5448fadd69fa623</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageFourValueParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a2e2fd55e37b6585c82229e196f9befa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageFourTimeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a4df09ae7f2be5e9dcdcda48489e44421</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stageFourCurveParam</name>
      <anchorfile>classtracktion_1_1engine_1_1BreakpointOscillatorModifier.html</anchorfile>
      <anchor>a69a5e7264eb925dc9d2dfcb87f8691dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::BufferedAudioFileManager</name>
    <filename>classtracktion_1_1engine_1_1BufferedAudioFileManager.html</filename>
    <member kind="function">
      <type></type>
      <name>BufferedAudioFileManager</name>
      <anchorfile>classtracktion_1_1engine_1_1BufferedAudioFileManager.html</anchorfile>
      <anchor>a66198c9fe3cc70404d709293fd5757ed</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; BufferedAudioReader &gt;</type>
      <name>get</name>
      <anchorfile>classtracktion_1_1engine_1_1BufferedAudioFileManager.html</anchorfile>
      <anchor>a5dcbc91f6fadc6e863d74b21fa56bd84</anchor>
      <arglist>(juce::File)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::BufferedAudioReader</name>
    <filename>classtracktion_1_1engine_1_1BufferedAudioReader.html</filename>
    <member kind="function">
      <type></type>
      <name>BufferedAudioReader</name>
      <anchorfile>classtracktion_1_1engine_1_1BufferedAudioReader.html</anchorfile>
      <anchor>adc13848bcc95f000bc8dd6b1ff172e67</anchor>
      <arglist>(std::unique_ptr&lt; juce::AudioFormatReader &gt;, juce::TimeSliceThread &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BufferedAudioReader</name>
      <anchorfile>classtracktion_1_1engine_1_1BufferedAudioReader.html</anchorfile>
      <anchor>a51335fc43606e19f8080bd257ee1ea8e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getProportionComplete</name>
      <anchorfile>classtracktion_1_1engine_1_1BufferedAudioReader.html</anchorfile>
      <anchor>a7d4a5cecd3f081d273689b22e72c0f73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readSamples</name>
      <anchorfile>classtracktion_1_1engine_1_1BufferedAudioReader.html</anchorfile>
      <anchor>aa4cbe99e2bd126436a55936db266c2e2</anchor>
      <arglist>(int *const *destSamples, int numDestChannels, int startOffsetInDestBuffer, juce::int64 startSampleInFile, int numSamples) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>useTimeSlice</name>
      <anchorfile>classtracktion_1_1engine_1_1BufferedAudioReader.html</anchorfile>
      <anchor>a64c0f720c18c46382a9221ce0f3b56d6</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::BufferedFileReader</name>
    <filename>classtracktion_1_1engine_1_1BufferedFileReader.html</filename>
    <member kind="function">
      <type></type>
      <name>BufferedFileReader</name>
      <anchorfile>classtracktion_1_1engine_1_1BufferedFileReader.html</anchorfile>
      <anchor>ae5a149c8d1df85687ea63c11ebb55af8</anchor>
      <arglist>(juce::AudioFormatReader *sourceReader, juce::TimeSliceThread &amp;timeSliceThread, int samplesToBuffer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BufferedFileReader</name>
      <anchorfile>classtracktion_1_1engine_1_1BufferedFileReader.html</anchorfile>
      <anchor>a01fd5d31146a97ad9f409effebe0f43c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadTimeout</name>
      <anchorfile>classtracktion_1_1engine_1_1BufferedFileReader.html</anchorfile>
      <anchor>ae2ef39ca28d7b57a5cf6fddb10bb17a6</anchor>
      <arglist>(int timeoutMilliseconds) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFullyBuffered</name>
      <anchorfile>classtracktion_1_1engine_1_1BufferedFileReader.html</anchorfile>
      <anchor>a9e456ead5902e35591999b52a963d80c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readSamples</name>
      <anchorfile>classtracktion_1_1engine_1_1BufferedFileReader.html</anchorfile>
      <anchor>a8cb94bae57ac65e6d9aa6f500db38fd2</anchor>
      <arglist>(int *const *destSamples, int numDestChannels, int startOffsetInDestBuffer, juce::int64 startSampleInFile, int numSamples) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::BufferedFileReaderWrapper</name>
    <filename>classtracktion_1_1engine_1_1BufferedFileReaderWrapper.html</filename>
    <base>tracktion::engine::FallbackReader</base>
    <member kind="function">
      <type></type>
      <name>BufferedFileReaderWrapper</name>
      <anchorfile>classtracktion_1_1engine_1_1BufferedFileReaderWrapper.html</anchorfile>
      <anchor>a9c57dfce697ab8f7e67eb7763f9a4ed2</anchor>
      <arglist>(std::shared_ptr&lt; BufferedAudioReader &gt; s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadTimeout</name>
      <anchorfile>classtracktion_1_1engine_1_1BufferedFileReaderWrapper.html</anchorfile>
      <anchor>adcdbc5d347661646701adb2bd17a7510</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readSamples</name>
      <anchorfile>classtracktion_1_1engine_1_1BufferedFileReaderWrapper.html</anchorfile>
      <anchor>a083dd7fa7c36e13295ac1f194a55bf9a</anchor>
      <arglist>(int *const *destSamples, int numDestChannels, int startOffsetInDestBuffer, juce::int64 startSampleInFile, int numSamples) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::BufferingAudioReaderWrapper</name>
    <filename>classtracktion_1_1engine_1_1BufferingAudioReaderWrapper.html</filename>
    <base>tracktion::engine::FallbackReader</base>
    <member kind="function">
      <type></type>
      <name>BufferingAudioReaderWrapper</name>
      <anchorfile>classtracktion_1_1engine_1_1BufferingAudioReaderWrapper.html</anchorfile>
      <anchor>a1df118eb4990ae81afb50716fea7c812</anchor>
      <arglist>(std::unique_ptr&lt; juce::BufferingAudioReader &gt; sourceReader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadTimeout</name>
      <anchorfile>classtracktion_1_1engine_1_1BufferingAudioReaderWrapper.html</anchorfile>
      <anchor>afc3ac92774fd45d622d587a39c5bb2ec</anchor>
      <arglist>(int timeoutMilliseconds) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readSamples</name>
      <anchorfile>classtracktion_1_1engine_1_1BufferingAudioReaderWrapper.html</anchorfile>
      <anchor>a1b5bd9c8f6a0dc76d5586252dd04374b</anchor>
      <arglist>(int *const *destSamples, int numDestChannels, int startOffsetInDestBuffer, juce::int64 startSampleInFile, int numSamples) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::PluginManager::BuiltInType</name>
    <filename>structtracktion_1_1engine_1_1PluginManager_1_1BuiltInType.html</filename>
    <member kind="function">
      <type></type>
      <name>BuiltInType</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginManager_1_1BuiltInType.html</anchorfile>
      <anchor>ad58a518547ca24fdb04ca6720a530e02</anchor>
      <arglist>(const juce::String &amp;type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BuiltInType</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginManager_1_1BuiltInType.html</anchorfile>
      <anchor>ab0edb7d36a513ef0f5bf0c21321a5a39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Plugin::Ptr</type>
      <name>create</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginManager_1_1BuiltInType.html</anchorfile>
      <anchor>a52ab710ce70bafd4e1e013b77596e87f</anchor>
      <arglist>(PluginCreationInfo)=0</arglist>
    </member>
    <member kind="variable">
      <type>const juce::String</type>
      <name>type</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginManager_1_1BuiltInType.html</anchorfile>
      <anchor>a7a813462176e7d575443afd03222628c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::PluginManager::BuiltInTypeBase</name>
    <filename>structtracktion_1_1engine_1_1PluginManager_1_1BuiltInTypeBase.html</filename>
    <templarg></templarg>
    <base>tracktion::engine::PluginManager::BuiltInType</base>
    <member kind="function">
      <type></type>
      <name>BuiltInTypeBase</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginManager_1_1BuiltInTypeBase.html</anchorfile>
      <anchor>a596c0c663c6aecf4ec76e6222612d113</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>create</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginManager_1_1BuiltInTypeBase.html</anchorfile>
      <anchor>ad708a4b5f20bf837d901d9ce8c44a23f</anchor>
      <arglist>(PluginCreationInfo info) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::StepClip::Pattern::CachedPattern</name>
    <filename>structtracktion_1_1engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</filename>
    <member kind="function">
      <type></type>
      <name>CachedPattern</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</anchorfile>
      <anchor>a55b854d54c082f17170e3d589c78e3ab</anchor>
      <arglist>(const Pattern &amp;, int channel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getNote</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</anchorfile>
      <anchor>ad4001aca35c4b86769584b867e83e859</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getVelocity</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</anchorfile>
      <anchor>aeeadeb69a3bd8d0ac04d29f7363443cb</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getGate</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</anchorfile>
      <anchor>a800cd36bf8dd2fc4e8c28d5c398a1a55</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getProbability</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</anchorfile>
      <anchor>a1e61a6fcbd1a48870276d8cc51b64166</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="variable">
      <type>juce::BigInteger</type>
      <name>notes</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</anchorfile>
      <anchor>a99c3bf30a2458017a30f6b3e11e56a0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; int &gt;</type>
      <name>velocities</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</anchorfile>
      <anchor>a031bdf21dd9acda7212298dec439423d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; double &gt;</type>
      <name>gates</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</anchorfile>
      <anchor>abdbc6caca9a80ffcaaf466532ef50785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; float &gt;</type>
      <name>probabilities</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern_1_1CachedPattern.html</anchorfile>
      <anchor>a53ce0be64463f3b5c9f11a64c6c48276</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AutomationRecordManager::AutomationParamData::Change</name>
    <filename>structtracktion_1_1engine_1_1AutomationRecordManager_1_1AutomationParamData_1_1Change.html</filename>
    <member kind="function">
      <type></type>
      <name>Change</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomationRecordManager_1_1AutomationParamData_1_1Change.html</anchorfile>
      <anchor>a86ebe1b443ed06dacfbcff4b2a231abd</anchor>
      <arglist>(TimePosition t, float v) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>TimePosition</type>
      <name>time</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomationRecordManager_1_1AutomationParamData_1_1Change.html</anchorfile>
      <anchor>ae5d2a13b85755a734fbf177a03fe5f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>value</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomationRecordManager_1_1AutomationParamData_1_1Change.html</anchorfile>
      <anchor>a9eeef22e4a7858ab3bf8104428db7044</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::SelectionManager::ChangedSelectionDetector</name>
    <filename>structtracktion_1_1engine_1_1SelectionManager_1_1ChangedSelectionDetector.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>isFirstChangeSinceSelection</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectionManager_1_1ChangedSelectionDetector.html</anchorfile>
      <anchor>ab8ef7ac8f1aa00268f1f5d37b80b27d2</anchor>
      <arglist>(SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectionManager_1_1ChangedSelectionDetector.html</anchorfile>
      <anchor>ae2831329055461dd91b71e297dc2d5d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lastSelectionChangeCount</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectionManager_1_1ChangedSelectionDetector.html</anchorfile>
      <anchor>adb50d29f40891a3200ec0f3d670d3f88</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::StepClip::Channel</name>
    <filename>structtracktion_1_1engine_1_1StepClip_1_1Channel.html</filename>
    <base>tracktion::engine::Selectable</base>
    <member kind="function">
      <type></type>
      <name>Channel</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>a7ebe8d092710bed574db574271d53d55</anchor>
      <arglist>(StepClip &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Channel</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>a7f0f6f090e42095096331c9bdcedc020</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>a8ffede646162223c5f32036d03c4ea88</anchor>
      <arglist>(const Channel &amp;) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>adbc9dd4f34e25b1569e11a922e53cece</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndex</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>a692f5ab0b716f60fcfcec2dfeeff70f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDisplayName</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>ae957b1b07e3abcf06b69145b863d7eab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesGrooveStrength</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>a41d9a35951ae9d942faa8f595fcc1859</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>StepClip &amp;</type>
      <name>clip</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>a27a507170b30eee6b5dc862bf7636afb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>a0ca06ec5da38a2b874e53cc9408d0b79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; MidiChannel &gt;</type>
      <name>channel</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>aec4cd4355795959a36d8b8f06e8bf57c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>noteNumber</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>aa7079057ce0a87b25d37bd9bc98fd409</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>noteValue</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>a52d1ac8dda0e1a9212902bdd468b9bc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>grooveTemplate</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>ae018c39da2441b83a97734ce3407a20a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>name</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>a227db88f76a210b78bed449d45585101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>grooveStrength</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Channel.html</anchorfile>
      <anchor>aec86ddffc4b61321e5eadffd32efd586</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::ChannelConnection</name>
    <filename>structtracktion_1_1graph_1_1ChannelConnection.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion_1_1graph_1_1ChannelConnection.html</anchorfile>
      <anchor>a6627221bae5b88598221bd3cc676d0a6</anchor>
      <arglist>(const ChannelConnection &amp;o) const noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sourceChannel</name>
      <anchorfile>structtracktion_1_1graph_1_1ChannelConnection.html</anchorfile>
      <anchor>ac0aa0314c5e3210d7cccd8e58f37b05d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>destChannel</name>
      <anchorfile>structtracktion_1_1graph_1_1ChannelConnection.html</anchorfile>
      <anchor>a39c5eb71e81b9098d4236b53828fbe73</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ChannelIndex</name>
    <filename>structtracktion_1_1engine_1_1ChannelIndex.html</filename>
    <member kind="function">
      <type></type>
      <name>ChannelIndex</name>
      <anchorfile>structtracktion_1_1engine_1_1ChannelIndex.html</anchorfile>
      <anchor>a095d4be3e9be4a93b60861ab0baa1a6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChannelIndex</name>
      <anchorfile>structtracktion_1_1engine_1_1ChannelIndex.html</anchorfile>
      <anchor>a1facc26e84f991f5e961400832e372ce</anchor>
      <arglist>(int indexInDevice, juce::AudioChannelSet::ChannelType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion_1_1engine_1_1ChannelIndex.html</anchorfile>
      <anchor>ac5d958a5868304593da97221717ac407</anchor>
      <arglist>(const ChannelIndex &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion_1_1engine_1_1ChannelIndex.html</anchorfile>
      <anchor>a387496a480f5ff63ecd85a4fa26c75e4</anchor>
      <arglist>(const ChannelIndex &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>indexInDevice</name>
      <anchorfile>structtracktion_1_1engine_1_1ChannelIndex.html</anchorfile>
      <anchor>a90a1a445f2e88bfb6cb9c11dfd26e057</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioChannelSet::ChannelType</type>
      <name>channel</name>
      <anchorfile>structtracktion_1_1engine_1_1ChannelIndex.html</anchorfile>
      <anchor>a8c76aeb79b757bcfa92a16ed2946dc23</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::ChannelRemappingNode</name>
    <filename>classtracktion_1_1graph_1_1ChannelRemappingNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>ChannelRemappingNode</name>
      <anchorfile>classtracktion_1_1graph_1_1ChannelRemappingNode.html</anchorfile>
      <anchor>aba5d4834aa197584833a8828d7c9facf</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; inputNode, std::vector&lt; std::pair&lt; int, int &gt;&gt; channelMapToUse, bool passMidiThrough)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1graph_1_1ChannelRemappingNode.html</anchorfile>
      <anchor>a9df6bc07b2b6952dd13d2a95988ef0bf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1graph_1_1ChannelRemappingNode.html</anchorfile>
      <anchor>a2bd6c49d30f11671f24596ecb02f64a9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1graph_1_1ChannelRemappingNode.html</anchorfile>
      <anchor>ad99718485c5701b6f2198844cd89c217</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1ChannelRemappingNode.html</anchorfile>
      <anchor>a2ba6865cc544162190805bf5d3575190</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::Chord</name>
    <filename>classtracktion_1_1engine_1_1Chord.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ChordType</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>customChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7eaa196eab1645aea679dc3441883b6072d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>invalidChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea88d27b4c9b244f5bc3cfe0b680f91dbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>majorTriad</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea81a35cf6a0d952bf5ed37f1d13f12e83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorTriad</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea53d6c9430653c4550eb8b8de57f02ccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>diminishedTriad</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea935c8ae4d9be53a1e5748f7c9a95585b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>augmentedTriad</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea805b1d450a57b431e0324649309cc5ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>majorSixthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea1978fb5689b52cab2b1be703d159321d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorSixthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7eac976a7e64f3d80af2d4a6f4831e035d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dominatSeventhChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea24c6254877efef7d707c0a8f60b68924</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>majorSeventhChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea574374709159190d4b3186195f7be757</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorSeventhChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea603f7795c327581f5da88757b7c39543</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>augmentedSeventhChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea6315d0cccc1bdf82c50e18c0aeb660e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>diminishedSeventhChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7eae56a0f79e628e02afc7462b316f17c48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfDiminishedSeventhChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7eae0c2e7aa3b5da9134492cf4824ade95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorMajorSeventhChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea674edbbaf064eef621253f7102766c37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>suspendedSecond</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7eaa02ffc778b58c4560ff885d91ddc9209</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>suspendedFourth</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea979dd477a4b371ff8a81689fb5957d49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>powerChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7eafcd801decf3fb4e1a00d78438a105558</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>majorNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ead72375e68a2de29bce0457ecca48c83e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dominantNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea7240a0f390af067681b4e912af785d90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorMajorNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea3f685f4577ffb26fc23de59a2a374a1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorDominantNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea3120d85ca57b22226aeeca9dc81659f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>augmentedMajorNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7eaadedbe49d264fb65f8d7718bb40ef373</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>augmentedDominantNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea52c565c2ad0ad3fe3109f9a63acfa624</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfDiminishedNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7eaf3d10effc26b0a4898210685c750838c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfDiminishedMinorNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea02654d75d524018aa08e083a47aa378e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>diminishedNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7eab78a6aa9660c4d075e2f2af98ce86b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>diminishedMinorNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ead6ab4f06e585b4af8c19abb04b3a38e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>customChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7eaa196eab1645aea679dc3441883b6072d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>invalidChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea88d27b4c9b244f5bc3cfe0b680f91dbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>majorTriad</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea81a35cf6a0d952bf5ed37f1d13f12e83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorTriad</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea53d6c9430653c4550eb8b8de57f02ccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>diminishedTriad</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea935c8ae4d9be53a1e5748f7c9a95585b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>augmentedTriad</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea805b1d450a57b431e0324649309cc5ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>majorSixthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea1978fb5689b52cab2b1be703d159321d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorSixthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7eac976a7e64f3d80af2d4a6f4831e035d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dominatSeventhChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea24c6254877efef7d707c0a8f60b68924</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>majorSeventhChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea574374709159190d4b3186195f7be757</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorSeventhChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea603f7795c327581f5da88757b7c39543</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>augmentedSeventhChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea6315d0cccc1bdf82c50e18c0aeb660e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>diminishedSeventhChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7eae56a0f79e628e02afc7462b316f17c48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfDiminishedSeventhChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7eae0c2e7aa3b5da9134492cf4824ade95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorMajorSeventhChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea674edbbaf064eef621253f7102766c37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>suspendedSecond</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7eaa02ffc778b58c4560ff885d91ddc9209</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>suspendedFourth</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea979dd477a4b371ff8a81689fb5957d49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>powerChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7eafcd801decf3fb4e1a00d78438a105558</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>majorNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ead72375e68a2de29bce0457ecca48c83e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dominantNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea7240a0f390af067681b4e912af785d90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorMajorNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea3f685f4577ffb26fc23de59a2a374a1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minorDominantNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea3120d85ca57b22226aeeca9dc81659f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>augmentedMajorNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7eaadedbe49d264fb65f8d7718bb40ef373</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>augmentedDominantNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea52c565c2ad0ad3fe3109f9a63acfa624</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfDiminishedNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7eaf3d10effc26b0a4898210685c750838c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfDiminishedMinorNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ea02654d75d524018aa08e083a47aa378e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>diminishedNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7eab78a6aa9660c4d075e2f2af98ce86b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>diminishedMinorNinthChord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae91300775fb639572d8aabbb0d2a1e7ead6ab4f06e585b4af8c19abb04b3a38e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Chord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>a075a7a494e443757f9b46d2a7bceaa40</anchor>
      <arglist>(ChordType type=majorTriad)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Chord</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>a5003c9478e5dc39bbbc98d5cc79f6c7e</anchor>
      <arglist>(juce::Array&lt; int &gt; steps, juce::String symbol)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>toString</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>a35621412a8052e94daaf5b85aa75fd9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ChordType</type>
      <name>getType</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>afb516d82616c2513f9948d2b3aea978d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ae6f50e2ccbb04f7ad3b3eaa8736423f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>a7056488c4bd429918fecb4b2d86baaff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>afc0c7db07698275981cd812f51691c52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSymbol</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ab51cc84379409ef12f353cc7320cae68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; int &gt;</type>
      <name>getSteps</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>a016608a5f2f90e6da66128ec00044420</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; int &gt;</type>
      <name>getSteps</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>ac2d92b945d7782866da817999d7b2f4d</anchor>
      <arglist>(int inversion) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Chord</type>
      <name>fromString</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>a5ce13ce481165697dc97e03cce1680d3</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; ChordType &gt;</type>
      <name>getAllChordType</name>
      <anchorfile>classtracktion_1_1engine_1_1Chord.html</anchorfile>
      <anchor>af28bb974996c2e87a07545a8356ec067</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ChordClip</name>
    <filename>classtracktion_1_1engine_1_1ChordClip.html</filename>
    <base>tracktion::engine::Clip</base>
    <member kind="function">
      <type></type>
      <name>ChordClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordClip.html</anchorfile>
      <anchor>a9950af79e9900f3ff2d19f00de2cf960</anchor>
      <arglist>(const juce::ValueTree &amp;, EditItemID, ClipOwner &amp;targetParent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ChordClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordClip.html</anchorfile>
      <anchor>a464356524581dbc4eef7f7e0cd0c6171</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordClip.html</anchorfile>
      <anchor>aa42bb33477ac4c33fcd2681de3595291</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedTo</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordClip.html</anchorfile>
      <anchor>a9ad5bbd626e8dee89613b7727bee6ade</anchor>
      <arglist>(ClipOwner &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getColour</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordClip.html</anchorfile>
      <anchor>a33c5adcc1f2ed281ef561172422282bd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getDefaultColour</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordClip.html</anchorfile>
      <anchor>a93c985f0e52e256342fa1b0c43d5443f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordClip.html</anchorfile>
      <anchor>aae09ea1c7ba478fbac446b52ce18cc2f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordClip.html</anchorfile>
      <anchor>a15ebef5f84e26aa06e8c566793431daf</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordClip.html</anchorfile>
      <anchor>a65908ff113432fdff1d788cecfec991f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>PatternGenerator *</type>
      <name>getPatternGenerator</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordClip.html</anchorfile>
      <anchor>a7a835c3752af2f2f97b35d933e87b910</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pitchTempoTrackChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordClip.html</anchorfile>
      <anchor>a8d5543a0d3bb6fdce2a3107d2c64ba9c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleAsyncUpdate</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordClip.html</anchorfile>
      <anchor>a290fd524a8a51d031d551996ab69400e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordClip.html</anchorfile>
      <anchor>ad9134ff0c03eb7bce5b9f07b44a83019</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordClip.html</anchorfile>
      <anchor>a5772dd24a937032e5cc3978760632277</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordClip.html</anchorfile>
      <anchor>a1b8481525833afd71050315bb115ec19</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordClip.html</anchorfile>
      <anchor>a74b733ab43a31fcde379b6a7153a6c9a</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ChordTrack</name>
    <filename>classtracktion_1_1engine_1_1ChordTrack.html</filename>
    <base>tracktion::engine::ClipTrack</base>
    <member kind="function">
      <type></type>
      <name>ChordTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordTrack.html</anchorfile>
      <anchor>a05bc91cbee3bd54c609aa701b2db3987</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ChordTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordTrack.html</anchorfile>
      <anchor>a166d981b53a6fe77d54303f69ee482c5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChordTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordTrack.html</anchorfile>
      <anchor>a5477d90afae760989f1b538edbd152cd</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordTrack.html</anchorfile>
      <anchor>affea49ca62316b922c5ca526f02d6f85</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordTrack.html</anchorfile>
      <anchor>a8d281b458c183ff648e0d01013429e97</anchor>
      <arglist>(Plugin *) const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTrackWarning</name>
      <anchorfile>classtracktion_1_1engine_1_1ChordTrack.html</anchorfile>
      <anchor>a2537b234c88fd5916a37bf2362e0cf9b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ChorusPlugin</name>
    <filename>classtracktion_1_1engine_1_1ChorusPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>ChorusPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a8acb34afcf9971e8384b5c89e5387f56</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ChorusPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a791caccb35bdc4a630740581220c2953</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>ac123ccb72e247249db52b6732480a717</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a59ab06e4d9e42cdbfc76274040803bc9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a963116c6bf329482688ff62a4f856b6f</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a7b54ccf4e3e5cd913f317189eda0422e</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a6c842028331472b2421ea75299262081</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>aa9ed97c0dc8346a3d34cef3f513e6a71</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>ae3d2d49e154cc8b237e1810e75347d4c</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a49acdc730ea6cf9d87570ea7ae5e8cc5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>ac5c8b4a51ca9ea9f77deb51705be8ae6</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a9786bbe38a2a787c15631312a715008f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>depthMs</name>
      <anchorfile>classtracktion_1_1engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a52512b0d865f1ad7d10f1eaa71477a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>width</name>
      <anchorfile>classtracktion_1_1engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a588f609da46a2916a83689789f8cb6ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>mixProportion</name>
      <anchorfile>classtracktion_1_1engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a5af7c55dd0fa8d27f139fc2edb7ea8df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>speedHz</name>
      <anchorfile>classtracktion_1_1engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>ac7a17f506475b204a76d741a1f8dbbe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1ChorusPlugin.html</anchorfile>
      <anchor>a04e15216f4c42bf9ef7a78a3af74a19f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::SelectableClass::ClassInstance</name>
    <filename>structtracktion_1_1engine_1_1SelectableClass_1_1ClassInstance.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>tracktion::engine::SelectableClass::ClassInstanceBase</base>
    <member kind="function">
      <type>SelectableClass *</type>
      <name>getClassForObject</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableClass_1_1ClassInstance.html</anchorfile>
      <anchor>a1f1ff34a8f5a38e05526b6916946336b</anchor>
      <arglist>(const Selectable *s) override</arglist>
    </member>
    <member kind="variable">
      <type>ClassType</type>
      <name>cls</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableClass_1_1ClassInstance.html</anchorfile>
      <anchor>a76195a2a6b9b027908dc5787f433830a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::SelectableClass::ClassInstanceBase</name>
    <filename>structtracktion_1_1engine_1_1SelectableClass_1_1ClassInstanceBase.html</filename>
    <member kind="function">
      <type></type>
      <name>ClassInstanceBase</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableClass_1_1ClassInstanceBase.html</anchorfile>
      <anchor>a78bafa884a795ffb61e6b5dd301c8de4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ClassInstanceBase</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableClass_1_1ClassInstanceBase.html</anchorfile>
      <anchor>a8c64be9c4448cd3f374545c08396c48b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SelectableClass *</type>
      <name>getClassForObject</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableClass_1_1ClassInstanceBase.html</anchorfile>
      <anchor>af55821434b1f8ee8c7390b58beb7f3b5</anchor>
      <arglist>(const Selectable *)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ClickGenerator</name>
    <filename>classtracktion_1_1engine_1_1ClickGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>ClickGenerator</name>
      <anchorfile>classtracktion_1_1engine_1_1ClickGenerator.html</anchorfile>
      <anchor>a7639771c42471a7454716c563a4250c5</anchor>
      <arglist>(Edit &amp;, bool isMidi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1ClickGenerator.html</anchorfile>
      <anchor>a57fb9043285b0f5fdeac49a046986203</anchor>
      <arglist>(double sampleRate, TimePosition startTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1ClickGenerator.html</anchorfile>
      <anchor>a48abd2fea4c4984d552069d60f01b79f</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; *, MidiMessageArray *, TimeRange)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ClickNode</name>
    <filename>classtracktion_1_1engine_1_1ClickNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>ClickNode</name>
      <anchorfile>classtracktion_1_1engine_1_1ClickNode.html</anchorfile>
      <anchor>a3c5eed81b301b9ed1dd793557d74e996</anchor>
      <arglist>(Edit &amp;, int numAudioChannels, bool generateMidi, tracktion::graph::PlayHead &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1ClickNode.html</anchorfile>
      <anchor>a07192fe7f3b337f27ac1bfa8850a7117</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1ClickNode.html</anchorfile>
      <anchor>a4ff729decb41e5bd970d4813a2abb50e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1ClickNode.html</anchorfile>
      <anchor>ac8bbccfefc140c0dd11af778e275d998</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1ClickNode.html</anchorfile>
      <anchor>a6d69df68c8cfa1c18571b931b529324e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1ClickNode.html</anchorfile>
      <anchor>ab0c2da91629dcb5ef6fdecb51f2d721e</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::LevelMeasurer::Client</name>
    <filename>structtracktion_1_1engine_1_1LevelMeasurer_1_1Client.html</filename>
    <member kind="function">
      <type></type>
      <name>Client</name>
      <anchorfile>structtracktion_1_1engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>aab44dac3888ea4e9d4c8f9598961d452</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumChannelsUsed</name>
      <anchorfile>structtracktion_1_1engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>a6a1e15ff5bda29c4c28c60fc9d91cf51</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structtracktion_1_1engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>a062f01ae8c399d35fe34e8397d7b5228</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAndClearOverload</name>
      <anchorfile>structtracktion_1_1engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>a22cb1829a9d53a1ca28aa79dff039f31</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAndClearPeak</name>
      <anchorfile>structtracktion_1_1engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>aa882c2e395710f1a5040437ae8e42f9a</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>DbTimePair</type>
      <name>getAndClearMidiLevel</name>
      <anchorfile>structtracktion_1_1engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>aea9b51ca5617ea7a15724fcf55acc4ed</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>DbTimePair</type>
      <name>getAndClearAudioLevel</name>
      <anchorfile>structtracktion_1_1engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>a0da88f76ce159e2be68356c08d7dd363</anchor>
      <arglist>(int chan) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumChannelsUsed</name>
      <anchorfile>structtracktion_1_1engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>aee0ea8cf9d33b0fa0371c5e2a6c7e448</anchor>
      <arglist>(int) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOverload</name>
      <anchorfile>structtracktion_1_1engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>ab9f6e45eb5d6f95b3546a3eda98eb8cc</anchor>
      <arglist>(int channel, bool hasOverloaded) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClearOverload</name>
      <anchorfile>structtracktion_1_1engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>a76fdfe1f5b800a1918e679c1e0ebb7a2</anchor>
      <arglist>(bool) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClearPeak</name>
      <anchorfile>structtracktion_1_1engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>a157e065f99ca0807378b81800ed8c306</anchor>
      <arglist>(bool) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateAudioLevel</name>
      <anchorfile>structtracktion_1_1engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>a31f42fcba38015043ada61305c65ef48</anchor>
      <arglist>(int channel, DbTimePair) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMidiLevel</name>
      <anchorfile>structtracktion_1_1engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>ad7b5a65758ea9001728d4e1b15e7e6e9</anchor>
      <arglist>(DbTimePair) noexcept</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr auto</type>
      <name>maxNumChannels</name>
      <anchorfile>structtracktion_1_1engine_1_1LevelMeasurer_1_1Client.html</anchorfile>
      <anchor>a807b970fbe879449154431590d058eac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::Clip</name>
    <filename>classtracktion_1_1engine_1_1Clip.html</filename>
    <base>tracktion::engine::TrackItem</base>
    <base>tracktion::engine::Exportable</base>
    <class kind="struct">tracktion::engine::Clip::Listener</class>
    <member kind="enumeration">
      <type></type>
      <name>FollowActionDurationType</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>adc95ebd7f90eac7a6972790064cb6b86</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1Clip.html" anchor="adc95ebd7f90eac7a6972790064cb6b86a1e4cb5f584d055a0992385c1b2155786">beats</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1Clip.html" anchor="adc95ebd7f90eac7a6972790064cb6b86a9ac74365ff1a2e3a744fca94f62c3784">loops</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SyncType</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>af0cfff3f282a7f6b1b92dc5ae61c97b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>syncBarsBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>af0cfff3f282a7f6b1b92dc5ae61c97b7a4cddcc775a3a9d5b21492f9e9b80cfc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>syncAbsolute</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>af0cfff3f282a7f6b1b92dc5ae61c97b7a8b060ca5f53689e0dfd4eedf107a329b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; Clip &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a17e400ae5a866dbea54329885e29dcc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; Clip &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>acbbabbcc56d91af35797790f9d103534</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>syncBarsBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>af0cfff3f282a7f6b1b92dc5ae61c97b7a4cddcc775a3a9d5b21492f9e9b80cfc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>syncAbsolute</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>af0cfff3f282a7f6b1b92dc5ae61c97b7a8b060ca5f53689e0dfd4eedf107a329b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Clip</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a8591bc44e7cac883131297d3d80989a4</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipOwner &amp;, EditItemID, Type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Clip</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a8c0ab992f8fd6027f94de77d180e7eb0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a8f9400d5e2ff5d5fbb2642c9db157c2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a96e438592d9c7b0d67537634db995b3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sourceMediaChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a0dc04fe1a6c7169d88f32fe37df4a12a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pitchTempoTrackChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a472c823e6e5b559e056e1e7df9dad0e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a2555c0941c528c2ced5c62bcb1ec4484</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>aa84165df412d15901afff189bd2392a8</anchor>
      <arglist>(const juce::String &amp;newName)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a616a04809eb9ee40d16902fadad6a4bf</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>canBeAddedTo</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a258a149c923c374a954788dc57d07840</anchor>
      <arglist>(ClipOwner &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>usesSourceFile</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a756f5a8136b751a9edcd0e0992852de7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SourceFileReference &amp;</type>
      <name>getSourceFileReference</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a35b73ec27f1743b73b0e34084649ea4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getCurrentSourceFile</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ac1d8a9faa19595dea48b14dfd3f3d16f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ReferencedItem &gt;</type>
      <name>getReferencedItems</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a420ad6607f70c67cb108dd008dda33b2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reassignReferencedItem</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a659a8741edb82ed25be123052c96cdb5</anchor>
      <arglist>(const ReferencedItem &amp;, ProjectItemID, double) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; LaunchHandle &gt;</type>
      <name>getLaunchHandle</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>afa53f80c70e84170110c562c90c04fba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setUsesGlobalLaunchQuatisation</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a4238a8e7babf45eaba899d50aa9aa969</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>usesGlobalLaunchQuatisation</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ab7e1f2526b3564f9b79076dc38c09703</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LaunchQuantisation *</type>
      <name>getLaunchQuantisation</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a597e192e496c54d0ddf4850756fc8446</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual FollowActions *</type>
      <name>getFollowActions</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ac24a238ea4f7e2ad9a246f18b1e4044f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClipPosition</type>
      <name>getPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ad5d23bd5e81685800213ed0d19c23a00</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getContentBeatAtTime</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a6afc18ac1efa6fed4f20162a165b37dd</anchor>
      <arglist>(TimePosition) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getTimeOfContentBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a2544adc4bd82c01bcc6e0f133e340357</anchor>
      <arglist>(BeatPosition) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TimeDuration</type>
      <name>getMaximumLength</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a53c8de53b0c22ea8b91a6be5bd55803d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::Array&lt; TimePosition &gt;</type>
      <name>getInterestingTimes</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ad3376ba3671ff623ea96a5fc74220cf9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getSpottingPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a31a5e8ad79e968e308b8a55942263daa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canLoop</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a724791bbc8f9bfe6cc3383135ebbe908</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isLooping</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a44632e4c216b2bf58406f793f25c7543</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>beatBasedLooping</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a126e1471e6c5bb09c7c87b13dbc6d72b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setNumberOfLoops</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a98d3ef7229cfcd6db8b8c8b78f243b4a</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>disableLooping</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a011bc807f5f8b78378550555e42fec95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual BeatPosition</type>
      <name>getLoopStartBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a9200748a2c2c411affc5a50feefb816c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TimePosition</type>
      <name>getLoopStart</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a041df66176ac85bd0cc466f3aa3fc913</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual BeatDuration</type>
      <name>getLoopLengthBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>af1ff2cd20bb5c893f61e2e8b9d3498ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TimeDuration</type>
      <name>getLoopLength</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a9aa3fc4e165770123b8f8fdd79eac3a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>getLoopRange</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>abc6a40b9749c5038180a718d662c61d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BeatRange</type>
      <name>getLoopRangeBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ac07c6dd9c3d2540b413ee0e58ad77110</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLoopRange</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a6ebc0220809a7ccf5ca56ab6d33494ad</anchor>
      <arglist>(TimeRange)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLoopRangeBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ab61ff87220c03dfdbe2612d5a4a42b55</anchor>
      <arglist>(BeatRange)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ab8075c1e15a84ff6e45e245c5cb9fa0f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ae76a20fc8f7d7e83e2993461b0244b58</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSyncType</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>af61d8838219d1c803a2b739fa0af46a1</anchor>
      <arglist>(SyncType sync)</arglist>
    </member>
    <member kind="function">
      <type>SyncType</type>
      <name>getSyncType</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a88f8b5fff94432845775c2da96db3815</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>af5c9bc824cc36ea40e4de688cd149750</anchor>
      <arglist>(ClipPosition newPosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStart</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a5afc0095d5547b3963e690582a2b89ef</anchor>
      <arglist>(TimePosition newStart, bool preserveSync, bool keepLength)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLength</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a80d732ca570fc6ca79c3fa54482118f3</anchor>
      <arglist>(TimeDuration newLength, bool preserveSync)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnd</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>adb12686b37ef444b68371bec6f27c1fc</anchor>
      <arglist>(TimePosition newEnd, bool preserveSync)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOffset</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a3040cbb85ea7ed9e2e54716e367720a6</anchor>
      <arglist>(TimeDuration newOffset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trimAwayOverlap</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a43b2d0025c87105059fb9526a73ec2c0</anchor>
      <arglist>(TimeRange editRangeToTrim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFromParent</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a80159e4f8803e41d7b03ab85712d74b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>moveTo</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a88c1ed21c0ac9333added03f562c238e</anchor>
      <arglist>(ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSpeedRatio</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a93f5c829c98b4c38e73ba450e5fd4b9c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSpeedRatio</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>add314e27c918d0e49f459e0357110a83</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rescale</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a1a5336ae81f2ad05202a050e58142420</anchor>
      <arglist>(TimePosition pivotTimeInEdit, double factor)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGrouped</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a8b634d15f3f629aed3e69f094476bcd1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>TrackItem *</type>
      <name>getGroupParent</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a0b2cc2d3f6371062db06eba3cfc90a35</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGroup</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ae395b5d2952eec8af24e8adba9f7519e</anchor>
      <arglist>(EditItemID newGroupID)</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>getGroupID</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a117b91fcd72592014d6fbc9d0711c739</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CollectionClip *</type>
      <name>getGroupClip</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a67aa339b9855585d46712b8903adf4e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLinked</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ad264605b407dece2b450f07de335aa0e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinkGroupID</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>acd9100af18d9a17dc3818ee2dc5e0140</anchor>
      <arglist>(juce::String newLinkID)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getLinkGroupID</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a5bfb7ccf0650fec8a3655e5b3b7c580b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ClipOwner *</type>
      <name>getParent</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a58c41bf47c4d86398bbdd4d3c6f9502f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ClipTrack *</type>
      <name>getClipTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a5c8ac575d655f7c643970117ecba1561</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>acb283afe1992b98b5c7d50d807c8f168</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>ClipSlot *</type>
      <name>getClipSlot</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a52b5c3911c9cf8c64fadf58de79e6fe2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::Colour</type>
      <name>getColour</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a777c76d5c393e98394fb23b02d5d4e3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColour</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a6ede9aafce7da44410c2f91ecb927e9a</anchor>
      <arglist>(juce::Colour col)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removePlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a560c49918bbc7fa9907459c4815a4be5</anchor>
      <arglist>(const Plugin::Ptr &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addClipPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ad8719c23fa2ec0b8c3a5053570eba860</anchor>
      <arglist>(const Plugin::Ptr &amp;, SelectionManager &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Plugin::Array</type>
      <name>getAllPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a0774bb0dd619192b1771868c47dd8a47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sendMirrorUpdateToAllPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a18e752c3db67b4bff640bcdf92b8e757</anchor>
      <arglist>(Plugin &amp;) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PluginList *</type>
      <name>getPluginList</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ac1984b1a275d4bca122dd20da1ce7363</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Colour</type>
      <name>getDefaultColour</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>acaa3ea300be2fa302aec8d1cd743f912</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>af85bd16a753a07ed83a4a8c22eaa8bb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasAnyTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a3a87403edfa2af5f9db6f500b008575f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::StringArray</type>
      <name>getTakeDescriptions</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>acbf8965b2cbdb3369f953c75bf8a4de7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setCurrentTake</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>aa59261b3d2100aae6f22d86109397bb3</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getCurrentTake</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ae2ff443a60c886c6bb3d04623a2b7267</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a664bd69d205e8cbc302c9665c128559b</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCurrentTakeComp</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>af8ae6441199f46eef6cd3c55718a3f90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setShowingTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a8eea2b7a86910567bb0d085d08dd0c2d</anchor>
      <arglist>(bool shouldShow)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isShowingTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ac1d391945071cb042f6f5d24b2f3ba45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Clip::Array</type>
      <name>unpackTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>aa97dde0d57b1b32275eb444ef6104c29</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>cloneFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>abc6862f678217f77d27f33aae1bbcd42</anchor>
      <arglist>(Clip *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateLinkedClips</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a8f09b3d7f949e83b3d8e4ee55f71a122</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PatternGenerator *</type>
      <name>getPatternGenerator</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a64411d1e5fc4620e29bc4a5a39878e25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>aa5de9dcd6d7fea4bb08280d9b4e8dc97</anchor>
      <arglist>(Listener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>af5a7404dc2de02dce90f776fea5be42b</anchor>
      <arglist>(Listener *)</arglist>
    </member>
    <member kind="function">
      <type>juce::ListenerList&lt; Listener &gt; &amp;</type>
      <name>getListeners</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a77573ec592fc32428d85d13a6fb22fd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changed</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a2cce5c162d273b56bd9032385cc0bd15</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::UndoManager *</type>
      <name>getUndoManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a07cdb220ae22e1b44049b8cff1d043db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParent</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>adf8d2b32dccfac1a28263e66f3dc6f9d</anchor>
      <arglist>(ClipOwner *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isClipState</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a9a2735294345fde189de5b885c8890b1</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isClipState</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a49e0fa76237136fdc4a3c32a3bfe4872</anchor>
      <arglist>(const juce::Identifier &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr</type>
      <name>createClipForState</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ac156d843346755293e078b33b2c3a487</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipOwner &amp;targetParent)</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; FollowActionDurationType &gt;</type>
      <name>followActionDurationType</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>aa64b21d54848f335b588b98584be43a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; BeatDuration &gt;</type>
      <name>followActionBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a12ba12fb801a83e32935b466e56f69ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>followActionNumLoops</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ab1a04a44ef7f379f0181e6577bbdcd9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a501ff706397e129cf2fea5a27db03579</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::Colour &gt;</type>
      <name>colour</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ac3c30e5b4b73748631fee2ec7e502886</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>disabled</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a9e4b68742fa76d0ca335a27c06359ea6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setCurrentSourceFile</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ae981e359a88ba6c39b0577cb7af98d88</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual juce::Array&lt; TimePosition &gt;</type>
      <name>getRescaledMarkPoints</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>abbb5bcc92a45d2500003211c4a9df48e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>aac87f2bd3216f035d333c4be096ee172</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>abc86506128ec46020dac2b4404df753a</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isInitialised</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a05afcc89912ec90eb5b0f4799b1fba72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>cloneInProgress</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a7f2af8061d30ab4bb4899e76eb225018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>clipName</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a5c95c613efbfd1e9b84c9010c97492a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ClipOwner *</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a4d0318c4e29a68be826de8bb72852d30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; TimePosition &gt;</type>
      <name>clipStart</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a766eceb345598c022c65e28025adbccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; TimeDuration &gt;</type>
      <name>length</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a9bdfa88d1dda53f07a59bfab2306cca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; TimeDuration &gt;</type>
      <name>offset</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a1551cc57374bedf9229732d593290aca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>speedRatio</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a86afdff49d648e31e9a47cc58869dfb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SourceFileReference</type>
      <name>sourceFileReference</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ab30bed0b9480752675bfe4b59abc1897</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; EditItemID &gt;</type>
      <name>groupID</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a2864089875e6bceb1d34ca3e885740ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>linkID</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>adc9377196bff5b85bd948e57a6525aa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::File</type>
      <name>currentSourceFile</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a7a7701f71a556744a1b45c6c0d39ba4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; SyncType &gt;</type>
      <name>syncType</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ae2a9f2b855e8ae43e82120db83b5531d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>showingTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a5023bd400208ec9502d29b869004f48d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; PatternGenerator &gt;</type>
      <name>patternGenerator</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>abe882ae657d6c0e7231066ca2203d444</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AsyncCaller</type>
      <name>updateLinkedClipsCaller</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a9c89c3d8c22d9fdcd30aaba4b6cc297f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ListenerList&lt; Listener &gt;</type>
      <name>listeners</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a09fc04bf2df3458bcf0deea1c3a08fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>Track</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>ac9187679244c6a3414c63aae65f83a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>ClipTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a691414d8861d34fe825ff38f10e43609</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>CollectionClip</name>
      <anchorfile>classtracktion_1_1engine_1_1Clip.html</anchorfile>
      <anchor>a44c222975e4e10fc954cdb805fdb8411</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::Clipboard</name>
    <filename>classtracktion_1_1engine_1_1Clipboard.html</filename>
    <class kind="struct">tracktion::engine::Clipboard::AutomationPoints</class>
    <class kind="struct">tracktion::engine::Clipboard::Clips</class>
    <class kind="struct">tracktion::engine::Clipboard::ContentType</class>
    <class kind="struct">tracktion::engine::Clipboard::MIDIEvents</class>
    <class kind="struct">tracktion::engine::Clipboard::Modifiers</class>
    <class kind="struct">tracktion::engine::Clipboard::Pitches</class>
    <class kind="struct">tracktion::engine::Clipboard::Plugins</class>
    <class kind="struct">tracktion::engine::Clipboard::ProjectItems</class>
    <class kind="struct">tracktion::engine::Clipboard::Scenes</class>
    <class kind="struct">tracktion::engine::Clipboard::Takes</class>
    <class kind="struct">tracktion::engine::Clipboard::TempoChanges</class>
    <class kind="struct">tracktion::engine::Clipboard::TimeSigs</class>
    <class kind="struct">tracktion::engine::Clipboard::Tracks</class>
    <member kind="function">
      <type></type>
      <name>Clipboard</name>
      <anchorfile>classtracktion_1_1engine_1_1Clipboard.html</anchorfile>
      <anchor>a247f2ee794307ac54f848243efa28dd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Clipboard</name>
      <anchorfile>classtracktion_1_1engine_1_1Clipboard.html</anchorfile>
      <anchor>abdfeb43026d001ca7374cbdb29c5b903</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion_1_1engine_1_1Clipboard.html</anchorfile>
      <anchor>a5569c9bddcb065421eb0a2df6bae9be8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1Clipboard.html</anchorfile>
      <anchor>a2319cca8f0822f9b502a6a554961de96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContent</name>
      <anchorfile>classtracktion_1_1engine_1_1Clipboard.html</anchorfile>
      <anchor>a7d367faa520f8b35b689094ed4f96b79</anchor>
      <arglist>(std::unique_ptr&lt; ContentType &gt; newContent)</arglist>
    </member>
    <member kind="function">
      <type>const ContentType *</type>
      <name>getContent</name>
      <anchorfile>classtracktion_1_1engine_1_1Clipboard.html</anchorfile>
      <anchor>a1737fb9adc131af66e509d9486dbcb78</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeContent</name>
      <anchorfile>classtracktion_1_1engine_1_1Clipboard.html</anchorfile>
      <anchor>aec114a69b6819bde825abb7ff0fa2151</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>const Type *</type>
      <name>getContentWithType</name>
      <anchorfile>classtracktion_1_1engine_1_1Clipboard.html</anchorfile>
      <anchor>aac4965c6fb3d4c0a8c51221a6828a11f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasContentWithType</name>
      <anchorfile>classtracktion_1_1engine_1_1Clipboard.html</anchorfile>
      <anchor>aa1fae107d246372ffdd35eb34dbb9f89</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion_1_1engine_1_1Clipboard.html</anchorfile>
      <anchor>a81b5c2adc56b9c5c5160580edfc4ff9c</anchor>
      <arglist>(juce::ChangeListener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion_1_1engine_1_1Clipboard.html</anchorfile>
      <anchor>a041ec0d409a4a4f87075a9c92e45f4a8</anchor>
      <arglist>(juce::ChangeListener *)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::EngineBehaviour::ClipDefaults</name>
    <filename>structtracktion_1_1engine_1_1EngineBehaviour_1_1ClipDefaults.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>useProxyFile</name>
      <anchorfile>structtracktion_1_1engine_1_1EngineBehaviour_1_1ClipDefaults.html</anchorfile>
      <anchor>ab1aac7cbf3fdf2ce32f2dc1da11b80b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ResamplingQuality</type>
      <name>resamplingQuality</name>
      <anchorfile>structtracktion_1_1engine_1_1EngineBehaviour_1_1ClipDefaults.html</anchorfile>
      <anchor>a5e6b2d1702f86599ab72b7e990a2d506</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ClipEffect</name>
    <filename>classtracktion_1_1engine_1_1ClipEffect.html</filename>
    <base protection="protected">tracktion::engine::ValueTreeAllEventListener</base>
    <member kind="enumeration">
      <type></type>
      <name>EffectType</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>a68a4d5b963dfd7e9e1f7d1f62ccb9d51</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1ClipEffect.html" anchor="a68a4d5b963dfd7e9e1f7d1f62ccb9d51a334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ClipEffect.html" anchor="a68a4d5b963dfd7e9e1f7d1f62ccb9d51a210ab9e731c9c36c2c38db15c28a8d1c">volume</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ClipEffect.html" anchor="a68a4d5b963dfd7e9e1f7d1f62ccb9d51a0c5768e560616edcd778102090f35615">fadeInOut</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ClipEffect.html" anchor="a68a4d5b963dfd7e9e1f7d1f62ccb9d51a4945228f6fd45bf44ecd04821681b0e8">tapeStartStop</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ClipEffect.html" anchor="a68a4d5b963dfd7e9e1f7d1f62ccb9d51a8245e4d180d519f0c76be895a4fa10bb">stepVolume</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ClipEffect.html" anchor="a68a4d5b963dfd7e9e1f7d1f62ccb9d51ae58221b85ed046db6f874130f9683e68">pitchShift</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ClipEffect.html" anchor="a68a4d5b963dfd7e9e1f7d1f62ccb9d51ae10db1f12a5f7fa88737eda4e033a077">warpTime</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ClipEffect.html" anchor="a68a4d5b963dfd7e9e1f7d1f62ccb9d51ac7d791f18791777c3baeba68b2450cd5">normalise</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ClipEffect.html" anchor="a68a4d5b963dfd7e9e1f7d1f62ccb9d51a5d2e6298735abc1f06bdc62ac7d3c996">makeMono</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ClipEffect.html" anchor="a68a4d5b963dfd7e9e1f7d1f62ccb9d51a4d9c2073afa3c2abb817dceb22c34de6">reverse</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ClipEffect.html" anchor="a68a4d5b963dfd7e9e1f7d1f62ccb9d51a20e57f32ba12b9cd13ebe9ef5e32d949">invert</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ClipEffect.html" anchor="a68a4d5b963dfd7e9e1f7d1f62ccb9d51ab2c97ae425dd751b0e48a3acae79cf4a">filter</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ClipEffect.html" anchor="a68a4d5b963dfd7e9e1f7d1f62ccb9d51ad954c3afd09ae63bdc4cbd99783be9cc">firstEffect</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ClipEffect.html" anchor="a68a4d5b963dfd7e9e1f7d1f62ccb9d51aca66c1e383e0dc2c7267725360153d43">lastEffect</enumvalue>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>a561139017492055419f19be94d40cebc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ClipEffect</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>abac5fb68d4f39e7702975db7b9e82d83</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type>EffectType</type>
      <name>getType</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>a4f402545ddcf06ee65e0037b4dcf0767</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>ac3f5c0596245968393aca7cb52d4534d</anchor>
      <arglist>(const AudioFile &amp;sourceFile, double sourceLength)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>aff58238de0cadd1396b3353d40758205</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>propertiesButtonPressed</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>a8b69138251173de22cce4cafe1e71fc2</anchor>
      <arglist>(SelectionManager &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sourceChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>ae67d83c4134bfb3609e300a146242265</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>ac20cb805c997f6769cdd0c44d6ea11ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AudioFile</type>
      <name>getSourceFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>a1d128ef215c41cb320da7cbe18021afe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AudioFile</type>
      <name>getDestinationFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>a08c7b83cb1945ea8aeb3520b33542978</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>ad427b6564df1a9dab36b22f204316f4f</anchor>
      <arglist>(const AudioFile &amp;) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>a7ce6bf835f1cec7c427e037d91e0d07f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::UndoManager &amp;</type>
      <name>getUndoManager</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>a21cc13c0d79bd950fd991033660e022f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AudioClipBase &amp;</type>
      <name>getClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>a2eda4f7ddf71f9aea90f8ba0692f6857</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>ad2ff77a262eca644959806a5e07ed737</anchor>
      <arglist>(EffectType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ClipEffect *</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>a1a2000947b55d2e02f0079cd71b0faa3</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>createEffectAndAddToValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>ae3742a8953e717deaf996296d1436d17</anchor>
      <arglist>(Edit &amp;, juce::ValueTree parent, ClipEffect::EffectType, int index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getTypeDisplayName</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>aa5219943af7048be12e063f843af16f0</anchor>
      <arglist>(EffectType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addEffectsToMenu</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>ac33ac4d4da2f0c740304190ffbd825c1</anchor>
      <arglist>(juce::PopupMenu &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>a64c9ec31a666910d6a7deaf47761d429</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>a889796851e5da428d5c9964614985211</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClipEffects &amp;</type>
      <name>clipEffects</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>aabe6e065e06541420cf8a51873fb5fe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual HashCode</type>
      <name>getIndividualHash</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>af704deb60cbe1059e1c241bb9fa7011b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>a163ae858da9cca1470a77c8337cd7bf2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ClipEffects</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffect.html</anchorfile>
      <anchor>a0b28c6f563ff0211218c06635a18f785</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ClipEffects</name>
    <filename>classtracktion_1_1engine_1_1ClipEffects.html</filename>
    <base>ValueTreeObjectList&lt; ClipEffect &gt;</base>
    <class kind="struct">tracktion::engine::ClipEffects::Listener</class>
    <class kind="struct">tracktion::engine::ClipEffects::RenderInhibitor</class>
    <member kind="function">
      <type></type>
      <name>ClipEffects</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>ab1ac82789125a19617b62c3d85709614</anchor>
      <arglist>(const juce::ValueTree &amp;, AudioClipBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ClipEffects</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>a285c5a395b5ec87e2438d3f1e2f140e6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>aeda841b5f64e882c007a855bf7c978ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect *</type>
      <name>getClipEffect</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>a8b202f0f1c2ddedc3b3b56c622f531a8</anchor>
      <arglist>(const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>aac1aad00043beb7d988262fa2c8b67a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getEffectsStartTime</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>a0a6674c01d8dfe6441dec382fa6638ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getEffectsLength</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>a0061a7c7c960e0e6a71252d7af2f829f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>getEffectsRange</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>a478e5d8153586448d8c73173eed72e9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSpeedRatioEstimate</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>a931b2f0c75e6337a0da4ec7356fda069</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>a0d4484d8cb7a6955d2e5701b6288a519</anchor>
      <arglist>(const AudioFile &amp;af)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyListenersOfRenderCompletion</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>a96aa52bd56def18fc6a896023e357800</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RenderManager::Job::Ptr</type>
      <name>createRenderJob</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>ae90a6bb72963ca47ee0c02d899e1f203</anchor>
      <arglist>(const AudioFile &amp;destFile, const AudioFile &amp;sourceFile) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>ac990f10ff523d09bedf61edd4b0fb41d</anchor>
      <arglist>(const juce::ValueTree &amp;v) const override</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>acab2b3918001c2b4ab7195a6149cf92c</anchor>
      <arglist>(const juce::ValueTree &amp;v) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>ab47a217659f25aed1d59b7fe09fa5567</anchor>
      <arglist>(ClipEffect *ce) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>a5fe0c7896db17124bbcd57789a32d9aa</anchor>
      <arglist>(ClipEffect *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>a1f6138112b5c5ff4f39ded0b29c36a5b</anchor>
      <arglist>(ClipEffect *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>a7453777e08879bed6d4a100781f04058</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>a6e3d1b195850eba65b015a111e77f6d1</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>a639fe2eaf9eccaaeb9950bd0e81758d3</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>a96462eb382e4280f9f5f9cfd280f3bfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AudioClipBase &amp;</type>
      <name>clip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>a9ddea35f4d3ad08ff0e52d6918e2cc5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>a60f16fa6fb8d60b27f2fd789f39d252b</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ClipEffect</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipEffects.html</anchorfile>
      <anchor>ac6266cec97f864ea8a2a735e60238512</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::Clips::ClipInfo</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1Clips_1_1ClipInfo.html</filename>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips_1_1ClipInfo.html</anchorfile>
      <anchor>ae1769cc4475f61ae72750ba656663ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>trackOffset</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips_1_1ClipInfo.html</anchorfile>
      <anchor>ab1c156dc20527ee952027cdabb800bc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; int &gt;</type>
      <name>slotOffset</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips_1_1ClipInfo.html</anchorfile>
      <anchor>a675fcb7879ed96939ef9cc6aa2cd6fcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hasBeatTimes</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips_1_1ClipInfo.html</anchorfile>
      <anchor>a276d4d245a05e0c6ead6f4822531873e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BeatPosition</type>
      <name>startBeats</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips_1_1ClipInfo.html</anchorfile>
      <anchor>a77ea867ca84cfeeaff6ed72867e7e9d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BeatDuration</type>
      <name>lengthBeats</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips_1_1ClipInfo.html</anchorfile>
      <anchor>a91630d7fe9f10bdeb20e361a03a3f62a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BeatPosition</type>
      <name>offsetBeats</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips_1_1ClipInfo.html</anchorfile>
      <anchor>a4d346b51f92fa0b5d11838055c60de14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>grouped</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips_1_1ClipInfo.html</anchorfile>
      <anchor>a40b78f8c37b3de8465d192f28695e779</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ClipLevel</name>
    <filename>structtracktion_1_1engine_1_1ClipLevel.html</filename>
    <member kind="variable">
      <type>juce::CachedValue&lt; AtomicWrapper&lt; float &gt; &gt;</type>
      <name>dbGain</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipLevel.html</anchorfile>
      <anchor>a31c74c2abe9e7dcc10f401f457f3c192</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; AtomicWrapper&lt; float &gt; &gt;</type>
      <name>pan</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipLevel.html</anchorfile>
      <anchor>a54c597eee290f5ad6c959c362db37e2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; AtomicWrapper&lt; bool &gt; &gt;</type>
      <name>mute</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipLevel.html</anchorfile>
      <anchor>a8571b059e17cc163bca9e0d38bea7b33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ClipOwner</name>
    <filename>classtracktion_1_1engine_1_1ClipOwner.html</filename>
    <member kind="function">
      <type></type>
      <name>ClipOwner</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipOwner.html</anchorfile>
      <anchor>a58bc5ed9213764c44951c4efd7ec43e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ClipOwner</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipOwner.html</anchorfile>
      <anchor>a8130f0f1e278e0a1d82a9759bc900efd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::ValueTree &amp;</type>
      <name>getClipOwnerState</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipOwner.html</anchorfile>
      <anchor>a3167704ae6d91d7663ca4f8ef79e587f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual EditItemID</type>
      <name>getClipOwnerID</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipOwner.html</anchorfile>
      <anchor>aec14f488dc35290a2fae88d03bf283a7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Selectable *</type>
      <name>getClipOwnerSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipOwner.html</anchorfile>
      <anchor>aa4a3acce1c14b291d709b29c03a0c717</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Edit &amp;</type>
      <name>getClipOwnerEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipOwner.html</anchorfile>
      <anchor>ac258e692f0fee7f7f7b22c75596381ec</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; Clip * &gt; &amp;</type>
      <name>getClips</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipOwner.html</anchorfile>
      <anchor>a88f7eeacc254aca2b01dab5e4fe44a2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initialiseClipOwner</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipOwner.html</anchorfile>
      <anchor>a8d5b2c98e7356513845220b02e7de45d</anchor>
      <arglist>(Edit &amp;, juce::ValueTree clipParentState)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>clipCreated</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipOwner.html</anchorfile>
      <anchor>ad11b4c82b069dce47ad9a3ec9e0954c6</anchor>
      <arglist>(Clip &amp;)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>clipAddedOrRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipOwner.html</anchorfile>
      <anchor>adbd9ce870b751b14d6a6eb4cf8213e3c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>clipOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipOwner.html</anchorfile>
      <anchor>a7f14252b7bdc8db41adfdebfad853d40</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>clipPositionChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipOwner.html</anchorfile>
      <anchor>ae6eb38a74f4e1373312962b86d351c42</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ClipPosition</name>
    <filename>structtracktion_1_1engine_1_1ClipPosition.html</filename>
    <member kind="function">
      <type>TimePosition</type>
      <name>getStart</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipPosition.html</anchorfile>
      <anchor>a58530b100c7033aab5efd2fa712fcc03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getEnd</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipPosition.html</anchorfile>
      <anchor>a0c3e12946216e43d829cee9047081ac2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getLength</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipPosition.html</anchorfile>
      <anchor>afbfe8863d85f26839f318464ba2700b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getOffset</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipPosition.html</anchorfile>
      <anchor>a99f54cc4aae90f41b10adb8f3b293a76</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getStartOfSource</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipPosition.html</anchorfile>
      <anchor>a168e2a6dffae980efec7c552bb28f172</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipPosition.html</anchorfile>
      <anchor>a8f91d1ac1dc512ee382420a1434adecb</anchor>
      <arglist>(const ClipPosition &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipPosition.html</anchorfile>
      <anchor>afa00c2eb657c0de4d82e2e759051de4e</anchor>
      <arglist>(const ClipPosition &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>ClipPosition</type>
      <name>rescaled</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipPosition.html</anchorfile>
      <anchor>ab747aaf059148d8776c9015dbf0b3af9</anchor>
      <arglist>(TimePosition anchorTime, double factor) const</arglist>
    </member>
    <member kind="variable">
      <type>TimeRange</type>
      <name>time</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipPosition.html</anchorfile>
      <anchor>a788debbdd9c8aeea521c5229c9746f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeDuration</type>
      <name>offset</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipPosition.html</anchorfile>
      <anchor>a2cfb830990eee6e3d1c026a23e958f17</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::Clips</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1Clips.html</filename>
    <base>tracktion::engine::Clipboard::ContentType</base>
    <class kind="struct">tracktion::engine::Clipboard::Clips::AutomationCurveSection</class>
    <class kind="struct">tracktion::engine::Clipboard::Clips::ClipInfo</class>
    <member kind="enumeration">
      <type></type>
      <name>AutomationLocked</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>a3d43d0f73e39eeceb028964fe2c625ea</anchor>
      <arglist></arglist>
      <enumvalue file="structtracktion_1_1engine_1_1Clipboard_1_1Clips.html" anchor="a3d43d0f73e39eeceb028964fe2c625eaa7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="structtracktion_1_1engine_1_1Clipboard_1_1Clips.html" anchor="a3d43d0f73e39eeceb028964fe2c625eaaa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>Clips</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>a8e19316546e330f161b06fba1c4cb82d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Clips</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>a3d2159b96dfef3d40232c3c6531df4d2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>af1848c302a5477537353837af61627da</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>a9ab20ee05faa10dbd098d36f3958f744</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteInsertingAtCursorPos</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>ae872e13801d528ae856fbf2f7c9f7e18</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteAfterSelected</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>aec51c74be40add1fb417897b57bc24ae</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addClip</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>acc20f5019d9b1d6be4b9b0ad9e3a3773</anchor>
      <arglist>(int trackOffset, const juce::ValueTree &amp;state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSelectedClips</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>a7c6080352cf386139d62a1e89124bf79</anchor>
      <arglist>(const SelectableList &amp;, TimeRange, AutomationLocked)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAutomation</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>aa12e2945382d57e361c5aadd85fa220a</anchor>
      <arglist>(const juce::Array&lt; TrackSection &gt; &amp;, TimeRange)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ClipInfo &gt;</type>
      <name>clips</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>aab29ad8c286700a4a4723bdc712258aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; AutomationCurveSection &gt;</type>
      <name>automationCurves</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Clips.html</anchorfile>
      <anchor>a3a89ea3bfff7559651d6e0206778ff85</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ClipSlot</name>
    <filename>classtracktion_1_1engine_1_1ClipSlot.html</filename>
    <base>tracktion::engine::EditItem</base>
    <base>tracktion::engine::Selectable</base>
    <base>tracktion::engine::ClipOwner</base>
    <member kind="function">
      <type></type>
      <name>ClipSlot</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlot.html</anchorfile>
      <anchor>a3a2b3e37455ba5bc2044c98dc82d2a19</anchor>
      <arglist>(const juce::ValueTree &amp;, Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ClipSlot</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlot.html</anchorfile>
      <anchor>ac1a794aabee173bae2beb7ed30edc95c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlot.html</anchorfile>
      <anchor>ac1a461953ac72343e2d9508c25c5a03a</anchor>
      <arglist>(Clip *)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>getClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlot.html</anchorfile>
      <anchor>a62986f929f5ce81d2c8158f3517fffbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndex</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlot.html</anchorfile>
      <anchor>a90d1b9610d63291e8e0565fcc6d579f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance::Destination *</type>
      <name>getInputDestination</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlot.html</anchorfile>
      <anchor>a9f12aa50a855d5dea7f3be0c7df85b0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlot.html</anchorfile>
      <anchor>accb4f678198bff768f568a26d90306e3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlot.html</anchorfile>
      <anchor>a11fdcab9be8cae326ce053dacb1bd30d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree &amp;</type>
      <name>getClipOwnerState</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlot.html</anchorfile>
      <anchor>ac0a6568b5da72e6cc38714a1debbb534</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>getClipOwnerID</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlot.html</anchorfile>
      <anchor>a349ba7a91b6776cc1c14ae0794c1f65f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Selectable *</type>
      <name>getClipOwnerSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlot.html</anchorfile>
      <anchor>ab31edc9bb617a720e843aebd95ec1707</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Edit &amp;</type>
      <name>getClipOwnerEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlot.html</anchorfile>
      <anchor>aa8b8f235ae44cd5304901a2c2ea07eb9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlot.html</anchorfile>
      <anchor>af2d9584053181e4cd9b39899e5e4a3f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Track &amp;</type>
      <name>track</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlot.html</anchorfile>
      <anchor>a6a36ab5c240e6ffb88ec5a41ef6d2aac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ClipSlotList</name>
    <filename>classtracktion_1_1engine_1_1ClipSlotList.html</filename>
    <base protection="private">ValueTreeObjectList&lt; ClipSlot &gt;</base>
    <member kind="function">
      <type></type>
      <name>ClipSlotList</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlotList.html</anchorfile>
      <anchor>a74893c0733cf10038addb46b8e3e0af1</anchor>
      <arglist>(const juce::ValueTree &amp;, Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ClipSlotList</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlotList.html</anchorfile>
      <anchor>a56ca7ef1c9aab39b78544d62b48acaf3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ClipSlot * &gt;</type>
      <name>getClipSlots</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlotList.html</anchorfile>
      <anchor>a1b7b5ef50c235f85247bc86e5ec2255b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureNumberOfSlots</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlotList.html</anchorfile>
      <anchor>ae1efc548c1ece11984868c61c1feb5f1</anchor>
      <arglist>(int numSlots)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumberOfSlots</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlotList.html</anchorfile>
      <anchor>ab61ecd90d40ff9edc5958111cc59a526</anchor>
      <arglist>(int numSlots)</arglist>
    </member>
    <member kind="function">
      <type>ClipSlot *</type>
      <name>insertSlot</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlotList.html</anchorfile>
      <anchor>a6d30948db40c2e80d2970870900bc5aa</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteSlot</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlotList.html</anchorfile>
      <anchor>aa910fafda20135068ad7c06c5d3596af</anchor>
      <arglist>(ClipSlot &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlotList.html</anchorfile>
      <anchor>aab4d7673bee9f42149f4d1d09ddbf40b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Track &amp;</type>
      <name>track</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipSlotList.html</anchorfile>
      <anchor>aa1bfefe11f744ea837c2660cf1411f7e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ClipTrack</name>
    <filename>classtracktion_1_1engine_1_1ClipTrack.html</filename>
    <base>tracktion::engine::Track</base>
    <base>tracktion::engine::ClipOwner</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipTrack &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>aa5bb3f6b8dbc8b28006c0557095e0ae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ClipTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>ab3e3c048279804fe84597672138330ed</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;, bool hasModifierList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ClipTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a9b19f4fdff5e9af3f04199ab7ea8c5e0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a5b8fa4d2f43b3b34621017e74adf2aba</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a0055d342b1f1c092e150574fff678270</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>findClipForID</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a068e486d8f0671cd8f466bb9a20a433f</anchor>
      <arglist>(EditItemID) const override</arglist>
    </member>
    <member kind="function">
      <type>CollectionClip *</type>
      <name>getCollectionClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a17ca098ec1e77ff0a6d6758e32f39591</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CollectionClip *</type>
      <name>getCollectionClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a7b94b0a3359a613f7559b680ff9ada14</anchor>
      <arglist>(Clip *) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumCollectionClips</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>ac831446ad8e8343b3ba6e2faf0bef638</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfCollectionClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>ac4ab64c4d04b0b9812d59dcf1767aafa</anchor>
      <arglist>(CollectionClip *) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndexOfNextCollectionClipAt</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a6f24d7c66cc90297c1b895d6aca8ae22</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>CollectionClip *</type>
      <name>getNextCollectionClipAt</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a224d74142da5f698ac46c3568d1a1093</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a494be89d053e34f2ed76e712e3650c2d</anchor>
      <arglist>(CollectionClip *) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCollectionClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a7d76cd61529f191155547be19fca7afd</anchor>
      <arglist>(CollectionClip *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeCollectionClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a2024d0b36ffb2d2005d70c679c36defa</anchor>
      <arglist>(CollectionClip *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTrackItems</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a687867f3afe84baaf01c0659cb694ded</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>TrackItem *</type>
      <name>getTrackItem</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>acb752912a2acd57a4b6db237362ccb56</anchor>
      <arglist>(int idx) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfTrackItem</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>aab1d660039593709ebf457addb4b021c</anchor>
      <arglist>(TrackItem *) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndexOfNextTrackItemAt</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>ac77edc2b30a2a9df04175bdb5dcc79bb</anchor>
      <arglist>(TimePosition) override</arglist>
    </member>
    <member kind="function">
      <type>TrackItem *</type>
      <name>getNextTrackItemAt</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a66b53b023e17a11d04a98f648dc9eb39</anchor>
      <arglist>(TimePosition) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpaceIntoTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a4b0597dc68ca14979a186b8b8a8926f5</anchor>
      <arglist>(TimePosition, TimeDuration) override</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getLength</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a66938eae5f66e0f3d411df51d700d725</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getLengthIncludingInputTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>aa1dc633c0f3bd716858abc206463bd28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>getTotalRange</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>ace0cddfd4e20dd990e6e69ed30444745</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>aed179f19a0cf5a40f3bc7cd3626907c5</anchor>
      <arglist>(const Clip::Ptr &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertClipWithState</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a8d11d46be0ec66f3dc3ba9b6eb5788f7</anchor>
      <arglist>(juce::ValueTree)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertClipWithState</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>aa24a1b1b176955ea992aeba6339b3fa2</anchor>
      <arglist>(const juce::ValueTree &amp;stateToUse, const juce::String &amp;name, TrackItem::Type type, ClipPosition position, bool deleteExistingClips, bool allowSpottingAdjustment)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertNewClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>abb5fb290b77b904f79d7620babe7240d</anchor>
      <arglist>(TrackItem::Type, TimeRange position, SelectionManager *selectionManagerToSelectWith)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertNewClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a9a9e9176f4db2acddf65450dd3de16d6</anchor>
      <arglist>(TrackItem::Type, const juce::String &amp;name, TimeRange position, SelectionManager *selectionManagerToSelectWith)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertNewClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a022631109c405b4e4fe9b46e247be2ab</anchor>
      <arglist>(TrackItem::Type, const juce::String &amp;name, ClipPosition position, SelectionManager *selectionManagerToSelectWith)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; WaveAudioClip &gt;</type>
      <name>insertWaveClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a6fd29e576c4522a87a306745ad8f1e99</anchor>
      <arglist>(const juce::String &amp;name, const juce::File &amp;sourceFile, ClipPosition position, bool deleteExistingClips)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; WaveAudioClip &gt;</type>
      <name>insertWaveClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>af7b18d790ae0275b4a12e618220e563e</anchor>
      <arglist>(const juce::String &amp;name, ProjectItemID sourceID, ClipPosition position, bool deleteExistingClips)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; MidiClip &gt;</type>
      <name>insertMIDIClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>adfc675de3cfbdd3f57f7e68ec72f42aa</anchor>
      <arglist>(TimeRange position, SelectionManager *selectionManagerToSelectWith)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; MidiClip &gt;</type>
      <name>insertMIDIClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a2d1228e1ae9843b92251b340a31a49be</anchor>
      <arglist>(const juce::String &amp;name, TimeRange position, SelectionManager *selectionManagerToSelectWith)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; EditClip &gt;</type>
      <name>insertEditClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>aea98f9cdcb53204eb8aa8fb8bd1026fc</anchor>
      <arglist>(TimeRange position, ProjectItemID sourceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegion</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a6d5115727a73542ee7be78319fc1d915</anchor>
      <arglist>(TimeRange, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionOfClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>ae26418573c7e8ff4ac462cd9cd923473</anchor>
      <arglist>(Clip::Ptr, TimeRange, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>splitClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>aad8e1b78bcc0d6f524f70faffcbe9677</anchor>
      <arglist>(Clip &amp;, TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>splitAt</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a820f944d9d083ae4f8a29d0a43549f58</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getNextTimeOfInterest</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a0727efddb9f82b773c8af129b8458415</anchor>
      <arglist>(TimePosition afterThisTime)</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getPreviousTimeOfInterest</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a878e7ee9fd6c1c1d5bb710fd6d7efada</anchor>
      <arglist>(TimePosition beforeThisTime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a9dc89b7a685667e539516ed1db315a88</anchor>
      <arglist>(const Plugin *) const override</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Array</type>
      <name>getAllPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a6ba74e8e120196e70e10bf1cc49b272d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMirrorUpdateToAllPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a3c4807a609f155907dd9979a0cd25f1b</anchor>
      <arglist>(Plugin &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areAnyClipsUsingFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a6cdd780ba64d2137729b756742c52f71</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsAnyMIDIClips</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a55c8359b69cb65865e1f0b4e4c5ff811</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree &amp;</type>
      <name>getClipOwnerState</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a418480c14b30367b64223ac996ac67ad</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>getClipOwnerID</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a0df577afd2d7601b2d0b96d16cea1fcc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Selectable *</type>
      <name>getClipOwnerSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>af94fbb0e5b871115d5fcb1e9fdd1e5df</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Edit &amp;</type>
      <name>getClipOwnerEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a32e035d90833197869316517566b597e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clipCreated</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>aaec9da840a5b335b1781ae37c38039e9</anchor>
      <arglist>(Clip &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clipAddedOrRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a0fc43a6de966a4f5531530f7bb344030</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clipOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a854732f853ce8e6d3f1ebad909809c1a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clipPositionChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a45cf2a0ac5ad2c940450fe32648f5627</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>juce::Array&lt; TimePosition &gt;</type>
      <name>findAllTimesOfInterest</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a35fd58b5b37407ebed9364d3ab9d8e6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>refreshTrackItems</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>ab9a64be2e0589ff56163ca57732e0121</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; CollectionClipList &gt;</type>
      <name>collectionClipList</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>ab8004b1ed9d8d3e40c47fa5093a22b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>trackItemsDirty</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a430d128529e5e8fde1f9a73dc00a6417</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::Array&lt; TrackItem * &gt;</type>
      <name>trackItems</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a9af423af71a50681a7e02f550c9a95b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>Clip</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a54cda048f452a2acf4d0cf488fece5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend struct</type>
      <name>CollectionClipList</name>
      <anchorfile>classtracktion_1_1engine_1_1ClipTrack.html</anchorfile>
      <anchor>a45150334fe0869b79364a574aea67c0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::CollectionClip</name>
    <filename>classtracktion_1_1engine_1_1CollectionClip.html</filename>
    <base>tracktion::engine::TrackItem</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; CollectionClip &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>a00144f4eb88701e82a1bfcde8bde4e13</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; CollectionClip &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>a0689edb15403a732d107aa6ee2a04336</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CollectionClip</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>aac14a15b2e9d8506bb78fcb304a8ca90</anchor>
      <arglist>(Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CollectionClip</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>a69dd717b69dc5c6c8f1d3d413c608627</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addClip</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>ae8181246b2912b566b5ac2df760b6bce</anchor>
      <arglist>(Clip *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeClip</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>a5c988f58b72598902141909c2bedfab4</anchor>
      <arglist>(Clip *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeClip</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>a912c576cf0c7004b56c1358b53e7760c</anchor>
      <arglist>(EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsClip</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>a2dbca9f52429e5da0a3f0711dd13b954</anchor>
      <arglist>(Clip *clip) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>aa0957b52377a9178e4c1c99351499609</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>ClipPosition</type>
      <name>getPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>aec5cc46a33ec83b8113df08b6b7ff456</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>a8c3b603085e30c78f0bec0114ccd979a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>moveToTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>af5066590d86a6bafc4c0550ea290cfa2</anchor>
      <arglist>(Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateStartAndEnd</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>a36dd37377ed331f2849b2fbbc8c482ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FolderTrack *</type>
      <name>getFolderTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>a7cd67b2a92929b01f40978d50bcfc93e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>acfdea0a428f12d9a45b10f899eceb4e1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumClips</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>a8bf0338864b37a77c05a3df3cfc1506e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Clip::Ptr</type>
      <name>getClip</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>a0c50d70c7ec1612fb7093730ee183f48</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>const Clip::Array &amp;</type>
      <name>getClips</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>a3fb4acdeca26045e630d93bbd13c20b0</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDragging</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>a19194d5711892993001afee7bd67f489</anchor>
      <arglist>(bool nowDragging) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDragging</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>aef858a6a87866d928de23460df38165f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>getGroupID</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>a02ff702353daad4080279cf1f5275249</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGroupID</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>a7d8ead1e193a4862be78dcff0a29fbdc</anchor>
      <arglist>(EditItemID newGroupID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGroupCollection</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>a2542eedb99154937402598081bd94da8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>TimeRange</type>
      <name>range</name>
      <anchorfile>classtracktion_1_1engine_1_1CollectionClip.html</anchorfile>
      <anchor>aaf8f828999c941fe4e90c0359d9e8d3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ColourArea</name>
    <filename>structtracktion_1_1engine_1_1ColourArea.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>structtracktion_1_1engine_1_1ColourArea.html</anchorfile>
      <anchor>a12bfa891e5dd7b5b332b15fc3919f424</anchor>
      <arglist>(ClipSlot &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLeft</name>
      <anchorfile>structtracktion_1_1engine_1_1ColourArea.html</anchorfile>
      <anchor>adb86c0a2576857784bfb8e6f84d624bd</anchor>
      <arglist>(ClipSlot &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRight</name>
      <anchorfile>structtracktion_1_1engine_1_1ColourArea.html</anchorfile>
      <anchor>a1b538e12592af3993aaf419a29a9e000</anchor>
      <arglist>(ClipSlot &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTop</name>
      <anchorfile>structtracktion_1_1engine_1_1ColourArea.html</anchorfile>
      <anchor>a145a36e7cb10613548caf005a665e749</anchor>
      <arglist>(ClipSlot &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBottom</name>
      <anchorfile>structtracktion_1_1engine_1_1ColourArea.html</anchorfile>
      <anchor>aaf044a6a357d6505f97218bf8a75d259</anchor>
      <arglist>(ClipSlot &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Colour</type>
      <name>colour</name>
      <anchorfile>structtracktion_1_1engine_1_1ColourArea.html</anchorfile>
      <anchor>a0f7c0e33892f5a5d39e916873f3c3af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Track &amp;</type>
      <name>firstTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1ColourArea.html</anchorfile>
      <anchor>a404a3655ea46a046fa19f261c3ed8813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Track &amp;</type>
      <name>lastTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1ColourArea.html</anchorfile>
      <anchor>a2755078e16249bc8d3a5fec6f1a4d557</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>firstScene</name>
      <anchorfile>structtracktion_1_1engine_1_1ColourArea.html</anchorfile>
      <anchor>a8c1ad8a00f6863a27fafd11eeda73b13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lastScene</name>
      <anchorfile>structtracktion_1_1engine_1_1ColourArea.html</anchorfile>
      <anchor>af0460d4a9dac72cf3e63d4236aab092b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::CombiningAudioNode</name>
    <filename>classtracktion_1_1engine_1_1CombiningAudioNode.html</filename>
    <base>tracktion::engine::AudioNode</base>
    <member kind="function">
      <type></type>
      <name>CombiningAudioNode</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>add0987a76d90e1d8aeb8bebcaabe941a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CombiningAudioNode</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>a2c2168339e66a6af46dad61333004cd3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInput</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>a22ee48c44457d488f927e249899d116d</anchor>
      <arglist>(legacy::EditTimeRange time, AudioNode *inputNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>ae8f9618655913bf9354b4a9b1f696df7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAudioNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>af852ba3064cd7d1ef3e41fdafb77e077</anchor>
      <arglist>(AudioNodeProperties &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>a48ba08554805f29466ef56227e720b55</anchor>
      <arglist>(const VisitorFn &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>purgeSubNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>a205ba7bcc14366a25d8623f88fcf01c0</anchor>
      <arglist>(bool keepAudio, bool keepMidi) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareAudioNodeToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>a7296261ed2257f2ef95a72e6d274f5f3</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToRender</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>aaf418565c25b5bb56b0cf890a555afd1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseAudioNodeResources</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>acc9285f9ec33992b3e5f36834ba2c46f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderOver</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>a077335b1e1d15ae49e82fb0ed0719e3e</anchor>
      <arglist>(const AudioRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderAdding</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>a97e3ed1fa84369270eb165b84be39e98</anchor>
      <arglist>(const AudioRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForNextBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>a31ca43334a9a64b12581075f1999c444</anchor>
      <arglist>(const AudioRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderSection</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningAudioNode.html</anchorfile>
      <anchor>ad4f2b8cb2bc6f761dbb0cc8cfea27729</anchor>
      <arglist>(const AudioRenderContext &amp;, legacy::EditTimeRange)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::CombiningNode</name>
    <filename>classtracktion_1_1engine_1_1CombiningNode.html</filename>
    <base>tracktion::graph::Node</base>
    <base>tracktion::engine::TracktionEngineNode</base>
    <member kind="function">
      <type></type>
      <name>CombiningNode</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningNode.html</anchorfile>
      <anchor>a434ff8016fb77e1409d96564ec2c7da1</anchor>
      <arglist>(EditItemID, ProcessState &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CombiningNode</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningNode.html</anchorfile>
      <anchor>af1bd5cb7e43b416fbdbdebfdbf2495fb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInput</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningNode.html</anchorfile>
      <anchor>a38994fe7923f2959cf741b7849790871</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt;, TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInput</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningNode.html</anchorfile>
      <anchor>a6e5df79d708601ec0c63826b80c9f6e9</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt;, BeatRange)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningNode.html</anchorfile>
      <anchor>a3e8ac6f32f9ec70aa9de4c89ffced455</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getInternalNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningNode.html</anchorfile>
      <anchor>a0b087349f9b4850d64a1ec7bb7886208</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningNode.html</anchorfile>
      <anchor>a766ef604ccc992cd30e2f42c3cfee18e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningNode.html</anchorfile>
      <anchor>a60795ab1ed3d2990ceb7d49f8b36e051</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningNode.html</anchorfile>
      <anchor>a843cfa59b09c76f510690b8c1aa72cd9</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningNode.html</anchorfile>
      <anchor>aab9c4149420d73542b7115c1e03e2ac7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prefetchBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningNode.html</anchorfile>
      <anchor>a40cbdf046748367642e59d56e7566573</anchor>
      <arglist>(juce::Range&lt; int64_t &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningNode.html</anchorfile>
      <anchor>a22df62a27118798783a3246e7a083833</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getAllocatedBytes</name>
      <anchorfile>classtracktion_1_1engine_1_1CombiningNode.html</anchorfile>
      <anchor>afe4d86ffdd4ac4cbeeff45592fc7c42a</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::CompFactory</name>
    <filename>classtracktion_1_1engine_1_1CompFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>CompFactory</name>
      <anchorfile>classtracktion_1_1engine_1_1CompFactory.html</anchorfile>
      <anchor>ad4d73d5e4d434921fe99e39de539bbcf</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CompFactory</name>
      <anchorfile>classtracktion_1_1engine_1_1CompFactory.html</anchorfile>
      <anchor>a2a8706d50f8058a23f48b513e6498735</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CompManager::Ptr</type>
      <name>getCompManager</name>
      <anchorfile>classtracktion_1_1engine_1_1CompFactory.html</anchorfile>
      <anchor>a40e8a74743ebe03d1cb69c7863cf5012</anchor>
      <arglist>(Clip &amp;)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>CompManager</name>
      <anchorfile>classtracktion_1_1engine_1_1CompFactory.html</anchorfile>
      <anchor>afb0aab3f805baf9995f7d3c80f201b47</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::CompManager</name>
    <filename>classtracktion_1_1engine_1_1CompManager.html</filename>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; CompManager &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a44059d3b37e7557f382f8729a0d7ec3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompManager</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>adac397eca227048e06289f84e1022c96</anchor>
      <arglist>(Clip &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CompManager</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a10378a68d2aa32229eeecfe2b8810476</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a36b2a555be6ef8e13f3653583cd3d09b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual HashCode</type>
      <name>getBaseTakeHash</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a8721d29df08a3cb6ece90cc573affc23</anchor>
      <arglist>(int takeIndex) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getTakeLength</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>ab654b7a64eb0e19b0fd7d13147a9e0ba</anchor>
      <arglist>(int takeIndex) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getOffset</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a910b9e9d13f7a81723102513dc9f0697</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getLoopLength</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a4a644f12d6d9438c3f1932e14dbaf7dd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getAutoTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a68c7e5be42126937c8f9d0455461bf9f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getSourceTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a9acd66f58cfc703d857404d9541bd491</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getWarning</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a06d4a7eaaf92a96edcb6cb483a3ea550</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getRenderProgress</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a3fb3b9d6a86f3c7cb29c3ca335ba2f22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>discardCachedData</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a0b38316937cfbc1ba2f0c42ed2b85279</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>triggerCompRender</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a1ea6a1f528402660d416ff112d32ce81</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>flattenTake</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>aaf800b75ce01e92f4622ebc0b12a2e95</anchor>
      <arglist>(int takeIndex, bool deleteSourceFiles)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::ValueTree</type>
      <name>pasteComp</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>aa1cc87f62aaa9c5f668969a4ae931ce7</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Clip &amp;</type>
      <name>getClip</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a7d54e0e2c37f229351892a6f10ba2b61</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStripToUpdate</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a9060e92806b6cfe530f4f03e6770c0b6</anchor>
      <arglist>(juce::Component *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldDisplayWarning</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a25e787ab0b0411ba12af8e3e13eef813</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getSection</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>adb0f228367c33d6e1d119a21864c1470</anchor>
      <arglist>(int takeIndex, int sectionIndex) const</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>findSectionAtTime</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>ae8ce904e70a2c0ec84231231f598a79f</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findSectionWithEndTime</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a12c3019c8dd7f3a83d16449399bfcc52</anchor>
      <arglist>(juce::Range&lt; double &gt; range, int takeIndex, bool &amp;timeFoundAtStartOfSection) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; double &gt;</type>
      <name>getSectionTimes</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a621c2b518b03d50443461659f31f08b4</anchor>
      <arglist>(const juce::ValueTree &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getTakesTree</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a7e9ce638781033660ac98215bb7425d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActiveTakeIndex</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a3639a7e396e42d9f9c1b099ed90da622</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getActiveTakeIndex</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a647ed474a0df19b801355dc5bf569273</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getActiveTakeTree</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a31f92d028b11c8eed52df6804dc3ea70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>ae79b1186dd84d1fde5b63b198d946c3e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumComps</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>aaf63468e39818190fe92d8d20c87fcb4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalNumTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a0596427d56b1282ed324744c1d45adde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTakeComp</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>aeaf1cc15bc93de24b2c11f1cdca8ed38</anchor>
      <arglist>(int takeIndex) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTakeComp</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>ad3541c2ac46a1448ac3c366ce0f3ba4c</anchor>
      <arglist>(const juce::ValueTree &amp;takeTree) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCurrentTakeComp</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>ac178593606da409f29cc886fef345c62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTakeName</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a368784ac54a66fffc700a733724e080a</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::ValueTree</type>
      <name>addNewComp</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a8b266b399756c4898a56b09259585e00</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaxCompLength</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>aaa82a4b37532c12008f042403822dd59</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; double &gt;</type>
      <name>getCompRange</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a96a1bf93c8341a74a444cc0b86bf5770</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSpeedRatio</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a4cfe3fa4c42a4b65e76e6d06df71a0f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSourceTimeMultiplier</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a93c3c4d598a5c1aa21e2c28d6074c6ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getTakeHash</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a505400408b7aa580c94fdc0036a73f75</anchor>
      <arglist>(int takeIndex) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeSectionIndexAtTime</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a8627c0ac71d6a6337bd78ea3f1ac2999</anchor>
      <arglist>(double time, int takeIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSectionIndexAtTime</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>abf012027319ee87ca37c336d01bd2e67</anchor>
      <arglist>(double time, int takeIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveSectionEndTime</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>ae183aadb1fb94fd4a2d417373cc06db8</anchor>
      <arglist>(juce::ValueTree &amp;section, double newTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveSection</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>ad49d9ce441786aee7d257bbddf37824c</anchor>
      <arglist>(juce::ValueTree &amp;section, double timeDelta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveSectionToEndAt</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a180a4f7eea4bfb5ff7f25e52d791551b</anchor>
      <arglist>(juce::ValueTree &amp;section, double newEndTime)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>addSection</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>ad46ee97d96158491911e9edfd67efab4</anchor>
      <arglist>(int takeIndex, double endTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSection</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>aea02deb0d7d729949f4aa2dc90f7bd0f</anchor>
      <arglist>(const juce::ValueTree &amp;sectionToRemove)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>splitSectionAtTime</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a812b6bc2e6d8d209aa16eb3eaab8b328</anchor>
      <arglist>(double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSectionsWithinRange</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a89431fd079590fd8a761e0aee9197077</anchor>
      <arglist>(juce::Range&lt; double &gt; timeRange, const juce::ValueTree &amp;sectionToKeep)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>juce::UndoManager *</type>
      <name>getUndoManager</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a12a13a14914962d6a8d08ffc30629c94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>keepSectionsSortedAndInRange</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>aa46965683dd1e982d6e626fe18d2343c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>juce::ValueTree</type>
      <name>getNewCompTree</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a25f86c439a099a5a849ba6c9bd82f427</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>takesTree</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a35ad9f2b10a166ca012879e4476e8d0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>lastRenderedTake</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a47f187e947bdd8bdfb820a0ace45a1a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>HashCode</type>
      <name>lastHash</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a908cf03a775327725aa2b75d440c5545</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>maxCompLength</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a0016981e74745330c7034da829303fde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>effectiveTimeMultiplier</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>a1618973b188666c14edefc35a16f651b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>lastOffset</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>aef3cc4d7f9b42fc0c255066008c29635</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>lastTimeRatio</name>
      <anchorfile>classtracktion_1_1engine_1_1CompManager.html</anchorfile>
      <anchor>aecd3223c65d3edcb0d7fb136068f6826</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::SelectionManager::ComponentWithSelectionManager</name>
    <filename>structtracktion_1_1engine_1_1SelectionManager_1_1ComponentWithSelectionManager.html</filename>
    <member kind="function">
      <type></type>
      <name>ComponentWithSelectionManager</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectionManager_1_1ComponentWithSelectionManager.html</anchorfile>
      <anchor>a9af9bc2ddeebf21a7f33ab334847e2ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ComponentWithSelectionManager</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectionManager_1_1ComponentWithSelectionManager.html</anchorfile>
      <anchor>ab8f49e8e466152520f1a04633807433f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SelectionManager *</type>
      <name>getSelectionManager</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectionManager_1_1ComponentWithSelectionManager.html</anchorfile>
      <anchor>af1249be597c1217428f1b7c54d7cbce9</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::CompressorPlugin</name>
    <filename>classtracktion_1_1engine_1_1CompressorPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>CompressorPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a720d45237f28132ec8bd41bb1ff03e16</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CompressorPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>ab176b196f8be5ef599486b58f6953910</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getThreshold</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a9a4e8b1324ae284968f2c8d4561c484a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setThreshold</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>ae2c1a9a3011f5dacfbffe59b3e7e510e</anchor>
      <arglist>(float)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getRatio</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a090796712239bdf3629b929763258652</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRatio</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>aada736360ba055f4899545a763e83e64</anchor>
      <arglist>(float)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>ae94b8163487f660afc8e225a57fbe718</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a4627b494da802b83f50610dd0d3be117</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a9f30ba4af14d5535666538275c11ae8c</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a08a6cce834a4775de20abdb258df0b29</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getChannelNames</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>af457f76b975cba81bb9358aa54718988</anchor>
      <arglist>(juce::StringArray *, juce::StringArray *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a38a18fee33cdc9543df01a0a231d6584</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a508c93de8a66f0189eafc0ada32f5180</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>af3991bec92bdcd8dd187bbb1ac425555</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a01bd538fc5daf134d8c71325b9013d12</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>aec15cee55d7da2922b951304096804fa</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a0403a942b5a9d352907577bc3751638e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>getMinThreshold</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a75fd19632cb6f20593bb0d9b2e263646</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>getMaxThreshold</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>aa537981adba1b81aa357cd5f0b3a5189</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ParameterWithStateValue</type>
      <name>thresholdGain</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>aa98e25c4e3442d5586cce025a3413694</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParameterWithStateValue</type>
      <name>ratio</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a4208ab063bb9a4518f69c3f5c545dad2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParameterWithStateValue</type>
      <name>attackMs</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a401714d3d8c9b6eda36689597587e485</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParameterWithStateValue</type>
      <name>releaseMs</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a9fdf742d26b62d8632cd9f350be1a849</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParameterWithStateValue</type>
      <name>outputDb</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a97f5a6f053fb98f9fef27a94407316c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParameterWithStateValue</type>
      <name>sidechainDb</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>ac4ea6d486b94b9e95d355081794da20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>useSidechainTrigger</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>aae77b2709da6cce5521a0c0a0cb2cbe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1CompressorPlugin.html</anchorfile>
      <anchor>a9f4d35682bba9f9015273ab37e2f1185</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::TrackCompManager::CompSection</name>
    <filename>structtracktion_1_1engine_1_1TrackCompManager_1_1CompSection.html</filename>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; CompSection &gt;</type>
      <name>Ptr</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1CompSection.html</anchorfile>
      <anchor>ac1bbdb35721d935ca254cc927ce7d4a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompSection</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1CompSection.html</anchorfile>
      <anchor>a59ebfe29fe771e1b90c4d25cf494062a</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CompSection</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1CompSection.html</anchorfile>
      <anchor>a67c31b14e15953c0427dcccb82c19744</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFrom</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1CompSection.html</anchorfile>
      <anchor>a98a139d0ab1e24d7eb61bf47a632a55b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;)</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>getTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1CompSection.html</anchorfile>
      <anchor>a2bdbc857bb7ef6c8d700b9f5c43ac548</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEnd</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1CompSection.html</anchorfile>
      <anchor>a6aa3cb5daa3ee763e64088689e1faacd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CompSection *</type>
      <name>createAndIncRefCount</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1CompSection.html</anchorfile>
      <anchor>af79069cc35bb28ddd8f4cfcb322e3a0d</anchor>
      <arglist>(const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1CompSection.html</anchorfile>
      <anchor>a149c8a203b2daae6ef253c6ef839cfa8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AudioFadeCurve::Concave</name>
    <filename>structtracktion_1_1engine_1_1AudioFadeCurve_1_1Concave.html</filename>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>preadjust</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve_1_1Concave.html</anchorfile>
      <anchor>af1dd51db46eddaa11384d7027c84d029</anchor>
      <arglist>(double alpha) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>get</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve_1_1Concave.html</anchorfile>
      <anchor>a5a1476dd7fb2cd88319bda452f9135aa</anchor>
      <arglist>(float alpha) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::ConnectedNode</name>
    <filename>classtracktion_1_1graph_1_1ConnectedNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>ConnectedNode</name>
      <anchorfile>classtracktion_1_1graph_1_1ConnectedNode.html</anchorfile>
      <anchor>adfa0817ef17b3810d7165a7a3ededdf2</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConnectedNode</name>
      <anchorfile>classtracktion_1_1graph_1_1ConnectedNode.html</anchorfile>
      <anchor>ac2c4e3144dee0258aba1eec84f2d1275</anchor>
      <arglist>(size_t nodeID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addAudioConnection</name>
      <anchorfile>classtracktion_1_1graph_1_1ConnectedNode.html</anchorfile>
      <anchor>acc3b1a9c3b3a10c7bef6ed6a11940f1c</anchor>
      <arglist>(std::shared_ptr&lt; Node &gt;, ChannelConnection)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addMidiConnection</name>
      <anchorfile>classtracktion_1_1graph_1_1ConnectedNode.html</anchorfile>
      <anchor>a962139a8629d89fd5e78c792ccc9713f</anchor>
      <arglist>(std::shared_ptr&lt; Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1graph_1_1ConnectedNode.html</anchorfile>
      <anchor>a21a9dfc4078481204950df6557170cdf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1graph_1_1ConnectedNode.html</anchorfile>
      <anchor>af258b3d5371e9d023ea0203022281063</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>TransformResult</type>
      <name>transform</name>
      <anchorfile>classtracktion_1_1graph_1_1ConnectedNode.html</anchorfile>
      <anchor>ac9a7a8b461d338a794b08a41712efb09</anchor>
      <arglist>(Node &amp;, const std::vector&lt; Node * &gt; &amp;, TransformCache &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1graph_1_1ConnectedNode.html</anchorfile>
      <anchor>a869805fa52221841edb88c6f65c76e6f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1graph_1_1ConnectedNode.html</anchorfile>
      <anchor>a1e0b1c552f89fa9d57f1e805d74f7951</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1ConnectedNode.html</anchorfile>
      <anchor>a13f338b06057806d37b1c29ea40aca3d</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ConstrainedCachedValue</name>
    <filename>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ConstrainedCachedValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a2ceccf4bbbf7d5b47dce4845b7cd862b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstrainedCachedValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ad7b29d3a3e962521c4cc90a96a1976a4</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;propertyID, juce::UndoManager *undoManager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstrainedCachedValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ab0aaaa4078c71f8438bc637c8e33f100</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;propertyID, juce::UndoManager *undoManager, const Type &amp;defaultToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstrainer</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>add8eafea68529f5463a2474969b5579b</anchor>
      <arglist>(std::function&lt; Type(Type)&gt; constrainerToUse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Type</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a15626acbad0a2bedbe78e541c232846b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>get</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ac6b243750917bb8492dcee033036b430</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Type &amp;</type>
      <name>operator*</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a6ce633d190cecf6598564a8d79168e9e</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>Type *</type>
      <name>operator-&gt;</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ab6cf387adeeddeb6e9273fa0e5e2d5ee</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a3703d9615a506ac2e06a9d282e039139</anchor>
      <arglist>(const OtherType &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a4bf867b6f124c0429a8a305377fd6f16</anchor>
      <arglist>(const OtherType &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Value</type>
      <name>getPropertyAsValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a5d6b1b8c04eedfc830308bf853aaccfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a02408e9aa9aacbf337cb4ea12d4df1d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>getDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a311537ad7d33b86059fea004a6a39704</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConstrainedCachedValue &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a1c5b0912b7967988e02bc19924230b22</anchor>
      <arglist>(const Type &amp;newValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a4e952e49a11b6374ea7a1a29550c373c</anchor>
      <arglist>(const Type &amp;newValue, juce::UndoManager *undoManagerToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a90d40ac2ef762a6394daaa97d55e7b62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a8db4c5513113fd0dc60945739529c052</anchor>
      <arglist>(juce::UndoManager *undoManagerToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ab7cecc694ac7207c56439dc1c1153fc8</anchor>
      <arglist>(const Type &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>referTo</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a909e1a9afd08ddb2da2d5239c19396da</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;property, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>referTo</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a2bc9571f83df1cd2e2b46e65105693cd</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;property, juce::UndoManager *, const Type &amp;defaultVal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forceUpdateOfCachedValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ae2dbcfc66b9466936907c3e4f4014a61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree &amp;</type>
      <name>getValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a2a860b2e25e610248173bdbcd9954794</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::Identifier &amp;</type>
      <name>getPropertyID</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a21103a273ca6a4869135c6d7beb310fb</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ConstrainedCachedValue&lt; float &gt;</name>
    <filename>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</filename>
    <member kind="function">
      <type></type>
      <name>ConstrainedCachedValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a2ceccf4bbbf7d5b47dce4845b7cd862b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstrainedCachedValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ad7b29d3a3e962521c4cc90a96a1976a4</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;propertyID, juce::UndoManager *undoManager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstrainedCachedValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ab0aaaa4078c71f8438bc637c8e33f100</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;propertyID, juce::UndoManager *undoManager, const float &amp;defaultToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstrainer</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>add8eafea68529f5463a2474969b5579b</anchor>
      <arglist>(std::function&lt; float(float)&gt; constrainerToUse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a15626acbad0a2bedbe78e541c232846b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ac6b243750917bb8492dcee033036b430</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator*</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a6ce633d190cecf6598564a8d79168e9e</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>float *</type>
      <name>operator-&gt;</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ab6cf387adeeddeb6e9273fa0e5e2d5ee</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a3703d9615a506ac2e06a9d282e039139</anchor>
      <arglist>(const OtherType &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a4bf867b6f124c0429a8a305377fd6f16</anchor>
      <arglist>(const OtherType &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Value</type>
      <name>getPropertyAsValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a5d6b1b8c04eedfc830308bf853aaccfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a02408e9aa9aacbf337cb4ea12d4df1d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a311537ad7d33b86059fea004a6a39704</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConstrainedCachedValue &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a1c5b0912b7967988e02bc19924230b22</anchor>
      <arglist>(const float &amp;newValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a4e952e49a11b6374ea7a1a29550c373c</anchor>
      <arglist>(const float &amp;newValue, juce::UndoManager *undoManagerToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a90d40ac2ef762a6394daaa97d55e7b62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a8db4c5513113fd0dc60945739529c052</anchor>
      <arglist>(juce::UndoManager *undoManagerToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ab7cecc694ac7207c56439dc1c1153fc8</anchor>
      <arglist>(const float &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>referTo</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a909e1a9afd08ddb2da2d5239c19396da</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;property, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>referTo</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a2bc9571f83df1cd2e2b46e65105693cd</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;property, juce::UndoManager *, const float &amp;defaultVal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forceUpdateOfCachedValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ae2dbcfc66b9466936907c3e4f4014a61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree &amp;</type>
      <name>getValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a2a860b2e25e610248173bdbcd9954794</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::Identifier &amp;</type>
      <name>getPropertyID</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a21103a273ca6a4869135c6d7beb310fb</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstrainedCachedValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a2ceccf4bbbf7d5b47dce4845b7cd862b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstrainedCachedValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ad7b29d3a3e962521c4cc90a96a1976a4</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;propertyID, juce::UndoManager *undoManager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstrainedCachedValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ab0aaaa4078c71f8438bc637c8e33f100</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;propertyID, juce::UndoManager *undoManager, const float &amp;defaultToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstrainer</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>add8eafea68529f5463a2474969b5579b</anchor>
      <arglist>(std::function&lt; float(float)&gt; constrainerToUse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator float</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a15626acbad0a2bedbe78e541c232846b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>get</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ac6b243750917bb8492dcee033036b430</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float &amp;</type>
      <name>operator*</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a6ce633d190cecf6598564a8d79168e9e</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>float *</type>
      <name>operator-&gt;</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ab6cf387adeeddeb6e9273fa0e5e2d5ee</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a3703d9615a506ac2e06a9d282e039139</anchor>
      <arglist>(const OtherType &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a4bf867b6f124c0429a8a305377fd6f16</anchor>
      <arglist>(const OtherType &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Value</type>
      <name>getPropertyAsValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a5d6b1b8c04eedfc830308bf853aaccfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a02408e9aa9aacbf337cb4ea12d4df1d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a311537ad7d33b86059fea004a6a39704</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConstrainedCachedValue &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a1c5b0912b7967988e02bc19924230b22</anchor>
      <arglist>(const float &amp;newValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a4e952e49a11b6374ea7a1a29550c373c</anchor>
      <arglist>(const float &amp;newValue, juce::UndoManager *undoManagerToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a90d40ac2ef762a6394daaa97d55e7b62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a8db4c5513113fd0dc60945739529c052</anchor>
      <arglist>(juce::UndoManager *undoManagerToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ab7cecc694ac7207c56439dc1c1153fc8</anchor>
      <arglist>(const float &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>referTo</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a909e1a9afd08ddb2da2d5239c19396da</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;property, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>referTo</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a2bc9571f83df1cd2e2b46e65105693cd</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;property, juce::UndoManager *, const float &amp;defaultVal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forceUpdateOfCachedValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>ae2dbcfc66b9466936907c3e4f4014a61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree &amp;</type>
      <name>getValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a2a860b2e25e610248173bdbcd9954794</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::Identifier &amp;</type>
      <name>getPropertyID</name>
      <anchorfile>classtracktion_1_1engine_1_1ConstrainedCachedValue.html</anchorfile>
      <anchor>a21103a273ca6a4869135c6d7beb310fb</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::InputDeviceInstance::Consumer</name>
    <filename>structtracktion_1_1engine_1_1InputDeviceInstance_1_1Consumer.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Consumer</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1Consumer.html</anchorfile>
      <anchor>ae59c8551f38d0717f369dd394a4bd30a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>acceptInputBuffer</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1Consumer.html</anchorfile>
      <anchor>af16570a412749a3d0a06c730cefcbecf</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1Consumer.html</anchorfile>
      <anchor>aad9c9cbc64bcd854762f195c48ecb5a9</anchor>
      <arglist>(const juce::MidiMessage &amp;, MPESourceID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>discardRecordings</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1Consumer.html</anchorfile>
      <anchor>aa91b163d7381932288af70a2def43fe8</anchor>
      <arglist>(EditItemID)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ContainerClip</name>
    <filename>classtracktion_1_1engine_1_1ContainerClip.html</filename>
    <base>tracktion::engine::AudioClipBase</base>
    <base>tracktion::engine::ClipOwner</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; ContainerClip &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>a947d227b3a31e6f1f4688e1905f679ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ContainerClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>a7b2fcfb0701d5597721e424a9e99c639</anchor>
      <arglist>(const juce::ValueTree &amp;, EditItemID, ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ContainerClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>a4776394cd6edc7f32e217efb926b3159</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree &amp;</type>
      <name>getClipOwnerState</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>a741f1f7ac6a50a3c5fb1b8c0de31fae6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>getClipOwnerID</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>a4214712611849f29401d5fcd89031b28</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Selectable *</type>
      <name>getClipOwnerSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>aa7614e12fd674e8f28fc0027c8146bf6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Edit &amp;</type>
      <name>getClipOwnerEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>a859c57504d925b000555c68fb88a9fa0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getOriginalFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>a9bf9cd62584a7153484636f8796e98c2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>a4e894119d02d822bdd17ba51822ccef3</anchor>
      <arglist>(const AudioFile &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>a6354b70c611ab15c45a7785972f3a769</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cloneFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>a3443152708fec0bec2102a2f1d8cf354</anchor>
      <arglist>(Clip *) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>a21abf95af62e9410b5070fd499db2049</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>a0e787a346fc79c603de8d776036fa01f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getSourceLength</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>a2a423b9bd62a7fceee84bf17d47725b4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>ab846c46871e9ff81e85b3589339b642b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopDefaults</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>ac201af442ac0635b168a741897bdc195</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopRangeBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>a81cbc497735a5af88e501405c3b36096</anchor>
      <arglist>(BeatRange) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>a4e52a0d01fec72a957c63a2176d37651</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pitchTempoTrackChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClip.html</anchorfile>
      <anchor>a554232ab64e4b02edb37d74742c507aa</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ContainerClipNode</name>
    <filename>classtracktion_1_1engine_1_1ContainerClipNode.html</filename>
    <base>tracktion::graph::Node</base>
    <base>tracktion::engine::TracktionEngineNode</base>
    <member kind="function">
      <type></type>
      <name>ContainerClipNode</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClipNode.html</anchorfile>
      <anchor>af9da1ee40ca16c1a01a3d6e541d3777b</anchor>
      <arglist>(ProcessState &amp;editProcessState, EditItemID containerClipID, BeatRange clipPosition, BeatDuration clipOffset, BeatRange clipLoopRange, std::unique_ptr&lt; Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClipNode.html</anchorfile>
      <anchor>acfc38502ca6827a24cf71bd5698ddb88</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClipNode.html</anchorfile>
      <anchor>ae5fa75631a0fb0a30b91459ecb35519b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getInternalNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClipNode.html</anchorfile>
      <anchor>adcae8575038f8c4751ba7e9336e3611a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClipNode.html</anchorfile>
      <anchor>a42158a59f986ed75319d36539bdb4dfa</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClipNode.html</anchorfile>
      <anchor>af5d5fab3c2adbf8412c597ef74cdbc6a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1ContainerClipNode.html</anchorfile>
      <anchor>a4337d4040cf2a6400b2cee94eb19022a</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::ContentType</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1ContentType.html</filename>
    <class kind="struct">tracktion::engine::Clipboard::ContentType::EditPastingOptions</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ContentType</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ContentType.html</anchorfile>
      <anchor>a0d56fa746353ec1c43382b81b9ce5bec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ContentType.html</anchorfile>
      <anchor>ae3179b071e4302d9007657da52f29b5a</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ContentType.html</anchorfile>
      <anchor>a2b8ac2e249e6721e16dd1ca7831b15da</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ScopedSteadyLoad::Context</name>
    <filename>structtracktion_1_1engine_1_1ScopedSteadyLoad_1_1Context.html</filename>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>structtracktion_1_1engine_1_1ScopedSteadyLoad_1_1Context.html</anchorfile>
      <anchor>abb194e2d915ee873669c08a1ecb214d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Context</name>
      <anchorfile>structtracktion_1_1engine_1_1ScopedSteadyLoad_1_1Context.html</anchorfile>
      <anchor>a6a69098631f99cc1581ab437c2ac3ed3</anchor>
      <arglist>(double sampleRateToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>structtracktion_1_1engine_1_1ScopedSteadyLoad_1_1Context.html</anchorfile>
      <anchor>a642c7d2795a107aa2b22a51987ebdf9f</anchor>
      <arglist>(double newSampleRate) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoadLevel</name>
      <anchorfile>structtracktion_1_1engine_1_1ScopedSteadyLoad_1_1Context.html</anchorfile>
      <anchor>a074defa285fb60a3d40041cc23cc5a8f</anchor>
      <arglist>(float newValue) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumNopsPerIteration</name>
      <anchorfile>structtracktion_1_1engine_1_1ScopedSteadyLoad_1_1Context.html</anchorfile>
      <anchor>a47f9ecbeda9f8c2a0a33860926d6bea8</anchor>
      <arglist>(int newValue) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumCallbacksToIgnore</name>
      <anchorfile>structtracktion_1_1engine_1_1ScopedSteadyLoad_1_1Context.html</anchorfile>
      <anchor>ab1d9842c2219404236ea455f0d9f42ba</anchor>
      <arglist>(int newValue) noexcept</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ScopedSteadyLoad</name>
      <anchorfile>structtracktion_1_1engine_1_1ScopedSteadyLoad_1_1Context.html</anchorfile>
      <anchor>ac84e35b1e4d6b7f28fcc23461fcba30b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ControlSurface</name>
    <filename>classtracktion_1_1engine_1_1ControlSurface.html</filename>
    <base>tracktion::engine::Selectable</base>
    <member kind="function">
      <type></type>
      <name>ControlSurface</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aa4969c037cf39f59ef568908ffc2787c</anchor>
      <arglist>(ExternalControllerManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ControlSurface</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>add945b32e425e1044d20c59e03490ea4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialiseDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>afb104075503fadc95d8f16520f92e469</anchor>
      <arglist>([[maybe_unused]] bool connect)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>shutDownDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>af82b805e672a490355ead0da86ac39b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>wantsDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a4471dcc884f6eedef41e82ba433ff3fa</anchor>
      <arglist>(const MidiID &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateOSCSettings</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a1189245dda7f6e93e088f6fcd6be1bb2</anchor>
      <arglist>(int, int, juce::String)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateMiscFeatures</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a0d00ade0aa5ab9d714af5fc54dee5ca4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>numExtendersChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a098bf124f9472aeda888dbb3b04815dc</anchor>
      <arglist>([[maybe_unused]] int num, [[maybe_unused]] int main)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>acceptMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a28d11eed3a5ebf19efc7b3fea940be0a</anchor>
      <arglist>([[maybe_unused]] int idx, const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>moveFader</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aa1e7e161c8c6b1008441feda7440d5af</anchor>
      <arglist>(int channelNum, float newSliderPos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>moveMasterLevelFader</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a7a9bbf8d1e8282e2d43651224d10717c</anchor>
      <arglist>(float newPos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>movePanPot</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>af59b6cb6ad277913db9b21d5a3048fd3</anchor>
      <arglist>([[maybe_unused]] int channelNum, [[maybe_unused]] float newPan)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>moveMasterPanPot</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a46c4612911dc67b688968e2119f22458</anchor>
      <arglist>(float newPan)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>moveAux</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>af98f956248b5a80b52014e2d60b7b8ab</anchor>
      <arglist>([[maybe_unused]] int channel, [[maybe_unused]] int auxNum, [[maybe_unused]] const char *bus, [[maybe_unused]] float newPos)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearAux</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a1924c5c9b129e2aa8d1a1dc0d0eafc26</anchor>
      <arglist>([[maybe_unused]] int channel, [[maybe_unused]] int auxNum)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateSoloAndMute</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aa1699384c023f3566af62ff958e9b2ba</anchor>
      <arglist>([[maybe_unused]] int channelNum, Track::MuteAndSoloLightState, [[maybe_unused]] bool isBright)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>soloCountChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a881290408b75d134f6690684fb2e3ec0</anchor>
      <arglist>([[maybe_unused]] bool anySoloTracks)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>playStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a187447e927991e2fbf70ede919651bec</anchor>
      <arglist>([[maybe_unused]] bool isPlaying)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>recordStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a4c9b949c2f251b317bbbac7a3f25549c</anchor>
      <arglist>([[maybe_unused]] bool isRecording)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>automationReadModeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ab6a39d9d44c389ab07e3299de9cce5cb</anchor>
      <arglist>([[maybe_unused]] bool isReading)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>automationWriteModeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a6d62286e1f5e7e6fd73240cdb2430ac8</anchor>
      <arglist>([[maybe_unused]] bool isWriting)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>faderBankChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a6fc57e700d41b10a6c69b986f162f45d</anchor>
      <arglist>([[maybe_unused]] int newStartChannelNumber, [[maybe_unused]] const juce::StringArray &amp;trackNames)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>padStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a239548692f8f4272f88ae5c91a48c81f</anchor>
      <arglist>([[maybe_unused]] int channelNumber, [[maybe_unused]] int sceneNumber, [[maybe_unused]] int colourIdx, [[maybe_unused]] int state)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clipsPlayingStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aebc36085ed292abe80adf1903b0c9fe9</anchor>
      <arglist>([[maybe_unused]] int channel, [[maybe_unused]] bool isPlaying)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>channelLevelChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aff385ca1d42f0eca3691b05117f8365a</anchor>
      <arglist>([[maybe_unused]] int channel, [[maybe_unused]] float l, [[maybe_unused]] float r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>trackSelectionChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a2a13404b3b809dd06f651ee7e8e0cbda</anchor>
      <arglist>([[maybe_unused]] int channel, [[maybe_unused]] bool isSelected)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>trackRecordEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>abb0075da4430ca88d8e89fa4605be0dd</anchor>
      <arglist>([[maybe_unused]] int channel, [[maybe_unused]] bool isEnabled)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>masterLevelsChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a77c5df0f4dce5af0aeebb07884843271</anchor>
      <arglist>([[maybe_unused]] float leftLevel, [[maybe_unused]] float rightLevel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>timecodeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ad1fd4e1c51e2bd76921b1cb50892cca8</anchor>
      <arglist>([[maybe_unused]] int barsOrHours, [[maybe_unused]] int beatsOrMinutes, [[maybe_unused]] int ticksOrSeconds, [[maybe_unused]] int millisecs, [[maybe_unused]] bool isBarsBeats, [[maybe_unused]] bool isFrames)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clickOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a0a5b37e20e7d345652eca8632c0b19c7</anchor>
      <arglist>([[maybe_unused]] bool isClickOn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>snapOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a13100f18a7c8340924477ece8316b0c6</anchor>
      <arglist>([[maybe_unused]] bool isSnapOn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loopOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ab14fd47df671c2c73c2dcf57ee5d1f2f</anchor>
      <arglist>([[maybe_unused]] bool isLoopOn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>slaveOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ae6c8b6ac2fe797d92dec1854d374832b</anchor>
      <arglist>([[maybe_unused]] bool isSlaving)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>punchOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a282b5453321ff4c751a1d1ae05a633b2</anchor>
      <arglist>([[maybe_unused]] bool isPunching)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scrollOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a165baf64c6b73508730ece16fadd487a</anchor>
      <arglist>([[maybe_unused]] bool isScroll)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>undoStatusChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ac0681f2e8e437a89c3ef4bcc5c18b16d</anchor>
      <arglist>([[maybe_unused]] bool canUundo, [[maybe_unused]] bool canReo)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parameterChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aa8ff7a166a58f591f72b6b213bb318fa</anchor>
      <arglist>([[maybe_unused]] int parameterNumber, [[maybe_unused]] const ParameterSetting &amp;newValue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ab8e63b6a2c0308920e56fdccf17da27a</anchor>
      <arglist>([[maybe_unused]] int parameterNumber)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>markerChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aec7294775468c1c327e9c6f46c14e8e4</anchor>
      <arglist>([[maybe_unused]] int parameterNumber, [[maybe_unused]] const MarkerSetting &amp;newValue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ae30cdecce5c3d63db577058656cf7321</anchor>
      <arglist>([[maybe_unused]] int parameterNumber)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>auxBankChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a3e3537f19174e3b64f319a5c37eec9ea</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>wantsMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a077797db30addcb736db8f24958f5330</anchor>
      <arglist>(int, const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>eatsAllMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>adbed4c171251a1223f735294e7bcaa0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canSetEatsAllMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a8a1dbe4ca7c276007f466278e6c5269c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setEatsAllMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a400786cba901f02cbd157133fa541606</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canChangeSelectedPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ad18c4d548cf8430ae15837f44b200c4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>currentSelectionChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a224a5c49a2a6920f8999f4b956b5ebe8</anchor>
      <arglist>(juce::String)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a4d5730a8746e630befeeb074dd29dec8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>showingPluginParams</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aab6b1bdd7bfbcc43d03a8db4e362cb7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>showingMarkers</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a526bbefab6c6ba4968237fd38b2f0143</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>showingTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a2a1faf23e2a3652846520901cbd4c76f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>showingClipSlots</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ad8cbd3aa6b059ba137d851be012c93e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteController</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a255e380da481ced40257269dc88addad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>pluginBypass</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a7acb32def08f8c1d51a79af29807197c</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPluginSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a3988538195b12ddbf7330d034c7de71b</anchor>
      <arglist>(Plugin *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>currentEditChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>af19c9c24b612e32c753e5f6eb79e9b73</anchor>
      <arglist>(Edit *e)</arglist>
    </member>
    <member kind="function">
      <type>Edit *</type>
      <name>getEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a5c95bb90a0b5fb36720cba4aba38b312</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TransportControl *</type>
      <name>getTransport</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a750d2748b15f365fed1bc3bbf6351481</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>currentSelectionManagerChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aa791a8ff3b854ff598c9e6cc56b4a3cb</anchor>
      <arglist>(SelectionManager *sm)</arglist>
    </member>
    <member kind="function">
      <type>SelectionManager *</type>
      <name>getSelectionManager</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>add1a5c7e9d9bd8379653bc6f48b81d10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSafeRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a9a17b0829b3abfab9653f080c8aad45c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMarkerBankOffset</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a3be35788bd5435da5614ca113e33815f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFaderBankOffset</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a8df7fa20500a74c023b230ee25b76626</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAuxBankOffset</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aa43b6246ad8442598d827d0622208b62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getParamBankOffset</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aa21625a85d11830b5deef64fa11c4b4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getClipSlotOffset</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ae576e7d776cfdb5ca3e1bcc62546598d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMidiCommandToController</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a26a086edf0249e5639fd980197c5562e</anchor>
      <arglist>(int idx, const void *midiData, int numBytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMidiCommandToController</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a4211c1a1d809f235ee710f88d60196b5</anchor>
      <arglist>(int idx, const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMidiArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a69a0bb7c6a82085c0eb8214108ca8274</anchor>
      <arglist>(int idx, const uint8_t(&amp;rawData)[size])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedFader</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>af477b483bf0c2ecf9639a4531a91eaff</anchor>
      <arglist>(int channelNum, float newFaderPosition, bool delta=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedPanPot</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a3cc543c1814d1bc395ca3817d16cc79e</anchor>
      <arglist>(int channelNum, float newPanPosition, bool delta=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedMasterLevelFader</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a9eb56be6e814aa7efb7c0cbcf7515a65</anchor>
      <arglist>(float newLevel, bool delta=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedMasterPanPot</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a1890174812c4d0270c68334c2e3a4bd6</anchor>
      <arglist>(float newLevel, bool delta=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedAux</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a9acdc9cdaeec098d976b16a7bf781f97</anchor>
      <arglist>(int channelNum, int auxNum, float newPosition, bool delta=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedAux</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a0c68b2430951ec75849445d272995372</anchor>
      <arglist>(int channelNum, int auxNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedQuickParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>adb263ff25fba959b4dae8bb6bd977626</anchor>
      <arglist>(float newLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedSolo</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a1880e486796c7425624c7e26233d5be9</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedSoloIsolate</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ac0592ac117dbc1ff93fda4a72596de9a</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedMute</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>acaaf8f6bd830e21097f98bce5a2d616b</anchor>
      <arglist>(int channelNum, bool muteVolumeControl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSelectedTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a1f7878e410da610d756859327ddd8c70</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSelectedOneTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a7fbb1302c1841cfe16040a372fcea6a9</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSelectedClipInTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ae05d61e261a91bf197bf0abbb8a02c42</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSelectedPluginInTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aef39b7b781cbd2802ca3edd9a4842230</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedRecEnable</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a902caee4078aa60b711a6967dbda6b77</anchor>
      <arglist>(int channelNum, bool enableEtoE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userLaunchedClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a7e9b69a699a776edb535b2ebe694a242</anchor>
      <arglist>(int channelNum, int sceneNum, bool press)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userStoppedClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ab33073be258c2b4fddb90d01f47bdb55</anchor>
      <arglist>(int channelNum, bool press)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userLaunchedScene</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aca3483de39be2c9242bd73d220627cde</anchor>
      <arglist>(int sceneNum, bool press)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a8b848c1117009e6fda13677295745f70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedRecord</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>afb2f0f951ed9f42b318811d95aefeb81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedStop</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a7ba539d698b340b3cc7d8358f21dad2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedHome</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a02a761c1eda2e7d617c36f13e955325f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedEnd</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a46bb6c742534a1e2faa10dff7fbb5b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedMarkIn</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>abdf3dd13bc36fa020de611c6ac551e5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedMarkOut</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a48d461e87ec6d5a17ba4c5d2c57a8a10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedAutomationReading</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a11b7f819e70ffc51a87aeabb23d1f172</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedAutomationWriting</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a8f189edf979ddc0608cd010c57856902</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledBeatsSecondsMode</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a5d0e9c94ebbc328ec35f45ae7a3dd9a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedSave</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aeb4d62284d335ea6b56ec41160224e4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedSaveAs</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a4b5feedb7ee30b4bd0b1b579c306ff35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedArmAll</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a5875e65f6fb065c437eb48f7accd1bb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedJumpToMarkIn</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aa9214249f82607c152df8ca89a98ee74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedJumpToMarkOut</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ac393697440995737bc58de11497ecdbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedZoomIn</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a5827addd99b5d14a024fd8992bdeeb70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedZoomOut</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a8adb16e4d83ba6723afca92f7351b9bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedZoomToFit</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a03b7ff833eb0926604640dc2f8ea840b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedCreateMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a667a9b1c97afc0230d30205e6ca41008</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedNextMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ad7b4fdbcac90934eb3b4c122f2e6943e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedPreviousMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>acda65cbc093e814c21b176c798291104</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedRedo</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ab93acbe2da204da22ad959f1a9d78667</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedUndo</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>abbb91a8b5462d52944284c98142b98c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedAbort</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a683cd478d85d4275756d1e46aadb852b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedAbortRestart</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a3c53bd7d73e3370a5b72f03af6fd9d05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedCut</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a4ea79e61104315580fdf5e0b334270c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedCopy</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a6e457e3ef0788b6e46793c93a649ee4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedPaste</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a50ccf5cf419645efc0f93ba09b381c45</anchor>
      <arglist>(bool insert)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedDelete</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a19546e96836e9591f74c01c2232b591c</anchor>
      <arglist>(bool marked)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedZoomFitToTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a6d5dcbe36a4ec95a0a3f75dfa7a2261d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedInsertTempoChange</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a9b4e7dca1643c1c5a6ce3b9bc2d23125</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedInsertPitchChange</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ad8992ebc22be0ef83f24eba37cae58cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedInsertTimeSigChange</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a11c1ae22c45fc2a8b19511445485e9e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledVideoWindow</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a6a6461be359056a1dc8050bbf3f2c7e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledMixerWindow</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a739f0d5d4ea688aef1fdcc570d6154aa</anchor>
      <arglist>(bool fullscreen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledMidiEditorWindow</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a037ffe06ae40c77d64cb95046b932882</anchor>
      <arglist>(bool fullscreen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledTrackEditorWindow</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a5b642c217d7514c948343940b2e65062</anchor>
      <arglist>(bool zoomed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledBrowserWindow</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ae3886466c7621b5de9f2892351b1eb81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledActionsWindow</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ae63b748e37031ab10466a3ea1374742d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedUserAction</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>abcb22026b7a0d2fc559f5068412f8b05</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedFreeze</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a37fbb116bb4be63d57dc327df4ac95d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedClearAllSolo</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a7fff4e6afec8e8aac09f5041f9ddc058</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedClearAllMute</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a0be1cf4b9372b350366d89b9449ce207</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledLoopOnOff</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a87ca5949027c1d3d9c6d496e9a903a8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledPunchOnOff</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a482f8608c07bb6ce4e66191d141bdf3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledClickOnOff</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a213323b8f3de44286e639b580dac459e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledSnapOnOff</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>abdf33e695358e54191e0890e65e4b2ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledSlaveOnOff</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>acb382eefa4ca4a6da24bfbee84c834c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledEtoE</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ac172fb19dd8194447a366515af6af41f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userToggledScroll</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>af3b7507dce211f3d29e7bfcd5dc74c93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSkippedToNextMarkerLeft</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>abee44002620be6508e56069cc64714c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSkippedToNextMarkerRight</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a28f4503005b37f4a868380cc5c402f01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userNudgedLeft</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>af4910a40a450c4be7abd7031bad64cd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userNudgedRight</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a4c7d3e440311522060d1a285455081d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userZoomedIn</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>af9567a0b8c51aa83e59dd796154a358a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userZoomedOut</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a8054142aa3bfd09ff2e448982b09c8e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userScrolledTracksUp</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ae09f4c59cf2139a8ccf321e9bf69aa92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userScrolledTracksDown</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a1e355db5c458a9ed6191fb4d9ea58528</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userScrolledTracksLeft</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a8625086ad7730a15e835f470844e1280</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userScrolledTracksRight</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a8d7e9defc681ca03f1f83183ce2a68d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userZoomedTracksIn</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a20d878f763c3ddbcc9eb6237775b4733</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userZoomedTracksOut</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a9ec475718bb03c60c84d68c385865eb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectOtherObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a2f8eca48a6f304c05c7c9c70561e897f</anchor>
      <arglist>(SelectableClass::Relationship, bool moveFromCurrentPlugin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>muteOrUnmutePluginsInTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a593008014f70cbd66a4107512bcfdebc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userChangedFaderBanks</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ab67df77aeeee358542fd3d8ad7712841</anchor>
      <arglist>(int channelNumDelta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userChangedPadBanks</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a621f5bdd52115cc02ebdead2ee47529f</anchor>
      <arglist>(int padDelta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedJogWheel</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ad38ad99710cfe3db070dd5cfe0b7f2fc</anchor>
      <arglist>(float amount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userChangedRewindButton</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aab8848cd54c9f5861a5f1b99f5379974</anchor>
      <arglist>(bool isButtonDown)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userChangedFastForwardButton</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a2acaac9a09c0490ebbe8fc2b01574c4b</anchor>
      <arglist>(bool isButtonDown)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedParameterControl</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a9a18aef4898de75cc8391cfe517bc527</anchor>
      <arglist>(int parameter, float newValue, bool delta=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedParameterControl</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ab7b48622b0c531f58e16fb1555cacf73</anchor>
      <arglist>(int paramNumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userChangedParameterBank</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aa0960a11ef991a27c9cde150eb01194c</anchor>
      <arglist>(int deltaParams)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userChangedMarkerBank</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a9fd1c34a6ca3909f2f87f749c80dc2f2</anchor>
      <arglist>(int deltaMarkers)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedGoToMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ac073a60fe1dc8e1dcd0f2f170f23d26c</anchor>
      <arglist>(int marker)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userChangedAuxBank</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a239f9c130548607a3e54d97b61baac71</anchor>
      <arglist>(int delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSetAuxBank</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a04d68527533eb20ebc69ab580363370f</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateDeviceState</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>af0673b23cb12ba797696c4eecdb620be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redrawSelectedPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>afbfe5604e8faea7bffe9d3a261c2e3a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redrawSelectedTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a29df7cd6d20ebf86dd297dab72d9625e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Edit *</type>
      <name>getEditIfOnEditScreen</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aafef08de3ca580663363b85368f268bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFollowsTrackSelection</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aa724ed125ddda5d3786fb11fb232b149</anchor>
      <arglist>(bool f)</arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>deviceDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a3a97621fbf7a57405d6e6f38e0fdaee0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>supportedExtenders</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a0d8ba478612c278abd7ae9ff173d8dab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>needsMidiChannel</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a09d9d6a44fd439fdaa9c65341db7b484</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>midiChannelName</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a3d9798b42208c0509cfa07b5f09d6e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>needsMidiBackChannel</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aa2d6c62641722dff21d26e67b9d16015</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>midiBackChannelName</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a253b642ae15a43335783a6897c480b41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>needsOSCSocket</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a6239c8ada1ad6cc7da41bde4122cab9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>wantsClock</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>add1a1b737a39f835c0891082f329c1e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>deletable</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a002e366f8d7ad23636c3df5ba8bd4c43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numberOfFaderChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a55dca27ac36bfa09c499131bce917591</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numCharactersForTrackNames</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a82bcc8fa10d432e0e27d6be33060786e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numberOfTrackPads</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a71ec443070a65f734e8719a3a5866c99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>allowBankingOffEnd</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aa55a829b0294f8dd92c1991c1bcd6aed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>wantsDummyParams</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>af758666a8075e40a9f457b7e2302cdcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numParameterControls</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a496c7c850547ef37382789cf9c83e14d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numCharactersForParameterLabels</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aa9150b05b11be2abbfa65afed9dd48cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numMarkers</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a26bedbf031beccd1a02154444528c516</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numCharactersForMarkerLabels</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a2cd9db9c7af7f2d1b0a78f55e8db0565</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>pickUpMode</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>aaa4731e5782b0f14b86268367910e494</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>limitedPadColours</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a143cce2c853a08ae87fc50d3604a388f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numAuxes</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a515336458e4ae27cdb6ce8ea801f8c5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numCharactersForAuxLabels</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a5f13a9bb6a6acf87bb432a11508e2210</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>wantsAuxBanks</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a85c20035084f564f41e57deea9eb06c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>followsTrackSelection</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a3a25d25794a42f6f0ff10c1bcb853fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AuxPosition</type>
      <name>auxMode</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ac586d8eb40411004cc66b444ea8c0a99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>afb8b7500890c8197175689f243019375</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ExternalControllerManager &amp;</type>
      <name>externalControllerManager</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ae5eca2fc57a6bdbb294f8c833edb6697</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ExternalController *</type>
      <name>owner</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>ac318778d4c61911acdf63e8242b3fb5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::set&lt; std::pair&lt; int, int &gt; &gt;</type>
      <name>recentlyPressedPads</name>
      <anchorfile>classtracktion_1_1engine_1_1ControlSurface.html</anchorfile>
      <anchor>a402acd4ba58cd023344a23878df22b99</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::EngineBehaviour::ControlSurfaces</name>
    <filename>structtracktion_1_1engine_1_1EngineBehaviour_1_1ControlSurfaces.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>mackieMCU</name>
      <anchorfile>structtracktion_1_1engine_1_1EngineBehaviour_1_1ControlSurfaces.html</anchorfile>
      <anchor>a27a46a65ec07bcebc78a18e06f3ad1aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mackieC4</name>
      <anchorfile>structtracktion_1_1engine_1_1EngineBehaviour_1_1ControlSurfaces.html</anchorfile>
      <anchor>aaf7b0780e5e572431ac64b3155f74066</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>iconProG2</name>
      <anchorfile>structtracktion_1_1engine_1_1EngineBehaviour_1_1ControlSurfaces.html</anchorfile>
      <anchor>abf7cc2902dd95e291626fa5375aab8f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>tranzport</name>
      <anchorfile>structtracktion_1_1engine_1_1EngineBehaviour_1_1ControlSurfaces.html</anchorfile>
      <anchor>afb63616eef836015ed03d8ede2f11faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>alphaTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1EngineBehaviour_1_1ControlSurfaces.html</anchorfile>
      <anchor>a81c171e27c9a51273e20681ce8a6acc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>remoteSL</name>
      <anchorfile>structtracktion_1_1engine_1_1EngineBehaviour_1_1ControlSurfaces.html</anchorfile>
      <anchor>aecdc93e069c2442c83e5c075c9b23bd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>remoteSLCompact</name>
      <anchorfile>structtracktion_1_1engine_1_1EngineBehaviour_1_1ControlSurfaces.html</anchorfile>
      <anchor>a8526c4fbbfdb02bff0940a5457a77ab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>automap</name>
      <anchorfile>structtracktion_1_1engine_1_1EngineBehaviour_1_1ControlSurfaces.html</anchorfile>
      <anchor>a50acd6a8a100b4ff1585d29ea3b7d4de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AudioFadeCurve::Convex</name>
    <filename>structtracktion_1_1engine_1_1AudioFadeCurve_1_1Convex.html</filename>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>preadjust</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve_1_1Convex.html</anchorfile>
      <anchor>aa93bf941f0592e3d9f4e7ddee0278e06</anchor>
      <arglist>(double alpha) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>get</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve_1_1Convex.html</anchorfile>
      <anchor>a38bb4fc243fe72c9f3f871b4b4d0f8dc</anchor>
      <arglist>(float alpha) noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MackieMCU::CpuMeterTimer</name>
    <filename>structtracktion_1_1engine_1_1MackieMCU_1_1CpuMeterTimer.html</filename>
    <member kind="function">
      <type></type>
      <name>CpuMeterTimer</name>
      <anchorfile>structtracktion_1_1engine_1_1MackieMCU_1_1CpuMeterTimer.html</anchorfile>
      <anchor>aa32a5f864f56dbf2b71d9fe24425f633</anchor>
      <arglist>(MackieMCU &amp;mcu)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>structtracktion_1_1engine_1_1MackieMCU_1_1CpuMeterTimer.html</anchorfile>
      <anchor>aea0892c8d3f216f279955c01f1814b57</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>MackieMCU &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion_1_1engine_1_1MackieMCU_1_1CpuMeterTimer.html</anchorfile>
      <anchor>aa393157b83a73635124e951067e27e45</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::CrashStackTracer</name>
    <filename>structtracktion_1_1engine_1_1CrashStackTracer.html</filename>
    <member kind="function">
      <type></type>
      <name>CrashStackTracer</name>
      <anchorfile>structtracktion_1_1engine_1_1CrashStackTracer.html</anchorfile>
      <anchor>aa1ddacd01c5902e4d4032378940bd63f</anchor>
      <arglist>(const char *file, const char *fn, int line, const char *pluginName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CrashStackTracer</name>
      <anchorfile>structtracktion_1_1engine_1_1CrashStackTracer.html</anchorfile>
      <anchor>a14221b48ba8b65185fde940401bd69ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getCrashedPlugins</name>
      <anchorfile>structtracktion_1_1engine_1_1CrashStackTracer.html</anchorfile>
      <anchor>a3e16ea8b8365e95ebdf6be760e117b90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>dump</name>
      <anchorfile>structtracktion_1_1engine_1_1CrashStackTracer.html</anchorfile>
      <anchor>a87a6e8d68744dcaac469df99ed59fdf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>dump</name>
      <anchorfile>structtracktion_1_1engine_1_1CrashStackTracer.html</anchorfile>
      <anchor>a5853a6a992dadea4fbce5f4ec72efb70</anchor>
      <arglist>(juce::OutputStream &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>dump</name>
      <anchorfile>structtracktion_1_1engine_1_1CrashStackTracer.html</anchorfile>
      <anchor>ad45fb447c046b1ae6f1fc41181dad764</anchor>
      <arglist>(juce::OutputStream &amp;, juce::Thread::ThreadID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getCrashedPlugin</name>
      <anchorfile>structtracktion_1_1engine_1_1CrashStackTracer.html</anchorfile>
      <anchor>aef54d2bb65d49c869585387d1002933d</anchor>
      <arglist>(juce::Thread::ThreadID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getCrashLocation</name>
      <anchorfile>structtracktion_1_1engine_1_1CrashStackTracer.html</anchorfile>
      <anchor>a5b6f148cb6c2ddf30b606d6dcb5a9245</anchor>
      <arglist>(juce::Thread::ThreadID)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::CreateAudioNodeParams</name>
    <filename>structtracktion_1_1engine_1_1CreateAudioNodeParams.html</filename>
    <member kind="variable">
      <type>const juce::Array&lt; Clip * &gt; *</type>
      <name>allowedClips</name>
      <anchorfile>structtracktion_1_1engine_1_1CreateAudioNodeParams.html</anchorfile>
      <anchor>abc1ac718bccfb587a6a493afe526a183</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const juce::BigInteger *</type>
      <name>allowedTracks</name>
      <anchorfile>structtracktion_1_1engine_1_1CreateAudioNodeParams.html</anchorfile>
      <anchor>a0d772020aa393bca19aca667a8769e26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioNode *</type>
      <name>audioNodeToBeReplaced</name>
      <anchorfile>structtracktion_1_1engine_1_1CreateAudioNodeParams.html</anchorfile>
      <anchor>a6ce34f5a8597617f35fcc594a141be96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>forRendering</name>
      <anchorfile>structtracktion_1_1engine_1_1CreateAudioNodeParams.html</anchorfile>
      <anchor>a49be204a84449f882ce084f63f3cfba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>includePlugins</name>
      <anchorfile>structtracktion_1_1engine_1_1CreateAudioNodeParams.html</anchorfile>
      <anchor>a340fd492514d88948bbe8431c852410e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>addAntiDenormalisationNoise</name>
      <anchorfile>structtracktion_1_1engine_1_1CreateAudioNodeParams.html</anchorfile>
      <anchor>a86865c576e9c3119bba3df6bd7a0e317</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::CreateNodeParams</name>
    <filename>structtracktion_1_1engine_1_1CreateNodeParams.html</filename>
    <member kind="variable">
      <type>ProcessState &amp;</type>
      <name>processState</name>
      <anchorfile>structtracktion_1_1engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>a1b709051a141ae792bc875737275b0f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>structtracktion_1_1engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>a2fd014ff3c59f5f719862343270f7662</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>blockSize</name>
      <anchorfile>structtracktion_1_1engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>a7f8fc88fc3b785ab40239c5b771daddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const juce::Array&lt; Clip * &gt; *</type>
      <name>allowedClips</name>
      <anchorfile>structtracktion_1_1engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>abb5d76e65f690093031b4b12cc0ef671</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; Track * &gt; *</type>
      <name>allowedTracks</name>
      <anchorfile>structtracktion_1_1engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>ab58c3ae209ded87158ad56f7f68e7668</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>forRendering</name>
      <anchorfile>structtracktion_1_1engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>a506807aeda5c6447503cbe55c5eb14bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>includePlugins</name>
      <anchorfile>structtracktion_1_1engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>a05d5f0bc67fde167cbb481686e657c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>includeMasterPlugins</name>
      <anchorfile>structtracktion_1_1engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>a7337e802dfd2556b54e3318a634310d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>includeBypassedPlugins</name>
      <anchorfile>structtracktion_1_1engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>a1ff6a7cc3930a077d5e7dd5b18d83b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>implicitlyIncludeSubmixChildTracks</name>
      <anchorfile>structtracktion_1_1engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>acb2244afdf62f4b0997df40232b80f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>allowClipSlots</name>
      <anchorfile>structtracktion_1_1engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>af8a47231e0f855bb39f1c456f652abbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>readAheadTimeStretchNodes</name>
      <anchorfile>structtracktion_1_1engine_1_1CreateNodeParams.html</anchorfile>
      <anchor>ac979424270c1b384f3be6a040c83fcde</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AudioFadeCurve::CrossfadeLevels</name>
    <filename>structtracktion_1_1engine_1_1AudioFadeCurve_1_1CrossfadeLevels.html</filename>
    <member kind="function">
      <type></type>
      <name>CrossfadeLevels</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve_1_1CrossfadeLevels.html</anchorfile>
      <anchor>aa923e706f4197ed4169f8f4b987d7274</anchor>
      <arglist>(float alpha) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>gain1</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve_1_1CrossfadeLevels.html</anchorfile>
      <anchor>a6f8ed2172c801f38ba65a7bc970b64f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>gain2</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve_1_1CrossfadeLevels.html</anchorfile>
      <anchor>aa24c1688175d8e0188592be246b5afd1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::CurveEditor</name>
    <filename>classtracktion_1_1engine_1_1CurveEditor.html</filename>
    <base>tracktion::engine::SelectableListener</base>
    <base>tracktion::engine::MouseHoverDetector</base>
    <base>tracktion::engine::TransparentToMouseInTrackItemComp</base>
    <member kind="function">
      <type></type>
      <name>CurveEditor</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a72daca40faabf41c1abffa465a36f01c</anchor>
      <arglist>(Edit &amp;, SelectionManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CurveEditor</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a9aff21b08babc16fa8c9433931fbd229</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paint</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>adf269d7e9274d2877c037aa1457ae371</anchor>
      <arglist>(juce::Graphics &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hitTest</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a3d1f5aef8b43251ef18ec030021a741b</anchor>
      <arglist>(int x, int y) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visibilityChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>adcfe92d79e301a6c3a22cd9e0f07e71a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mouseDown</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a6b9876b3236778d484f156f717ee43b8</anchor>
      <arglist>(const juce::MouseEvent &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mouseUp</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>aa67c369cc1c811b5b9c9b502eed2ed35</anchor>
      <arglist>(const juce::MouseEvent &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mouseDrag</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a18306131537b07279609efbdf52edc23</anchor>
      <arglist>(const juce::MouseEvent &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mouseMove</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ab5466e95a199d497747e65ddc89e1377</anchor>
      <arglist>(const juce::MouseEvent &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mouseEnter</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a5376e39b0232f4f02aba4f1c915180e4</anchor>
      <arglist>(const juce::MouseEvent &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mouseExit</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a413c2b26e77601c66b45090c59aba532</anchor>
      <arglist>(const juce::MouseEvent &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mouseDoubleClick</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a4653a4604e0bfdfbf14e57fdb7b43ce1</anchor>
      <arglist>(const juce::MouseEvent &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mouseHovered</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ae19063bdfba6305ecfa9419ed2c0b014</anchor>
      <arglist>(int mouseX, int mouseY) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mouseMovedAfterHover</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ae9723b44e2aedbf3f2a22ff01fce73cc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::MouseCursor</type>
      <name>getMouseCursor</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ace0a700375b69f2b68375d8cfc89aeb2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimes</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>af3e22362c04cbcc9e08f59db7623ce3e</anchor>
      <arglist>(TimePosition leftTime, TimePosition rightTime)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>timeToX</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a9f80f85c89402dadc2b175c0b9f016a2</anchor>
      <arglist>(TimePosition) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>xToTime</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a010777c27d1243146069528a32e63b3c</anchor>
      <arglist>(double x) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>valueToY</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a26f912e5a366106433cd20b87d862ee0</anchor>
      <arglist>(float val) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>yToValue</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a1df94ce44fd7522d767edb78e79f4219</anchor>
      <arglist>(double y) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Point&lt; float &gt;</type>
      <name>getPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a7f91906c7b7276e1c12f5b79a2d64485</anchor>
      <arglist>(CurvePoint) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Point&lt; float &gt;</type>
      <name>getPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a6a72daafc1660b2dafef4b59008b4175</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableObjectChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a642a39f4d584dd007983c6f379316e6e</anchor>
      <arglist>(Selectable *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableObjectAboutToBeDeleted</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ad6f3a0fef2b23071ca3c57fba018a751</anchor>
      <arglist>(Selectable *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeListenerCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ab94adb78366e1d544aa873a2bf072577</anchor>
      <arglist>(juce::ChangeBroadcaster *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateLineThickness</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ae983ed1eebf74e527f481b8c576698e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Edit &amp;</type>
      <name>getEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>acc730ec27081850fda5383ffdd6ac9d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Track *</type>
      <name>getTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a96fca222f4b8fe17b595fc307db35bab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TimePosition</type>
      <name>snapTime</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a5583ba692e6461d372bb4fe56e669280</anchor>
      <arglist>(TimePosition, juce::ModifierKeys)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>getValueAt</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a66548084c840772ef33907816469757a</anchor>
      <arglist>(TimePosition)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TimePosition</type>
      <name>getPointTime</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a2948338703d0850275f33d4099b82c1c</anchor>
      <arglist>(int idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>getPointValue</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>affcd6f6bfdd5b3d66f9e24ce699d2642</anchor>
      <arglist>(int idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>getPointCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>af5c58e1c26d1d66ac70cf58807b3d603</anchor>
      <arglist>(int idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removePoint</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ac1e229bbb2d81be9e5e06d58efd6ac4f</anchor>
      <arglist>(int index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>addPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a2ba95295f7ff0345ef985c8149fc9dbd</anchor>
      <arglist>(TimePosition time, float value, float curve)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getNumPoints</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a1d4389d65ed11f06dc980e20258dd56a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CurvePoint</type>
      <name>getBezierHandle</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a80e7eb5143f530aa6f85808c0596d117</anchor>
      <arglist>(int idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CurvePoint</type>
      <name>getBezierPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ab8d4f3a79dfa9465bbb1d86c4afbb4f7</anchor>
      <arglist>(int idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>nextIndexAfter</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a990db1f43690febf227577baf654c5ee</anchor>
      <arglist>(TimePosition)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getBezierEnds</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a6b9d361ad3db7fe0f2fcda12b36c0cfb</anchor>
      <arglist>(int index, double &amp;x1out, float &amp;y1out, double &amp;x2out, float &amp;y2out)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>movePoint</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a153fedb286bde47ca90a97a3d20e55ff</anchor>
      <arglist>(int index, TimePosition newTime, float newValue, bool removeInterveningPoints)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setValueWhenNoPoints</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>aa2eda81e646fee99d6ed132af3d76130</anchor>
      <arglist>(float value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CurveEditorPoint *</type>
      <name>createPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a05247762cdb034cea31f4fe13f78e89c</anchor>
      <arglist>(int idx)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>curvePoint</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>aa355c971739d7c6fb53528b09729ab08</anchor>
      <arglist>(int index, float newCurve)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::String</type>
      <name>getCurveName</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>abcba6fa5731a147fbcc4f35bffdec708</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getCurveNameOffset</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ad7d2a048e7f55f84a13869ac3a12f46f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Selectable *</type>
      <name>getItem</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a70809ea542b8b40fbcde4d6f2443398e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isShowingCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ae32e0162cc9fdcd8f5e57ee0a8b0fa28</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateFromTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a08c1648dafebb36f85b62212399a6341</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Colour</type>
      <name>getCurrentLineColour</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ad8933277347ce232ad8a6e140dc64f6e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::Colour</type>
      <name>getCurrentFillColour</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a60b48c0ad3b5ac181f59bf22d7ed43be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Colour</type>
      <name>getDefaultLineColour</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ac47806ba825d7a21a3b882d13e2e9ca0</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Colour</type>
      <name>getSelectedLineColour</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a17c4f216f20597d7a84ca4807073bc1d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Colour</type>
      <name>getBackgroundColour</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>aac015ce0f85963873eea288fcf36028e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Colour</type>
      <name>getCurveNameTextBackgroundColour</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a4b827907b3f873ba49a42b1345a9087f</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Colour</type>
      <name>getPointOutlineColour</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>af459f9e882992e2e1f0a78cf0401951a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a0ebee9c5a685e169b029537225efb546</anchor>
      <arglist>(int pointIdx, bool addToSelection)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updatePointUnderMouse</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ab5cdd927912287928cb1beac3bc34aa4</anchor>
      <arglist>(juce::Point&lt; float &gt;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>showBubbleForPointUnderMouse</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>af2420aa30a28548c9291c472a88622b5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>hideBubble</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a56d8f892fc93371804350142503bbe90</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>nonRealTimeDragStart</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>aca8a80adaad5c2e14b4b59e1fdeeb8a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>nonRealTimeDragEnd</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a2cdafb4af7294e74113e21ad7529cabb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isPointSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a197dd95b4f36e8995dbc1d6e8462e745</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>areAnyPointsSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ae4588ea694c2bf6d7188719f43aca4ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>CurveEditorPoint *</type>
      <name>getSelectedPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ad03483483301678d87a1706e4f8761de</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ae37994982a94fc25afdc5b02df999d97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::UndoManager &amp;</type>
      <name>undoManager</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a671c17b019313c1c51d93e7138f54e1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SelectionManager &amp;</type>
      <name>selectionManager</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a5366e7f96e9ebfa45de17551e1d3c4eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>parameterMinValue</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>aaafcf1d05c765c7809f698dd9d7eebd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>parameterRange</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>aadcbd157cbb799a15880667777135bd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TimePosition</type>
      <name>leftTime</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ab869e04ddc57eeb762634a48b06bd741</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TimePosition</type>
      <name>rightTime</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a5443e020c85ddf864d9a9ce119a302e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>firstIndexOnScreen</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a62168c9ebde64bbb1d47002d8a5dd132</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>pointUnderMouse</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ae5988513433c0e16d1545fd175a10329</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>pointBeingMoved</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>abb65e3ef2bc9db92dd35b3bcee17bc51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>curveUnderMouse</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a2a80178291bdc12806f38d0645c7f313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>lineUnderMouse</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>acb5190f27dacd79d4713e92d5f3fc0cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>dragged</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>af37f1786b29bbde91c8ad8bfffb9d1b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>movingAllPoints</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a5581b41ebc77a94349fad8863b566ab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TimePosition</type>
      <name>mouseDownTime</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>af5d05d35adf3248fbe615e481476c92f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mouseDownValue</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a1082a16f469b042f3bee46e71bcb1122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isCurveSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>acb3f9a2cb3ea44630ae65a15f7cec36a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mouseDownCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>ac0dab724163f987d46f69424234dc55e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>point1</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>aa4a043a12a37be344ff7d151d6118405</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>point2</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a6d632f5d554edb89af85bc8ea8d80509</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>realTimeDrag</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>abd38e8eff7ddec6f9898ee0b35927fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>defaultCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a16712a17421b8edefff98823325957bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lineThickness</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>a2a4dbb7c3cea79d91a90464dfc18cf7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static constexpr const float</type>
      <name>pointRadius</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditor.html</anchorfile>
      <anchor>aa3675a4e2deb9970143e8d9a565ce43d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::CurveEditorPoint</name>
    <filename>classtracktion_1_1engine_1_1CurveEditorPoint.html</filename>
    <base>tracktion::engine::Selectable</base>
    <member kind="function">
      <type></type>
      <name>CurveEditorPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditorPoint.html</anchorfile>
      <anchor>ab0f89fefdd6f7cc4d811b2aae5ddc0c0</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CurveEditorPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditorPoint.html</anchorfile>
      <anchor>a6cd95537ab38387c5748017997685040</anchor>
      <arglist>(int i, CurveEditor *ed)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CurveEditorPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditorPoint.html</anchorfile>
      <anchor>a7953a5b7d230bbed9484a91478d4643e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectionStatusChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditorPoint.html</anchorfile>
      <anchor>a08d21cc7fafa552a3cf120b46c2408d2</anchor>
      <arglist>(bool isNowSelected) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>arePointsConsecutive</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditorPoint.html</anchorfile>
      <anchor>a5fa1fb91045010c96b06095a954ef235</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>arePointsOnSameCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditorPoint.html</anchorfile>
      <anchor>a1fb0933f02bd674da16539a215ac4a8c</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeRange</type>
      <name>getPointTimeRange</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditorPoint.html</anchorfile>
      <anchor>a4598542b6d8e1ceac7883b8e7b42ffd7</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditorPoint.html</anchorfile>
      <anchor>a6f862fec3d99f80f34182cb65da7988e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Component::SafePointer&lt; CurveEditor &gt;</type>
      <name>editor</name>
      <anchorfile>classtracktion_1_1engine_1_1CurveEditorPoint.html</anchorfile>
      <anchor>a343acef02a30c7fe155e9325c9f70911</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::CurvePoint</name>
    <filename>structtracktion_1_1engine_1_1CurvePoint.html</filename>
    <member kind="function">
      <type></type>
      <name>CurvePoint</name>
      <anchorfile>structtracktion_1_1engine_1_1CurvePoint.html</anchorfile>
      <anchor>aaa46c4cfff4b74db42eeb6de789725b2</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CurvePoint</name>
      <anchorfile>structtracktion_1_1engine_1_1CurvePoint.html</anchorfile>
      <anchor>addf724b1f7a8c5716f46f5fcd87133fe</anchor>
      <arglist>(EditTime t, float val)</arglist>
    </member>
    <member kind="variable">
      <type>EditTime</type>
      <name>time</name>
      <anchorfile>structtracktion_1_1engine_1_1CurvePoint.html</anchorfile>
      <anchor>ac6bb4980b697b0b5a8089ae94007b645</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>value</name>
      <anchorfile>structtracktion_1_1engine_1_1CurvePoint.html</anchorfile>
      <anchor>ac3a2b06aac732b2711a6c58dcedde7fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::CustomControlSurface</name>
    <filename>classtracktion_1_1engine_1_1CustomControlSurface.html</filename>
    <base>tracktion::engine::ControlSurface</base>
    <class kind="struct">tracktion::engine::CustomControlSurface::Mapping</class>
    <class kind="struct">tracktion::engine::CustomControlSurface::MappingSet</class>
    <member kind="enumeration">
      <type></type>
      <name>ActionID</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>playId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdad54dbecaa6bf935545a1f96bcb97a9d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>stopId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda0df93289647bfd70fb3c89b9b9de67f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>recordId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdab7f64af4154b90f68980ec7f2948da59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>homeId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda08d0413bcbcec6705a25550b4910b17a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>endId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda0dde6a1f213eb476bb21f0d273ced42c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rewindId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda3bafb3c41c34c66b553bd688898cf9c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fastForwardId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda2848b0820b484e0163efa84f8b66dfbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>markInId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda60414069eba13597fb26b5a7512ef2e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>markOutId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda9634e8c8e081956a6983902bb0032f70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>automationReadId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda65399b7aeca8eee1e6019b213ec5ca92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>automationRecordId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda4571789663941e8024966ff484415d55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>addMarkerId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda9ca3eb56487417569cadddc187781978</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nextMarkerId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda7d60178c4f5b7b7d641a2f51a2a6ed15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>previousMarkerId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdae7080773c12da2d0039bb349ca79f978</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nudgeLeftId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda036c416fe4d79de553cb359f8d114f67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nudgeRightId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda8248ef987253c153956093300bd7aa40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>abortId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda7d85ae0b184e4a2b21b60f47d5950916</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>abortRestartId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaf2fcd42da86088ccaecfb5cfc13f20de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>jogId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac6ec5d4c45effa8fecabad01d3f99587</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>jumpToMarkInId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdadb08c9744018815df85702aa1b8f3924</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>jumpToMarkOutId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaaffcbd33e351230da9dbc130b02ecd26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>timecodeId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda9925d6eafb0a10c39a48f9592eb956ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>marker1Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda5591062b4a398d0a42eefee1bc7e25cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>marker2Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdade240aa258f79fc8e8f7004b33020a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>marker3Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda391145600482c09e600e2309779e13ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>marker4Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda7c5e8f190cca55beb82420a88d32869f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>marker5Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda1ccb596e2bcd63e3d75f303d2788bd7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>marker6Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda48acd8209ac7ef1ea0c2f14e7b770d6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>marker7Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda6860bfecd8490d02fb6d974339780fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>marker8Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda1e58ad3f76fec309e543e31072f23448</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleBeatsSecondsModeId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda4ec3028856193c968277c606c41443e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleLoopId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda3de8d939306a12d7d4431dec8df4bfd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>togglePunchId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda4df280f2ea0944330fa716c7a1183476</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleClickId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdad8e1f5332ec42fd0f0ff7313b48172cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleSnapId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdab6c88cd45c833e7670d8d0628269cf7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleSlaveId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda199d1d13f0811bc1ae956cd47e721f34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleEtoEId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda148cfedcb2d8203c318e2932351f6f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleScrollId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda36f74680c29fb86153e66af61ac0b473</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleAllArmId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda7b59e540b6037f928626e36d10d925d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>masterVolumeId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac2902ef967e6f9b22dbd8e32b364e52e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>masterVolumeTextId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda8371998f29f6865ae5185f7deac63dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>masterPanId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda34705fce9009f9e3246b5a7305be31d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>quickParamId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdabf9fb55f26344ec0a262de6f73803317</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda357cf205f2b5cb7b2024954dea9ec102</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramNameTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda8bbb9eb6399ce974af45cc18dae959aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramTextTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda61c1c7be2783f285fabe80c0347c67a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clearAllSoloId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdab1db75ea965c5aec70657fce2c14b897</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nameTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaa04bfd7ae360345738e59770164ee89e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>numberTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda3e1ab357c97634ea0ad551a3316c8c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>volTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda3aa817479fc244779fc2fa1f0ef10d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>volTextTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda00af214d90dc38b6b266dc2ae6f076f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>panTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda07be203651565812afc76e2e29141deb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>panTextTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda9408b23c68945a40cedca93aa7c7f20a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>muteTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdae6992004f9d0633b21ae28cae0401162</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soloTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdae1b5e5b9421f4c6143edfc48a50d774f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>armTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda8485e791bbde57ea76b16533a5b30f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda7a03aa804e73772363c0037e3515aa7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>auxTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaab4cccd29ce77c009573dc4080ff0f14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>auxTextTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda47300f43c721504b91cefb1c76ea28b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip1TrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdab3d5f78f8832930b617945017c569e9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip2TrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaa3dbd2c8c71359eb5a90ff605a4a8a87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip3TrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda6017d5d745dd5a230cf8164abe55eef2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip4TrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdad9207cfc1817d58126345ddfa2d735d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip5TrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac21b80ad6110fdc3de34e0a6c201dee2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip6TrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda3fc143990070ea62cd29ea6414eb02ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip7TrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda5975d2665f128d407912127d5ef534fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip8TrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdada033831eb612566b796682acaf4a63e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>stopClipsTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda55d746956d882bd4544dfb25b64c0da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sceneId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda908affc9da9528ea9cb8eac891cc319e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clipBankUp1Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda539c0115727f22bf5e82140b2f0c6879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clipBankUp4Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaa019f1f4b60350f1d45916d758cd7535</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clipBankUp8Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdafc85e541737752a1d9fb7806c2d9aa83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clipBankDown1Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda0c72c17cffef315e24a0b19aa8caef35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clipBankDown4Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda2e4765014093362a8be3fc5faf76e15b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clipBankDown8Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda162a781ac1cf63b5b6f7d9f682ff7341</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>zoomInId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda1da62cde33fc0d1effad6a7c715895dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>zoomOutId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda27c4d51063d3f2c92472672e67fee419</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>scrollTracksUpId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda59f4063949813ed57d060ae29e7d7186</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>scrollTracksDownId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda8749f6224735f137b3d4b56b890f1bc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>scrollTracksLeftId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda0942687aed77192402a5458c06998cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>scrollTracksRightId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda1e461a255c557aaf508ad2a1061d00c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>zoomTracksInId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdab277c04252c0a17a8b1266aeb49088f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>zoomTracksOutId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda5c29e0aac8d2260b429318a544a90b30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleSelectionModeId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda25c98a3b3a75dc0395320bda0b884508</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectLeftId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdae0052d64cbacafaaf55350194e13d990</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectRightId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdad5bc567bb2792170187e6016dd1496c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectUpId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda0706d30e7d875963bc200c0748ab078c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectDownId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaa141faba8848fd876b0b2f7a0f0e9b68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectClipInTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaf7d5a2a92f6096e38c37ed899855d6e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectPluginInTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda7ef999ea872e2ce6b3fdea00b81194b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectedPluginNameId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac9920113b8e1d9d4f9f44ff66a03b638</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeftId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda89a6a1712a185c658f406b474b66175d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeft1Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda6793219a071fa041e94050892247432d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeft4Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdadcb4d120aa8da2136183f987f09574b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeft8Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac03fb37b4e3409c187b2c6c28aecb3c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeft16Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdadfbc7926d2b9d5ffac643bb2118e4a5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRightId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda931d10a5e64d72166c3347022ee84b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRight1Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda99420f1aea214341460ad9cca72f3e5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRight4Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda521e81210806a3ffc47065499685df08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRight8Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac41428990d8de93cdb69cb2c0980c196</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRight16Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda7c041ea7f44d594f074bb84c502f0c45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeftId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda348e0cf392439cfc6d98385e03561b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft1Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaa5236362876c7a9e8823533e691ac6cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft4Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaa58b0994309c1e7808fca5d8f6a03508</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft8Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda35638662faac016033465a9539a47a92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft16Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdae44f2911d0c44f8ad2363b57d232ec3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft24Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdab476f68b4f0e59459ba5ed0c093a8e8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRightId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaf1cd9fc079f74a5b07dadce679ef903c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight1Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda238287aba31cac07946a7d0b348faf9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight4Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda8ad88697c3006711d2867da6e8caecf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight8Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda1406a9994d2aa2a877f647ed17a10fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight16Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda5f2d86bc06d443d0efbbb4aed80953ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight24Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdabfd1525e8444c2569c4b752815ce1594</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction1Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda4a4b5bb5cc1e900e9b1ff449e4a0e785</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction2Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda6ab414d6b151b919d835b671da733713</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction3Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaa63f8538c7ef354583e04426159114af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction4Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaa726b0e85a64397f69de3af1c8d9be46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction5Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda8213b362bb281209d7f59aae84240d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction6Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda7e9be0d3d7f010ddaca68ed82b495344</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction7Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdab74743dc66d7fa02d39e850869afd5af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction8Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaf367e01cbe170c37c6ac0348f5752d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction9Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac218577f0e234b5f0555807b9a4fa59a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction10Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac7f2a9ed3f26e11dfd85d939353b5f79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction11Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac910dfec5f9a8fdb671a91064f2df92b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction12Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac0ad8f995a7b6bde8361a07744cc5a0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction13Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda6143741a132f9a6fa50fbf51fa2decbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction14Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaef69e01bc525a1df89b12c59ce0003ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction15Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdafbb99a9e6b8bc5b741dde1e1275eae79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction16Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdad02827f1d256639fe8945ed78e02d777</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction17Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda224adf23c80601ad422d8f13aaa507d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction18Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda801ebd5fe7e0dac9c4145f95057af781</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction19Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda3a86a5da7b37a4deb0a65ca3a6e7e502</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction20Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda1ec62b7c429c6cb9078653b3c0724570</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>emptyTextId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdada97421be6653f313088ba4749fda352</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdae152a37f48367461bc7ca0c260d07f72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>playId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdad54dbecaa6bf935545a1f96bcb97a9d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>stopId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda0df93289647bfd70fb3c89b9b9de67f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>recordId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdab7f64af4154b90f68980ec7f2948da59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>homeId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda08d0413bcbcec6705a25550b4910b17a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>endId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda0dde6a1f213eb476bb21f0d273ced42c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rewindId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda3bafb3c41c34c66b553bd688898cf9c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fastForwardId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda2848b0820b484e0163efa84f8b66dfbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>markInId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda60414069eba13597fb26b5a7512ef2e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>markOutId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda9634e8c8e081956a6983902bb0032f70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>automationReadId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda65399b7aeca8eee1e6019b213ec5ca92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>automationRecordId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda4571789663941e8024966ff484415d55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>addMarkerId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda9ca3eb56487417569cadddc187781978</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nextMarkerId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda7d60178c4f5b7b7d641a2f51a2a6ed15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>previousMarkerId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdae7080773c12da2d0039bb349ca79f978</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nudgeLeftId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda036c416fe4d79de553cb359f8d114f67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nudgeRightId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda8248ef987253c153956093300bd7aa40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>abortId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda7d85ae0b184e4a2b21b60f47d5950916</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>abortRestartId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaf2fcd42da86088ccaecfb5cfc13f20de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>jogId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac6ec5d4c45effa8fecabad01d3f99587</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>jumpToMarkInId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdadb08c9744018815df85702aa1b8f3924</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>jumpToMarkOutId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaaffcbd33e351230da9dbc130b02ecd26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>timecodeId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda9925d6eafb0a10c39a48f9592eb956ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>marker1Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda5591062b4a398d0a42eefee1bc7e25cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>marker2Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdade240aa258f79fc8e8f7004b33020a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>marker3Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda391145600482c09e600e2309779e13ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>marker4Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda7c5e8f190cca55beb82420a88d32869f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>marker5Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda1ccb596e2bcd63e3d75f303d2788bd7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>marker6Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda48acd8209ac7ef1ea0c2f14e7b770d6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>marker7Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda6860bfecd8490d02fb6d974339780fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>marker8Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda1e58ad3f76fec309e543e31072f23448</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleBeatsSecondsModeId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda4ec3028856193c968277c606c41443e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleLoopId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda3de8d939306a12d7d4431dec8df4bfd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>togglePunchId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda4df280f2ea0944330fa716c7a1183476</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleClickId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdad8e1f5332ec42fd0f0ff7313b48172cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleSnapId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdab6c88cd45c833e7670d8d0628269cf7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleSlaveId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda199d1d13f0811bc1ae956cd47e721f34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleEtoEId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda148cfedcb2d8203c318e2932351f6f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleScrollId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda36f74680c29fb86153e66af61ac0b473</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleAllArmId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda7b59e540b6037f928626e36d10d925d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>masterVolumeId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac2902ef967e6f9b22dbd8e32b364e52e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>masterVolumeTextId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda8371998f29f6865ae5185f7deac63dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>masterPanId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda34705fce9009f9e3246b5a7305be31d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>quickParamId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdabf9fb55f26344ec0a262de6f73803317</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda357cf205f2b5cb7b2024954dea9ec102</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramNameTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda8bbb9eb6399ce974af45cc18dae959aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramTextTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda61c1c7be2783f285fabe80c0347c67a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clearAllSoloId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdab1db75ea965c5aec70657fce2c14b897</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nameTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaa04bfd7ae360345738e59770164ee89e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>numberTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda3e1ab357c97634ea0ad551a3316c8c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>volTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda3aa817479fc244779fc2fa1f0ef10d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>volTextTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda00af214d90dc38b6b266dc2ae6f076f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>panTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda07be203651565812afc76e2e29141deb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>panTextTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda9408b23c68945a40cedca93aa7c7f20a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>muteTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdae6992004f9d0633b21ae28cae0401162</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soloTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdae1b5e5b9421f4c6143edfc48a50d774f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>armTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda8485e791bbde57ea76b16533a5b30f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda7a03aa804e73772363c0037e3515aa7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>auxTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaab4cccd29ce77c009573dc4080ff0f14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>auxTextTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda47300f43c721504b91cefb1c76ea28b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip1TrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdab3d5f78f8832930b617945017c569e9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip2TrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaa3dbd2c8c71359eb5a90ff605a4a8a87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip3TrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda6017d5d745dd5a230cf8164abe55eef2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip4TrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdad9207cfc1817d58126345ddfa2d735d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip5TrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac21b80ad6110fdc3de34e0a6c201dee2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip6TrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda3fc143990070ea62cd29ea6414eb02ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip7TrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda5975d2665f128d407912127d5ef534fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clip8TrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdada033831eb612566b796682acaf4a63e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>stopClipsTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda55d746956d882bd4544dfb25b64c0da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sceneId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda908affc9da9528ea9cb8eac891cc319e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clipBankUp1Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda539c0115727f22bf5e82140b2f0c6879</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clipBankUp4Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaa019f1f4b60350f1d45916d758cd7535</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clipBankUp8Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdafc85e541737752a1d9fb7806c2d9aa83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clipBankDown1Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda0c72c17cffef315e24a0b19aa8caef35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clipBankDown4Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda2e4765014093362a8be3fc5faf76e15b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>clipBankDown8Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda162a781ac1cf63b5b6f7d9f682ff7341</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>zoomInId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda1da62cde33fc0d1effad6a7c715895dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>zoomOutId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda27c4d51063d3f2c92472672e67fee419</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>scrollTracksUpId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda59f4063949813ed57d060ae29e7d7186</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>scrollTracksDownId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda8749f6224735f137b3d4b56b890f1bc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>scrollTracksLeftId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda0942687aed77192402a5458c06998cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>scrollTracksRightId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda1e461a255c557aaf508ad2a1061d00c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>zoomTracksInId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdab277c04252c0a17a8b1266aeb49088f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>zoomTracksOutId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda5c29e0aac8d2260b429318a544a90b30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>toggleSelectionModeId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda25c98a3b3a75dc0395320bda0b884508</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectLeftId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdae0052d64cbacafaaf55350194e13d990</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectRightId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdad5bc567bb2792170187e6016dd1496c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectUpId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda0706d30e7d875963bc200c0748ab078c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectDownId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaa141faba8848fd876b0b2f7a0f0e9b68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectClipInTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaf7d5a2a92f6096e38c37ed899855d6e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectPluginInTrackId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda7ef999ea872e2ce6b3fdea00b81194b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>selectedPluginNameId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac9920113b8e1d9d4f9f44ff66a03b638</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeftId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda89a6a1712a185c658f406b474b66175d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeft1Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda6793219a071fa041e94050892247432d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeft4Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdadcb4d120aa8da2136183f987f09574b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeft8Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac03fb37b4e3409c187b2c6c28aecb3c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankLeft16Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdadfbc7926d2b9d5ffac643bb2118e4a5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRightId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda931d10a5e64d72166c3347022ee84b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRight1Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda99420f1aea214341460ad9cca72f3e5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRight4Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda521e81210806a3ffc47065499685df08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRight8Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac41428990d8de93cdb69cb2c0980c196</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>faderBankRight16Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda7c041ea7f44d594f074bb84c502f0c45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeftId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda348e0cf392439cfc6d98385e03561b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft1Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaa5236362876c7a9e8823533e691ac6cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft4Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaa58b0994309c1e7808fca5d8f6a03508</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft8Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda35638662faac016033465a9539a47a92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft16Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdae44f2911d0c44f8ad2363b57d232ec3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankLeft24Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdab476f68b4f0e59459ba5ed0c093a8e8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRightId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaf1cd9fc079f74a5b07dadce679ef903c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight1Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda238287aba31cac07946a7d0b348faf9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight4Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda8ad88697c3006711d2867da6e8caecf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight8Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda1406a9994d2aa2a877f647ed17a10fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight16Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda5f2d86bc06d443d0efbbb4aed80953ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>paramBankRight24Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdabfd1525e8444c2569c4b752815ce1594</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction1Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda4a4b5bb5cc1e900e9b1ff449e4a0e785</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction2Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda6ab414d6b151b919d835b671da733713</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction3Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaa63f8538c7ef354583e04426159114af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction4Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaa726b0e85a64397f69de3af1c8d9be46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction5Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda8213b362bb281209d7f59aae84240d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction6Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda7e9be0d3d7f010ddaca68ed82b495344</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction7Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdab74743dc66d7fa02d39e850869afd5af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction8Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaf367e01cbe170c37c6ac0348f5752d87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction9Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac218577f0e234b5f0555807b9a4fa59a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction10Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac7f2a9ed3f26e11dfd85d939353b5f79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction11Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac910dfec5f9a8fdb671a91064f2df92b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction12Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdac0ad8f995a7b6bde8361a07744cc5a0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction13Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda6143741a132f9a6fa50fbf51fa2decbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction14Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdaef69e01bc525a1df89b12c59ce0003ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction15Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdafbb99a9e6b8bc5b741dde1e1275eae79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction16Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdad02827f1d256639fe8945ed78e02d777</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction17Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda224adf23c80601ad422d8f13aaa507d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction18Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda801ebd5fe7e0dac9c4145f95057af781</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction19Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda3a86a5da7b37a4deb0a65ca3a6e7e502</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>userAction20Id</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cda1ec62b7c429c6cb9078653b3c0724570</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>emptyTextId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdada97421be6653f313088ba4749fda352</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616409a4913a2ad7dd074e25b022a5cdae152a37f48367461bc7ca0c260d07f72</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CustomControlSurface</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a83ab22bca44405aa00d49cf8b3dd9ffe</anchor>
      <arglist>(ExternalControllerManager &amp;, const juce::String &amp;name, ExternalControllerManager::Protocol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CustomControlSurface</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a5203559e15146358f1c0c29b82e93afa</anchor>
      <arglist>(ExternalControllerManager &amp;, const juce::XmlElement &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CustomControlSurface</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab07b16e8b9e406c40fce24f1f8fcec2c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a89f7db143e226cf39a42933a89f4a1e3</anchor>
      <arglist>(bool connect) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutDownDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a3d0b5f482255636a9751fb40f02c8d9e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateOSCSettings</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ad836c5d7ede1bc152a42ea9b92159e48</anchor>
      <arglist>(int oscInputPort, int oscOutputPort, juce::String oscOutputAddr) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMiscFeatures</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aa06a764b438f98415aa3728853b19a18</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a89ed2e8a7f8789b9a72f50dbb20ebb6e</anchor>
      <arglist>(int, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wantsMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a392de70f93839487cac134c70358649a</anchor>
      <arglist>(int, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eatsAllMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>af80c717d68b2b394ca6a351e50d832a7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canSetEatsAllMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a8e28d4bfe9fbb8e038d925e04c7e50f4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEatsAllMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a78f6b25f3cfc44173f3d994d4abefc14</anchor>
      <arglist>(bool eatAll) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveFader</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab743510ed5e327da11d656fc10991d49</anchor>
      <arglist>(int channelNum, float newSliderPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveMasterLevelFader</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ae4ebd9794102ba15ba9e5af3fe49a50f</anchor>
      <arglist>(float newSliderPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveMasterPanPot</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a4a24dd948d6ac0609646aad0f8d5a706</anchor>
      <arglist>(float newPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePanPot</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a53eda81b9caec7a5a2d55a8be94b3dcd</anchor>
      <arglist>(int channelNum, float newPan) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveAux</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a8988beeda8368ef96a9e6017bcf54210</anchor>
      <arglist>(int channel, int auxNum, const char *bus, float newPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSoloAndMute</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a2b10bcadd6368908f6b3679d5e2dc22c</anchor>
      <arglist>(int channelNum, Track::MuteAndSoloLightState, bool isBright) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloCountChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ac087fb6b4fce03df4bed8147c259aba0</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a817a2747a7961b820d61cfc69033f9a0</anchor>
      <arglist>(bool isPlaying) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab11f62036ad7fe497a1f7ec52b860a20</anchor>
      <arglist>(bool isRecording) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationReadModeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aeb580a3c400a95ad20a235eb81405957</anchor>
      <arglist>(bool isReading) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationWriteModeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a29e3958ef70d291f3c96e62e2d941900</anchor>
      <arglist>(bool isWriting) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a707f60dde6956d4659551245ba68262a</anchor>
      <arglist>(int newStartChannelNumber, const juce::StringArray &amp;trackNames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>channelLevelChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a67c7e0e6d5607875babf2d363fd8e269</anchor>
      <arglist>(int channel, float l, float r) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackSelectionChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a42f4dbbcbc0dd5b121fd4386c6eb822e</anchor>
      <arglist>(int channel, bool isSelected) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackRecordEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ae317ecac3794ed8d20d30a9173f30825</anchor>
      <arglist>(int channel, bool isEnabled) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>masterLevelsChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a6e804491ac7e633b81d4f2b2749bf789</anchor>
      <arglist>(float leftLevel, float rightLevel) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timecodeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aaebf3886ef7373c4def603aad47aeff4</anchor>
      <arglist>(int barsOrHours, int beatsOrMinutes, int ticksOrSeconds, int millisecs, bool isBarsBeats, bool isFrames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clickOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a03c127952a170281f83c8e210f1556f4</anchor>
      <arglist>(bool isClickOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ac75a851e030a5b0a9d3a9682a60243f3</anchor>
      <arglist>(bool isSnapOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a9400ab8a14a90cc28fc03e5627bfae5c</anchor>
      <arglist>(bool isLoopOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>slaveOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a6aa4d82cac024e70b521b824ee8772f2</anchor>
      <arglist>(bool isSlaving) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>punchOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a2b4210d9f83f3cfb976e2b6e2e8a91a6</anchor>
      <arglist>(bool isPunching) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a47db44a9093b06c006e3861d550bd039</anchor>
      <arglist>(bool isPunching) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameterChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a84404d7a9f53aa4451d9846f6a78af4e</anchor>
      <arglist>(int parameterNumber, const ParameterSetting &amp;newValue) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ae454036a6e62d6569f879788dd96ea94</anchor>
      <arglist>(int parameterNumber) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canChangeSelectedPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ac543d1c80b05a15d5cda6f63df7f9d98</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentSelectionChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a4436107f754c833e73004f20d6730d64</anchor>
      <arglist>(juce::String) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteController</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a487ac4fcd99cbd2fadbe4be974018c90</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markerChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ac71d5ed553f428e8648c271be47bcd0a</anchor>
      <arglist>(int parameterNumber, const MarkerSetting &amp;newValue) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a0e36d6735ef595b75d31d5271e21ede9</anchor>
      <arglist>(int parameterNumber) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeMapping</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aec914e510bab6efaa37213b54548c0f0</anchor>
      <arglist>(ActionID, int controllerID, int note, int channel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showMappingsEditor</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ae97e12ff89ee313e4ba6275f3e75d4bb</anchor>
      <arglist>(juce::DialogWindow::LaunchOptions &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumMappings</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a9116ce77a702823bd4ad857c21d1e482</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listenToRow</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a0c8201ab92bc67800eba4446b774a08f</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRowBeingListenedTo</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a56583b8e7c6f1b9835dc18100de97b05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>allowsManualEditing</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>af627cf62f1e3687fadf2a1158e53eb60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showMappingsListForRow</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a34c60eba5764b665822f7a30bdabc84e</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLearntParam</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aa422efa7341bc0ba1013587926486e64</anchor>
      <arglist>(bool keepListening)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeMapping</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a1467158000b85bc78167b89e72235a23</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>Mapping *</type>
      <name>getMappingForRow</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a5d459803edcaca984bfe303061393e1d</anchor>
      <arglist>(int) const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; juce::String, juce::String &gt;</type>
      <name>getTextForRow</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a287b510e01453b505ee98b7d3b53abd7</anchor>
      <arglist>(int) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>play</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a21c7e8133c296c4b3193242240a1d799</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stop</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aaf60f3a56a8e6279872099ae734d515f</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>record</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab5dbe9363fbb03f016225a9ce0f1db59</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>home</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab0d9f329797a4ed2d7957d1f7a5bbaa7</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a6d41f05298e97378223079138104e8ae</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>rewind</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ad7fbc419d3f53ddfe2b5e09d36858a6d</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fastForward</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>acfc632b6657698f2f81c8480c99aba91</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>markIn</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aba57be981f85576698d945595eda62c1</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>markOut</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>adcf23e4091c52a1a6bbaa35d78b5a141</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>automationReading</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>abdca3862216530e327c87580f51a44fa</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>automationWriting</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a5e50e454f56e3d0476f16941d1f50176</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a32888fa6bc2ca6cd82da5d4c83d103de</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prevMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a9789778b6e75d7e0e83d21eda79f19d9</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>nextMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aa883a102d0e2acea603e6fa6850b7f85</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>marker1</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ad3306e6cef056046b69b386f115fdcde</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>marker2</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a8ee339c01ff8150bc119cfa020bfccd0</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>marker3</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a08eca8782fb53473b5490ed7be998b83</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>marker4</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a8b8350b7df4a89bd9d40fa173a12f296</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>marker5</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a48686c3d7c336866e0c200667a38b418</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>marker6</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>adb9fcff780912fa2537c8716c4377433</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>marker7</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a9dde872940fbfc29ab4d3ae355e0e6e7</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>marker8</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a1ce27ba3376bf271769c8b48054dc691</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>nudgeLeft</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a42d729134bbf8e419010a37408feb792</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>nudgeRight</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a95a20c3ab201cbe9f503761871c2e006</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>abort</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a39fce77e4136b731b9c44109c0d4795b</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>abortRestart</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a99474db8ff7b692cf723319a2a14dccd</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>jog</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a542f1c3bc8e60409972f58266199df23</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>jumpToMarkIn</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a45c0b0821d7915cab873ae35b4819098</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>jumpToMarkOut</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a6b12133c5c73bfc741c376b5860f2d3f</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearAllSolo</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aab118b066efb6734267d1fc940eb4439</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>toggleBeatsSecondsMode</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a14f5bc7d2f32a5c6cb0b93005118afd5</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>toggleLoop</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a0b989b5a8c2994f721aa36b5fd271b69</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>togglePunch</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>af2c5a10629655cb1749b46541f8253fa</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>toggleClick</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aecefc992a6203af812b05fae57d863e2</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>toggleSnap</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a5bf72c98cea7851380ff4e34b0831108</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>toggleSlave</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a297de6b08b50aec94b0ad6a48917cc37</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>toggleEtoE</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a8607777eb480075bfa160db10fefac27</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>toggleScroll</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab955117e135c6b03fa683c6d14eb74a4</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>toggleAllArm</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ae4f836f3bb0e9db429b0fa532c9da655</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>masterVolume</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a38523f55e831b73f3300b1345c5cdfaa</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>masterPan</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a94d9e00661e01ee8a5f33c600fa63f3f</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>quickParam</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab59518438a21be1921e10be4bd3e9a8f</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paramTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>af7afc0f2009718f36b5fa4e4e7529996</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>volTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aeb41d6f97e7c424f8e49a20c43db76f2</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>panTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a92c9cd76fa13e2eb45cb8f3ff3be8cd3</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>muteTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a316c811850e098c3ec5c2d3a20603719</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>soloTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a4505361d5626cf402cec834b1d6ff4f1</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>armTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a7adc3cf594b3a9391e936257af2080d0</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>acfd6f6dfa580ec2cf3114f4e5ade4afa</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>auxTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a23a2549e919e50cba5ef4128489a64a4</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>launchClip1</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a8dc5805ca2e2a599e246f185ec40962c</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>launchClip2</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a2a474ac6aba1d5009573f4b43dac27af</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>launchClip3</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aaef83cdaf005feea1ee81c9c553f2075</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>launchClip4</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aa3020b0d8e147401f9165f4e372bb980</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>launchClip5</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aae8ce189e2a424608935f4c701d5f8bf</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>launchClip6</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>addb1c3a64d229924998d2cfb652c50ce</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>launchClip7</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a60f1c8bcb4c8830faada297ef20672af</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>launchClip8</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ac301116ae0b83731749db335e0748d05</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stopClips</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a10a352de8e66fde50b4c3769c18ae9f6</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>launchScene</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a6311fd6fb38d4f4b9bc3852b90c4ec7c</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clipBankUp1</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a5dc9c06ead16460de83a648ca48d6998</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clipBankUp4</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>acad17ecb6c86d68447b7018c8fb478e5</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clipBankUp8</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>accf2af8721a27dcfc4814190a161bd78</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clipBankDown1</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a34d4a3406bb4e76335623e96ab7bb009</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clipBankDown4</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a7dc89b2f6edee39e79c9f40c58a949c7</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clipBankDown8</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ade04a24e29acf1260c7e0c1767540394</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>zoomIn</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a64ffbf622d66be5a472db951313c4a58</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>zoomOut</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a7c8e6679925e6b21d4267a4b166e5c6e</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scrollTracksUp</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab4fe8f48ebd431554018a79f22ca2611</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scrollTracksDown</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a06ce41ca702a3296306d0ff6610dbea9</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scrollTracksLeft</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a3dc9633574f65cb54885a10557ad98fe</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scrollTracksRight</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a2179ee75f0f7f4f49b36e5d87f2e95e5</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>zoomTracksIn</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab80654bf211aec53b4ffc8a5a7fde1cc</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>zoomTracksOut</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a9b94d00caf5ba83feb4171489d323d48</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>toggleSelectionMode</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ae19523a96aab6250d04c30da1bbc057e</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectLeft</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a71af43b1ba1cfc1cf4f9c6a1c49fc6c0</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectRight</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a26b6d91393e7514611233470da0c4b8d</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectUp</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a766657d49f2c0a90b2214e6fef882cd9</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectDown</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a04dbcce54b4d831b2c94263c91702f44</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectClipInTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a38bce914e4f9155480686a2134f84f4a</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectFilterInTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aac944fca635d6cd05f7f1ce26a344642</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>faderBankLeft</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a3dfebe266baa7b58053cd6dc482eda4d</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>faderBankLeft1</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a35a180db90ecae86e5e7db687257e009</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>faderBankLeft4</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a27272eb4ee4e50e9d811f730e7a24969</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>faderBankLeft8</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a8e33f55006c5922ca92d36b4c8503ac6</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>faderBankLeft16</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ad9683cffc1208079b7db05fa11e38d5d</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>faderBankRight</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aeb12904704ca70cb102d67c3e8ab2235</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>faderBankRight1</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aa82c75361be51b1c9b6daa13b8a370b2</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>faderBankRight4</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a2aa73ac00856e97babd62d33a3b63201</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>faderBankRight8</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ad13c2cfb6b0b8e6cc4e2e224ccfb3cfe</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>faderBankRight16</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>af184a7f8213bbf073c3f34fcfcd19435</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paramBankLeft</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aae8e995e95b8d10de4c084043025ce38</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paramBankLeft1</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a60aba678fc40561fcb2d16e379219686</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paramBankLeft4</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a8a01d20a36ff39077daf6ecd2ad3bdd8</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paramBankLeft8</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a5fa7481a5afd8fc0ac19c9e19bf47407</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paramBankLeft16</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a8a3ae053bdf8b7beeb19340ee1a75ae4</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paramBankLeft24</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a7e1c64c86435ef336a4db14c9e223eb3</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paramBankRight</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a2b98467d0d41fc7d1f2b74e8161273bd</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paramBankRight1</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a65e72329e3da0d6a4979a613ecf31a96</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paramBankRight4</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a712f7f09abafcc201cf2ef19b135c3d3</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paramBankRight8</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a674340da2b64805167bc74fda8e28340</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paramBankRight16</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>adc044ed9d733563b3a39d3e906fd0778</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>paramBankRight24</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab18c8e7f15b7f9349a0cd57192703bcd</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction1</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a76735d1fd133a0dbbb87ecc9f73d5e99</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction2</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a29e4f67ad36eab36862734da3f517a18</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction3</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>afea43529baf5f2d1de4742e11e6eee52</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction4</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab7a2c3164220374ca9408de90f5947a6</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction5</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>acec82ac1b4651070314975dbaa07e161</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction6</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a5aa389f15b254921a2e4c48aaa01ea8b</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction7</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a92484540e404d3172cc90aea52e411cb</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction8</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aba0a2bedf3a55552def9cd9f55001873</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction9</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a01b14dc5449aeae61c437ee06a32af93</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction10</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a3029eba442f0b7e88c6fe3d0f4366cca</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction11</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a36d6c8cc0f421c3c80ce4074f256cb0e</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction12</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a616bef40cffb3f67f9c7359a984b8af6</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction13</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ad5059a06b12ce0d40df400d4945a3d06</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction14</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab4c6d1a1a21ed0215a5ac9815a4edd17</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction15</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a62f97ac0135bb3c2e186b6a3777adc9f</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction16</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a7a5a73aafbc9c746dce7876b7dc8a608</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction17</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a2cacd2e052f0632a85fbef5ad934aff4</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction18</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a0964367d996c149d1e750d1b02b6003f</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction19</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aac21939c7768b23caa6c22a772a7c192</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>userFunction20</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a430086fc770619867fe4ba45531a6dad</anchor>
      <arglist>(float val, int param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>null</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a32a21022f1967be16c06fd2d060c35a1</anchor>
      <arglist>(float, int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadFunctions</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>aff1e0e76b366a4ed9d13c8ca4c0980f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::XmlElement *</type>
      <name>createXml</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a166b2e9e640437b6e5c80c75c6d27f3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>importSettings</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a4e388b5e91a19f9af72db93ce4b7c277</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>importSettings</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a231a84e47d672f7b0b329e013e77f374</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>exportSettings</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a352b73cc900fecadba787f05271c52d7</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPacketsIn</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ac62128e8de2183aa3bc55f76c33b0f5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPacketsOut</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a136d43b2a3215f5f7f190cef36fa8281</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getNameForActionID</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a21070f863d3c7805b27bc0acb6e64190</anchor>
      <arglist>(ExternalControllerManager &amp;, ActionID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; ControlSurface * &gt;</type>
      <name>getCustomSurfaces</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a7b6b58c0738b7cb229f2d9ddf185dffd</anchor>
      <arglist>(ExternalControllerManager &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; MappingSet &gt;</type>
      <name>getMappingSetsForID</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>a74359cf73f67584f83dc559d65012cb5</anchor>
      <arglist>(ExternalControllerManager &amp;, ActionID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getControllerNumberFromId</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab02a2d2c591b43d9030fdf4b0b01995f</anchor>
      <arglist>(int) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>saveAllSettings</name>
      <anchorfile>classtracktion_1_1engine_1_1CustomControlSurface.html</anchorfile>
      <anchor>ab3a05dd5743c303eca68c84d586b169c</anchor>
      <arglist>(Engine &amp;engine)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::PluginScanHelpers::CustomScanner</name>
    <filename>structtracktion_1_1engine_1_1PluginScanHelpers_1_1CustomScanner.html</filename>
    <member kind="function">
      <type></type>
      <name>CustomScanner</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1CustomScanner.html</anchorfile>
      <anchor>aeaf36cbc8ee7eedeec2ce9f18698a436</anchor>
      <arglist>(Engine &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findPluginTypesFor</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1CustomScanner.html</anchorfile>
      <anchor>a9df679a03c15f58a49cdf61356fe8ec1</anchor>
      <arglist>(juce::AudioPluginFormat &amp;format, juce::OwnedArray&lt; juce::PluginDescription &gt; &amp;result, const juce::String &amp;fileOrIdentifier) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scanFinished</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1CustomScanner.html</anchorfile>
      <anchor>a81c939a0408a40ff665577261716efd3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancelScan</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1CustomScanner.html</anchorfile>
      <anchor>aa2bbaee6eea8338051bb1d58e7ca81f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldAbortScan</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1CustomScanner.html</anchorfile>
      <anchor>a3051577d175956526c7a3e4996d31b6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>shouldUseSeparateProcessToScan</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1CustomScanner.html</anchorfile>
      <anchor>a9b2716776bac28156c8c5a312b9212ec</anchor>
      <arglist>(juce::AudioPluginFormat &amp;format, const juce::String fileOrIdentifier)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>requiresUnblockedMessageThread</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1CustomScanner.html</anchorfile>
      <anchor>a5b09671164205c81e9914b14dd488837</anchor>
      <arglist>(juce::AudioPluginFormat &amp;format, const juce::String fileOrIdentifier)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1CustomScanner.html</anchorfile>
      <anchor>a7d74ad6b5eb9f96d98908562e8f231ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; PluginScanMasterProcess &gt;</type>
      <name>masterProcess</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1CustomScanner.html</anchorfile>
      <anchor>a6fc29ae325a01c857284b4310ed2a88d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; bool &gt;</type>
      <name>abortScan</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1CustomScanner.html</anchorfile>
      <anchor>a920d4487151a8df340d6fdee83a4894d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::DbTimePair</name>
    <filename>structtracktion_1_1engine_1_1DbTimePair.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>time</name>
      <anchorfile>structtracktion_1_1engine_1_1DbTimePair.html</anchorfile>
      <anchor>abe3f063e05a3b71233922f20f904e432</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>dB</name>
      <anchorfile>structtracktion_1_1engine_1_1DbTimePair.html</anchorfile>
      <anchor>a3c41d657f40c78dee8c67add834ccdad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::DeadMansPedalMessage</name>
    <filename>structtracktion_1_1engine_1_1DeadMansPedalMessage.html</filename>
    <member kind="function">
      <type></type>
      <name>DeadMansPedalMessage</name>
      <anchorfile>structtracktion_1_1engine_1_1DeadMansPedalMessage.html</anchorfile>
      <anchor>ae20780b7d5f0ceca23427d022c37bc55</anchor>
      <arglist>(PropertyStorage &amp;, const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DeadMansPedalMessage</name>
      <anchorfile>structtracktion_1_1engine_1_1DeadMansPedalMessage.html</anchorfile>
      <anchor>a985f64ae5b9adc32df58fca7fff65ede</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getAndClearLastMessage</name>
      <anchorfile>structtracktion_1_1engine_1_1DeadMansPedalMessage.html</anchorfile>
      <anchor>acb84a6d415f5c674bf7b5b0c8b0f27b6</anchor>
      <arglist>(PropertyStorage &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::DelayBufferBase</name>
    <filename>structtracktion_1_1engine_1_1DelayBufferBase.html</filename>
    <member kind="function">
      <type></type>
      <name>DelayBufferBase</name>
      <anchorfile>structtracktion_1_1engine_1_1DelayBufferBase.html</anchorfile>
      <anchor>aa7806c22d3e50be328078f98ebf8c67f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureMaxBufferSize</name>
      <anchorfile>structtracktion_1_1engine_1_1DelayBufferBase.html</anchorfile>
      <anchor>ad102bf7454246f50161e58d7a735467f</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearBuffer</name>
      <anchorfile>structtracktion_1_1engine_1_1DelayBufferBase.html</anchorfile>
      <anchor>adaa433b81534b861d9f7c47a3a7f3b46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseBuffer</name>
      <anchorfile>structtracktion_1_1engine_1_1DelayBufferBase.html</anchorfile>
      <anchor>a4cfd4399eb315be20ac5a34b9bd23769</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bufferPos</name>
      <anchorfile>structtracktion_1_1engine_1_1DelayBufferBase.html</anchorfile>
      <anchor>ad69ea2451a9a08a4e66fe94727de04dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bufferSamples</name>
      <anchorfile>structtracktion_1_1engine_1_1DelayBufferBase.html</anchorfile>
      <anchor>a452e70609c19d3ef121dae057ce1b6f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::MemoryBlock</type>
      <name>buffers</name>
      <anchorfile>structtracktion_1_1engine_1_1DelayBufferBase.html</anchorfile>
      <anchor>a2a76a334d47a56f41078d9c78e909c36</anchor>
      <arglist>[2]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::DelayPlugin</name>
    <filename>classtracktion_1_1engine_1_1DelayPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>DelayPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a2eef4f83229e1bcf04bba793eb8e6003</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DelayPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a7d178f1d4a22d214fbb95fd7a73e5835</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a0ca9b8a3aa389ba98d52f66f8f47e60a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>ae82f65e5f24890d79d37ac5d45437cca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a28589e20850b1f31ec36dc3f4545cd1d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>ab8f7a3a8995e60689f946f4f523fd44f</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a52f5226d0f91ad03722464afb5f59074</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>ae014269b72a13ce6e66fdc05309d4b06</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>af66562c12416511afb8e138cf33f370a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a0bd6216b115f10e4a8f69c52e98c0125</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a93fd81d7a19b9320f124cc514af65fd5</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>ac4513dad864d2168e2cf742c23751740</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>getMinDelayFeedbackDb</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>acb2b66083fb8e65238ca757e744b5ae0</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>feedbackValue</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>afb800bdd5311c73ec209d16b88489018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>mixValue</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a4e8b42d882b40a69eac54d97e6be1e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>lengthMs</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>af0968e3c21a625e8237ef29d7fd96978</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>feedbackDb</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a3da2e51ff294b517137873fce66e382b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>mixProportion</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a19deaf1c6c0f1c302d717d2684c5f2b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1DelayPlugin.html</anchorfile>
      <anchor>a9a9af2a5a5771ed4cb5bc3897dde5b86</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::SelectableClass::DeleteSelectedParams</name>
    <filename>structtracktion_1_1engine_1_1SelectableClass_1_1DeleteSelectedParams.html</filename>
    <member kind="variable">
      <type>SelectionManager *</type>
      <name>selectionManager</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableClass_1_1DeleteSelectedParams.html</anchorfile>
      <anchor>adb29deae0f0de3197de75164f46744b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SelectableList</type>
      <name>items</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableClass_1_1DeleteSelectedParams.html</anchorfile>
      <anchor>a239d52bd2ca86fccc99e6ee98abd9aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>partOfCutOperation</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableClass_1_1DeleteSelectedParams.html</anchorfile>
      <anchor>aa286ff47f14f3e427739f951e41ca102</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::InputDeviceInstance::Destination</name>
    <filename>structtracktion_1_1engine_1_1InputDeviceInstance_1_1Destination.html</filename>
    <base>tracktion::engine::Selectable</base>
    <member kind="function">
      <type></type>
      <name>~Destination</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1Destination.html</anchorfile>
      <anchor>aa9c6e96033519e53b3c58902ee98fb5a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Destination</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1Destination.html</anchorfile>
      <anchor>ae20bb27286ca10bbd059eb863e85b6fe</anchor>
      <arglist>(InputDeviceInstance &amp;i, juce::ValueTree v)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1Destination.html</anchorfile>
      <anchor>ae31f6b144982e98e4e577e948d0ea751</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>InputDeviceInstance &amp;</type>
      <name>input</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1Destination.html</anchorfile>
      <anchor>ae9bb3d51711bbe71e7a74bb4a1c0638c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1Destination.html</anchorfile>
      <anchor>a2882a22075628d30c5e470e3eba75857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>targetID</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1Destination.html</anchorfile>
      <anchor>a8da841d42133416922a3d16afba72252</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>targetIndex</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1Destination.html</anchorfile>
      <anchor>aa81ab03b8e78699fe8cde8ec9d3c3e6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>recordEnabled</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1Destination.html</anchorfile>
      <anchor>a63397ee48b760459423154787996db7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::InputDeviceInstance::DestinationList</name>
    <filename>structtracktion_1_1engine_1_1InputDeviceInstance_1_1DestinationList.html</filename>
    <base>ValueTreeObjectList&lt; Destination &gt;</base>
    <member kind="function">
      <type></type>
      <name>DestinationList</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1DestinationList.html</anchorfile>
      <anchor>a655814cbcd077342c33d514b66d5a314</anchor>
      <arglist>(InputDeviceInstance &amp;i, const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DestinationList</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1DestinationList.html</anchorfile>
      <anchor>a63375f56ca9bd8033c1512b31d0effac</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSuitableType</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1DestinationList.html</anchorfile>
      <anchor>a04ac9ec4e2fe019b5664703b4fa64de8</anchor>
      <arglist>(const juce::ValueTree &amp;v) const override</arglist>
    </member>
    <member kind="function">
      <type>Destination *</type>
      <name>createNewObject</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1DestinationList.html</anchorfile>
      <anchor>ae3f3a1192c2db6f7b4a202bab1e8805c</anchor>
      <arglist>(const juce::ValueTree &amp;v) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteObject</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1DestinationList.html</anchorfile>
      <anchor>a212ae0f66b3c61bafe827a6e5ef283a0</anchor>
      <arglist>(Destination *c) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newObjectAdded</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1DestinationList.html</anchorfile>
      <anchor>af7ec400b68941155eab7a61310aa9354</anchor>
      <arglist>(Destination *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectRemoved</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1DestinationList.html</anchorfile>
      <anchor>a2fd8f927efa1a2af55e8cb2b3ec09d61</anchor>
      <arglist>(Destination *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectOrderChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1DestinationList.html</anchorfile>
      <anchor>a7fee9766d54091d39b98339f30411bfe</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>InputDeviceInstance &amp;</type>
      <name>input</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1DestinationList.html</anchorfile>
      <anchor>aef309a4082575d340fec2af5d87a4bd7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::DeviceManager</name>
    <filename>classtracktion_1_1engine_1_1DeviceManager.html</filename>
    <class kind="struct">tracktion::engine::DeviceManager::TracktionEngineAudioDeviceManager</class>
    <member kind="function">
      <type></type>
      <name>~DeviceManager</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a955f510910509fa35db0d63607c9f6ff</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>aa88862c9853a2a78f22826a853dff05d</anchor>
      <arglist>(int defaultNumInputChannelsToOpen=defaultNumChannelsToOpen, int defaultNumOutputChannelsToOpen=defaultNumChannelsToOpen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>ade3dcb3bf57ab766da9b869643f4eb4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveSettings</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>ae69778993003f31d6014ca2fea77a784</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefaults</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a9a54a9bb4d65a0f8b2ecd2e0a069a3bf</anchor>
      <arglist>(bool deviceSettings, bool resetInputDevices, bool resetOutputDevices, bool latencySettings, bool mixSettings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rescanMidiDeviceList</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a1c0c2e8cac3ddbe11e2f4ff7ee2b7921</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rescanWaveDeviceList</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a306d06a400f0b4f2e2abd30dd470e886</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMidiDeviceScanIntervalSeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a59b80f43ba23380f17f5c9f097f85380</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidiDeviceScanIntervalSeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a1ce71330e53bb3bf1ffe8f5099ac64bd</anchor>
      <arglist>(int intervalSeconds)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a9411c2b6885eedb15fe7e4474f9f8f8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBitDepth</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>aea875703da2ebfcdfe9243c61b4f7001</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBlockSize</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a59f4df05d67c1318a549d8d8fc901668</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getBlockLength</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>aa4323b9cb865edf8faa242708331b468</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBlockSizeMs</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>af945a9b500822b871fd6ea48066dd926</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOutputLatencySeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a8eb55538738b6c87abe11c635334cc7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRecordAdjustmentMs</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a4ed27f417fef90f8cd563cd592629b3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRecordAdjustmentSamples</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a8f22ae59a3658fe038f0ecd3c61d0055</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCpuUsage</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a1384ce8fe9033a65cd5ff0ee332cdd24</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCpuLimitBeforeMuting</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>ae6d7c1825f08979ffd5f719a6e07ccc5</anchor>
      <arglist>(double newLimit)</arglist>
    </member>
    <member kind="function">
      <type>PerformanceMeasurement::Statistics</type>
      <name>getCPUStatistics</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a0f788d0c1b2e951fec7fe328c52deca7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restCPUStatistics</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a08c79f7e3f31fa4aae6a04e25b3efba9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateNumCPUs</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a8b88f0ba695286e75685673e606ca6ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableOutputClipping</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a05a4490fcf1c19f27608b38cec37d028</anchor>
      <arglist>(bool clipOutput)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasOutputClipped</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a3dcce1358a36d9d17accd5daddddfeec</anchor>
      <arglist>(bool reset)</arglist>
    </member>
    <member kind="function">
      <type>HostedAudioDeviceInterface &amp;</type>
      <name>getHostedAudioDeviceInterface</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a11b91846ccd80bf71ff62b074218527f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHostedAudioDeviceInterfaceInUse</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a60460f10126436bf2057139c09ebc822</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeHostedAudioDeviceInterface</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a47083b3c0cedc829d65c84bc46e9e1d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumInputDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a7f2dc75ee9d09f4b54779590f924133c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>InputDevice *</type>
      <name>getInputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>aaa691b901c734f38cec7f31fefe64fed</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>ade38bd01413b94b571ccdf37cf8db7c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>OutputDevice *</type>
      <name>getOutputDeviceAt</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a09e7b664a70532dd0b753da67aa93e95</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>InputDevice *</type>
      <name>findInputDeviceForID</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>ab87b4577e63eec74d5bd8f7eb9995b6d</anchor>
      <arglist>(const juce::String &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>InputDevice *</type>
      <name>findInputDeviceWithName</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a0d1c99d903d4b8e492a406de53430051</anchor>
      <arglist>(const juce::String &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; MidiInputDevice &gt;</type>
      <name>findMidiInputDeviceForID</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>aee714948b37df56beaad74197d4ab1f5</anchor>
      <arglist>(const juce::String &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>OutputDevice *</type>
      <name>findOutputDeviceForID</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>abc1498a0c46ecc046b15e23e2a041bd4</anchor>
      <arglist>(const juce::String &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>OutputDevice *</type>
      <name>findOutputDeviceWithName</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a0561aa16b3704512b4f50aeabeafa5ea</anchor>
      <arglist>(const juce::String &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumWaveOutDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a5805cc5e633b59d86cac7c606fb357f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WaveOutputDevice *</type>
      <name>getWaveOutDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a67d9b0ffbd8a781f7dfa5c19987a33be</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultWaveOutDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>ab56a0f19258c8961aa88472d28ffe576</anchor>
      <arglist>(juce::String deviceID)</arglist>
    </member>
    <member kind="function">
      <type>WaveOutputDevice *</type>
      <name>getDefaultWaveOutDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a7cd0c33f418a51741dbac2908d96fa36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDefaultWaveOutDeviceID</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a1b4e21ac11888c5cc1866c2359ad3db8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumWaveInDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>aca098071d94ee79bb77f6a80e0e79f22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WaveInputDevice *</type>
      <name>getWaveInDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>af437bd6eed7b65649446e533b2eae4cc</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultWaveInDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a8b3b264189b9d186a23d2f5736de4fc1</anchor>
      <arglist>(juce::String deviceID)</arglist>
    </member>
    <member kind="function">
      <type>WaveInputDevice *</type>
      <name>getDefaultWaveInDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a502366520b33bd824b1deca7b7c0af9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDefaultWaveInDeviceID</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a6a9ccbfbc3c782eada0d305107ee8ebd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WaveOutputDevice * &gt;</type>
      <name>getWaveOutputDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>ab9bb7cb69a1001ae9d1ca29670fbfc56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaveOutChannelsEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>af0d030552f42eb4923be9c1496128af0</anchor>
      <arglist>(const std::vector&lt; ChannelIndex &gt; &amp;, bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceOutChannelStereo</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a1e6f19c469e63276e83f3e82cec9c3c8</anchor>
      <arglist>(int channelNum, bool isStereoPair)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDeviceOutChannelStereo</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>ac47d8038b6bce0f63120d5786e955403</anchor>
      <arglist>(int chan) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDeviceOutEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a85dae6add1c6f573ef39e2e61a236ef1</anchor>
      <arglist>(int chanNum)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WaveInputDevice * &gt;</type>
      <name>getWaveInputDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a7891b0ba074ab663a0e05f73b54fbe3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWaveInChannelsEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>add7e1a2dd9c98adcbf59e358864371c9</anchor>
      <arglist>(const std::vector&lt; ChannelIndex &gt; &amp;, bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceInChannelStereo</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>af3ea9fed94a65f3ecd7944557373479d</anchor>
      <arglist>(int channelNum, bool isStereoPair)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDeviceInChannelStereo</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a30f326a9d873775d23574db371ce0a53</anchor>
      <arglist>(int chan) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDeviceInEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>af2c683491c89cc8100486387bb261976</anchor>
      <arglist>(int chanNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableAllWaveInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a49572fa9d0c37de7fb9e5825c342816b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableAllWaveOutputs</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a7f11519fa25e8d33984bc7e8dbc9e907</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllWaveInputsToStereoPair</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a0cbb0f608ebe66f4cc6a2cfd22b055f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllWaveOutputsToStereoPair</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>abacdeb9c04e7837100a35a38ba7e65c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumMidiOutDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a129f0bfd0b3e90581755284c9c700b50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MidiOutputDevice *</type>
      <name>getMidiOutDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a5c2739f5edd7504db2256b97205c5ac9</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultMidiOutDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a157609cfc2f89b425890ccf661935b77</anchor>
      <arglist>(juce::String deviceID)</arglist>
    </member>
    <member kind="function">
      <type>MidiOutputDevice *</type>
      <name>getDefaultMidiOutDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>af29743aabe9600e0b4c850a3014a8fb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDefaultMidiOutDeviceID</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>af1f1196c082e00e6aeaec294c33e52a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumMidiInDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a1b70aef080c2e662ddd74d97f0dbd05f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; MidiInputDevice &gt;</type>
      <name>getMidiInDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>afe409aec057c8bccac8181134de0aec4</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::shared_ptr&lt; MidiInputDevice &gt; &gt;</type>
      <name>getMidiInDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a7005ca5e3564d0c704481d26d4bbd50e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultMidiInDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>ad2dba918350112c6fc6212db8a8d2baf</anchor>
      <arglist>(juce::String deviceID)</arglist>
    </member>
    <member kind="function">
      <type>MidiInputDevice *</type>
      <name>getDefaultMidiInDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a6aa2faa7b64574eff30d453c5bd56c3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDefaultMidiInDeviceID</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a830841032e35ba6061c32f327e189882</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>injectMIDIMessageToDefaultDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>ab84d746d0377c8c000907e878d95adfa</anchor>
      <arglist>(const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>broadcastMessageToAllVirtualDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a85c7ac683205c43655052de0e81e3910</anchor>
      <arglist>(PhysicalMidiInputDevice &amp;, const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>broadcastStreamTimeToMidiDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a321e4a76090c2a5e8b03203cb1371ad7</anchor>
      <arglist>(double streamTime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldSendMidiTimecode</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a33cdfc85b34060cec2a57a8d80128e18</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCurrentStreamTime</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a9649ae8c3e6c11bcacc592bc99b387c0</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMSWavetableSynthPresent</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a7a924aaf3aa12e938551d8e07876989e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dispatchPendingUpdates</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a51b62fb8fcdb2c7917ac2ea8184d7a94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkDefaultDevicesAreValid</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a7b8187848826ac12d98c14d6bcf7e1c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>createVirtualMidiDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a28642f2d741286052646c084209c75be</anchor>
      <arglist>(const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteVirtualMidiDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a9d79caf8fbf7d12fd57a3359b1f6aa2a</anchor>
      <arglist>(VirtualMidiInputDevice &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addContext</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a6ad54c2a49de9671d15cf54828a46aa0</anchor>
      <arglist>(EditPlaybackContext *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeContext</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>af58c41860f61450a1ae7bc304c91449b</anchor>
      <arglist>(EditPlaybackContext *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGlobalOutputAudioProcessor</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a9e20197d449d19aae5cdcb329e3cc87b</anchor>
      <arglist>(std::unique_ptr&lt; juce::AudioProcessor &gt;)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioProcessor *</type>
      <name>getGlobalOutputAudioProcessor</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>ac04ddb52b0f3cee4dbd8f88023456d26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getDefaultAudioOutDeviceName</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>ad10fbe734e5842a1a80123d6edee2d0b</anchor>
      <arglist>(bool translated)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getDefaultMidiOutDeviceName</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a53b6452631387df2316b91f0ba2fe48a</anchor>
      <arglist>(bool translated)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getDefaultAudioInDeviceName</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a2a80ee40eb81cce3c4f1fed77448e4df</anchor>
      <arglist>(bool translated)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getDefaultMidiInDeviceName</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>ab3af8e5a3452525108f69309977fd905</anchor>
      <arglist>(bool translated)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>abb186390b8724c5ec565c0d4daa2dcb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TracktionEngineAudioDeviceManager</type>
      <name>deviceManager</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a4cbd2ecb27149e3ac4fe90752f5561d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; HostedAudioDeviceInterface &gt;</type>
      <name>hostedAudioDeviceInterface</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>ab67d28f80a498f38ef38580ab6a0601d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::shared_ptr&lt; MidiInputDevice &gt; &gt;</type>
      <name>midiInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>ad181434b2068c4c66af73a6120e1a527</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::shared_ptr&lt; MidiOutputDevice &gt; &gt;</type>
      <name>midiOutputs</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>ab44228f6d93a2faf1071638642629081</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; WaveInputDevice &gt;</type>
      <name>waveInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>af9dcd0cd3c7cfd39fcf4936fe5277dd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; WaveOutputDevice &gt;</type>
      <name>waveOutputs</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>ad3e2e5007c3888004474ca6177589c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(InputDevice *)&gt;</type>
      <name>warnOfWastedMidiMessagesFunction</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>aa27e24f0ea12a0a69db6b881cdb2e2b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int</type>
      <name>defaultNumChannelsToOpen</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>aa1dcc7e4aad157d5d98283fffcadf836</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Engine</name>
      <anchorfile>classtracktion_1_1engine_1_1DeviceManager.html</anchorfile>
      <anchor>a3e1914489e4bed4f9f23cdeab34a43dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ParameterChangeHandler::Disabler</name>
    <filename>structtracktion_1_1engine_1_1ParameterChangeHandler_1_1Disabler.html</filename>
    <member kind="function">
      <type></type>
      <name>Disabler</name>
      <anchorfile>structtracktion_1_1engine_1_1ParameterChangeHandler_1_1Disabler.html</anchorfile>
      <anchor>aa99f501fdd041b478d00478a7675b2b5</anchor>
      <arglist>(ParameterChangeHandler &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Disabler</name>
      <anchorfile>structtracktion_1_1engine_1_1ParameterChangeHandler_1_1Disabler.html</anchorfile>
      <anchor>ac92cb8563a31c7b7b9c15d0338711b53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ParameterChangeHandler &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion_1_1engine_1_1ParameterChangeHandler_1_1Disabler.html</anchorfile>
      <anchor>a408b02b0d283912c7a7e6e7bcb957a44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>engine::DiscreteLabelledParameter</name>
    <filename>structengine_1_1DiscreteLabelledParameter.html</filename>
    <member kind="function">
      <type></type>
      <name>DiscreteLabelledParameter</name>
      <anchorfile>structengine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>a4f7e366e53e18935ed701046c80c5713</anchor>
      <arglist>(const juce::String &amp;xmlTag, const juce::String &amp;name, AutomatableEditItem &amp;owner, juce::Range&lt; float &gt; valueRangeToUse, int numStatesToUse=0, juce::StringArray labelsToUse={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DiscreteLabelledParameter</name>
      <anchorfile>structengine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>aec49a8676d1d6fa378ba9dbd355ebd2b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDiscrete</name>
      <anchorfile>structengine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>a327f1080ea3bd241598991b39de0f625</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfStates</name>
      <anchorfile>structengine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>a1582476a99458ae277f3742ef77b7c11</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getValueForState</name>
      <anchorfile>structengine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>a90fef6662931fcf5940c04791bb7e5f1</anchor>
      <arglist>(int i) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getStateForValue</name>
      <anchorfile>structengine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>a9ad3ecf7c1d920d9a6120d152857c70e</anchor>
      <arglist>(float value) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasLabels</name>
      <anchorfile>structengine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>a4ff6bbcc19c71fcc274997f3405498c4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getAllLabels</name>
      <anchorfile>structengine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>a1a37cea496e989994cbc181c8ad473a4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getLabelForValue</name>
      <anchorfile>structengine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>ae2f97010807520cf08c092990c265401</anchor>
      <arglist>(float val) const override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>snapToState</name>
      <anchorfile>structengine_1_1DiscreteLabelledParameter.html</anchorfile>
      <anchor>adc05105d543f2fdc29ab7da778c6274c</anchor>
      <arglist>(float val) const override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Ditherer</name>
    <filename>structtracktion_1_1engine_1_1Ditherer.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structtracktion_1_1engine_1_1Ditherer.html</anchorfile>
      <anchor>ac55333052098ff4b5ee8018e0647ad73</anchor>
      <arglist>(int numBits) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>structtracktion_1_1engine_1_1Ditherer.html</anchorfile>
      <anchor>aed974af0085b39ff8954c9b33f285a13</anchor>
      <arglist>(float *samps, int num) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>random1</name>
      <anchorfile>structtracktion_1_1engine_1_1Ditherer.html</anchorfile>
      <anchor>a45c67c90aa7e33a732f80e5dbbb96a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>random2</name>
      <anchorfile>structtracktion_1_1engine_1_1Ditherer.html</anchorfile>
      <anchor>a41e70e9dc6ddd523c555e2a272cc73f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>amp</name>
      <anchorfile>structtracktion_1_1engine_1_1Ditherer.html</anchorfile>
      <anchor>a8986761c79a46609b2253f0330a824a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>offset</name>
      <anchorfile>structtracktion_1_1engine_1_1Ditherer.html</anchorfile>
      <anchor>ab131bf423d5b4fa3aaa1d919a42cf7a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>s1</name>
      <anchorfile>structtracktion_1_1engine_1_1Ditherer.html</anchorfile>
      <anchor>ada73d2a65d4ba50b98c34e86634a2842</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>s2</name>
      <anchorfile>structtracktion_1_1engine_1_1Ditherer.html</anchorfile>
      <anchor>a0a6b04662c31abbfb90d44e33252f339</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::DummyConstrainer</name>
    <filename>structtracktion_1_1engine_1_1DummyConstrainer.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static Type</type>
      <name>constrain</name>
      <anchorfile>structtracktion_1_1engine_1_1DummyConstrainer.html</anchorfile>
      <anchor>a241f290d17c0878135b34030be0bcc41</anchor>
      <arglist>(const Type &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::DynamicallyOffsettableNodeBase</name>
    <filename>classtracktion_1_1engine_1_1DynamicallyOffsettableNodeBase.html</filename>
    <member kind="function">
      <type></type>
      <name>DynamicallyOffsettableNodeBase</name>
      <anchorfile>classtracktion_1_1engine_1_1DynamicallyOffsettableNodeBase.html</anchorfile>
      <anchor>a1e2bf7ae68290c2c2ec7a631bd398a93</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DynamicallyOffsettableNodeBase</name>
      <anchorfile>classtracktion_1_1engine_1_1DynamicallyOffsettableNodeBase.html</anchorfile>
      <anchor>afb5978edf0fa97cc34ccf62e97ad4ed5</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDynamicOffsetBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1DynamicallyOffsettableNodeBase.html</anchorfile>
      <anchor>a3c413e6b7c5c59a8b402d982440d56ee</anchor>
      <arglist>(BeatDuration)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDynamicOffsetTime</name>
      <anchorfile>classtracktion_1_1engine_1_1DynamicallyOffsettableNodeBase.html</anchorfile>
      <anchor>acd4712c935d785d23862bd65deecf1d6</anchor>
      <arglist>(TimeDuration)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::DynamicOffsetNode</name>
    <filename>classtracktion_1_1engine_1_1DynamicOffsetNode.html</filename>
    <base>tracktion::graph::Node</base>
    <base>tracktion::engine::TracktionEngineNode</base>
    <base>tracktion::engine::DynamicallyOffsettableNodeBase</base>
    <member kind="function">
      <type></type>
      <name>DynamicOffsetNode</name>
      <anchorfile>classtracktion_1_1engine_1_1DynamicOffsetNode.html</anchorfile>
      <anchor>a3efed90cab74fb134cbabb0e6088474b</anchor>
      <arglist>(ProcessState &amp;editProcessState, EditItemID clipID, BeatRange clipPosition, BeatDuration clipOffset, BeatRange clipLoopRange, std::vector&lt; std::unique_ptr&lt; Node &gt;&gt; inputs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDynamicOffsetBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1DynamicOffsetNode.html</anchorfile>
      <anchor>ad402845f64cedba393d3314d76aa54cf</anchor>
      <arglist>(BeatDuration) override</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1DynamicOffsetNode.html</anchorfile>
      <anchor>a206178dadc911758a7d1c617c1b2c776</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1DynamicOffsetNode.html</anchorfile>
      <anchor>a400cbd8d1fc69d8991b51e0b881d0d72</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getInternalNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1DynamicOffsetNode.html</anchorfile>
      <anchor>ae9fec63af6a70ff8b64c95c5c60edf34</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1DynamicOffsetNode.html</anchorfile>
      <anchor>a169d6887b5e8b81ddd31360d3971f3fd</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1DynamicOffsetNode.html</anchorfile>
      <anchor>a9b858496d3dbb43ae7aa95b5660b937d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prefetchBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1DynamicOffsetNode.html</anchorfile>
      <anchor>ad7df177a638387c5f09b5736ff49d5e7</anchor>
      <arglist>(juce::Range&lt; int64_t &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1DynamicOffsetNode.html</anchorfile>
      <anchor>ad91b292df15ef3746920b96a621ce63e</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::Edit</name>
    <filename>classtracktion_1_1engine_1_1Edit.html</filename>
    <base>tracktion::engine::Selectable</base>
    <class kind="struct">tracktion::engine::Edit::GlobalMacros</class>
    <class kind="struct">tracktion::engine::Edit::LoadContext</class>
    <class kind="struct">tracktion::engine::Edit::LoadFinishedCallback</class>
    <class kind="struct">tracktion::engine::Edit::Metadata</class>
    <class kind="struct">tracktion::engine::Edit::Options</class>
    <class kind="struct">tracktion::engine::Edit::ScopedRenderStatus</class>
    <class kind="struct">tracktion::engine::Edit::UndoTransactionInhibitor</class>
    <class kind="struct">tracktion::engine::Edit::WastedMidiMessagesListener</class>
    <member kind="enumeration">
      <type></type>
      <name>EditRole</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a474ef5984345c5b32ffa52ecff59321a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>playDisabled</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a474ef5984345c5b32ffa52ecff59321aaa73c62ecbce1126a6e291b6cd43a498e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>proxiesDisabled</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a474ef5984345c5b32ffa52ecff59321aa718ce4f3e405efeb33d723a2987ec670</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pluginsDisabled</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a474ef5984345c5b32ffa52ecff59321aa9b50d62caaf691518cee1344fac31f42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>forEditing</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a474ef5984345c5b32ffa52ecff59321aaaaff7f83b31d8adaed273b6a8dd7f92d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>forRendering</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a474ef5984345c5b32ffa52ecff59321aa2c92677184ce8b9c69ff9e3534b97db6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>forExporting</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a474ef5984345c5b32ffa52ecff59321aa3be911d18ade578463cd65c56b108406</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>forExamining</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a474ef5984345c5b32ffa52ecff59321aa57d3939c82e1428307913dd6692856c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CountIn</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a5ecd9cc3e9357f31269f6cbc7ca79c4c</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1Edit.html" anchor="a5ecd9cc3e9357f31269f6cbc7ca79c4ca334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1Edit.html" anchor="a5ecd9cc3e9357f31269f6cbc7ca79c4ca6e45a5543108e522a7069c90787b390d">oneBar</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1Edit.html" anchor="a5ecd9cc3e9357f31269f6cbc7ca79c4ca89bebfd565b060f68f9ccedc861b72e2">twoBar</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1Edit.html" anchor="a5ecd9cc3e9357f31269f6cbc7ca79c4ca0564a247242718dbf102a64c845e8516">twoBeat</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1Edit.html" anchor="a5ecd9cc3e9357f31269f6cbc7ca79c4ca304659151ad21517e875f879b072e528">oneBeat</enumvalue>
    </member>
    <member kind="enumvalue">
      <name>playDisabled</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a474ef5984345c5b32ffa52ecff59321aaa73c62ecbce1126a6e291b6cd43a498e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>proxiesDisabled</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a474ef5984345c5b32ffa52ecff59321aa718ce4f3e405efeb33d723a2987ec670</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pluginsDisabled</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a474ef5984345c5b32ffa52ecff59321aa9b50d62caaf691518cee1344fac31f42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>forEditing</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a474ef5984345c5b32ffa52ecff59321aaaaff7f83b31d8adaed273b6a8dd7f92d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>forRendering</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a474ef5984345c5b32ffa52ecff59321aa2c92677184ce8b9c69ff9e3534b97db6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>forExporting</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a474ef5984345c5b32ffa52ecff59321aa3be911d18ade578463cd65c56b108406</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>forExamining</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a474ef5984345c5b32ffa52ecff59321aa57d3939c82e1428307913dd6692856c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Edit</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a508a3d365587b6a21602fb4d6c3ded08</anchor>
      <arglist>(Options)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Edit</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ac1dee057073b3679d4c746348ec58a11</anchor>
      <arglist>(Engine &amp;, EditRole)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Edit</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ad0d84686096101924f7a6870f5c23ffa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a6e7a70bbd6b25fbe0f165983093975a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProjectItemID</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a8cc598d1a7e60651d61bbc9cd223a520</anchor>
      <arglist>(ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>ProjectItemID</type>
      <name>getProjectItemID</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ae206445059bbd8e8418d6b50dad80a45</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>EditRole</type>
      <name>getEditRole</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a44eb835c02a4ecc1b3569ba0070f12f5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a68efb13a0df75721ddfef61ee285e24e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canRenderProxies</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ad4ec24c017823b7b945ca6b04d15da9d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldLoadPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ae306ab6fb1b351e2bd59264e1c30f9d2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsPreviewEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ada746e7fea55aa34f947970c681341b2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushState</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a8fb8562e3760680f17dde885e8c6f36f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPluginStateIfNeeded</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>aca4223b0ef60282e64295b5f21aea75f</anchor>
      <arglist>(Plugin &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Time</type>
      <name>getTimeOfLastChange</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a66e528a24da639c41bbaada10cf14d25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetChangedStatus</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a933c606e760bc855c658ab8b0f38f53e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasChangedSinceSaved</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>adcfbd00dd336a773f490b7e76ea2ae79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLoading</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ab3b28bc17d842388cf72f9675b7c926f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EditInputDevices &amp;</type>
      <name>getEditInputDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a4025601e46e0f32032e1470d8bb34c77</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance *</type>
      <name>getCurrentInstanceForInputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>aba6c012504b5c3e7758d7935cbb83e08</anchor>
      <arglist>(InputDevice *) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; InputDeviceInstance * &gt;</type>
      <name>getAllInputDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>aa1ac4e69828d29b7c7f98bae65f3b42f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TransportControl &amp;</type>
      <name>getTransport</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a9026fd4fc910c722e06b6728727ad800</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>EditPlaybackContext *</type>
      <name>getCurrentPlaybackContext</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a2944e5321f85ea8b9c64b8e8a9e57f9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ParameterChangeHandler &amp;</type>
      <name>getParameterChangeHandler</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a639c34b54780dd7479ffb4b2f7161206</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>ParameterControlMappings &amp;</type>
      <name>getParameterControlMappings</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>aa3c8e611cb83ff5001c2b5f1d1bd448b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>AutomationRecordManager &amp;</type>
      <name>getAutomationRecordManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a0c7eda6a8919e444b3133a391266014d</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>AbletonLink &amp;</type>
      <name>getAbletonLink</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a359c1ffb2d17447980f090c5019ca88d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRendering</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>aa64335aea50d1f33a22aeb2a56499b13</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseAllPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>af0869a44b0c3d6b0f2e2f90c969db4c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a98fabc4eb4d80ba6452d41ac2393708f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::UndoManager &amp;</type>
      <name>getUndoManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>aaed5833721727ea69cb668662488003d</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>undo</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ae0c65f64993534f7b10b1da18fd70296</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redo</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a7124fbdcf44cb30726670e30ac77740a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restartPlayback</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a11dd5838c59c901610a33a25b4263f7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TrackList &amp;</type>
      <name>getTrackList</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a394170670bd47925ee8c38256a9cc82e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitAllTracksRecursive</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ac93028cfebe589abb612f3dee5c5aec5</anchor>
      <arglist>(std::function&lt; bool(Track &amp;)&gt;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitAllTopLevelTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a76c76aabd40b3bf55abc4ff24a17ee45</anchor>
      <arglist>(std::function&lt; bool(Track &amp;)&gt;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitAllTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>af03d64da98056011f2310bac35ecf83c</anchor>
      <arglist>(std::function&lt; bool(Track &amp;)&gt;, bool recursive) const</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; AudioTrack &gt;</type>
      <name>insertNewAudioTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>adb573b5a2ae633fd9e623e75617e7bf1</anchor>
      <arglist>(TrackInsertPoint, SelectionManager *, bool addDefaultPlugins=true)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; FolderTrack &gt;</type>
      <name>insertNewFolderTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ad54192de8af328635ab151afd3af4aa2</anchor>
      <arglist>(TrackInsertPoint, SelectionManager *, bool asSubmix)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; AutomationTrack &gt;</type>
      <name>insertNewAutomationTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a9b3967a1b240ab0f377a95bbe78d475c</anchor>
      <arglist>(TrackInsertPoint, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>Track::Ptr</type>
      <name>insertNewTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>af85c45a40336319a44a99643d74e0342</anchor>
      <arglist>(TrackInsertPoint, const juce::Identifier &amp;xmlType, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>Track::Ptr</type>
      <name>insertTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a2ffaebae5ca7720f5746f75dab2ba5dd</anchor>
      <arglist>(TrackInsertPoint, juce::ValueTree, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>Track::Ptr</type>
      <name>insertTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a85a3564846a76af226bd84c55f6de110</anchor>
      <arglist>(juce::ValueTree, juce::ValueTree parent, juce::ValueTree preceeding, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a63c1f04134bcfd2cba0c1c152ccec20e</anchor>
      <arglist>(Track::Ptr, TrackInsertPoint)</arglist>
    </member>
    <member kind="function">
      <type>Track::Ptr</type>
      <name>copyTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a8f9a08a2379e05b2c18fe385ceeca80e</anchor>
      <arglist>(Track::Ptr, TrackInsertPoint)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a4ceea1ca3761e024a37b1c5c01e1fc81</anchor>
      <arglist>(Track *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureNumberOfAudioTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a6bb79ea687b69d129ec76465f5e92f3a</anchor>
      <arglist>(int minimumNumTracks)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureArrangerTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>abc6f430ae6ccf16a2785f4739a8677ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureTempoTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a4a96943809b599514248f29988098185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureMarkerTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a6051d4385cf7abf90c981d155b8c2ac0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureChordTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>abec8d6c30b570bf099c6713e6837e6ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureMasterTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a183eee66a17e4f74de26f913dc0858ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrangerTrack *</type>
      <name>getArrangerTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ad916373546ca86721accc76193dbeb5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MarkerTrack *</type>
      <name>getMarkerTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ad9e039acaff911d1d05a9ddc409bf1c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TempoTrack *</type>
      <name>getTempoTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a6e804d1ca4e46fec196e83097f3ad39f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ChordTrack *</type>
      <name>getChordTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ae12d9c11c951e3298293ff2445038920</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MasterTrack *</type>
      <name>getMasterTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ab59485aff81c9cff1b82f8cbb0caceeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areAnyTracksMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ae69bb693d428b478cb8b6c7be1931ad4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areAnyTracksSolo</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a63ce6228adceec41fe06c6ba30e687d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areAnyTracksSoloIsolate</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a7d1e035c31b181e7b9cbdf4e04b3dd86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMuteSoloStatuses</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a7de9ee69d257ebd1b4b0d6456c8a8855</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LaunchQuantisation &amp;</type>
      <name>getLaunchQuantisation</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a9cf5db54c73b8105549121af5e63c919</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SceneList &amp;</type>
      <name>getSceneList</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a4d89b5385b900725a1d04ca601d734b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>createNewItemID</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ae0af334f50057f82a4aaf2c070bb6da2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>createNewItemID</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>abadb2d1747960d073450095567e1dab3</anchor>
      <arglist>(const std::vector&lt; EditItemID &gt; &amp;idsToAvoid) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Clip * &gt;</type>
      <name>findClipsInLinkGroup</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a4acfddf4b5130eb71598925178236a5c</anchor>
      <arglist>(juce::String linkGroupID) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMirroredPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ab558e4f2f50ae34285a8f01ced95e6e2</anchor>
      <arglist>(Plugin &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMirrorUpdateToAllPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a1f474abb2657306fff3f0533345d690e</anchor>
      <arglist>(Plugin &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendStartStopMessageToPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a4023063ac23c4288f029997b4c9232d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PluginList &amp;</type>
      <name>getMasterPluginList</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>aef350f5f24e13bffe350bb4167c88b08</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addModifierTimer</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>aed4ab310eb8efd8176eaed529b3a9a42</anchor>
      <arglist>(ModifierTimer &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeModifierTimer</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a6a29599e5c2fbf92f8a200666050d086</anchor>
      <arglist>(ModifierTimer &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateModifierTimers</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>af9175f8885ea8df0ae3a04815cdd71ac</anchor>
      <arglist>(TimePosition editTime, int numSamples) const</arglist>
    </member>
    <member kind="function">
      <type>MacroParameterElement &amp;</type>
      <name>getGlobalMacros</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a87ec8df177cb572b5f2f0b9dcb915544</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLowLatencyMonitoring</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a6b11f7529c30e55719b0de96c06b4f47</anchor>
      <arglist>(bool enabled, const juce::Array&lt; EditItemID &gt; &amp;plugins)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLowLatencyMonitoring</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>acda815240f1e221ee353c82e5663bd81</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLowLatencyDisabledPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a2e5489c7b2dffd61357a0a9ac4d1cf50</anchor>
      <arglist>(const juce::Array&lt; EditItemID &gt; &amp;plugins)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; EditItemID &gt;</type>
      <name>getLowLatencyDisabledPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a7efa9655a1e239ea457ac93a32dcced0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RackTypeList &amp;</type>
      <name>getRackList</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a9b4bcce5a3891f9b28cbc670e1591e56</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TrackCompManager &amp;</type>
      <name>getTrackCompManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>af54b68ac3e0533fa6c15bc09dd329aa6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getAuxBusName</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>af535331247f3012a1505930d27937fad</anchor>
      <arglist>(int bus) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAuxBusName</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>af6438913bb08d4d5de4bb5adafa50988</anchor>
      <arglist>(int bus, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomatableParameter * &gt;</type>
      <name>getAllAutomatableParams</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ab1ee28a2cc6b855b353cb7556d833f68</anchor>
      <arglist>(bool includeTrackParams) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitAllAutomatableParams</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a476acac5c24a889a919e977fc4675fb2</anchor>
      <arglist>(bool includeTrackParams, const std::function&lt; void(AutomatableParameter &amp;)&gt; &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getVideoFile</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a435b464e0793d8d7257347a1f324a4c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVideoFile</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>aafe7179f21f6f98b8d3acc218df4d5f2</anchor>
      <arglist>(const juce::File &amp;, juce::String importDesc)</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getNextTimeOfInterest</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>aed3f3418b7810f4a944acb12b28f3dae</anchor>
      <arglist>(TimePosition afterThisTime)</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getPreviousTimeOfInterest</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ac5eb149877084845d8aa9673ef0b424c</anchor>
      <arglist>(TimePosition beforeThisTime)</arglist>
    </member>
    <member kind="function">
      <type>PluginCache &amp;</type>
      <name>getPluginCache</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a59c7be35555b586d4e8d8e3dfb6182a7</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getFirstClipTime</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ad861f7865ec1ab314df8045d8f4afde2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getLength</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a5a15716c5e26d6ab9a1a59f2778c9ea7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>VolumeAndPanPlugin::Ptr</type>
      <name>getMasterVolumePlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a117e5232a97900cc31351fe1fd076cc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::Ptr</type>
      <name>getMasterSliderPosParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ac4dd5b88194670b327a1ada24ff932c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::Ptr</type>
      <name>getMasterPanParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ad6b2f465f2e0e7604ffb76ee8c6ffd8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMasterVolumeSliderPos</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a6e61779ee7cddee31f991b4939a97227</anchor>
      <arglist>(float)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMasterPanPos</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a95418407bdc9b3eba60cf9fd5aed156f</anchor>
      <arglist>(float)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pluginChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a97c8bcdf8c740c186383e75831fa3350</anchor>
      <arglist>(Plugin &amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TimecodeDisplayFormat</type>
      <name>getTimecodeFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a56b905a83068d27d4d732f4660c1be56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimecodeFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a522633d3da5edf7802741849276e6f94</anchor>
      <arglist>(TimecodeDisplayFormat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleTimecodeMode</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ac3560319a0aaf8adb86f116eee539bf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendTempoOrPitchSequenceChangedUpdates</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a5983765bb1e6f3a7ade051f2ec623a82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; MidiInputDevice &gt;</type>
      <name>getCurrentMidiTimecodeSource</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a42b2122f9325cb6d6cbc8b421c132960</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentMidiTimecodeSource</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ab5ae3bfaf4b3a7016c448fee87ba7931</anchor>
      <arglist>(std::shared_ptr&lt; MidiInputDevice &gt;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableTimecodeSync</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a29576c84cb8e6e012eb90391fa24f154</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTimecodeSyncEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a5aaacf5c9ded1e74dc48f99e5ba6cde0</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getTimecodeOffset</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a31ad26d8c0dd23f6b100edf2dd21c409</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimecodeOffset</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a1cd063cc61c4919ef01f49d71c90b5d7</anchor>
      <arglist>(TimeDuration newOffset)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidiTimecodeIgnoringHours</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ab5be109323fdac1780c22f0e3b0d46d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidiTimecodeIgnoringHours</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a4bee57b48341da2a1740873c30794c10</anchor>
      <arglist>(bool shouldIgnore)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; MidiInputDevice &gt;</type>
      <name>getCurrentMidiMachineControlSource</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ac48db70942ab31e020a54c6214fddd96</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentMidiMachineControlSource</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a6334aae49f625168b43f53b736e62c93</anchor>
      <arglist>(std::shared_ptr&lt; MidiInputDevice &gt;)</arglist>
    </member>
    <member kind="function">
      <type>MidiOutputDevice *</type>
      <name>getCurrentMidiMachineControlDest</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a10c1bc395b3fe8c9394c85edd582dde7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentMidiMachineControlDest</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a8438b1333915c163cf93321b7d29dce2</anchor>
      <arglist>(MidiOutputDevice *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMidiTimecodeDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>acab6a9e404cdd16a19e2d9f520fe3184</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClickTrackRange</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a57ad06c7504f14e8b5708cc7599d1e99</anchor>
      <arglist>(TimeRange) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>getClickTrackRange</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a226998a945d86cab658f3f3b62ead6ed</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getClickTrackVolume</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a3257b9dd6d29ee2a91459500891b5930</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getClickTrackDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a1c7cdae999c8e52c7115006638e3e827</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isClickTrackDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>af16a00ca2a7bfccd0181d53e12451a50</anchor>
      <arglist>(OutputDevice &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClickTrackOutput</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a555c523d947354df0929f23093988d63</anchor>
      <arglist>(const juce::String &amp;deviceName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClickTrackVolume</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ab9661bde370cfbfd6525a3c267d19880</anchor>
      <arglist>(float gain)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCountInMode</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a919b8a56244c6207ca5c7769c15242c3</anchor>
      <arglist>(CountIn)</arglist>
    </member>
    <member kind="function">
      <type>CountIn</type>
      <name>getCountInMode</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a0e6cf6577ae9de6a3a502a4980eb6a43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumCountInBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ac74fc08edb7d7ba8f346140c2ce9d74c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendSourceFileUpdate</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a421720ddeabf9bb607050aeeb64b05c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markAsChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>afe367226822b010969c95376c3f39751</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateStoredLength</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ac4afc5fc5daf24f2947eb8279bd1ec87</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dispatchPendingUpdatesSynchronously</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a8be45be2b2e5f42e91efe2af8dcec82c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areAnyClipsUsingFile</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a5cab8229a4a92caa0ed42a6a2d9719cd</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancelAllProxyGeneratorJobs</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a80df241dedcec4063c633ef9bc27657f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getTempDirectory</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>aed7e289e0ec17bc1540c3963d9fb27fa</anchor>
      <arglist>(bool createIfNonExistent) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTempDirectory</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ade5b59165be64ce13111c50e2bde22b5</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Metadata</type>
      <name>getEditMetadata</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>afd4ce78282028785de495d985df34efb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEditMetadata</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a42f582b4cc24c2dbd04bf6d8e154eab2</anchor>
      <arglist>(Metadata)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getAutomapState</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a18381def846a38f97a9380ea653d3340</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MarkerManager &amp;</type>
      <name>getMarkerManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a968baa4cd83c8af90ced318d06868a77</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ARADocumentHolder &amp;</type>
      <name>getARADocument</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>acea8e46223d148c65d72cc88f8c3de7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWastedMidiMessagesListener</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>aa08a37b53feb6a55505d3c4eda0e9080</anchor>
      <arglist>(WastedMidiMessagesListener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeWastedMidiMessagesListener</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a570de37de3361cff7e6315aa3af8e2b5</anchor>
      <arglist>(WastedMidiMessagesListener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>warnOfWastedMidiMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a3be0c2595741f774ff97dec1440f6543</anchor>
      <arglist>(InputDevice *, Track *)</arglist>
    </member>
    <member kind="function">
      <type>SharedLevelMeasurer::Ptr</type>
      <name>getPreviewLevelMeasurer</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a9fcfcfebbbc4d0878c21529dbfc98fec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreviewLevelMeasurer</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a29f49d1e21a261a67db3ac0a4ef2fd30</anchor>
      <arglist>(SharedLevelMeasurer::Ptr p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeDuration</type>
      <name>getMaximumLength</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ae8f365d9a4e84f75d10937b28bd61d6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeRange</type>
      <name>getMaximumEditTimeRange</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a15b02214d6579b41b28124fe26551bce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimePosition</type>
      <name>getMaximumEditEnd</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a0daf53c4a5981a33ac60b6b823ed6264</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; Edit &gt;</type>
      <name>createEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a62c634c7780347ead948ec524a7d9b3f</anchor>
      <arglist>(Options)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; Edit &gt;</type>
      <name>createEditForPreviewingFile</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ac73c0383fb5509a82854344ca815ef6b</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;, const Edit *editToMatch, bool tryToMatchTempo, bool tryToMatchPitch, bool *couldMatchTempo, juce::ValueTree midiPreviewPlugin, juce::ValueTree midiDrumPreviewPlugin={}, bool forceMidiToDrums=false, std::unique_ptr&lt; Edit &gt; editToUpdate={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; Edit &gt;</type>
      <name>createEditForPreviewingPreset</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a3d1710bf07ea76a50e9d0dcf76705181</anchor>
      <arglist>(Engine &amp;engine, juce::ValueTree, const Edit *editToMatch, bool tryToMatchTempo, bool *couldMatchTempo, juce::ValueTree midiPreviewPlugin, juce::ValueTree midiDrumPreviewPlugin={}, bool forceMidiToDrums=false, std::unique_ptr&lt; Edit &gt; editToUpdate={})</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; Edit &gt;</type>
      <name>createEditForPreviewingClip</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a2b4a47030ec307f2416cc2a14aeb93e2</anchor>
      <arglist>(Clip &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; Edit &gt;</type>
      <name>createSingleTrackEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>abd8f136c109579ccf80a8e74e37b977a</anchor>
      <arglist>(Engine &amp;, EditRole role=EditRole::forEditing)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; Edit &gt;</type>
      <name>createEditForExamining</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>af540bbb41eda737d3c19e185d15bb5aa</anchor>
      <arglist>(Engine &amp;, juce::ValueTree, EditRole role=EditRole::forExamining)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getDefaultNumUndoLevels</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ae2262e12e8136006b6b060dfcc970ee6</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>af96ac416120505b387366e2700b2630a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; juce::File()&gt;</type>
      <name>editFileRetriever</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a239497b91484221c8d4b2118ca648197</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; juce::File(const juce::String &amp;)&gt;</type>
      <name>filePathResolver</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ae8a37a1004bd5bf2233e4a61cbc0265b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditItemCache&lt; Track &gt;</type>
      <name>trackCache</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ad9653730c72e3abae1b6a673a8ded260</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditItemCache&lt; ClipSlot &gt;</type>
      <name>clipSlotCache</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ade18dd0bf4fe43056f88d751c7ab90b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditItemCache&lt; Clip &gt;</type>
      <name>clipCache</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>af0598c6a440a321412134a28bd1c76be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TempoSequence</type>
      <name>tempoSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>aad5745edd35acae8ee7f64eb22c276d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PitchSequence</type>
      <name>pitchSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a22db536728fb26349db07a6f7c226c36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>lastSignificantChange</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a3dfa1311db5200abea76cd2055f2cb84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; TimeDuration &gt;</type>
      <name>masterFadeIn</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a2a0c7c9818ac1d8d1340aed61c950e49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; TimeDuration &gt;</type>
      <name>masterFadeOut</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a826551489bb63e4881ad438bb647f95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; TimeDuration &gt;</type>
      <name>timecodeOffset</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ab45c0c4febc1fdad606673d7d58c6234</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; TimeDuration &gt;</type>
      <name>videoOffset</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a2008493458f29213b50a49af5415ffcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; AudioFadeCurve::Type &gt;</type>
      <name>masterFadeInType</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ac1939b17d60407e02d373ae991142088</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; AudioFadeCurve::Type &gt;</type>
      <name>masterFadeOutType</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>af2d163fcd88c4d8bd0acc924879c711e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>midiTimecodeSourceDeviceEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ae09f22b764a883ecad4b83026b53e75f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>midiTimecodeIgnoringHours</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a8f60422eae62e87ec31e326d9b9d9545</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>videoMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a75a5d4ccdf4e3507975d55c483b34cad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>clickTrackEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a9104295a747ef0cc89d8860aada773f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>clickTrackEmphasiseBars</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a7dc3c471557db0f8dee419baf4b9da0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>clickTrackRecordingOnly</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a5403e770d89f6adae6acb853d4d7b57f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>recordingPunchInOut</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>acf869d7b368d8d33a81ec7e2a4cbb989</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>playInStopEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a64d68d8fe54a32b993d8dc5cd1dd3106</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>clickTrackGain</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a0d5bcf3e5e7e20ed58fa0db5a2218a69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; ProjectItemID &gt;</type>
      <name>videoSource</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a726471a41662b615cba929ae29c9e4c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a13b7e04266c07b54190328a911e1b294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>inputDeviceState</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a03af004c3c76e2b67d0531890b8c50f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>maximumLength</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>aa6ccb8c21b15cebe09f8676d65220d22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>ticksPerQuarterNote</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>ad0167300e477f2d607328d194f0b3738</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend struct</type>
      <name>TrackList</name>
      <anchorfile>classtracktion_1_1engine_1_1Edit.html</anchorfile>
      <anchor>a64bcfd48754f370667ff0543e82f59e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::EditClip</name>
    <filename>classtracktion_1_1engine_1_1EditClip.html</filename>
    <base>tracktion::engine::AudioClipBase</base>
    <base protection="private">tracktion::engine::EditSnapshot::Listener</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; EditClip &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a87952352baedf1d508980e7bc4b39e94</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditClip</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>aa94bbe2e3cb6c3672f4412acc642d218</anchor>
      <arglist>(const juce::ValueTree &amp;, EditItemID, ClipOwner &amp;, ProjectItemID sourceEdit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditClip</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>acb128e614212808498640a2101063448</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>AudioFileInfo</type>
      <name>getWaveInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a400f89f56fefc1be7f38b55878fbeefb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>EditSnapshot::Ptr</type>
      <name>getEditSnapshot</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>abbe7dc128bb554791751d4d6627ceb81</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>AudioFile</type>
      <name>getAudioFile</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>aead9291546329052aaebf36122976597</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a774e2513f17e10474b37e19d1bc434c8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cloneFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>aab3326b643995d0e4473b4d79b96275a</anchor>
      <arglist>(Clip *) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a5b783097976825ac368ad6aa8f2556b6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canHaveEffects</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a30f83219a1e8ac69e4cd6f6feab6d900</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCurrentStretchRatio</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a2c6df1bc33a26a07bbc91ffdd788bd11</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a6622fe5e2ba86d6ea300a5b88d2069f0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getOriginalFile</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>aefe3bccdbd071a8c3ac75a96c2b3d7c8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>af291537e4545b7ff3c6e6b2d43b79b7d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopDefaults</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>ae445e0beb05415b401dc426e2909094d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTracksToRender</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a8d2f713637760ca1e3b1308bd93ae705</anchor>
      <arglist>(const juce::Array&lt; EditItemID &gt; &amp;trackIDs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsRender</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a89107cdb1e4b3ceda2090794135de448</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>RenderManager::Job::Ptr</type>
      <name>getRenderJob</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a935361d3c0fc40ccaa8f86bdea3cf6f9</anchor>
      <arglist>(const AudioFile &amp;destFile) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderComplete</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>aaa11dad21fe59163cebd8ce2c955c5d2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getRenderMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a5b87845912a6db169eb6ef96b0db774c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getClipMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>aac866e4dbf30ffd3b8c3f25eac052940</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getSourceLength</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a6036c0ea68855587e3e1454a4dc3dd6a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesSourceFile</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a4d3adaacb0dafa9c14d39360a7b57eb3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sourceMediaChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a3807fe02b0a8712673a940e7a4a80749</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changed</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>aaf0dd5ab0b8f913efb8610a7abf7a8f2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingFile</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>aeff45958d21f1b8d47fe8b88a86dbcfa</anchor>
      <arglist>(const AudioFile &amp;af) override</arglist>
    </member>
    <member kind="function">
      <type>RenderOptions &amp;</type>
      <name>getRenderOptions</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a81e64e95b48f4ab6d332d4cb5580e685</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>createUniqueCopy</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>aeb3e68edcf91ff70465d2c5fca96eee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>generateHash</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a2182debd45b4fbb44a30e5cad93a35bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>copyColourFromMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a57981894b75ab691642631c803ca2217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>trimToMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a3adaa407383874e695ffacba6300925d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>renderEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>ad79da58e7704c07be02b823fb34f43ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1EditClip.html</anchorfile>
      <anchor>a4c85025065595adc093b9967f2c62c76</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::EditDeleter</name>
    <filename>structtracktion_1_1engine_1_1EditDeleter.html</filename>
    <member kind="function">
      <type></type>
      <name>~EditDeleter</name>
      <anchorfile>structtracktion_1_1engine_1_1EditDeleter.html</anchorfile>
      <anchor>a219aa4ec79f6f1e7636d99ddf8e545a0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1EditDeleter.html</anchorfile>
      <anchor>a7257831b56410e182a18355d305e5184</anchor>
      <arglist>(std::unique_ptr&lt; Edit &gt;)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Engine</name>
      <anchorfile>structtracktion_1_1engine_1_1EditDeleter.html</anchorfile>
      <anchor>a3e1914489e4bed4f9f23cdeab34a43dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::EditFileOperations</name>
    <filename>classtracktion_1_1engine_1_1EditFileOperations.html</filename>
    <member kind="function">
      <type></type>
      <name>EditFileOperations</name>
      <anchorfile>classtracktion_1_1engine_1_1EditFileOperations.html</anchorfile>
      <anchor>a04bcc5d76016d66fbaa660a5c9fa4dc6</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditFileOperations</name>
      <anchorfile>classtracktion_1_1engine_1_1EditFileOperations.html</anchorfile>
      <anchor>afa011fd13e1dbce6ebeccc5f2a3e8327</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getEditFile</name>
      <anchorfile>classtracktion_1_1engine_1_1EditFileOperations.html</anchorfile>
      <anchor>ac95753f6062edd093307dfe0709a59dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save</name>
      <anchorfile>classtracktion_1_1engine_1_1EditFileOperations.html</anchorfile>
      <anchor>adae3a3ebf77bc99d8cf9b5358ec1ccaf</anchor>
      <arglist>(bool warnOfFailure, bool forceSaveEvenIfNotModified, bool offerToDiscardChanges)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveAs</name>
      <anchorfile>classtracktion_1_1engine_1_1EditFileOperations.html</anchorfile>
      <anchor>a60d563130a4927c9c1bc84d93fd2cbc1</anchor>
      <arglist>(const juce::File &amp;, bool forceOverwriteExisting=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveAs</name>
      <anchorfile>classtracktion_1_1engine_1_1EditFileOperations.html</anchorfile>
      <anchor>af8ad9d2e19c50247ab37e4e889061267</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeToFile</name>
      <anchorfile>classtracktion_1_1engine_1_1EditFileOperations.html</anchorfile>
      <anchor>a7c85a9f62a0372438ede2b79fdae52e2</anchor>
      <arglist>(const juce::File &amp;, bool writeQuickBinaryVersion)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveTempVersion</name>
      <anchorfile>classtracktion_1_1engine_1_1EditFileOperations.html</anchorfile>
      <anchor>aad04820366eafff805367962d03faaa1</anchor>
      <arglist>(bool forceSaveEvenIfUnchanged)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteTempVersion</name>
      <anchorfile>classtracktion_1_1engine_1_1EditFileOperations.html</anchorfile>
      <anchor>a159edfd5fc38551cce745f6359328623</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getTempVersionFile</name>
      <anchorfile>classtracktion_1_1engine_1_1EditFileOperations.html</anchorfile>
      <anchor>affdff934b4c90d18f84daba446fed8c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Time</type>
      <name>getTimeOfLastSave</name>
      <anchorfile>classtracktion_1_1engine_1_1EditFileOperations.html</anchorfile>
      <anchor>aec675e81ffca1fcd5353a7bd179b180b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::File</type>
      <name>getTempVersionOfEditFile</name>
      <anchorfile>classtracktion_1_1engine_1_1EditFileOperations.html</anchorfile>
      <anchor>a671c6249bafdc100e8e5643e227ec5ee</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>updateEditFiles</name>
      <anchorfile>classtracktion_1_1engine_1_1EditFileOperations.html</anchorfile>
      <anchor>a0376ef20b114ba699b886bfbd629ccae</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::EditInputDevices</name>
    <filename>classtracktion_1_1engine_1_1EditInputDevices.html</filename>
    <member kind="function">
      <type></type>
      <name>EditInputDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInputDevices.html</anchorfile>
      <anchor>ae9520cc559382f6e2fda3f95544f86d2</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;state)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditInputDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInputDevices.html</anchorfile>
      <anchor>a154619d431da4a82ab418b4aa6a4b76c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNumInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInputDevices.html</anchorfile>
      <anchor>a757357bf0fd6071fb5057932e16846da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInputDeviceAssigned</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInputDevices.html</anchorfile>
      <anchor>a814ff5f9811301726199f0823c6ba24c</anchor>
      <arglist>(const InputDevice &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAllInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInputDevices.html</anchorfile>
      <anchor>a1ec1cfd325584c5dcc788a07915b024c</anchor>
      <arglist>(AudioTrack &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearInputsOfDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInputDevices.html</anchorfile>
      <anchor>aa5123061c123cccbb9d99790c8a6a482</anchor>
      <arglist>(AudioTrack &amp;, const InputDevice &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance *</type>
      <name>getInputInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInputDevices.html</anchorfile>
      <anchor>a373ff71ac07845ebda994ac6e2f7d4e8</anchor>
      <arglist>(const AudioTrack &amp;, int index) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; InputDeviceInstance * &gt;</type>
      <name>getDevicesForTargetTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInputDevices.html</anchorfile>
      <anchor>a6d010d96a2bfed2e248a69addda6f945</anchor>
      <arglist>(const AudioTrack &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getInstanceStateForInputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInputDevices.html</anchorfile>
      <anchor>a33a6ec26e68d1c67d5d100ab97e513ab</anchor>
      <arglist>(const InputDevice &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::EditInsertPoint</name>
    <filename>classtracktion_1_1engine_1_1EditInsertPoint.html</filename>
    <class kind="struct">tracktion::engine::EditInsertPoint::Placement</class>
    <member kind="function">
      <type></type>
      <name>EditInsertPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a5af67b72ba565a0598b3c95ae1f5d203</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EditInsertPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a02a2ba6dcc948ca2cc01bb08e4de90bb</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setNextInsertPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a23a3ea26145cd36e0b0a015ec522240d</anchor>
      <arglist>(ClipOwner *, std::optional&lt; TimePosition &gt;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNextInsertPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a9b6a85b0b72e67d24f75aae48e3eff6f</anchor>
      <arglist>(TimePosition, const juce::ReferenceCountedObjectPtr&lt; Track &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNextInsertPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a9ba0284c336416d42a4220a3f2de87f3</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNextInsertPointAfterSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>ac317e6c5135e73eaae06406a7b54e914</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lockInsertPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a73880841bdabe92a8f7a9215286c644f</anchor>
      <arglist>(bool lock) noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>chooseInsertPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a854420dba2b8cf5c1d8a43d342bf42ed</anchor>
      <arglist>(juce::ReferenceCountedObjectPtr&lt; Track &gt; &amp;, TimePosition &amp;start, bool pasteAfterSelection, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>chooseInsertPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a48d630fdd6bff0da7ee398bbbfcb3cbd</anchor>
      <arglist>(juce::ReferenceCountedObjectPtr&lt; Track &gt; &amp;, TimePosition &amp;start, bool pasteAfterSelection, SelectionManager *, std::function&lt; bool(Track &amp;)&gt; allowedTrackPredicate)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Placement</type>
      <name>chooseInsertPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a7c26e77f7286b7178b8149ce1ff089ce</anchor>
      <arglist>(bool pasteAfterSelection, SelectionManager *, std::function&lt; bool(Track &amp;)&gt; allowedTrackPredicate)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a4b25bd3fdbf0ede2e5c680ce071e1fd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TimePosition</type>
      <name>nextInsertPointTime</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a28d6d58cdfd5b4ade3b59ef37ca7d63f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EditItemID</type>
      <name>nextInsertPointTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a6c2bdc114e831bd9cd8a5f896463b8fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EditItemID</type>
      <name>nextInsertPointClipOwner</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a793c37f405ea9e0b0f17c6e256cc1a9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>lockInsertPointCount</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>aab295637f4c6b6e88a157df3b6cd44e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>nextInsertIsAfterSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1EditInsertPoint.html</anchorfile>
      <anchor>a15ab2a4b46a885de821eeb0648ce222e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::EditItem</name>
    <filename>classtracktion_1_1engine_1_1EditItem.html</filename>
    <member kind="function">
      <type></type>
      <name>EditItem</name>
      <anchorfile>classtracktion_1_1engine_1_1EditItem.html</anchorfile>
      <anchor>a6b898d43783e33fdd3974262623a9a4c</anchor>
      <arglist>(EditItemID, Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditItem</name>
      <anchorfile>classtracktion_1_1engine_1_1EditItem.html</anchorfile>
      <anchor>ab060cc2c9618adc1d46cc5223644be4b</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EditItem</name>
      <anchorfile>classtracktion_1_1engine_1_1EditItem.html</anchorfile>
      <anchor>a348f41c6ab694ab7029b6fc55029d959</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1EditItem.html</anchorfile>
      <anchor>ac58f795c563b2aafe5d57853cf39a098</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion_1_1engine_1_1EditItem.html</anchorfile>
      <anchor>ade659271ced2f4a7085d02aecb02be50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>itemID</name>
      <anchorfile>classtracktion_1_1engine_1_1EditItem.html</anchorfile>
      <anchor>adaaf6ab54c8d526d1a3a9afc5acfe60e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::EditItemCache</name>
    <filename>structtracktion_1_1engine_1_1EditItemCache.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>EditItemCache</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a523f8e281ae887103c5d2792494d6728</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditItemCache</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a87e9a3d0f39942505c9a4c669de75141</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EditItemType *</type>
      <name>findItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a10f8d74da3a797521a86e9304a4c90a9</anchor>
      <arglist>(EditItemID id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitItems</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>ae028a99242687c7ad05be6ae9bc3a4f8</anchor>
      <arglist>(Visitor &amp;&amp;visitor) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a227ce0cee66b2cccec88430d34fd2f87</anchor>
      <arglist>(EditItemType &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a46bf913eecb1e693e5bd96d3d0a4b303</anchor>
      <arglist>(EditItemType &amp;item)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EditItemCache&lt; tracktion::engine::Clip &gt;</name>
    <filename>structtracktion_1_1engine_1_1EditItemCache.html</filename>
    <member kind="function">
      <type></type>
      <name>EditItemCache</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a523f8e281ae887103c5d2792494d6728</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditItemCache</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a87e9a3d0f39942505c9a4c669de75141</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Clip *</type>
      <name>findItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a10f8d74da3a797521a86e9304a4c90a9</anchor>
      <arglist>(EditItemID id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitItems</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>ae028a99242687c7ad05be6ae9bc3a4f8</anchor>
      <arglist>(Visitor &amp;&amp;visitor) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a227ce0cee66b2cccec88430d34fd2f87</anchor>
      <arglist>(tracktion::engine::Clip &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a46bf913eecb1e693e5bd96d3d0a4b303</anchor>
      <arglist>(tracktion::engine::Clip &amp;item)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditItemCache</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a523f8e281ae887103c5d2792494d6728</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditItemCache</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a87e9a3d0f39942505c9a4c669de75141</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Clip *</type>
      <name>findItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a10f8d74da3a797521a86e9304a4c90a9</anchor>
      <arglist>(EditItemID id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitItems</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>ae028a99242687c7ad05be6ae9bc3a4f8</anchor>
      <arglist>(Visitor &amp;&amp;visitor) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a227ce0cee66b2cccec88430d34fd2f87</anchor>
      <arglist>(tracktion::engine::Clip &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a46bf913eecb1e693e5bd96d3d0a4b303</anchor>
      <arglist>(tracktion::engine::Clip &amp;item)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EditItemCache&lt; tracktion::engine::ClipSlot &gt;</name>
    <filename>structtracktion_1_1engine_1_1EditItemCache.html</filename>
    <member kind="function">
      <type></type>
      <name>EditItemCache</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a523f8e281ae887103c5d2792494d6728</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditItemCache</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a87e9a3d0f39942505c9a4c669de75141</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::ClipSlot *</type>
      <name>findItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a10f8d74da3a797521a86e9304a4c90a9</anchor>
      <arglist>(EditItemID id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitItems</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>ae028a99242687c7ad05be6ae9bc3a4f8</anchor>
      <arglist>(Visitor &amp;&amp;visitor) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a227ce0cee66b2cccec88430d34fd2f87</anchor>
      <arglist>(tracktion::engine::ClipSlot &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a46bf913eecb1e693e5bd96d3d0a4b303</anchor>
      <arglist>(tracktion::engine::ClipSlot &amp;item)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditItemCache</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a523f8e281ae887103c5d2792494d6728</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditItemCache</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a87e9a3d0f39942505c9a4c669de75141</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::ClipSlot *</type>
      <name>findItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a10f8d74da3a797521a86e9304a4c90a9</anchor>
      <arglist>(EditItemID id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitItems</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>ae028a99242687c7ad05be6ae9bc3a4f8</anchor>
      <arglist>(Visitor &amp;&amp;visitor) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a227ce0cee66b2cccec88430d34fd2f87</anchor>
      <arglist>(tracktion::engine::ClipSlot &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a46bf913eecb1e693e5bd96d3d0a4b303</anchor>
      <arglist>(tracktion::engine::ClipSlot &amp;item)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EditItemCache&lt; tracktion::engine::Track &gt;</name>
    <filename>structtracktion_1_1engine_1_1EditItemCache.html</filename>
    <member kind="function">
      <type></type>
      <name>EditItemCache</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a523f8e281ae887103c5d2792494d6728</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditItemCache</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a87e9a3d0f39942505c9a4c669de75141</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Track *</type>
      <name>findItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a10f8d74da3a797521a86e9304a4c90a9</anchor>
      <arglist>(EditItemID id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitItems</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>ae028a99242687c7ad05be6ae9bc3a4f8</anchor>
      <arglist>(Visitor &amp;&amp;visitor) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a227ce0cee66b2cccec88430d34fd2f87</anchor>
      <arglist>(tracktion::engine::Track &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a46bf913eecb1e693e5bd96d3d0a4b303</anchor>
      <arglist>(tracktion::engine::Track &amp;item)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditItemCache</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a523f8e281ae887103c5d2792494d6728</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditItemCache</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a87e9a3d0f39942505c9a4c669de75141</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Track *</type>
      <name>findItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a10f8d74da3a797521a86e9304a4c90a9</anchor>
      <arglist>(EditItemID id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitItems</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>ae028a99242687c7ad05be6ae9bc3a4f8</anchor>
      <arglist>(Visitor &amp;&amp;visitor) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a227ce0cee66b2cccec88430d34fd2f87</anchor>
      <arglist>(tracktion::engine::Track &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemCache.html</anchorfile>
      <anchor>a46bf913eecb1e693e5bd96d3d0a4b303</anchor>
      <arglist>(tracktion::engine::Track &amp;item)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::EditItemID</name>
    <filename>structtracktion_1_1engine_1_1EditItemID.html</filename>
    <member kind="typedef">
      <type>std::map&lt; EditItemID, EditItemID &gt;</type>
      <name>IDMap</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>ad2cbbf762fd20937f7021641238019c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditItemID</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>ad40531caf0742eb92af207d491e3a849</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditItemID</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a3d8f1d3f6da4cd27f5e2cb3d86a32b34</anchor>
      <arglist>(const EditItemID &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>EditItemID &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>ab10f84d4de749072e988ead9bafbf6d8</anchor>
      <arglist>(const EditItemID &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a586163d481de3983c13a2af592e498e5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInvalid</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a8175c1e8f6ef2795ab8eda600bd05e8e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeID</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a7e6ce44315e9a8999ceda3332ce89608</anchor>
      <arglist>(juce::ValueTree &amp;, juce::UndoManager *) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProperty</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a3f39a8844b193f155f6ceff7d9530561</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;, juce::UndoManager *) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXML</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a8ca74a033818150641bd09c99e508897</anchor>
      <arglist>(juce::XmlElement &amp;, const juce::Identifier &amp;attributeName) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXML</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>ad5731cf323ea7090de7c1bd85c836177</anchor>
      <arglist>(juce::XmlElement &amp;, const char *attributeName) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator juce::var</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a7c44838b22eb136fef9c40629c1c32c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::var</type>
      <name>toVar</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a896f1dd9ea51d661aff919720ae90822</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>toString</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a57751565dbfe2eee0f38f8a6478403df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getRawID</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>aaa98946c801f0e6891092107d2623adc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a7e251edf5cbc3ab82ec0bb2348f75521</anchor>
      <arglist>(EditItemID other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a252f854c50d8f24c7586e513fb7def5c</anchor>
      <arglist>(EditItemID other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>abdacbdd98cca93088ce93f7cb0e68e87</anchor>
      <arglist>(EditItemID other) const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>fromID</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a752458f2efc32a4d850af03fe6f2b06d</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>readOrCreateNewID</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a5476e4d95f1f229d42db6ea71ba57095</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>fromVar</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a91b35e78604d5e7b94d5cba60054dcd9</anchor>
      <arglist>(const juce::var &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>fromString</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a5025b7097db3330e9b0c448170a3a631</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>fromProperty</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a1fb0f0dc4740f4cf58cf9f539f718ba3</anchor>
      <arglist>(const juce::ValueTree &amp;, const juce::Identifier &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>fromXML</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a88c0caaf82310e16a848ea9787a92b69</anchor>
      <arglist>(const juce::XmlElement &amp;, const char *attributeName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>fromXML</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a81dc92cfab8198c8f497f05340e2e95e</anchor>
      <arglist>(const juce::XmlElement &amp;, const juce::Identifier &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>findFirstIDNotIn</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a40a91836e8f953cbb2d82a9151400864</anchor>
      <arglist>(const std::vector&lt; EditItemID &gt; &amp;existingIDsSorted, uint64_t startFrom=1001)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>fromRawID</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a95dfbe9df9f5d2036ba3c74654aaa391</anchor>
      <arglist>(uint64_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; EditItemID &gt;</type>
      <name>parseStringList</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a8a82fe9034bd8d7bca7766011cb46d84</anchor>
      <arglist>(const juce::String &amp;list)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>listToString</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>ad1f9fb6d89668916aec59e56e186df51</anchor>
      <arglist>(const juce::Array&lt; EditItemID &gt; &amp;list)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; EditItemID &gt;</type>
      <name>findAllIDs</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a7927248bd57adcf951685bd5199ce09a</anchor>
      <arglist>(const juce::XmlElement &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; EditItemID &gt;</type>
      <name>findAllIDs</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a2eb6c18a1a3c8b5538820ecc2f80095c</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>remapIDs</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a5b4fbb45a66e025c58b066b2c5d6239f</anchor>
      <arglist>(juce::XmlElement &amp;, std::function&lt; EditItemID()&gt; createNewID, IDMap *remappedIDs=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>remapIDs</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>aa53cf2e1d8cb6b4ee234e752c594d15c</anchor>
      <arglist>(juce::XmlElement &amp;, Edit &amp;, IDMap *remappedIDs=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>remapIDs</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a3755b00e7ffc41fc1ff5203e99f21506</anchor>
      <arglist>(juce::ValueTree &amp;, juce::UndoManager *, std::function&lt; EditItemID()&gt; createNewID, IDMap *remappedIDs=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>remapIDs</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>acf3f74744a7586e0a220e0caa2c77f1a</anchor>
      <arglist>(juce::ValueTree &amp;, juce::UndoManager *, Edit &amp;, IDMap *remappedIDs=nullptr)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::function&lt; void(juce::ValueTree &amp;, const juce::Identifier &amp;, const std::map&lt; juce::String, EditItemID &gt; &amp;, juce::UndoManager *)&gt;</type>
      <name>applyNewIDsToExternalValueTree</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a7f833dc001ed985e752908cf56d1bf78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::function&lt; void(juce::XmlElement &amp;, const juce::String &amp;, const std::map&lt; juce::String, EditItemID &gt; &amp;)&gt;</type>
      <name>applyNewIDsToExternalXML</name>
      <anchorfile>structtracktion_1_1engine_1_1EditItemID.html</anchorfile>
      <anchor>a6be4b27a3a825b5f143bf42a649a2f84</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::EditLimits</name>
    <filename>structtracktion_1_1engine_1_1EditLimits.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>maxNumTracks</name>
      <anchorfile>structtracktion_1_1engine_1_1EditLimits.html</anchorfile>
      <anchor>acbbecc4f1b51f1141a0d953c6d1bdcb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxClipsInTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1EditLimits.html</anchorfile>
      <anchor>ad0710b6e51163e95227bbbfe2e6c3f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxPluginsOnClip</name>
      <anchorfile>structtracktion_1_1engine_1_1EditLimits.html</anchorfile>
      <anchor>a8c86e15232aed9bed0063d492a5f0e93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxPluginsOnTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1EditLimits.html</anchorfile>
      <anchor>a168f7e5d78c1f57787cf8b4d001e91fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxNumMasterPlugins</name>
      <anchorfile>structtracktion_1_1engine_1_1EditLimits.html</anchorfile>
      <anchor>aa84b7faf1917f740187ec35943294840</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>engine::EditLoader</name>
    <filename>classengine_1_1EditLoader.html</filename>
    <class kind="class">engine::EditLoader::Handle</class>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; Handle &gt;</type>
      <name>loadEdit</name>
      <anchorfile>classengine_1_1EditLoader.html</anchorfile>
      <anchor>a8d4cbbcdf2ac00edf9d7d671854f0702</anchor>
      <arglist>(Edit::Options, std::function&lt; void(std::unique_ptr&lt; Edit &gt;)&gt; editLoadedCallback)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; Handle &gt;</type>
      <name>loadEdit</name>
      <anchorfile>classengine_1_1EditLoader.html</anchorfile>
      <anchor>a02ca11346443d46cd40f9787f3749900</anchor>
      <arglist>(Engine &amp;, juce::File, std::function&lt; void(std::unique_ptr&lt; Edit &gt;)&gt; editLoadedCallback, Edit::EditRole role=Edit::forEditing, int numUndoLevelsToStore=Edit::getDefaultNumUndoLevels())</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::EditNodeBuilder</name>
    <filename>structtracktion_1_1engine_1_1EditNodeBuilder.html</filename>
    <member kind="variable" static="yes">
      <type>static std::function&lt; std::unique_ptr&lt; graph::Node &gt;std::unique_ptr&lt; tracktion::graph::Node &gt;)&gt;</type>
      <name>insertOptionalLastStageNode</name>
      <anchorfile>structtracktion_1_1engine_1_1EditNodeBuilder.html</anchorfile>
      <anchor>a54c80492f1c0cbc696adf8d07b96541d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Plugin::EditorComponent</name>
    <filename>structtracktion_1_1engine_1_1Plugin_1_1EditorComponent.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>allowWindowResizing</name>
      <anchorfile>structtracktion_1_1engine_1_1Plugin_1_1EditorComponent.html</anchorfile>
      <anchor>a7270731097ba25f4de95eaa598017021</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::ComponentBoundsConstrainer *</type>
      <name>getBoundsConstrainer</name>
      <anchorfile>structtracktion_1_1engine_1_1Plugin_1_1EditorComponent.html</anchorfile>
      <anchor>a2e9ac1fc0f185ee92d75088086f7eeb6</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::ContentType::EditPastingOptions</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</filename>
    <member kind="function">
      <type></type>
      <name>EditPastingOptions</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>a43db493812ce47b971afc56967a4fd40</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditPastingOptions</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>ac3fff71661fe3ef3c5820474efdc0617</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>a70e5cebff817f4052303bade8d6140be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditInsertPoint &amp;</type>
      <name>insertPoint</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>a6941bddf0397137e4ea95792cef39124</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Track::Ptr</type>
      <name>startTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>aa893d832f006e6a10b2d77fe76aa8e80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimePosition</type>
      <name>startTime</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>abd95bf8a3e93b9602c46bc3d2d89a115</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditItemID</type>
      <name>targetClipOwnerID</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>a1e2f23a963ade1c1f58456ea13c9c081</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SelectionManager *</type>
      <name>selectionManager</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>a693a768afae92c16945df2b2117c4192</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>silent</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>aa930f6eb86e6d4ff65ebbf9813d37465</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FileDragList::PreferredLayout</type>
      <name>preferredLayout</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>ad07a80c5887d05053509f6d4f8ec3db7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>setTransportToEnd</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ContentType_1_1EditPastingOptions.html</anchorfile>
      <anchor>a650b5bb8bac8725f66389e24a5666e2c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::EditPlaybackContext</name>
    <filename>classtracktion_1_1engine_1_1EditPlaybackContext.html</filename>
    <class kind="struct">tracktion::engine::EditPlaybackContext::RealtimePriorityDisabler</class>
    <class kind="struct">tracktion::engine::EditPlaybackContext::ScopedDeviceListReleaser</class>
    <member kind="function">
      <type></type>
      <name>EditPlaybackContext</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ad1de5501018f204cccbd1e8937462428</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditPlaybackContext</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ad7c2852a8cc3a22483842cfb1908ccd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeInstanceForDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a6e8b020b15e502eab76d7f758b1a7322</anchor>
      <arglist>(InputDevice &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addWaveInputDeviceInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a0c9281228771db04bfe950ca87ba4df7</anchor>
      <arglist>(InputDevice &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMidiInputDeviceInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a6cb01bf8544b838a424d0a3697767fc2</anchor>
      <arglist>(InputDevice &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a9f6c0638b1756cde83b2c8bf18499607</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createPlayAudioNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ac603bd5d9af9cd2f8e43ffd02a1d0723</anchor>
      <arglist>(TimePosition startTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createPlayAudioNodesIfNeeded</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>abd04bb8319324af4bb52e6cc8e15b7c3</anchor>
      <arglist>(TimePosition startTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reallocate</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a1c442b5e8ef21183726dd2a56595d0c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlaybackGraphAllocated</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a6623772f76e8b01762f40bf722a58238</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForPlaying</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a5f1ae246846e047b442e8e9af0497cea</anchor>
      <arglist>(TimePosition startTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a5c97fc28b774c28107297313acc08dc8</anchor>
      <arglist>(TimePosition startTime, TimePosition punchIn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>syncToContext</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>abd3b413fd8d88cfcc0db5b669c65242f</anchor>
      <arglist>(EditPlaybackContext *contextToSyncTo, TimePosition previousBarTime, TimeDuration syncInterval)</arglist>
    </member>
    <member kind="function">
      <type>tl::expected&lt; Clip::Array, juce::String &gt;</type>
      <name>stopRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a04988e26d62d3f7112273ce8e4fbf7b0</anchor>
      <arglist>(InputDeviceInstance &amp;, bool discardRecordings)</arglist>
    </member>
    <member kind="function">
      <type>tl::expected&lt; Clip::Array, juce::String &gt;</type>
      <name>stopRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a6968630c8cf2bbf1ae910ac89b12a9a3</anchor>
      <arglist>(TimePosition unloopedEnd, bool discardRecordings)</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>applyRetrospectiveRecord</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ad84f7eca6234de43834fa7d82447ee0f</anchor>
      <arglist>(juce::Array&lt; Clip * &gt; *clipsCreated=nullptr, bool armedOnly=false)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; InputDeviceInstance * &gt;</type>
      <name>getAllInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ac145d0da3702acb74dd5f385956429c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance *</type>
      <name>getInputFor</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>aa364fa861b618e0bc45ad5f1a52dcd23</anchor>
      <arglist>(InputDevice *) const</arglist>
    </member>
    <member kind="function">
      <type>OutputDeviceInstance *</type>
      <name>getOutputFor</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ab9d76cc6fa7213f7289f09075473957a</anchor>
      <arglist>(OutputDevice *) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlaying</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a9eb023c5dcc7c87010ba7eac43e3d3a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLooping</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>acb6e386c6c3db0ddfe8cbf0873f67d33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDragging</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>aa315a007537c00b60e0f26a560ff8338</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ac29559b6ee8c41af6ad7a87f58cd9f67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getUnloopedPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a8eb4a2116935a67272a55c11fb7eac38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>getLoopTimes</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>aa01fed97039193c44709ed6083a51931</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLatencySamples</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a78562862b8a3bdb5db5e87116af48c4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getAudibleTimelineTime</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a498fddff70cd29cbccc811f99edcc8bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a2eaa5be685c855eea04087f59ea72645</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateNumCPUs</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a3e02d60b5cbe5b57a417d803ab068377</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpeedCompensation</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a441033ce223ee53f4e269a68525f0a6d</anchor>
      <arglist>(double plusOrMinus)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTempoAdjustment</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a9fcb656cfc10b68627755acf0d4e7761</anchor>
      <arglist>(double plusOrMinusProportion)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a439ffc56cc49030828de8eeb238a76ba</anchor>
      <arglist>(TimePosition positionToJumpTo, std::optional&lt; TimePosition &gt; whenToJump={})</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; TimePosition &gt;</type>
      <name>getPendingPositionChange</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ac2d21517909d3d1f61cf8080c50329f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a6dbb645295a059e229cc6e77670248b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>aa762fe1a3089087538b0becab48d49c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a0e00ad34cc073054c9201f4d430edecc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlayPending</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ac74d13bdbfa9eaeed39627fa04fccf60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; SyncPoint &gt;</type>
      <name>getSyncPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a402a342387064eda5f5de461225d26b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>globalStreamTimeToEditTime</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ad51466a2a661345dfb2fc041aba5af0e</anchor>
      <arglist>(double) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>globalStreamTimeToEditTimeUnlooped</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a1b1f7f1ca6dbe36fc9c64f15bdb92210</anchor>
      <arglist>(double) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resyncToGlobalStreamTime</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ac7e5d36307c7e83de97ffaa97b70a32a</anchor>
      <arglist>(juce::Range&lt; double &gt;, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::PlayHead *</type>
      <name>getNodePlayHead</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a675b8525dbf2256135a69c9f310b9f33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blockUntilSyncPointChange</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a3d5c46f23637cba5ece214e9b2650ffc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumActivelyRecordingDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a74fe035681ac1d9c23c5f2c5d4a93ca3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>incrementNumActivelyRecordingDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a03aab2a6b55fd42453ebe0e26c9f8267</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decrementNumActivelyRecordingDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a69df7a669014802e96afb994ae53e77f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setThreadPoolStrategy</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ac6de9d3f2274288e63bd564c980e559f</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getThreadPoolStrategy</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a944cd91ec0546a022a7554d3d60b5766</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>enablePooledMemory</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>aebd8d59e161d18c4951f3a9323dd9ba4</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>enableNodeMemorySharing</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>aa4e7a3e67e3b8bba6558bf41a1e65d78</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>enableAudioWorkgroup</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ae7f9a29d167292b7cbe5a655f911194e</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>ab16bc1c851489c4454f9b8b81b627af0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TransportControl &amp;</type>
      <name>transport</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>aff3f9e24ff7e3dd10e30197c91572a45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LevelMeasurer</type>
      <name>masterLevels</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>aaaa24469afd368006cbe6e8c512950ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MidiNoteDispatcher</type>
      <name>midiDispatcher</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>a327379e624f40758439342dfb668dbd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>DeviceManager</name>
      <anchorfile>classtracktion_1_1engine_1_1EditPlaybackContext.html</anchorfile>
      <anchor>aead9a9546ea765538d3f95894afea912</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>EditProxyFunctions</name>
    <filename>structEditProxyFunctions.html</filename>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>requestStartPlayback</name>
      <anchorfile>structEditProxyFunctions.html</anchorfile>
      <anchor>a03abcff3e1a56a70b52a0c21634e9c07</anchor>
      <arglist>(ARAPlaybackControllerHostRef ref)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>requestStopPlayback</name>
      <anchorfile>structEditProxyFunctions.html</anchorfile>
      <anchor>ae13fcdc8c9671f4a4ffe67cbbe7303ed</anchor>
      <arglist>(ARAPlaybackControllerHostRef ref)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>requestSetPlaybackPosition</name>
      <anchorfile>structEditProxyFunctions.html</anchorfile>
      <anchor>acafae0b38cee0192e67b76def1c95f0d</anchor>
      <arglist>(ARAPlaybackControllerHostRef ref, ARATimePosition timePosition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>requestSetCycleRange</name>
      <anchorfile>structEditProxyFunctions.html</anchorfile>
      <anchor>aa4a085af51a53fe9b54df9a3a02668de</anchor>
      <arglist>(ARAPlaybackControllerHostRef ref, ARATimePosition startTime, ARATimeDuration duration)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>requestEnableCycle</name>
      <anchorfile>structEditProxyFunctions.html</anchorfile>
      <anchor>a630dc6a64945306631dd09afcfebf6ff</anchor>
      <arglist>(ARAPlaybackControllerHostRef ref, ARABool enable)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>engine::EditRenderer</name>
    <filename>classengine_1_1EditRenderer.html</filename>
    <class kind="class">engine::EditRenderer::Handle</class>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; Handle &gt;</type>
      <name>render</name>
      <anchorfile>classengine_1_1EditRenderer.html</anchorfile>
      <anchor>ae9bd1af3b8af1d4fbb4e1e706b2a0f39</anchor>
      <arglist>(Renderer::Parameters, std::function&lt; void(tl::expected&lt; juce::File, std::string &gt;)&gt; finishedCallback, std::shared_ptr&lt; juce::AudioFormatWriter::ThreadedWriter::IncomingDataReceiver &gt; thumbnailToUpdate={})</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::EditRenderJob</name>
    <filename>classtracktion_1_1engine_1_1EditRenderJob.html</filename>
    <base>tracktion::engine::RenderManager::Job</base>
    <member kind="function">
      <type></type>
      <name>~EditRenderJob</name>
      <anchorfile>classtracktion_1_1engine_1_1EditRenderJob.html</anchorfile>
      <anchor>af5bfab33bb1b41c4c570d98f6171d79d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const Renderer::Parameters &amp;</type>
      <name>getParams</name>
      <anchorfile>classtracktion_1_1engine_1_1EditRenderJob.html</anchorfile>
      <anchor>aec878dd1c5e54e76cf537c579a0a8639</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioThumbnail &amp;</type>
      <name>getAudioThumbnail</name>
      <anchorfile>classtracktion_1_1engine_1_1EditRenderJob.html</anchorfile>
      <anchor>a5e5c0dc59eb91b5121722e40a1852ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1EditRenderJob.html</anchorfile>
      <anchor>ad73ed71344893cb84e0f5c315fdeb7bb</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Renderer::RenderResult &amp;</type>
      <name>getResult</name>
      <anchorfile>classtracktion_1_1engine_1_1EditRenderJob.html</anchorfile>
      <anchor>abc22a0a466d7738bee47bb352d58db0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getLastError</name>
      <anchorfile>classtracktion_1_1engine_1_1EditRenderJob.html</anchorfile>
      <anchor>af82b329f9bd47d2ecbd1399711d11a7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr</type>
      <name>getOrCreateRenderJob</name>
      <anchorfile>classtracktion_1_1engine_1_1EditRenderJob.html</anchorfile>
      <anchor>ad66f0c0919d83acc5ec702f64c8617ad</anchor>
      <arglist>(Engine &amp;, Renderer::Parameters &amp;, bool deleteEdit, bool silenceOnBackup, bool reverse)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr</type>
      <name>getOrCreateRenderJob</name>
      <anchorfile>classtracktion_1_1engine_1_1EditRenderJob.html</anchorfile>
      <anchor>ad640cec10e16c2df985bfd41c237181b</anchor>
      <arglist>(Engine &amp;, const AudioFile &amp;destFile, const RenderOptions &amp;, ProjectItemID itemID, bool silenceOnBackup, bool reverse)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>setUpRender</name>
      <anchorfile>classtracktion_1_1engine_1_1EditRenderJob.html</anchorfile>
      <anchor>a1552b0d23e530e40cebfc84110ff7988</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>renderNextBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1EditRenderJob.html</anchorfile>
      <anchor>a08a527d67f5e106404a0c9a12441b227</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>completeRender</name>
      <anchorfile>classtracktion_1_1engine_1_1EditRenderJob.html</anchorfile>
      <anchor>ad2f64d52380a3bb258020c947465f1d5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setLastError</name>
      <anchorfile>classtracktion_1_1engine_1_1EditRenderJob.html</anchorfile>
      <anchor>ab5d2b2d5d23d0c859bd80c3144edfdd6</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::EditSnapshot</name>
    <filename>classtracktion_1_1engine_1_1EditSnapshot.html</filename>
    <class kind="struct">tracktion::engine::EditSnapshot::Listener</class>
    <class kind="struct">tracktion::engine::EditSnapshot::Marker</class>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; EditSnapshot &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a61627e5657a01d1deed62c5ace00b66e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EditSnapshot</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a76f1403106138070dc53221e75241ae9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProjectItemID</type>
      <name>getID</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>adf421d92f30389f488c4db70387787ea</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getFile</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a49d6db22e3a4532f57c9d74946a9bb6c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getState</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a7719df595a65581c95bf4540a000faaa</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a1642c6061d7b914f07f982a78a9bf7cf</anchor>
      <arglist>(juce::ValueTree, TimeDuration editLength)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a42655fbce94b5b911863441f8377e1ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshFromProjectManager</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>ac1089bc44eb92dd6694b340165e7c517</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshCacheAndNotifyListeners</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a1cf3c2f486ea2bffd0cf4e9f56ae6951</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; EditSnapshot &gt;</type>
      <name>getNestedEditObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>acbcfba9da0979b64676f6d329f79ab1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a28382a13225319de43217baaeab8c9a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>aad5694eb35f24038fd83bb33eeaa8da7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumAudioTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a0af9cda5e3fee3068fb4bc21002332a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndexOfTrackID</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a65327cd0ade183fbd3a3f372670d1f42</anchor>
      <arglist>(EditItemID trackID) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTrackName</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>adffadb956ba8544b8af589e84ee5177a</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTrackNameFromID</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a8c86f206e0caebd160da95345dc46d40</anchor>
      <arglist>(EditItemID trackID) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAudioTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>ab07c87f0d1544220ca9210ce11bc0221</anchor>
      <arglist>(int trackIndex) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTrackMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a6da2cbea4e08c642232bb668f47d8677</anchor>
      <arglist>(int trackIndex) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTrackSoloed</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>ae3cdfe5c4557eb65473524639af4e318</anchor>
      <arglist>(int trackIndex) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTrackSoloIsolated</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a3a650c9d2eaa72f0bef0722c27786c7b</anchor>
      <arglist>(int trackIndex) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>audioToGlobalTrackIndex</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>ac3da01e5a0509eaf1774f59a6bf120b5</anchor>
      <arglist>(int audioIndex) const</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getLength</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>ad2d2f76be9f032401d94321205a105b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getMarkIn</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a8d2e832ca9fe3e76b81ace71adcd0045</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getMarkOut</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>afed9112b492570d4405d37796bb0d3eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areMarksActive</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>aae1000ac2eb2eab1fcab2dd1e94e14be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>afa3e3e6d45da931a73c4198919371e4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTimeSigNumerator</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a82364aad9307fc90daa5d7f5211a8ca7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTimeSigDenominator</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>ab19a641ba7e54e0181546c52a0b76050</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPitch</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a5fc2770b5e8f9903f891ab05d76d485d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; Marker &gt; &amp;</type>
      <name>getMarkers</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>ad406ac5b4bef93fd875905b0c1ebd839</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; EditItemID &gt; &amp;</type>
      <name>getTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a4e3c6fe36a46ffff35f1a56de779d68b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; ProjectItemID &gt; &amp;</type>
      <name>getEditClips</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>aad8e296f9f97e9d77515dfd4002e9b03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; ProjectItemID &gt; &amp;</type>
      <name>getClipsSourceIDs</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a3cc913acd48522c6d99d0ef8454acb57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>aa25c2a425b65e8d0b63a912c23aede84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a540f4aecfc6760bdc4d4d7d1f83c85f8</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a5d2ef309d2c4e028bbdd62bdf3a1ce68</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr</type>
      <name>getEditSnapshot</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>a653ef7ef0bea2738e2955b974a509412</anchor>
      <arglist>(Engine &amp;, ProjectItemID)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1EditSnapshot.html</anchorfile>
      <anchor>aab5095ca86e2310f01f39b578215df41</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::EditTime</name>
    <filename>structtracktion_1_1engine_1_1EditTime.html</filename>
    <member kind="function">
      <type></type>
      <name>EditTime</name>
      <anchorfile>structtracktion_1_1engine_1_1EditTime.html</anchorfile>
      <anchor>a8fc1b3dd9baf914c0a9dbf331fc9a313</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditTime</name>
      <anchorfile>structtracktion_1_1engine_1_1EditTime.html</anchorfile>
      <anchor>afe6caa77ca2c33a78db35a89a21658c2</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditTime</name>
      <anchorfile>structtracktion_1_1engine_1_1EditTime.html</anchorfile>
      <anchor>a1a79ad753f6554fda3ca5941155d8020</anchor>
      <arglist>(BeatPosition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBeats</name>
      <anchorfile>structtracktion_1_1engine_1_1EditTime.html</anchorfile>
      <anchor>a88955740e25b37e2e7a6058568c69b93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend TimePosition</type>
      <name>toTime</name>
      <anchorfile>structtracktion_1_1engine_1_1EditTime.html</anchorfile>
      <anchor>aaf41dd9d30f5ced505bd97a56acaf090</anchor>
      <arglist>(EditTime, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend BeatPosition</type>
      <name>toBeats</name>
      <anchorfile>structtracktion_1_1engine_1_1EditTime.html</anchorfile>
      <anchor>a1ba4ae72bcc5f35e74104d74ca0effc6</anchor>
      <arglist>(EditTime, const TempoSequence &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::EditTimecodeRemapperSnapshot</name>
    <filename>structtracktion_1_1engine_1_1EditTimecodeRemapperSnapshot.html</filename>
    <member kind="function">
      <type>void</type>
      <name>savePreChangeState</name>
      <anchorfile>structtracktion_1_1engine_1_1EditTimecodeRemapperSnapshot.html</anchorfile>
      <anchor>a4b23da4f281ce086f781b4a4038ca9ba</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remapEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1EditTimecodeRemapperSnapshot.html</anchorfile>
      <anchor>a155a279a6b63e5aba7bd4a07d4af020c</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::EditTimeRange</name>
    <filename>structtracktion_1_1engine_1_1EditTimeRange.html</filename>
    <member kind="function">
      <type></type>
      <name>EditTimeRange</name>
      <anchorfile>structtracktion_1_1engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a880530f6bf49a9c880e2691a30f1c363</anchor>
      <arglist>(TimeRange)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditTimeRange</name>
      <anchorfile>structtracktion_1_1engine_1_1EditTimeRange.html</anchorfile>
      <anchor>ac9315423ca9285cbc6ae2f8f93b9be57</anchor>
      <arglist>(TimePosition, TimePosition)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditTimeRange</name>
      <anchorfile>structtracktion_1_1engine_1_1EditTimeRange.html</anchorfile>
      <anchor>abf132b070f5d49e2bed49954e74b5383</anchor>
      <arglist>(TimePosition, TimeDuration)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditTimeRange</name>
      <anchorfile>structtracktion_1_1engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a303df43374d0b5edc827037fceffba8b</anchor>
      <arglist>(BeatRange)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditTimeRange</name>
      <anchorfile>structtracktion_1_1engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a353b6dbedaa634cd6fb6ff8c3dde3c04</anchor>
      <arglist>(BeatPosition, BeatPosition)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditTimeRange</name>
      <anchorfile>structtracktion_1_1engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a06c3dfb92ffee7976b9fb10515fda8c3</anchor>
      <arglist>(BeatPosition, BeatDuration)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBeats</name>
      <anchorfile>structtracktion_1_1engine_1_1EditTimeRange.html</anchorfile>
      <anchor>ad13377664a57f812758fb7cdf20166e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend TimeRange</type>
      <name>toTime</name>
      <anchorfile>structtracktion_1_1engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a4fbead3db91f22cc94ac9c9cadd6e14f</anchor>
      <arglist>(EditTimeRange, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend BeatRange</type>
      <name>toBeats</name>
      <anchorfile>structtracktion_1_1engine_1_1EditTimeRange.html</anchorfile>
      <anchor>a9158d1fcc9d2f987af342f391f1ce7fb</anchor>
      <arglist>(EditTimeRange, const TempoSequence &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::legacy::EditTimeRange</name>
    <filename>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</filename>
    <member kind="function">
      <type></type>
      <name>EditTimeRange</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>aebbbcdb741cbb8e11179e4897e8f41f7</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditTimeRange</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a97cb58a6a60ecde34d2bcf2a0570f6f4</anchor>
      <arglist>(const EditTimeRange &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a986239b39cde73561239ca4e2b0c632b</anchor>
      <arglist>(const EditTimeRange &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditTimeRange</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>ac7dd92bc81f0d60304e6ac430b14e076</anchor>
      <arglist>(double start, double end)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditTimeRange</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a151ad93e2bfd1b6f30d5e3f95dcedd3c</anchor>
      <arglist>(juce::Range&lt; double &gt; timeRange)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStart</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a8e34444fbedac9f0a58eea592ac70e2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEnd</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>aac2c2a6fa47bf84982f40462948e93f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLength</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a65be9b814612439f6d7be59719444020</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCentre</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a5dfb137b0b86bcc901e7ef04a8cd47f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>clipValue</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a61e98d644cfec372783806d65add871f</anchor>
      <arglist>(double value) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a065c87fb4443996997d216f6b60cd1d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a1d96e051ce41cb3af9fb8a4faffb96a2</anchor>
      <arglist>(const EditTimeRange &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a2354380a1a7b4f7e2e955c95df004ac1</anchor>
      <arglist>(const EditTimeRange &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>overlaps</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a0947d3caabd1515befe56412ab8956a5</anchor>
      <arglist>(const EditTimeRange &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a852930618abc073e0e07fe889a647fa1</anchor>
      <arglist>(const EditTimeRange &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a61049321f7a1dd8a4ce7f601b100a3c3</anchor>
      <arglist>(double time) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsInclusive</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a031e71195beb239a6f1cfe48ca4566a8</anchor>
      <arglist>(double time) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getUnionWith</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>ac6c6f3ac6bfba3f015f8133351cdc398</anchor>
      <arglist>(EditTimeRange other) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>getIntersectionWith</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>abbee6a29fe2a23b23548d423db5aeeb6</anchor>
      <arglist>(EditTimeRange other) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>rescaled</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a5d0398c36426d7e57f5aad0a2e39e29e</anchor>
      <arglist>(double anchorTime, double factor) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>constrainRange</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a099455e5bb9108e68855a85aeec68b45</anchor>
      <arglist>(EditTimeRange rangeToConstrain) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>expanded</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a431f99e8bd114b67c6ea6fac56462cd9</anchor>
      <arglist>(double amount) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>reduced</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a17428d9e8ce61de89068119024d902e8</anchor>
      <arglist>(double amount) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>movedToStartAt</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a31f3452a3cfaac5350cd7bf8a44e9cd1</anchor>
      <arglist>(double newStart) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>movedToEndAt</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>ac7472a1165ff4e42834fc3c7da4fb12e</anchor>
      <arglist>(double newEnd) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>withStart</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>aeb5d62b62d10081a842f15f3ee452ca7</anchor>
      <arglist>(double newStart) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>withEnd</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a64adbdd92f2cc65318d2dc7eb2fe46a5</anchor>
      <arglist>(double newEnd) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>withLength</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>af2ca457cfffe0c9178066d92c8fe85f0</anchor>
      <arglist>(double newLength) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>operator+</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a92d523bb84bf28585abe6c1807f9699c</anchor>
      <arglist>(double amount) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeRange</type>
      <name>operator-</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>acf1a80ae1909cc9d2d72c62ccb351f2c</anchor>
      <arglist>(double amount) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditTimeRange</type>
      <name>between</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a675a6961cba0b3ac80cfd94c922ff262</anchor>
      <arglist>(double time1, double time2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditTimeRange</type>
      <name>withStartAndLength</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>aa664b59537da5b8667075a296539964b</anchor>
      <arglist>(double time1, double length)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditTimeRange</type>
      <name>emptyRange</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a0233ee24ffe765f267ecd02b8f435792</anchor>
      <arglist>(double start)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>start</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>aaf60a342034473e454bd0e9aa4b66f31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>end</name>
      <anchorfile>structtracktion_1_1engine_1_1legacy_1_1EditTimeRange.html</anchorfile>
      <anchor>a4f8cab3820645ad1092b103165b6b710</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::PlayHead::EditTimeWindow</name>
    <filename>structtracktion_1_1engine_1_1PlayHead_1_1EditTimeWindow.html</filename>
    <member kind="function">
      <type></type>
      <name>EditTimeWindow</name>
      <anchorfile>structtracktion_1_1engine_1_1PlayHead_1_1EditTimeWindow.html</anchorfile>
      <anchor>a4bb8243a5c24ca9ecb15e8954f482b8e</anchor>
      <arglist>(legacy::EditTimeRange range1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditTimeWindow</name>
      <anchorfile>structtracktion_1_1engine_1_1PlayHead_1_1EditTimeWindow.html</anchorfile>
      <anchor>ab0cac0f24e350e7326dbd10534e1e89b</anchor>
      <arglist>(legacy::EditTimeRange range1, legacy::EditTimeRange range2)</arglist>
    </member>
    <member kind="variable">
      <type>legacy::EditTimeRange</type>
      <name>editRange1</name>
      <anchorfile>structtracktion_1_1engine_1_1PlayHead_1_1EditTimeWindow.html</anchorfile>
      <anchor>a10e878224462008310a5629cb732f7d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>legacy::EditTimeRange</type>
      <name>editRange2</name>
      <anchorfile>structtracktion_1_1engine_1_1PlayHead_1_1EditTimeWindow.html</anchorfile>
      <anchor>a1eb072c0118281d2b0234197a3a31a59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isSplit</name>
      <anchorfile>structtracktion_1_1engine_1_1PlayHead_1_1EditTimeWindow.html</anchorfile>
      <anchor>a4acd13474cfa9fcfd8e488cfa6f1e8ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::TimeStretcher::ElastiqueProOptions</name>
    <filename>structtracktion_1_1engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</filename>
    <member kind="function">
      <type></type>
      <name>ElastiqueProOptions</name>
      <anchorfile>structtracktion_1_1engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</anchorfile>
      <anchor>ab0270af579ae14265e47c1c592915c22</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ElastiqueProOptions</name>
      <anchorfile>structtracktion_1_1engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</anchorfile>
      <anchor>a8c84a842e599b35c4e9e270970f46316</anchor>
      <arglist>(const juce::String &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>toString</name>
      <anchorfile>structtracktion_1_1engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</anchorfile>
      <anchor>a10aedf8ebb7eb141800813e683165c5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion_1_1engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</anchorfile>
      <anchor>a2e2c8a27a4fe3c5454198ce5dc1fda07</anchor>
      <arglist>(const ElastiqueProOptions &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion_1_1engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</anchorfile>
      <anchor>a021ca98e0b90ade6be7d0b2530d2159a</anchor>
      <arglist>(const ElastiqueProOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>midSideStereo</name>
      <anchorfile>structtracktion_1_1engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</anchorfile>
      <anchor>a1cafc593c5133eb3ae373fd6961ac33e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>syncTimeStrPitchShft</name>
      <anchorfile>structtracktion_1_1engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</anchorfile>
      <anchor>a46ac48c580876dca23bf75966ce62ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>preserveFormants</name>
      <anchorfile>structtracktion_1_1engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</anchorfile>
      <anchor>a0aeec1f072826c913bc6a1b72806c30d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>envelopeOrder</name>
      <anchorfile>structtracktion_1_1engine_1_1TimeStretcher_1_1ElastiqueProOptions.html</anchorfile>
      <anchor>a00e418f1ef84cb82d93ffbd6fb05f81c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::Engine</name>
    <filename>classtracktion_1_1engine_1_1Engine.html</filename>
    <member kind="typedef">
      <type>juce::WeakReference&lt; Engine &gt;</type>
      <name>WeakRef</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>adbb75db4a93dd93cd8e0b20dd818343e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Engine</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>a24c8f766d22655b0dbe6f5f9fc6c1f5f</anchor>
      <arglist>(juce::String applicationName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Engine</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>a3b03669f509ce28aa4c5724474047604</anchor>
      <arglist>(juce::String applicationName, std::unique_ptr&lt; UIBehaviour &gt;, std::unique_ptr&lt; EngineBehaviour &gt;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Engine</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>acb3a3f315d29c8824da5c1a191a4b3d3</anchor>
      <arglist>(std::unique_ptr&lt; PropertyStorage &gt;, std::unique_ptr&lt; UIBehaviour &gt;, std::unique_ptr&lt; EngineBehaviour &gt;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Engine</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>aeff86cf3faa4e74ebf3377b3354cae9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TemporaryFileManager &amp;</type>
      <name>getTemporaryFileManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>aafb7c65adb0020dbbc9100a8b58c38ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AudioFileFormatManager &amp;</type>
      <name>getAudioFileFormatManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>af546ed703cacd2902ada63cdf80837ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PropertyStorage &amp;</type>
      <name>getPropertyStorage</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>a6f3f6b2f4a2861de392c9cd9681d6947</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UIBehaviour &amp;</type>
      <name>getUIBehaviour</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>ac7e66d865942b4f4cb4930a44b5a6099</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EngineBehaviour &amp;</type>
      <name>getEngineBehaviour</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>aa6788afa540345714dc0dea305c14b49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DeviceManager &amp;</type>
      <name>getDeviceManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>a2f41643a1316387f35ac9db1ad5e8fcc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MidiProgramManager &amp;</type>
      <name>getMidiProgramManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>a66981d447248a7db1ca3c0bbdfbaf8ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ExternalControllerManager &amp;</type>
      <name>getExternalControllerManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>a3f6706dab97c97dfc32b2cce819bbec5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RenderManager &amp;</type>
      <name>getRenderManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>a86e4a3a58d337c5b617e5dfc8cb083c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BackgroundJobManager &amp;</type>
      <name>getBackgroundJobs</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>a4b3d2fff251958c787448c34786876cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AudioFileManager &amp;</type>
      <name>getAudioFileManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>a4d1c4a38a9a58aaa683fcf088f21a1b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MidiLearnState &amp;</type>
      <name>getMidiLearnState</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>ab46a00e9215f16053d1b7f951dab5816</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PluginManager &amp;</type>
      <name>getPluginManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>a70c98a2bc9da6ee1c364e6c93ae244cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EditDeleter &amp;</type>
      <name>getEditDeleter</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>aa5858ff5e5557847b06c92843dde8718</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RecordingThumbnailManager &amp;</type>
      <name>getRecordingThumbnailManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>a7df481056f7d81ee32aa21a44338babb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WaveInputRecordingThread &amp;</type>
      <name>getWaveInputRecordingThread</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>aa17b19e8452237a35ad300a61bb155ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ActiveEdits &amp;</type>
      <name>getActiveEdits</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>ae9a78269a5fb8e240a5ae5744830f84d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>GrooveTemplateManager &amp;</type>
      <name>getGrooveTemplateManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>a7ce2ed444958bc97fa805e4c221c5b93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CompFactory &amp;</type>
      <name>getCompFactory</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>ac32fd33dfd3e14ad4d9b3ee30fb5dfa9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WarpTimeFactory &amp;</type>
      <name>getWarpTimeFactory</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>a0a611b1b5f7ed82eafc8d2b1fd673660</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ProjectManager &amp;</type>
      <name>getProjectManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>aa9e40a947dbbeccd7aea2e00131b01c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SharedTimer &amp;</type>
      <name>getBackToArrangerUpdateTimer</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>a2a70b70c4d307f178f7f3999f25c371e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BufferedAudioFileManager &amp;</type>
      <name>getBufferedAudioFileManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>a9628a93ba0e4b53f60b46490c3156436</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getVersion</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>afaa5f835c8eb04751b59e0545f747ce5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; Engine * &gt;</type>
      <name>getEngines</name>
      <anchorfile>classtracktion_1_1engine_1_1Engine.html</anchorfile>
      <anchor>abacf2371bc7c297eeb13a7d7084ec632</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::EngineBehaviour</name>
    <filename>classtracktion_1_1engine_1_1EngineBehaviour.html</filename>
    <class kind="struct">tracktion::engine::EngineBehaviour::ClipDefaults</class>
    <class kind="struct">tracktion::engine::EngineBehaviour::ControlSurfaces</class>
    <class kind="struct">tracktion::engine::EngineBehaviour::LevelMeterSettings</class>
    <member kind="function">
      <type></type>
      <name>EngineBehaviour</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>abd127976962524290705a06c9daea361</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EngineBehaviour</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a8f3e82ef9a836ee51503a519436d4c0d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Plugin::Ptr</type>
      <name>createCustomPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a60fed1b5b939e8d1503839439434a4f3</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doAdditionalInitialisation</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>afc20b68795215ef15fc02d9a655a1542</anchor>
      <arglist>(ExternalPlugin &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; juce::PluginDescription &gt;</type>
      <name>findDescriptionForFileOrID</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a77cd2758aaa9796abef5f166f4fb351c</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPluginDisabled</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a0ce40de55e9c8b6a2a284fd36e62ae3a</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPluginDisabled</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a8f2b5f1f67c4c6099865229a80543ab3</anchor>
      <arglist>(const juce::String &amp;, bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>shouldLoadPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a2a1b87de6e250f15d993c90869e1cf4d</anchor>
      <arglist>(ExternalPlugin &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>saveCustomPluginProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>aa963929141512658b6b282594a9818e5</anchor>
      <arglist>(juce::ValueTree &amp;, juce::AudioPluginInstance &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canScanPluginsOutOfProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a6fc10afdb07b280c2b117e828d8595da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>autoInitialiseDeviceManager</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a9107f745067757cab9c5e5d58b188d9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>addSystemAudioIODeviceTypes</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>aeb8ba08bf8b3da07a756fa9194ea7ae0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>shouldOpenAudioInputByDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a7a23d271f32c1c8d97e5894bad5e234c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDescriptionOfWaveDevicesSupported</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a8f1b310af4db8572734e038f97ece891</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>describeWaveDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>afd15850080de947e66bb89ec1c7664f6</anchor>
      <arglist>(std::vector&lt; WaveDeviceDescription &gt; &amp;, juce::AudioIODevice &amp;, bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>shouldBypassedPluginsBeRemovedFromPlaybackGraph</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>ae1671d970928e6e411b0907759982d9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>shouldProcessAuxSendWhenTrackIsMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a4d8cd2b6b227cfa74104b096891418ba</anchor>
      <arglist>(AuxSendPlugin &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>enableReadAheadForTimeStretchNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a78646d63156e5bab0683f521b36ea775</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isMidiDriverUsedForIncommingMessageTiming</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a40e9c90accc2fb7e35d881c2699cfcb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMidiDriverUsedForIncommingMessageTiming</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a5eac74dc9b821fdade9bbe6d76b3d3d9</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>shouldPlayMidiGuideNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>ad6871c4d9a5cd5f4333d7622e598bc08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumberOfCPUsToUseForAudio</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a58f6412369b6ce814c4c0d9e0d568d2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>shouldProcessMutedTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a96bbd9eb8f0d87dc9bcab7a4acf929b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>muteTrackContentsWhilstRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>ab01ae468c0669b8949015b4453f6ceae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setProcessPriority</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a6619ff1dd9cf8adf3d42ae2ae0acd873</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getMiddleCOctave</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a4bf6af8049c0afb0240d0ddc9b22593c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMiddleCOctave</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a1cf026c35e59330c677c2a0a1384e063</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>editHasBeenSaved</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a5c188621dd2caecfea561d322d9490a7</anchor>
      <arglist>(Edit &amp;, juce::File)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EditLimits</type>
      <name>getEditLimits</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a37869df60395e549390c9207842a4d8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::ReferenceCountedObjectPtr&lt; RackType &gt;</type>
      <name>createPresetRackType</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a5904596b74d210355380f7673339ea09</anchor>
      <arglist>(int, Edit &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::Array&lt; Exportable::ReferencedItem &gt;</type>
      <name>getReferencedItems</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a2b48d4dc65db1f9a966f5f06087e1747</anchor>
      <arglist>(ExternalPlugin &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reassignReferencedItem</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a0d8fd0947befe38f9d3584dbc99402dc</anchor>
      <arglist>(Clip &amp;, const Exportable::ReferencedItem &amp;, ProjectItemID, double)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::Array&lt; Exportable::ReferencedItem &gt;</type>
      <name>getReferencedItems</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a59fe29e606c9d96c2fb66a0fe55d34c0</anchor>
      <arglist>(Clip &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reassignReferencedItem</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>abceff86ac26fc465a24da48921e6ebcc</anchor>
      <arglist>(ExternalPlugin &amp;, const Exportable::ReferencedItem &amp;, ProjectItemID, double)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>areClipSlotsEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a172ed3ca1a2fd676297aa0a96de543b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDefaultNoteColour</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>afe6eca43fd05e57eb6ed3df9aa12857f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ignoreBWavTimestamps</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a2d7d362c66d34cf364ace7b39eb35f04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>areAudioClipsRemappedWhenTempoChanges</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a5dc8a12b521122b53d10ba09bf7c3981</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAudioClipsRemappedWhenTempoChanges</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>abfa96d58a339f60c225219228a6d8956</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>areAutoTempoClipsRemappedWhenTempoChanges</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a93ca4eeb81963a07f9bae329f1e8de70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAutoTempoClipsRemappedWhenTempoChanges</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a708d319277a9aa2e2b87f9139e32fb9a</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>areMidiClipsRemappedWhenTempoChanges</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a4d5277b05c98e08a82b606340b9297d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMidiClipsRemappedWhenTempoChanges</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a5f3ce9ad7ad16bc56f15f03ce79f969e</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>arePluginsRemappedWhenTempoChanges</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>ae507822ed583b2c7df32f4a1bb024db2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPluginsRemappedWhenTempoChanges</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a89ad26d9c394aa361f209cd0f506c3e6</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>lengthOfOneBeatDependsOnTimeSignature</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a819176c2c08784e9c21b4b7c26a547c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::MidiMessageSequence</type>
      <name>createPlaybackMidiSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>afa4cf049347df32d5cb76329f4057138</anchor>
      <arglist>(const MidiList &amp;list, MidiClip &amp;clip, MidiList::TimeBase tb, bool generateMPE)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDefaultLoopedSequenceType</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>aeaf38dafaf8bfb05699f5e7da2a2d98b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>autoAddClipEdgeFades</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>afbc7c115034593c0915d100f071ded40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>interpolateAutomation</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a7605666b7f1e84e8d7c8166bb5823533</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LevelMeterSettings</type>
      <name>getLevelMeterSettings</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>af7308deba6f8c9a4567c2bb8e0d1f58a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLevelMeterSettings</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a9d6cfdc2c70a6c4cc8c2448609518fbf</anchor>
      <arglist>(LevelMeterSettings)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ClipDefaults</type>
      <name>getClipDefaults</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>afa77c190ce1e9f1ec2187a97aac3a2ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>newClipAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a4661476f3cb69540127dbb180ad83193</anchor>
      <arglist>(Clip &amp;, [[maybe_unused]] bool fromRecording)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ControlSurfaces</type>
      <name>getDesiredControlSurfaces</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a91b4473992ad5fd88cce3e3a4e5b9822</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ControlSurface *</type>
      <name>getCustomControlSurfaceForXML</name>
      <anchorfile>classtracktion_1_1engine_1_1EngineBehaviour.html</anchorfile>
      <anchor>a6bfaee0f0367be6a6e98115f0f2ef32a</anchor>
      <arglist>(ExternalControllerManager &amp;, const juce::XmlElement &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::VSTXML::Entry</name>
    <filename>structtracktion_1_1engine_1_1VSTXML_1_1Entry.html</filename>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Entry.html</anchorfile>
      <anchor>a96ab9edb940f2daf0ad82c7a900feb79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Range</type>
      <name>range</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Entry.html</anchorfile>
      <anchor>afe15d509d2528c33bc64a26b3c763591</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AudioFileUtils::EnvelopeFollower</name>
    <filename>classtracktion_1_1engine_1_1AudioFileUtils_1_1EnvelopeFollower.html</filename>
    <member kind="function">
      <type></type>
      <name>EnvelopeFollower</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileUtils_1_1EnvelopeFollower.html</anchorfile>
      <anchor>a6540b894179886c7ed25ebffe5339ded</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processEnvelope</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileUtils_1_1EnvelopeFollower.html</anchorfile>
      <anchor>a1eda453f3df527ffed2f49c60b071c3d</anchor>
      <arglist>(const float *inputBuffer, float *outputBuffer, int numSamples) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoefficients</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileUtils_1_1EnvelopeFollower.html</anchorfile>
      <anchor>afef0fff78d3a0e513370edeb0884a92e</anchor>
      <arglist>(float attack, float release) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::EnvelopeFollowerModifier</name>
    <filename>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</filename>
    <base>tracktion::engine::Modifier</base>
    <base protection="private">tracktion::engine::ValueTreeAllEventListener</base>
    <class kind="struct">tracktion::engine::EnvelopeFollowerModifier::Assignment</class>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; EnvelopeFollowerModifier &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a3c7c9272e041f0bf60468457a3e6599e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; EnvelopeFollowerModifier &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>ac5f1029a0da1e630e29f896c291eba26</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnvelopeFollowerModifier</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a847ef03ecf663e1e40495aef66c297a9</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EnvelopeFollowerModifier</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a314f4efdd68fc5ae0337f0d1b62eb071</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a4eb76641a3457e09b526f26754440e23</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a96484618fa5758c74155e1551f416652</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>afea4c00dfac142337d15a58a4421b83b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getEnvelopeValue</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a3c7f333864908d39a64128b5f4d4c4ea</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::ModifierAssignment *</type>
      <name>createAssignment</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a248b0facef2f84fd2df9051f0891a410</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getAudioInputNames</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>afc7f5723f0f2e4abff478c836eb3f214</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>ProcessingPosition</type>
      <name>getProcessingPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a02b536c58199cdc222554a2483646a72</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a0cf0dae001edc23763a91139361a6d83</anchor>
      <arglist>(double sampleRate, int blockSizeSamples) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>acd6ccd27fcb1e4550853b56d2bdadaaa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>ab91bb51a0316da86360aba487917328b</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a470af23a3d4b779819b25e5d64d3bb32</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>gainDb</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a6e5e44bcf8024edc15ca2c148a64c4b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>attack</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>aedb5786ed6e06eca3eb337feca7f612f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>hold</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a45e97779e8aa3ca8ef7bbac0c9e19a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>release</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>aa3267b53ef1df290168c468e404ffb46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>depth</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a50e4c2bc1dcccdaf3c5bfd2960f161e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>offset</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>ad99ae5448d6963a16970b397ecdb4cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>lowPassEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a753fe189315c234b53a1fbeb18400279</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>highPassEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a19d0814034b53ad9b785e16283fffebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>lowPassFrequency</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>ad492465e1a82bb331ba4fe9f7236e578</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>highPassFrequency</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a24c6440af678227437edd4b52001b6b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>gainDbParam</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a4f83c9871a34dee7b65ad6ea0d939ab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>attackParam</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a5ed7bbacd7c9fea5663dfb74fb0e9f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>holdParam</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>aed2b87f4a3853c858f7c08e85acb56d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>releaseParam</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a3139cbbbfe8ce2327de6b4a1adbf7309</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>depthParam</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>afeba6e8b8894b5f6e2877d76e7c31017</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>offsetParam</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a517631a0f899bf7528cbc874505a678e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>lowPassEnabledParam</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a44708d4c40037c09f724b85e39e0c23f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>highPassEnabledParam</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>ab09fa8c56ff1bd124b00b41f6e7d3967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>lowPassFrequencyParam</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>acfcd7e7b15fcfd6f0563c652410863bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>highPassFrequencyParam</name>
      <anchorfile>classtracktion_1_1engine_1_1EnvelopeFollowerModifier.html</anchorfile>
      <anchor>a12cb6fb1e32c6d3f7e1a498232116977</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::EqualiserPlugin</name>
    <filename>classtracktion_1_1engine_1_1EqualiserPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>EqualiserPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>aef5c825c192e1c090c8bc9f56e384d83</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EqualiserPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a107db25292d41f467e7c26a370753b24</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getDBGainAtFrequency</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>af63148705eac09802bb7bb5d4b604563</anchor>
      <arglist>(float f)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a83ac19d6aee3e1712fa41caaa3e82104</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ac767c9e86e9838358182b8b619ab1fe5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a483f3f0f2ba73dee01d62eb6ad83fea0</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTooltip</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>af495de3a050aa8dbbebab427105351d1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a6ed56b83ef5df443a41085dbce4360c7</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a99eff88f41eb7ae016d19a24b156077e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>aea0fd35f872936f0ece46fc869ba126a</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a699144e633ad23ed06242835bdc60cd4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>aea84dcfd18399bd9944fe5f766d15ab2</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a5df6434438aa466ba3a6af4676926061</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a956e5716d4b5c83f4bdae79a90a4e41c</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLowGain</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a32e70fec7c5392e53a0ffacc1faed632</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLowFreq</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>aa9327ea5c64fd15c7ab9b4579347e45d</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLowQ</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a44000ab181f2db114b2e36c2cdf56c6f</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidGain1</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a53c8b5cfbebbe90c57064a7c8338f73c</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidFreq1</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a3ed82f9c2282e24f253c8682dbc4a7c1</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidQ1</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ab2455a6d9849f3300ab4e70012130b22</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidGain2</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ae21130efa9e2f773061826b6e23b1982</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidFreq2</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a77f72ce762047ae7a582003e8598afb9</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidQ2</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a61e5c16fb9cf831749cd0125de274b27</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHighGain</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>adea83e60717870ac7cab44a0a747202d</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHighFreq</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a5f55bb592a33d74c7224dc300cb4bb09</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHighQ</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>aab418cec16abcece0e5a47ed65ede993</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>af808f8a09aac9dee886b06de096a82bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>loFreqValue</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a3c007c4ed7b9da42bfe8b545e9ebf9eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>loGainValue</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>aa6927fa1908cd69b95ddda2c37fcdc87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>loQValue</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a128d96f26ee0fc3cc7b3918b0099b5f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>hiFreqValue</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a300eede6146a5dd167ca3a00506a1325</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>hiGainValue</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a53a8ce305263ea76c02f9b9379bfbaf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>hiQValue</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ac921d543f3528b95eaa141b61b19d806</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>midFreqValue1</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a06107f7b306e7b804657b097456d32ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>midGainValue1</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ac02d72acc46e5d1f45b1e740344e55f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>midQValue1</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ab6bdd0e955a5dea880a520e1ee88f99d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>midFreqValue2</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a66f0d9327b903c0ef26ff114445a9da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>midGainValue2</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a0290b6cfa331b63cfbf3106e2a720d7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>midQValue2</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>afe8dad2355e466b40396e1aad79a63e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>phaseInvert</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>af5a425868fe3275005be63bfe1c008cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>loFreq</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a4f6568ea401229f6b5aea19606d3f0e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>loGain</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a0d6d9e3ef941f9a888aff11b97ba7414</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>loQ</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>aab676775effe49dc086de9f0454baddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>hiFreq</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a58e3c5369ec00a38e3c9546b539657b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>hiGain</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a19f62afdbe00b84386a9957b2bccad5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>hiQ</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a2a952b176527c4749c56768072298cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>midFreq1</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a80549c0db3ddd0a41b2371e4537f0a72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>midGain1</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a0f16bcba86998420d93b6f89e089cdac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>midQ1</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a0feef4ec279f1540b476f583f8f78bf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>midFreq2</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>aee8b2f68950cfef8fdec440d6e2a00ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>midGain2</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>afc4546678e129e061299df223303e92d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>midQ2</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ad6db7fb2c0f16feab5fa937ff5cee2cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>af818d3f549b3b0f4969c3d06e95c14ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr float</type>
      <name>minFreq</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a2f7d89c527491a4c757b09230b78e719</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr float</type>
      <name>maxFreq</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a643115e5c08e41349732bfc0a765b3c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr float</type>
      <name>minGain</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>ac83022a8b1a5121fb9c73296c5c4b913</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr float</type>
      <name>maxGain</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>aea30427e73c1f265bcdfbb378ad43a69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr float</type>
      <name>minQ</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a1e33c9ba38d20a50b37d28cd9f9eff87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr float</type>
      <name>maxQ</name>
      <anchorfile>classtracktion_1_1engine_1_1EqualiserPlugin.html</anchorfile>
      <anchor>a05d1fb0680e96c0021b5f28c6f1898f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ExpEnvelope</name>
    <filename>classtracktion_1_1engine_1_1ExpEnvelope.html</filename>
    <class kind="struct">tracktion::engine::ExpEnvelope::Parameters</class>
    <member kind="function">
      <type></type>
      <name>ExpEnvelope</name>
      <anchorfile>classtracktion_1_1engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>adb2154af1e108eab8d794b2404b80f1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classtracktion_1_1engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>aaa816a35215f3b454b34b7a44af6510e</anchor>
      <arglist>(const Parameters &amp;newParameters)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>af175063d802acc0eb12f410b8a9a2afd</anchor>
      <arglist>(double d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>a36fc8a46efc386b762e84be8162ff266</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>noteOn</name>
      <anchorfile>classtracktion_1_1engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>a91858054b8cd9fdbbf7229e97d979b3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>noteOff</name>
      <anchorfile>classtracktion_1_1engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>a0b48666599d26d2424b0f8621e7f0828</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classtracktion_1_1engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>a4dd268c586dab8feeb6d0725ca40e3df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getNextSample</name>
      <anchorfile>classtracktion_1_1engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>a8f0714945593c701a246b4cae67734c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyEnvelopeToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>a9867a692f6ff1b3163ec2a40aac445e3</anchor>
      <arglist>(juce::AudioBuffer&lt; FloatType &gt; &amp;buffer, int startSample, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAnalog</name>
      <anchorfile>classtracktion_1_1engine_1_1ExpEnvelope.html</anchorfile>
      <anchor>aa031bd8b8211140de3d03f0867150d55</anchor>
      <arglist>(bool a)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::Exportable</name>
    <filename>classtracktion_1_1engine_1_1Exportable.html</filename>
    <class kind="struct">tracktion::engine::Exportable::ReferencedItem</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Exportable</name>
      <anchorfile>classtracktion_1_1engine_1_1Exportable.html</anchorfile>
      <anchor>a53a376993650eecf6ea265a649ed497e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Array&lt; ReferencedItem &gt;</type>
      <name>getReferencedItems</name>
      <anchorfile>classtracktion_1_1engine_1_1Exportable.html</anchorfile>
      <anchor>a1c68f69633b722bd5a4d9827a53480af</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reassignReferencedItem</name>
      <anchorfile>classtracktion_1_1engine_1_1Exportable.html</anchorfile>
      <anchor>aeef78d2e2d2cb0dd99fb1eb3ace4e8f0</anchor>
      <arglist>(const ReferencedItem &amp;, ProjectItemID newID, double newStartTime)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; Exportable * &gt;</type>
      <name>addAllExportables</name>
      <anchorfile>classtracktion_1_1engine_1_1Exportable.html</anchorfile>
      <anchor>aa239f5d4d7f8d0fbd8ef63eae2ceaed8</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ExportJob</name>
    <filename>classtracktion_1_1engine_1_1ExportJob.html</filename>
    <base>tracktion::engine::ThreadPoolJobWithProgress</base>
    <member kind="enumeration">
      <type></type>
      <name>CompressionLevel</name>
      <anchorfile>classtracktion_1_1engine_1_1ExportJob.html</anchorfile>
      <anchor>ad629bc3fb185219000c4d92759a24c5a</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1ExportJob.html" anchor="ad629bc3fb185219000c4d92759a24c5aa90ac1172c9ea271784a5efb8fa7aa101">lossless</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ExportJob.html" anchor="ad629bc3fb185219000c4d92759a24c5aafe42c92aac580ced7226bc271b3fcdb9">highQuality</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ExportJob.html" anchor="ad629bc3fb185219000c4d92759a24c5aa928af7a23396651ec8eb67a63833fd19">mediumQuality</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ExportJob.html" anchor="ad629bc3fb185219000c4d92759a24c5aa2e896e1dfdd12c20ad7372b5f40fa6ce">lowestQuality</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ExportJob.html" anchor="ad629bc3fb185219000c4d92759a24c5aadfd25ff244b001be7beece9729517779">uncompressed</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>ExportJob</name>
      <anchorfile>classtracktion_1_1engine_1_1ExportJob.html</anchorfile>
      <anchor>ac8ba56a5928b81d97cd9c50e61311c30</anchor>
      <arglist>(Edit *, const juce::File &amp;destDir, const Project::Ptr &amp;newProject, const Project::Ptr &amp;srcProject, TracktionArchiveFile *, double handleSize_, bool keepEntireFiles, TracktionArchiveFile::CompressionType, juce::Array&lt; juce::File &gt; &amp;filesForDeletion, juce::StringArray &amp;failedFiles, bool includeLibraryFiles, bool includeClips)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ExportJob</name>
      <anchorfile>classtracktion_1_1engine_1_1ExportJob.html</anchorfile>
      <anchor>a780f6411547cfcb48e3ab6de807e1bad</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>JobStatus</type>
      <name>runJob</name>
      <anchorfile>classtracktion_1_1engine_1_1ExportJob.html</anchorfile>
      <anchor>acf09e0e94de24c5b468a8f62ceacb3d5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentTaskProgress</name>
      <anchorfile>classtracktion_1_1engine_1_1ExportJob.html</anchorfile>
      <anchor>aaef23196e6b04bbeee7f1e6744681cd3</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ExternalAutomatableParameter</name>
    <filename>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</filename>
    <base>tracktion::engine::AutomatableParameter</base>
    <member kind="function">
      <type></type>
      <name>ExternalAutomatableParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a1241f90b74916c7a08bfb649ddb6f262</anchor>
      <arglist>(const juce::String &amp;parameterID, const juce::String &amp;name, ExternalPlugin &amp;owner, int parameterIndex_, juce::Range&lt; float &gt; valueRangeToUse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ExternalAutomatableParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a142bb35846d2145a3b37829fb873286e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerAsListener</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>ab605149102c72ebd72a14200741e6778</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterAsListener</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>acd76a839e2fd14b6b9a51988fb961067</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; float &gt;</type>
      <name>getDefaultValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a6fb4c3df02cadf165ced9e80d9885d30</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameterChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>aebb8668d84b50ab11091b21931cdfb82</anchor>
      <arglist>(float newValue, bool byAutomation) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginParameterChangeGesture</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>ad1766a4dd010b51844397a8425d1d54a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endParameterChangeGesture</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a479829dbe7a3ab68209460e38078cea4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>valueToString</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>af51ac152ef395b7ef362de46433e5540</anchor>
      <arglist>(float value) override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>stringToValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a820ce2c8dbc2b8b223890929789f0658</anchor>
      <arglist>(const juce::String &amp;str) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getCurrentValueAsString</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a5c72e18ebc64065bea4086d612e6f814</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getLabel</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a4c4559e35d004d93324c8da220421aa9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueChangedByPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a3b9ae03b5ecbdc09b77f65146beb2252</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getParameterName</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>aad597e42403c95bbe2c97b8668920367</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getParameterIndex</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a28732c2cb74ad67e67b582adc0ac64f4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getParameterShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>add1d08fcc655004ce8b13f5a3fb1746b</anchor>
      <arglist>(int suggestedLength) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDisplayName</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>ad5a8b5b16580cd46b33f3c4101970d9b</anchor>
      <arglist>(const juce::String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDiscrete</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a409508888536ba4904dff0eb3941ef91</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfStates</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a3ef9663e05a0340b1ea2fb7076125c05</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getValueForState</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>ae84029a5a196cd02721db44d8b3746b1</anchor>
      <arglist>(int state) const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getLabelForValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a51ff0497e2efb3da6ec1c40efa5c5a0b</anchor>
      <arglist>(float val) const override</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getAllLabels</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>ab3d5c863bc94345ee1d0442b630d88b6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>snapToState</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a7243ad30c6545496599ec8c84719cd2a</anchor>
      <arglist>(float val) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasLabels</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>aa59ae85200938541befec574c2039128</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getStateForValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalAutomatableParameter.html</anchorfile>
      <anchor>a5c8a8a41e6bfa8cbb51d5ecbd5af84bd</anchor>
      <arglist>(float val) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ExternalController</name>
    <filename>classtracktion_1_1engine_1_1ExternalController.html</filename>
    <base protection="private">tracktion::engine::SelectableListener</base>
    <base protection="private">tracktion::engine::AutomatableParameter::Listener</base>
    <member kind="function">
      <type></type>
      <name>ExternalController</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a0e0fbe1afd6b8cb562901268ecd54a8d</anchor>
      <arglist>(Engine &amp;, ControlSurface *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ExternalController</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a81fb9df0d4839012e3cd253a671d34c2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>ab457224f5381be7593f60d2761cdf5cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wantsDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>aea6babe7555fa8865ebaa50df4b0e636</anchor>
      <arglist>(const MidiID &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsMidiChannel</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>aaa745c8d8de048f117b8c65eb721c9f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsMidiBackChannel</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a505dd5ac113bd385dc6201a3ae31faa5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDesiredMidiChannel</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>accc351a1adb602e9f3784e56fd54c37e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDesiredMidiBackChannel</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a20ca8719b8f2232b423bcbc38f41b77d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsOSCSocket</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a870da07b6767d295942fda2ef0b9793c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a70b895c841e9af7345b58021faa0f42b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a090385fe0ab2cb6277f30e1ecb7b185a</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMainDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>aedf38daab56066c0c1824601bb0f094a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMainDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>acb32f1c0f325b402c0dd49453d71ea1d</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getMidiInputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a6beb3cf7fb1d56f86a094d4d1fed0499</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidiInputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>acd580514eecdc9248e843ac62afc09ef</anchor>
      <arglist>(int idx, const juce::String &amp;nameOfMidiInput)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getBackChannelDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a906ef442dcfd5c46270d7b77ceabb44b</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBackChannelDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a5a7e5a7afdb3ed4530632b922ad5b3d2</anchor>
      <arglist>(int idx, const juce::String &amp;nameOfMidiOutput)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingMidiOutputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>adb5f2bb379a56cc6d35a4d704ef0572c</anchor>
      <arglist>(const MidiOutputDevice *d) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOSCInputPort</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a690373640f6367b1afe31c3efc71756a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOSCInputPort</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a10dcaa1b3af7b156192dc1380834e9fc</anchor>
      <arglist>(int port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOSCOutputPort</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a37c46130cfa2fa7487aea5130839482a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOSCOutputPort</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>adbbcae519239a3e5ef29012103a0575a</anchor>
      <arglist>(int port)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getOSCOutputAddress</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a7b26726b836a1ce20e58d5d1a2745c8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOSCOutputAddress</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a210b858369c0cfba7fa147195057a66a</anchor>
      <arglist>(const juce::String addr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a34a82a0c65d58866d24d7e76733198ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>ab32e7fc52bad4386fabb019b515b8292</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDeletable</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>af590b262ba4cc2e380e259a2d10980cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteController</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a19f72a118f6fcc36844ab3bbb39a3358</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wantsMidiClock</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>af73f483e3bf58da3bbb26e8b1c791f1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentEditChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a633a2b25c9a64d6e873a9c54a49031c1</anchor>
      <arglist>(Edit *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentSelectionManagerChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a3890583d69dacf9ca5cd12087cf33fdf</anchor>
      <arglist>(SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveFader</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a4b2806207138e0303b7aaf755fe4ffb9</anchor>
      <arglist>(int channelNum, float newSliderPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveMasterFader</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>af873eee20c7d2a242e7fd41308d4036a</anchor>
      <arglist>(float newPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePanPot</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>ad484ceb528359b398925ae7322d21e5a</anchor>
      <arglist>(int channelNum, float newPan)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveMasterPanPot</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a2d597b1d12998c390b42cf4f6c237167</anchor>
      <arglist>(float newPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSoloAndMute</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>ae68ef15e25c87d715a09939aafe6415c</anchor>
      <arglist>(int channelNum, Track::MuteAndSoloLightState, bool isBright)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloCountChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a077232633e2aea709b4bd38fc63fddeb</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a135d126fcb83f26d1edccaf96d0b5789</anchor>
      <arglist>(bool isPlaying)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a8126038f04d44881308ba2dd1dedd934</anchor>
      <arglist>(bool isRecording)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationModeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a985dee90aba8a405da9aaad54ad72b06</anchor>
      <arglist>(bool isReading, bool isWriting)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>ab31578c2f5627960fce3e36096283c04</anchor>
      <arglist>(bool isOn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>ac5c7dd11f72710cf4c5cbe970739b39c</anchor>
      <arglist>(bool isOn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clickChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>ac2b27f8c6f0c3dcb8f07b2ddf72f6b3c</anchor>
      <arglist>(bool isOn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>channelLevelChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a5d06eabda960e2e32003982ba1ff17db</anchor>
      <arglist>(int channel, float l, float r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>masterLevelsChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a36056e74026e87e75dba4db8d652aca7</anchor>
      <arglist>(float leftLevel, float rightLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timecodeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a4e9dfde44053407efd0601be6ce5f227</anchor>
      <arglist>(int barsOrHours, int beatsOrMinutes, int ticksOrSeconds, int millisecs, bool isBarsBeats, bool isFrames)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a6e41bd9b8652d4473d79e5b46d1e27b5</anchor>
      <arglist>(int channel, bool isSelected)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectOtherObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a64beda607dd9302dee0663dcef81b909</anchor>
      <arglist>(SelectableClass::Relationship, bool moveFromCurrentPlugin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>muteOrUnmutePlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a5bb452a502d6896f66c9dbcc33608454</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>muteOrUnmutePluginsInTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a0bcc90f61735b83e2202625564272a31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changePluginPreset</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a9473c2e1c0ddd09ace1f88ed82a1462a</anchor>
      <arglist>(int delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloPluginTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a05afb5d24cae0ef4bdf91b1c7c62fa33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>auxSendLevelsChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a6ff238b033d10fc6308ab15d1ca6e24d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateDeviceState</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a20da199a250d7d148910c65807ace8a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParameters</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a227f6ad86f5dbeaf41f73e8069ebd962</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMarkers</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a5e9fa544debfa1578f6abdc3ac7c43d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectedPluginChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>aa72c7098045fe500c495fe352345a849</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableObjectChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a452d42c195d2be896fdadb7502a7c840</anchor>
      <arglist>(Selectable *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableObjectAboutToBeDeleted</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a97ad3b6bf6b4c03c9792041c592b387d</anchor>
      <arglist>(Selectable *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>curveHasChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>ae90bd263e5e290b224f4cb6286ce4bbb</anchor>
      <arglist>(AutomatableParameter &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentValueChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a8a793c19244e0ce3bab41fab1a56350e</anchor>
      <arglist>(AutomatableParameter &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateTrackSelectLights</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a9fa6beb0c45a39bfb32730875195c718</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateTrackRecordLights</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a5fa806f804285f0102153539878532b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updatePunchLights</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>afe542273837ce271bef0a1f805372d8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateScrollLights</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a2753aab23d9a89cf8a5cf6c9a2feab77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateUndoLights</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>aef6e49a2497f917905ef22140fe6c8b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updatePadColours</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a2a1a96e26ef78222a5271b3acb099aab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearPadColours</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a44c5074d9cfc8f960fa7a5a9f4b78348</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumFaderChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a90d85392631c03c23f41830e0d6300f0</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFaderIndexInActiveRegion</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a2813788c08dac15a45c2f3487978dc40</anchor>
      <arglist>(int num) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; int &gt;</type>
      <name>getActiveChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a23ed46a9b234787ef0079ae4fb42a351</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumParameterControls</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a42ccc92773f24edaa94af5a66d2539c5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; int &gt;</type>
      <name>getActiveParams</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a6254a967eeb798b08287838e3dc1e3ad</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>midiInOutDevicesChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>acfbcfda9e090414d6fc59113f15e5fb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>oscSettingsChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a5ca8c1c9b8354d6f1c910193fbc591e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleAsyncUpdate</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>ac927380d4525b66236eff31538b2254c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a0c6b1b3f81f8749fc2592717ec1e8148</anchor>
      <arglist>(MidiInputDevice &amp;, const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wantsMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a42584dbd1238d228414446e79f081ccc</anchor>
      <arglist>(MidiInputDevice &amp;, const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eatsAllMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a9bb3dbecad9b0db553996d1e51500c57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canSetEatsAllMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>ab96c01653816d5402018f08f87aeb291</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEatsAllMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>aebe1037008e2d19d8f2d6694c720bbf3</anchor>
      <arglist>(bool eatAll)</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getSelectionColour</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a0686e379e88f9e4bd5a0f53668aa16c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getShowTrackSelectionColour</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a6840e2c71a189d48cb2b1ed40f6c1be4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getShowClipSlotSelectionColour</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>acad77999d49e8482318ea7d04df4dc31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelectionColour</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>ad86489289f9ca292fed0ddfd75dd692d</anchor>
      <arglist>(juce::Colour)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShowTrackSelectionColour</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a873c4b08b1eca8f3e4e748d14aa72583</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShowClipSlotSelectionColour</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a9e980db052dacbb0ebf14601dcffac4e</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldTrackBeColoured</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a2315b10193ca945b18473c1f37d540a2</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getTrackColour</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a772bc7b8754360cc75391808184f83b9</anchor>
      <arglist>(int channelNum, juce::Colour &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; ColourArea &gt;</type>
      <name>getColouredArea</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>afd2b93223919dce66616ee83f0cb199e</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldPluginBeColoured</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a917a2188c73db84440950634ed7f6063</anchor>
      <arglist>(Plugin *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getPluginColour</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>aaaecf24bb4723725cf696e909b30275d</anchor>
      <arglist>(Plugin *, juce::Colour &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>repaintParamSource</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a5d34996ce903e73441f48ddb0f71f612</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redrawTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a082d969dcfcc1102ee6f133be4582648</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ControlSurface &amp;</type>
      <name>getControlSurface</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>afefa8d076b05016d91b24d27a2c7034e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Type *</type>
      <name>getControlSurfaceIfType</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>ae9892c9ff77a02f4b69c761a47c9d6b4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ExternalControllerManager &amp;</type>
      <name>getExternalControllerManager</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a08dc096fdfe9e4578f0e1078fe6a8945</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Edit *</type>
      <name>getEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a602445fcd4e8a19f08f3a0e52a983f73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TransportControl *</type>
      <name>getTransport</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>af47a851d722aeb6f2e5efa5a571d553c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getInputDeviceName</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a30c36cd1d2d95d5fb5ecca46b423ae24</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getOutputDeviceName</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a08dcad2b60dcd81adc61abbe7775793f</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getMidiInputPorts</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a6695576398090d4397bee3698b0a3d50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getMidiOutputPorts</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a995e3d7a35a8eb8756be2b6bb0fb46b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>shortenName</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a9489d4692fcbdf6c9ad33855046702ad</anchor>
      <arglist>(juce::String, int maxLen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getNoDeviceSelectedMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>afda0db59610276a8f63acb1b479d7101</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>ac2cf8f4dbca30a228730a42d501b82f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ExternalControllerManager</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a3a6e324aa96b37fe6274a839429a5033</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ControlSurface</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a3f4fcfbc4410b1fe7f335cb44f08d9bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>MackieC4</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>ad5dad8a0414596093afc2592a1809e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>MackieMCU</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalController.html</anchorfile>
      <anchor>a8d7976b5b33c481511d7420b74a4e303</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ExternalControllerManager</name>
    <filename>classtracktion_1_1engine_1_1ExternalControllerManager.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Protocol</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a86fb7dd18627fac10e78d5e03c920a12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midi</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a86fb7dd18627fac10e78d5e03c920a12a356281dd0d80e1f27822c3021f1ab2e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>osc</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a86fb7dd18627fac10e78d5e03c920a12a6bb88b80aec21195ce3ad628587d5faf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midi</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a86fb7dd18627fac10e78d5e03c920a12a356281dd0d80e1f27822c3021f1ab2e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>osc</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a86fb7dd18627fac10e78d5e03c920a12a6bb88b80aec21195ce3ad628587d5faf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ExternalControllerManager</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ae7a2367f41f61f9dd3b387ba897f57db</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>abc2ff528be1dee638ebdf28cc1ebc8d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>acafb4ff46b9652cdddd57061a258be3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a4a64bb77db2c7808a6abbfb196cc0f1f</anchor>
      <arglist>(Edit *, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detachFromEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ab317ca3551c0a8a099977b7515521e27</anchor>
      <arglist>(Edit *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detachFromSelectionManager</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>afa07bc0216d63c4203709f214b4d77b7</anchor>
      <arglist>(SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAttachedToEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a6c24459ce3737a44a72da9444ebca82a</anchor>
      <arglist>(const Edit *) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAttachedToEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a430c0c1b5bba7d3b30ab5b6ce2e9e73e</anchor>
      <arglist>(const Edit &amp;) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>SelectionManager *</type>
      <name>getSelectionManager</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a7d86b48b2d2731c1e68889596b851e24</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::OwnedArray&lt; ExternalController &gt; &amp;</type>
      <name>getControllers</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ae9ddb68f0fc7e6322f5491d4db2d0a7a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getAllControllerNames</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a996908bc71e34968ed40e53c66bfbb58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ExternalController *</type>
      <name>getActiveCustomController</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a650af44d0acc7de8c30fd5ef3d58e616</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>midiInOutDevicesChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a012e399f25544b65a977b5a3f92c6243</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createCustomController</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a09f8a7ad36ab21bdf8b162ba7dd20ced</anchor>
      <arglist>(const juce::String &amp;name, Protocol)</arglist>
    </member>
    <member kind="function">
      <type>ExternalController *</type>
      <name>addController</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ae0877c93ab48f12360a7eace606e248b</anchor>
      <arglist>(ControlSurface *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteController</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ab1b81c23943a60508614ce9d561ad26a</anchor>
      <arglist>(ExternalController *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveFader</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ace166ef68013b48ad8ef1df6e74daee2</anchor>
      <arglist>(int channelNum, float newSliderPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveMasterFader</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ae44b0d782f88f8450499209877505857</anchor>
      <arglist>(float newPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePanPot</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a917fbdeea1b839c3e81e112092e45696</anchor>
      <arglist>(int channelNum, float newPan)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveMasterPanPot</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a465f01db8b4f94c6cc06104a4814e07b</anchor>
      <arglist>(float newPan)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a3bd7f06efa7d32b471dfaf6424e06a72</anchor>
      <arglist>(bool isPlaying)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a63278d6b689e272a4cce467691ef904a</anchor>
      <arglist>(bool isRecording)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationModeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>acbbe0c4c5c881721340a402ec823d10e</anchor>
      <arglist>(bool isReading, bool isWriting)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>channelLevelChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a8e60357f87e3dde6b1b47430f28f9f6c</anchor>
      <arglist>(int channel, float l, float r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>masterLevelsChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a25ff236097966adb7d09a2f48384730b</anchor>
      <arglist>(float leftLevel, float rightLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timecodeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a02e8cd439c2fc42081949a7807ade8b8</anchor>
      <arglist>(int barsOrHours, int beatsOrMinutes, int ticksOrSeconds, int millisecs, bool isBarsBeats, bool isFrames)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>editPositionChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>acb45d6cf93aadedd1dbda4b012d8220d</anchor>
      <arglist>(Edit *, TimePosition newCursorPosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateVolumePlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a716a776a85822c271d3895079a516f81</anchor>
      <arglist>(VolumeAndPanPlugin &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateVCAPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a4075b0f5e31b2feb1220dcb03c678005</anchor>
      <arglist>(VCAPlugin &amp;vca)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>af94af2350ede0cd3fcdc709c4842a36e</anchor>
      <arglist>(bool isOn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>aa32c2536b19d42fbeff44835f0c1beb9</anchor>
      <arglist>(bool isOn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clickChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a5655888473e141cb091e66b68c102022</anchor>
      <arglist>(bool isOn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>auxSendLevelsChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ae8847e6a1039c714d79b0cf9a49d24c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMuteSoloLights</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>acd8ff372361fbef80301aee88a3d9db4</anchor>
      <arglist>(bool onlyUpdateFlashingLights)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloCountChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>aaca9ade0ad130e356a8baae3b1803fc0</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeListenerCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a50fa44a3b0a8bf2e4396ea5a18dd6edf</anchor>
      <arglist>(ChangeBroadcaster *) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldTrackBeColoured</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a597eea490c9b700915339cc599a2e254</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getTrackColour</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>adf29bed487e1adbc82e6236fc333a9a5</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ColourArea &gt;</type>
      <name>getColouredArea</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a20342f4c523c125550134b109ff4692b</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldPluginBeColoured</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a81c2057826a799b922565467c531bf0e</anchor>
      <arglist>(Plugin *)</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getPluginColour</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a76d1ba58e7c29e94d0576d7eb176cc81</anchor>
      <arglist>(Plugin *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateAllDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a490a37a5ab66ace4477e25d058011d68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParameters</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a02eccee0ace136464e6287c503eee320</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMarkers</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a7524c8995c1b4e6534099940d876b51f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateTrackRecordLights</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a1734e523def353c6a2ce56772e0fbf82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updatePunchLights</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ae193c6881c3685594cedfc08321945ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateScrollLights</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a94ffd9dafd03efe61576f1d0bdbb157c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateUndoLights</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>afb710cb564dfc4651bb23e69669fa4da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updatePadColours</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>aef361287494c8d76fc90ce69cc1c7659</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumChannelTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a7bd873df1fc2cabad8674e3ec7f2693c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getChannelTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a55d02a14b847dd1f73111ea7fac21883</anchor>
      <arglist>(int channel) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mapTrackNumToChannelNum</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a5e13d8136b6a59d363fa845eb01c94bd</anchor>
      <arglist>(int channelNum) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getXTCount</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ac5c9ae8bcf9a2b0bb1824025cb6431e8</anchor>
      <arglist>(const juce::String &amp;controller)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setXTCount</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a9a7b0e2a008a17a69c806b9b44cb315d</anchor>
      <arglist>(const juce::String &amp;controller, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshXTOrder</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>afec03a2073acc21f3afef0c19ce3ba2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedFader</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>af7469264d410cf9d6ce42926fddaf45b</anchor>
      <arglist>(int channelNum, float newSliderPos, bool delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedMasterFader</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a0aee1d19d6487c07616df09413b98135</anchor>
      <arglist>(Edit *, float newLevel, bool delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedMasterPanPot</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a12a6a71e7fe7153338deb70505240831</anchor>
      <arglist>(Edit *, float newLevel, bool delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedPanPot</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a557d0cee646cb40277fe7c3fa03cf3b0</anchor>
      <arglist>(int channelNum, float newPan, bool delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedSolo</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a6193a68e54b6ac3aa269980a8d511af1</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedSoloIsolate</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>af7f71d79cd85f489df898792eb4948b2</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedMute</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a11ea1cb51740f331fcb5e0e8b5256304</anchor>
      <arglist>(int channelNum, bool muteVolumeControl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSelectedTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a9f6d84f051da2afb27da9f480692673d</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSelectedOneTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a96e45fe45f12298f2996fd232c670ddc</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSelectedClipInTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a54f47f805172a04c8f17cd900843e1b4</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userSelectedPluginInTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a412945364e4e71aa32b089487e8b34d3</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedAux</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a3647ddc29db1a4c0a76b3096c7f59db2</anchor>
      <arglist>(int channelNum, int auxNum, AuxPosition ap, float newPosition, bool delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userPressedAux</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>abc5b25263fe79000b93f00c8da5b38bb</anchor>
      <arglist>(int channelNum, int auxNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userMovedQuickParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ad7fe5fb2c6b134485aa423127da47c39</anchor>
      <arglist>(float newLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userLaunchedClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>abb48895c059bab919008639997b7d9fc</anchor>
      <arglist>(int channelNum, int clip, bool press)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userStoppedClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>abaf000f37a837de70507c637ddd26e11</anchor>
      <arglist>(int channelNum, bool press)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>userLaunchedScene</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ab57fd8ced001c4b405fbec637fee9497</anchor>
      <arglist>(int scene, bool press)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateDeviceState</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a477ee25766a9164d210715b3d3ea4c12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>repaintTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a7bf2ac5bd7f90074f31847932663c168</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>repaintPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>ad99e4ce453482323ce0a5718b9e62d96</anchor>
      <arglist>(Plugin &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>repaintSlots</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a796396c79cc7082dd4eeb936a6c530ee</anchor>
      <arglist>(int channelNum)</arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; bool(const Track &amp;)&gt;</type>
      <name>isVisibleOnControlSurface</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>aba607c3bf23d82e8792ef188d187a766</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; int(Edit &amp;, int)&gt;</type>
      <name>mapEditTrackNumToControlSurfaceChannelNum</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a9c63f5c100797b20cd6708862e6201e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(FolderTrack &amp;, bool)&gt;</type>
      <name>setFolderTrackOpen</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>aca8da6bb53875a3fff16964a4383e7aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; bool(FolderTrack &amp;)&gt;</type>
      <name>isFolderTrackOpen</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>addde29cbefc20bb2470dbd31770727be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(Edit &amp;, bool)&gt;</type>
      <name>setScrollingEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a42136d2237eef547c7496d8751744f3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; bool(Edit &amp;)&gt;</type>
      <name>isScrollingEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a201d1055108bbcb80e2c71bb47e509bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(Edit &amp;, Track &amp;, int, bool)&gt;</type>
      <name>launchClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>aad8ee7d46f1767da1dea9b50a3372328</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(Edit &amp;, Track *, bool)&gt;</type>
      <name>stopClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a904031c4c3ecccc4095eec6aa00c710d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(Edit &amp;, int, bool)&gt;</type>
      <name>launchScene</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a6dac2ba62de656c6509b66686fb48466</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>aaab22836ef482e98dccedb844fcfea55</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Engine</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalControllerManager.html</anchorfile>
      <anchor>a3e1914489e4bed4f9f23cdeab34a43dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ExternalPlayheadSynchroniser</name>
    <filename>classtracktion_1_1engine_1_1ExternalPlayheadSynchroniser.html</filename>
    <member kind="function">
      <type></type>
      <name>ExternalPlayheadSynchroniser</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlayheadSynchroniser.html</anchorfile>
      <anchor>a1dc47b95708c4548208f446ad2d94ca7</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>synchronise</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlayheadSynchroniser.html</anchorfile>
      <anchor>afff3bb69f2a05a7d6df6f3cea6a2e6cc</anchor>
      <arglist>(juce::AudioPlayHead &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>synchronise</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlayheadSynchroniser.html</anchorfile>
      <anchor>a8b296195f7f1d9f5d2453686cfcd35dd</anchor>
      <arglist>(juce::AudioProcessor &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioPlayHead::CurrentPositionInfo</type>
      <name>getPositionInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlayheadSynchroniser.html</anchorfile>
      <anchor>a2b8a9acad0a3990c8886303afbf72a40</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ExternalPlugin</name>
    <filename>classtracktion_1_1engine_1_1ExternalPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; ExternalPlugin &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a1ada1ad49f1f835c782d04724dc7e72e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExternalPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a69d8ec4816c81182ec66570051e256ab</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ExternalPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a14156bcd83e69d3fd3f19297cdf51b31</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getIdentifierString</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>af590467bfc2bd78194b7b52605293fff</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableAboutToBeDeleted</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a9ff59a2531091af9e962e5c3ccea8857</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processingChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a58fac29dd449c415e97f218281d901f0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseFully</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>accb865a8b7319cfb553e41ab933ed8ef</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forceFullReinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a541d849d03c951d9f4c2f26312894f16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getLoadError</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a400c73590596748a19c33c1f0de07856</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialisingAsync</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>aadaaf029e74b1f4666213ad2c5ef16fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushPluginStateToValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>aa0110ac2e8b0b04008f382a3f5b5917b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushBusesLayoutToValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>aeb18b75399489a041fdca09d3c329e8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a1287c28f2f1e290051dd693daa880ffc</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getPluginStateFromTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ae22577b3b0c59580df4563c31ab79ace</anchor>
      <arglist>(juce::MemoryBlock &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFromMirroredPluginIfNeeded</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>aa005b80f045d58525f6e1fb7e7009a95</anchor>
      <arglist>(Plugin &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a7bfffb262b6fdde920b3d3a407e147e7</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ade184c21c030153232717d4551e80fa7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a82debd74978128a81c1322e4221d6db8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>midiPanic</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ad74eee2c4eb724c20686e689da451f69</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a99b88a696f0c0fcb0d98ac36d8e7a6f1</anchor>
      <arglist>(bool enabled) override</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Exportable::ReferencedItem &gt;</type>
      <name>getReferencedItems</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a6dae69a0400be8aff6d55a77cc201b5c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reassignReferencedItem</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a4778434b896a3417578bf995fcda4150</anchor>
      <arglist>(const ReferencedItem &amp;, ProjectItemID newID, double newStartTime) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>aaf8d1f4eaba29a5b4a3d4022e53d057a</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a3bad898e02cf1e8ac593770b62146105</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ace474306469bb21c9672c32b3f59f0aa</anchor>
      <arglist>(int numInputs) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getChannelNames</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a74eb2f90ca00acc1d08b90af09daad61</anchor>
      <arglist>(juce::StringArray *ins, juce::StringArray *outs) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isVST</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>abcf54c5a2b02c5353c778fcb40469ad5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isVST3</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>af06e30d38a828fd82aa5e154deb5cdb9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAU</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>acf768502a52ffa2f129977a5001eecea</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ac145364f08c1b2ac430756c117a574eb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getVendor</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>af250eb0ee1c68bdb98961ce3766607da</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTooltip</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>aa27ca83d4120930cb43174aacd662918</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a005a5595e4995c5670805725345e8289</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSynth</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a2ee769e82aeb1863a9d92ecb56151e26</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesMidiInput</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ad2a588bb0c1c72d993abf008af16823b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>aa1b7d1cc4d3353ec88b154ca56312782</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMissing</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>af9ae34f6888b63a0bd9790025715d4c2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDisabled</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>aaf46e14671b248bfda514e5fe5aafccf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ad8273d4ab97e44001a4c0729792a83cc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>noTail</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a9770a77d09a3598f2aa59d97e9ad3217</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTailLength</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a98f5101f5905df7719d9ca472a14305c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackPropertiesChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a9c29d0e077b775f504c62093a2153908</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioProcessor *</type>
      <name>getWrappedAudioProcessor</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ae80976936cc6ab077ef22c114fabc2d7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteFromParent</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a220a02fa5298c73d0cacb60fc3f122af</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a00907e724e7aba257a7cecaf8c84d030</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>aeae77b678a766d5ed3d7f42e3376e24d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginUID</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a3a2b33135ebdd38f3cc31c6ebdc2fbfb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getDebugName</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a2ebd4920902bda0b1816b542d93328b8</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>aa74646c8b5d8b35b03a027fe2733ab22</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputs</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a7faf20415308f1d19ed41811d44de105</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setBusesLayout</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a5f875b46d045e0a00fa147d74597c6ac</anchor>
      <arglist>(juce::AudioProcessor::BusesLayout)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setBusLayout</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a09df6da99bc3ca68ffdf0f4598553753</anchor>
      <arglist>(juce::AudioChannelSet, bool isInput, int busIndex)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumPrograms</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ae93ba8dbde458bff78110fe8f7054064</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCurrentProgram</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a73f054a4fb0ce321151bb1278abd8339</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getProgramName</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a259c1ad8e1fedf0d368989cea8ac25e6</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getNumberedProgramName</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>aee028104b0931130d750f0371ff98573</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getCurrentProgramName</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ae96aa934f17a0d1df2f1fd2663fe5333</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentProgram</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a0a883aa848c10e139fce6faa0ff4b956</anchor>
      <arglist>(int index, bool sendChangeMessage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentProgramName</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a538284318de74bfc733e9ccebf0b3d68</anchor>
      <arglist>(const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNameForMidiProgram</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ad3e4c324754b3f8d5ff986192e2fe3b9</anchor>
      <arglist>(int programNum, int bank, juce::String &amp;name) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNameForMidiNoteNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a2d088623fa2c3d191976187e7beb58aa</anchor>
      <arglist>(int note, int midiChannel, juce::String &amp;name) override</arglist>
    </member>
    <member kind="function">
      <type>const VSTXML *</type>
      <name>getVSTXML</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>adc452432e45ad57e84adb61b806db8ff</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioPluginInstance *</type>
      <name>getAudioPluginInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a7e7d9f9e5cc48d7500d81c3a2348c48f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ActiveNoteList</type>
      <name>getActiveNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a80de29f86b26a377cbe2aa747b621cce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; EditorComponent &gt;</type>
      <name>createEditor</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ae8b62f1fb04aaaa41263178c3eb414b2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ac194b47498eddbab416eecd732992b46</anchor>
      <arglist>(Engine &amp;, const juce::PluginDescription &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>juce::PluginDescription</type>
      <name>desc</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a9aa429a85177628f8407015597621ccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>dryValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>ae7dbafec5a86494715102dc20d6c0d56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>wetValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>af8a1bd656409c17fbadab9f7f8abf807</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>dryGain</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>adbca804cfdbc49abbc1dc9a2c1717326</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>wetGain</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>aea953cb97f42d4209316737f5ef02630</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1ExternalPlugin.html</anchorfile>
      <anchor>a3811f6c7cba246a2f1cb5d9adbf62125</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::FadeInOutAudioNode</name>
    <filename>classtracktion_1_1engine_1_1FadeInOutAudioNode.html</filename>
    <base>tracktion::engine::SingleInputAudioNode</base>
    <member kind="function">
      <type></type>
      <name>FadeInOutAudioNode</name>
      <anchorfile>classtracktion_1_1engine_1_1FadeInOutAudioNode.html</anchorfile>
      <anchor>a137de73578dbe4934cc33bae83fcd061</anchor>
      <arglist>(AudioNode *input, legacy::EditTimeRange fadeIn, legacy::EditTimeRange fadeOut, AudioFadeCurve::Type fadeInType, AudioFadeCurve::Type fadeOutType, bool clearSamplesOutsideFade=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FadeInOutAudioNode</name>
      <anchorfile>classtracktion_1_1engine_1_1FadeInOutAudioNode.html</anchorfile>
      <anchor>a9b038b5652a94015db0896dba3fef209</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderOver</name>
      <anchorfile>classtracktion_1_1engine_1_1FadeInOutAudioNode.html</anchorfile>
      <anchor>aab51f493a63ef46600b712f828151753</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderAdding</name>
      <anchorfile>classtracktion_1_1engine_1_1FadeInOutAudioNode.html</anchorfile>
      <anchor>a6eea6e46af6d453575239b2ee6582df2</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderSection</name>
      <anchorfile>classtracktion_1_1engine_1_1FadeInOutAudioNode.html</anchorfile>
      <anchor>a64831d46f3a4a411ad0ffce2765c0323</anchor>
      <arglist>(const AudioRenderContext &amp;, legacy::EditTimeRange)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AudioNode *</type>
      <name>createForEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1FadeInOutAudioNode.html</anchorfile>
      <anchor>a88ecb8484453ac8f3449a5d61773e670</anchor>
      <arglist>(Edit &amp;, AudioNode *input)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::FadeInOutEffect</name>
    <filename>structtracktion_1_1engine_1_1FadeInOutEffect.html</filename>
    <base>tracktion::engine::ClipEffect</base>
    <member kind="function">
      <type></type>
      <name>FadeInOutEffect</name>
      <anchorfile>structtracktion_1_1engine_1_1FadeInOutEffect.html</anchorfile>
      <anchor>aeabeafcf11a0973cba7202bbf4fc3179</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFadeIn</name>
      <anchorfile>structtracktion_1_1engine_1_1FadeInOutEffect.html</anchorfile>
      <anchor>a7abec9a9d158cda3b14696d865f13b7c</anchor>
      <arglist>(TimeDuration)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFadeOut</name>
      <anchorfile>structtracktion_1_1engine_1_1FadeInOutEffect.html</anchorfile>
      <anchor>a646c91155cf555f57489106a73e533f5</anchor>
      <arglist>(TimeDuration)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion_1_1engine_1_1FadeInOutEffect.html</anchorfile>
      <anchor>afe49c25418ea8e09bfd7fa084a16647b</anchor>
      <arglist>(const AudioFile &amp;sourceFile, double sourceLength) override</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; TimeDuration &gt;</type>
      <name>fadeIn</name>
      <anchorfile>structtracktion_1_1engine_1_1FadeInOutEffect.html</anchorfile>
      <anchor>ab46e2e1d462f4aab95b819989e9388db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; TimeDuration &gt;</type>
      <name>fadeOut</name>
      <anchorfile>structtracktion_1_1engine_1_1FadeInOutEffect.html</anchorfile>
      <anchor>a04c02bee8ec388588eb8bd61b684e095</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; AudioFadeCurve::Type &gt;</type>
      <name>fadeInType</name>
      <anchorfile>structtracktion_1_1engine_1_1FadeInOutEffect.html</anchorfile>
      <anchor>a9fd9b8259a586869b694f09357b11bcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; AudioFadeCurve::Type &gt;</type>
      <name>fadeOutType</name>
      <anchorfile>structtracktion_1_1engine_1_1FadeInOutEffect.html</anchorfile>
      <anchor>a4c9bc8d6dd7c8239bfec662ede238125</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>HashCode</type>
      <name>getIndividualHash</name>
      <anchorfile>structtracktion_1_1engine_1_1FadeInOutEffect.html</anchorfile>
      <anchor>a02e65c3f230843b32c3a8f2c369bb7b7</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::FadeInOutNode</name>
    <filename>classtracktion_1_1engine_1_1FadeInOutNode.html</filename>
    <base>tracktion::engine::TracktionEngineNode</base>
    <base>tracktion::engine::DynamicallyOffsettableNodeBase</base>
    <member kind="function">
      <type></type>
      <name>FadeInOutNode</name>
      <anchorfile>classtracktion_1_1engine_1_1FadeInOutNode.html</anchorfile>
      <anchor>aa97559c22b060fb677a6d7df3d536b2f</anchor>
      <arglist>(std::unique_ptr&lt; tracktion::graph::Node &gt; input, ProcessState &amp;, TimeRange fadeIn, TimeRange fadeOut, AudioFadeCurve::Type fadeInType, AudioFadeCurve::Type fadeOutType, bool clearSamplesOutsideFade)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDynamicOffsetTime</name>
      <anchorfile>classtracktion_1_1engine_1_1FadeInOutNode.html</anchorfile>
      <anchor>a84b69654e98f26abbfd405c885ee3fbb</anchor>
      <arglist>(TimeDuration) override</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1FadeInOutNode.html</anchorfile>
      <anchor>a879b187485df0aa8159cd26e3dff81f8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1FadeInOutNode.html</anchorfile>
      <anchor>a626c8337b8a9907874832097845f79d1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1FadeInOutNode.html</anchorfile>
      <anchor>ade00db03921f6c4d8bc389fc7647398f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1FadeInOutNode.html</anchorfile>
      <anchor>ae6be5fcab0dbfc4676987fa795fdbc10</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::FallbackReader</name>
    <filename>structtracktion_1_1engine_1_1FallbackReader.html</filename>
    <member kind="function">
      <type></type>
      <name>FallbackReader</name>
      <anchorfile>structtracktion_1_1engine_1_1FallbackReader.html</anchorfile>
      <anchor>a63f141811f4c57feef742b81445a1898</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setReadTimeout</name>
      <anchorfile>structtracktion_1_1engine_1_1FallbackReader.html</anchorfile>
      <anchor>a05b20663a112fce66eea9ed078bb9291</anchor>
      <arglist>(int timeoutMilliseconds)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::FileDragList</name>
    <filename>structtracktion_1_1engine_1_1FileDragList.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>PreferredLayout</name>
      <anchorfile>structtracktion_1_1engine_1_1FileDragList.html</anchorfile>
      <anchor>aeb4e4dcd988d065049230592ae9830b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sameTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1FileDragList.html</anchorfile>
      <anchor>aeb4e4dcd988d065049230592ae9830b7ad2dc61478ef09b50e30e742d215c99f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>consecutiveTracks</name>
      <anchorfile>structtracktion_1_1engine_1_1FileDragList.html</anchorfile>
      <anchor>aeb4e4dcd988d065049230592ae9830b7adc7207f50ba3ea4f96794a7205dc6736</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; FileDragList &gt;</type>
      <name>Ptr</name>
      <anchorfile>structtracktion_1_1engine_1_1FileDragList.html</anchorfile>
      <anchor>aaebc6b2e77ad9e5c28d93286e776b66c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sameTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1FileDragList.html</anchorfile>
      <anchor>aeb4e4dcd988d065049230592ae9830b7ad2dc61478ef09b50e30e742d215c99f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>consecutiveTracks</name>
      <anchorfile>structtracktion_1_1engine_1_1FileDragList.html</anchorfile>
      <anchor>aeb4e4dcd988d065049230592ae9830b7adc7207f50ba3ea4f96794a7205dc6736</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FileDragList::Ptr</type>
      <name>getFromDrag</name>
      <anchorfile>structtracktion_1_1engine_1_1FileDragList.html</anchorfile>
      <anchor>a8ed17688f1353a7afab8e558d8526747</anchor>
      <arglist>(const juce::DragAndDropTarget::SourceDetails &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::var</type>
      <name>create</name>
      <anchorfile>structtracktion_1_1engine_1_1FileDragList.html</anchorfile>
      <anchor>af70335f6f18c6d0bb16041da72f021de</anchor>
      <arglist>(const juce::Array&lt; juce::File &gt; &amp;, PreferredLayout peferredLayout)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::var</type>
      <name>create</name>
      <anchorfile>structtracktion_1_1engine_1_1FileDragList.html</anchorfile>
      <anchor>a6677c4580976a54d6b553ccbbd004777</anchor>
      <arglist>(const juce::File &amp;file, PreferredLayout peferredLayout)</arglist>
    </member>
    <member kind="variable">
      <type>PreferredLayout</type>
      <name>preferredLayout</name>
      <anchorfile>structtracktion_1_1engine_1_1FileDragList.html</anchorfile>
      <anchor>a403bb550b53dee4eae56855c39288452</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; juce::File &gt;</type>
      <name>files</name>
      <anchorfile>structtracktion_1_1engine_1_1FileDragList.html</anchorfile>
      <anchor>af36e45b0afd0c3097e1743e49b346704</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::FloatAudioFormat</name>
    <filename>classtracktion_1_1engine_1_1FloatAudioFormat.html</filename>
    <member kind="function">
      <type></type>
      <name>FloatAudioFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>ab2d3aaafdab786c5493c747ca2875434</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FloatAudioFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>aff2440ed9a79b4b206922f95c78fbfb4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; int &gt;</type>
      <name>getPossibleSampleRates</name>
      <anchorfile>classtracktion_1_1engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>a0c342a38d5277aef3d4c7eec4d99281f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; int &gt;</type>
      <name>getPossibleBitDepths</name>
      <anchorfile>classtracktion_1_1engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>a6e5fc034a036c50affe6bb121c18b987</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canDoStereo</name>
      <anchorfile>classtracktion_1_1engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>a39d4f97e5f54526b5512ecd36f14a1ff</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canDoMono</name>
      <anchorfile>classtracktion_1_1engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>a0d13e1967573389ff726f10c673ac539</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canHandleFile</name>
      <anchorfile>classtracktion_1_1engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>a81a31cb4df87e309bc1b6a61b9133eec</anchor>
      <arglist>(const juce::File &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormatReader *</type>
      <name>createReaderFor</name>
      <anchorfile>classtracktion_1_1engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>a3870c660752f6821c613b3ad6030d0e4</anchor>
      <arglist>(juce::InputStream *, bool deleteStreamIfOpeningFails) override</arglist>
    </member>
    <member kind="function">
      <type>juce::MemoryMappedAudioFormatReader *</type>
      <name>createMemoryMappedReader</name>
      <anchorfile>classtracktion_1_1engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>a28801b79c15661ea142384c518f79102</anchor>
      <arglist>(const juce::File &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormatWriter *</type>
      <name>createWriterFor</name>
      <anchorfile>classtracktion_1_1engine_1_1FloatAudioFormat.html</anchorfile>
      <anchor>a968ad643815e22f9a89756322a09a5f3</anchor>
      <arglist>(juce::OutputStream *, double sampleRate, unsigned int numChannels, int bitsPerSample, const juce::StringPairArray &amp;metadataValues, int qualityOptionIndex) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::FolderTrack</name>
    <filename>classtracktion_1_1engine_1_1FolderTrack.html</filename>
    <base>tracktion::engine::Track</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; FolderTrack &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>af93535ea71495bdc506425186c205e32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FolderTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>ace754b0bd8b36913aa207fa4e7ff2009</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FolderTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>afe6945527705ffff6dfb2413b88b7f29</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>afa265d8cdc881ba7ab3ab10123b950a4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFolderTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a1ea1cccaa8830efed4a7077202926350</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>aa3b2780d790bcce6f1e5a7a2c436b44c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanityCheckName</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a9cacb4dff791827911f5eae49c475217</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a2085c5b2275056b88575a35b2bc5d233</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFolderTrackNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a764d880bcebaa7e53054c69f83ebba8e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSubmixFolder</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a59481ec67f0ef7f9760180673f19c813</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TrackOutput *</type>
      <name>getOutput</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>ae1ada77f9394b6ff2f1b9df74120a51a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>getInputTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a9b0682bbd7460e75e73ae15225f9373c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFrozen</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a1d5527c5edbd306dd112c3aa46d34a9b</anchor>
      <arglist>(FreezeType) const override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getVcaDb</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a720b5d429003244c58377d335ee6d450</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>VCAPlugin *</type>
      <name>getVCAPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a40557a8fc86855fc152c2ddb7c6968b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VolumeAndPanPlugin *</type>
      <name>getVolumePlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a19a50024573025a837962c024fc51db9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateCollectionClips</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a811367b04a8523618a271b788263902a</anchor>
      <arglist>(SelectionManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type>CollectionClip *</type>
      <name>getCollectionClip</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>af6fac13cec5c0d21e25c9b8ffe1cdb53</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumCollectionClips</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a395608b517ecc3ef0c00316b0c8e1fad</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfCollectionClip</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>ab478fc434f8deaf2d14115d82b05ba66</anchor>
      <arglist>(CollectionClip *) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndexOfNextCollectionClipAt</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a6d8a103b857bf7b705aa10b5e5984835</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>CollectionClip *</type>
      <name>getNextCollectionClipAt</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a1093450111f3cc864e3ed0ec8829084f</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a10cd3763c7f2d0b7ff5291d598706cde</anchor>
      <arglist>(CollectionClip *) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTrackItems</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a547ae565658b78d75418a01c6818eb7a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>TrackItem *</type>
      <name>getTrackItem</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a02ef450a1347162ad5c09d87430cb448</anchor>
      <arglist>(int idx) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfTrackItem</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a3b605a6588af6a1ef7f6c7a35d765a2f</anchor>
      <arglist>(TrackItem *) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndexOfNextTrackItemAt</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a89f0aca5977ecf202894c28d92d7ae50</anchor>
      <arglist>(TimePosition) override</arglist>
    </member>
    <member kind="function">
      <type>TrackItem *</type>
      <name>getNextTrackItemAt</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a70458dfb82520f5924e90bbcf797617a</anchor>
      <arglist>(TimePosition) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a80b894a7fff1b96f9999934b5d759c26</anchor>
      <arglist>(bool includeMutingByDestination) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSolo</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a5e8f0ff1412d1c2296df8b8287fb094f</anchor>
      <arglist>(bool includeIndirectSolo) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSoloIsolate</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>ab5ee5d86c1de93b27bda18aaaced0432</anchor>
      <arglist>(bool includeIndirectSolo) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMute</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>ab0f89f10e58c5b1160c3ebb2b17f331f</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSolo</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a3f1a57e21d6971e646abcf3df81da35d</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoloIsolate</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a3f8a29c310e033b44642981c7132c0dc</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirtyClips</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a57390f1288bd6b24d271643335cb6d9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a14b16af35797714970feed0669672576</anchor>
      <arglist>(Plugin *) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>willAcceptPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a4a48c26357b300095d1bf2aab3b3cd75</anchor>
      <arglist>(Plugin &amp;)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Edit</name>
      <anchorfile>classtracktion_1_1engine_1_1FolderTrack.html</anchorfile>
      <anchor>a29ce00a70feb24568c516f4510436aae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>engine::FollowActions</name>
    <filename>classengine_1_1FollowActions.html</filename>
    <class kind="struct">engine::FollowActions::Action</class>
    <member kind="function">
      <type></type>
      <name>FollowActions</name>
      <anchorfile>classengine_1_1FollowActions.html</anchorfile>
      <anchor>a974ceab27d0149101566f40eb0a0cd97</anchor>
      <arglist>(juce::ValueTree, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FollowActions</name>
      <anchorfile>classengine_1_1FollowActions.html</anchorfile>
      <anchor>a407b54c638e27a442fdf82a73de4a0ba</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Action &amp;</type>
      <name>addAction</name>
      <anchorfile>classengine_1_1FollowActions.html</anchorfile>
      <anchor>af1860a631e6ff97acea315b5b516cdc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAction</name>
      <anchorfile>classengine_1_1FollowActions.html</anchorfile>
      <anchor>a504557aee1315db783ad6704748e4d0e</anchor>
      <arglist>(Action &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::span&lt; Action * &gt;</type>
      <name>getActions</name>
      <anchorfile>classengine_1_1FollowActions.html</anchorfile>
      <anchor>a8d45ce1b3c6163da7789a12f7eb41955</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::ForwardingNode</name>
    <filename>classtracktion_1_1graph_1_1ForwardingNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>ForwardingNode</name>
      <anchorfile>classtracktion_1_1graph_1_1ForwardingNode.html</anchorfile>
      <anchor>ade2a0d3f113d7b7c5fa5f89eecf181ee</anchor>
      <arglist>(tracktion::graph::Node *inputNode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ForwardingNode</name>
      <anchorfile>classtracktion_1_1graph_1_1ForwardingNode.html</anchorfile>
      <anchor>aab7e7f908f7017874d5fdff61f611be2</anchor>
      <arglist>(std::shared_ptr&lt; tracktion::graph::Node &gt; inputNode)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1graph_1_1ForwardingNode.html</anchorfile>
      <anchor>aa5697a45086760d819e5ce5d0d981998</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; tracktion::graph::Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1graph_1_1ForwardingNode.html</anchorfile>
      <anchor>aa8493050f2da02adeceb19d38e7a6b91</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1graph_1_1ForwardingNode.html</anchorfile>
      <anchor>af06515555f7bb69db9cb51b8a15c1cff</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1ForwardingNode.html</anchorfile>
      <anchor>a3d080daea7ab2825faf050aced38257b</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::FourOscPlugin</name>
    <filename>classtracktion_1_1engine_1_1FourOscPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <base protection="private">tracktion::engine::LevelMeasurer::Client</base>
    <class kind="struct">tracktion::engine::FourOscPlugin::LFOParams</class>
    <class kind="struct">tracktion::engine::FourOscPlugin::ModAssign</class>
    <class kind="struct">tracktion::engine::FourOscPlugin::MODEnvParams</class>
    <class kind="struct">tracktion::engine::FourOscPlugin::OscParams</class>
    <member kind="enumeration">
      <type></type>
      <name>ModSource</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cca4603e63fc7b777c1793b18fc6e237f9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lfo1</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cca3d9b0638bf27be28b4efe65dc24e8fdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lfo2</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cca6ce29077ebdfc03f468940c5a012a5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>env1</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94ccac95bade6874150531a7897d4dc0995c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>env2</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94ccab4829942b69ba32395350583a428670f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mpePressure</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cca460314f881c9d7437e379b6c09bdb2ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mpeTimbre</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cca0364a8e22eee3886e38c49173b77ad58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midiNoteNum</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cca8207ee162297a0c7aa511b09a45114c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midiVelocity</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cca4a937dda21d9e9f511c54a25344266e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ccBankSelect</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cca0fe4ea82c02fe063344612cdbe4f132d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ccPolyMode</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cca9e12b15278603774eaa1c3c2c4008875</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>numModSources</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94ccab2ffd6504144d731095ad2a1d273f4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cca4603e63fc7b777c1793b18fc6e237f9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lfo1</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cca3d9b0638bf27be28b4efe65dc24e8fdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lfo2</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cca6ce29077ebdfc03f468940c5a012a5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>env1</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94ccac95bade6874150531a7897d4dc0995c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>env2</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94ccab4829942b69ba32395350583a428670f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mpePressure</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cca460314f881c9d7437e379b6c09bdb2ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mpeTimbre</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cca0364a8e22eee3886e38c49173b77ad58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midiNoteNum</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cca8207ee162297a0c7aa511b09a45114c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midiVelocity</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cca4a937dda21d9e9f511c54a25344266e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ccBankSelect</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cca0fe4ea82c02fe063344612cdbe4f132d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ccPolyMode</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94cca9e12b15278603774eaa1c3c2c4008875</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>numModSources</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a3ee8e2d778f393a87c3ef50a0bdd94ccab2ffd6504144d731095ad2a1d273f4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FourOscPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aa3e2e44742d099ea39f3126e76f6aa84</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FourOscPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a01ee4fc37191affe22a3a1ad09ff3521</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMono</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ae0be3a924e9c84363efa3491d1ffa033</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLegato</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a551294b136b9f6a071a9d80720066d10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPoly</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a7b43055fcb62eeff58e0a94df9e4e63e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ab4909853cd061e7cf7b17376a3dbfcc1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a91f4b8b25b8ff5e76a1273d07fe7e5db</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a33cef1bf577503e1c197aad5f8c4ad41</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a9056575e1825c030aa00173f06b9d529</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aeba33bc68fe5c6ed17aa7513781a9580</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a0f7fcac20dc00d3413fa4af6f745883d</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>af72c00510a39c01be4c5caf3d6e0af15</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>afc3cf486960aa1c49d141e9194d934d4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>midiPanic</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a6397d0be0bbb638313996590a667b972</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>af559e3a54be44a1403d41acee91859c8</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesMidiInput</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a5455213b2385c3206f21ad159c2f5970</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ad79653c9da37770fa1eec7d7a7a420c1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSynth</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a932937118804404e11fddf2007af5a9b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a168f148d7d4af35592758ba1cf3cb857</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTailLength</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aecb3d88dafa128a01c585dcd9e683a28</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a5357c30e706c66b613bfc271f937d045</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a7a270f56bd7d341b4ec2b1e803605276</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>modulationSourceToName</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ac1152c79b75b728ac475424928b638b5</anchor>
      <arglist>(ModSource src)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>modulationSourceToID</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a48943c6322502dc5abf65bf244082bd1</anchor>
      <arglist>(ModSource src)</arglist>
    </member>
    <member kind="function">
      <type>ModSource</type>
      <name>idToModulationSource</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a075fc662f9e487d7af8f87531003fedb</anchor>
      <arglist>(juce::String idStr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isModulated</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ae3774f9fa77a5f1f450f73931514b626</anchor>
      <arglist>(AutomatableParameter::Ptr param)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; float &gt;</type>
      <name>getLiveModulationPositions</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a4a727df46752373623c5284ba24a3ace</anchor>
      <arglist>(AutomatableParameter::Ptr param)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ModSource &gt;</type>
      <name>getModulationSources</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ada285fc0c4da44955461ed5fdde13959</anchor>
      <arglist>(AutomatableParameter::Ptr param)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getModulationDepth</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ad6db06cd682118da7b1e092d8fe30996</anchor>
      <arglist>(ModSource src, AutomatableParameter::Ptr param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModulationDepth</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>acd3af349d8e31cb1d72076d759afc6d6</anchor>
      <arglist>(ModSource src, AutomatableParameter::Ptr param, float depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearModulation</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>afcca99ef82e910b3de6d5586b9306675</anchor>
      <arglist>(ModSource src, AutomatableParameter::Ptr param)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getLevel</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>afc5cf1b84fa322290b2646f66bd562b1</anchor>
      <arglist>(int channel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a816a7d0d8ad4b5b00078c97d717bea34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; OscParams &gt;</type>
      <name>oscParams</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aa47f066f4c9c6a8f14ad9a648bb89f5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; LFOParams &gt;</type>
      <name>lfoParams</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a6a175762b31ac9c19d5d94086cf23f52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; MODEnvParams &gt;</type>
      <name>modEnvParams</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a6b546d7c0a6d84e4702152d3df637b1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>ampAttackValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a077370376608d98e5a12c92b19c6629b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>ampDecayValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a1bce8ad7ca2da4d13fe6f89286bb2a52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>ampSustainValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a9fbfbade28dabc8c367b3f455b3f253a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>ampReleaseValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>acce097834c2594e6181d157a85f99073</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>ampVelocityValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>afb73d1292595a895c827796f3833803a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>filterAttackValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a486f48a433a0249a31e12e699789450a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>filterDecayValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a6f172bb3159be36060c92e76dcbaabb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>filterSustainValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ada1e4f121eec64c41bc935d25d9d3324</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>filterReleaseValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a612d7913fed4c2cd2beab18671b89201</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>filterFreqValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a6ee7e6f78b5161d0009dd27a73b5209a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>filterResonanceValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>adb5638b98540fa2cedd658b7b2ad88ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>filterAmountValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a8fc73783a7ed49d659fcf0d3bd179acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>filterKeyValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ab34cc32e87e2bc8908037b388d018ed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>filterVelocityValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a6e1f685e9e1aadc4cdf6fe8929428477</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>filterTypeValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>afc04bb069d364c3b3fc1e336f2dfaee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>filterSlopeValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>acbdcf97f238a0d4990c4c9bd42fe3573</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>ampAnalogValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a40462980aa4cba9379f4ffb545d9b2e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>ampAttack</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a2b01ef15ad7cdbb4a0e16cf89a059237</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>ampDecay</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a57124f870f10e80e73d74b0b70183b4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>ampSustain</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>afc6853f8968f09354650db52338dde9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>ampRelease</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a8a0db3c5c6767c5bb316ecdf8afb97e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>ampVelocity</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ac01b89adb03e0f6a8b90c6eb6bee914c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterAttack</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a79ec7f2d7361e562f88dad8b5e30cda4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterDecay</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a90faed9d263c23775e9ce459f9eee850</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterSustain</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a1c7850e35ab89d85e83b91948394a01b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterRelease</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ac0f3ecec6c4922721db0316cd1368c75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterFreq</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>abeaad1babc6b55f80879b962d3b1e190</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterResonance</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aee038d4ceaf815be7c62b78244dd0f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterAmount</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a84e5af7c5225220dea75d76bf9d0a5c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterKey</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a49a51c5007026adf4176ff010f9614bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterVelocity</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a2d070152deef721f869b4fc8fc8671fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>distortionOnValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a6dc6a93ab37601e26babc1b52cf2cae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>reverbOnValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a4a2a9559c4ce6d18b9eb27d3973af344</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>delayOnValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>af9d3081f6ae7d7b8456c0d4d02d7e0f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>chorusOnValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a9d81f5d8a4258d9e8aaefd25d31b2d56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>distortionValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a897f0bcf10e13de6719e04400945605e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>distortion</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a7921392c948328702ee82a4f53a0954a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>reverbSizeValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ae2233869e945234c0d9ca5d8ce6024d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>reverbDampingValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a0c6649d05c85b85cb8f8841c3ba94a28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>reverbWidthValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>af92546053e5f0d902c904c543bd72cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>reverbMixValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a6be0cf5ed75790cd84998da2fe24ded2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>reverbSize</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>addd129a5baec20e44ee691ce9e4d82e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>reverbDamping</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a99f880e55bcc18082a0cff81560d1744</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>reverbWidth</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a9b4f54e19ae13918a0d7c274d848e950</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>reverbMix</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aaf95502415fc25d56357fba4313806b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>delayValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a4c1366868870f494006f6ac185afc56e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>delayFeedbackValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a6788737470862e781c62803dc029bf48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>delayCrossfeedValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a98cfdad64e2e1b19a33e9c036d480dd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>delayMixValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a44c66e7c44e41db7e018a2522cfe6801</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>delayFeedback</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ae85f391aa3d3e608ce2bd6c57f3fae2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>delayCrossfeed</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a8e6a74db265d2df177128bf09d3ba1d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>delayMix</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a64fd2682debf816aa587469bbc20d16b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>chorusSpeedValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a9f65a38104204e6abfd9ef1e591887b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>chorusDepthValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a4cfafe3809aaf9c36cfc946cd2915555</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>chorusWidthValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a98f6b47e40fd16c6679a0d9a9bb4a2cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>chorusMixValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ab3a0e955a1644405216fa70a727c1838</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>chorusSpeed</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>add1a106be71e4938c0edec8c837e6ece</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>chorusDepth</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a08316f6def0ef3f19ffc3b83a8582c40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>chorusWidth</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>aff199ff1859c64944d1d18f3607bf4ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>chorusMix</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a24e829612c5b330b662324ca32984927</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>voiceModeValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ac175a552576d428f19c5601a69afdd43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>voicesValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ae4f902124c85b52ee3bebef75008f0ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>legatoValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a9736c5557f47154734e440c165b16db3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>masterLevelValue</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ad879ec2b5ad63845a4b152811db87cfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>legato</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a712f8c0aa928a9b4a92d9ff60423e17a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>masterLevel</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>ac97827351992cf5e62d2e55b2e44945b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; AutomatableParameter *, ModAssign &gt;</type>
      <name>modMatrix</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a2fa046a7c6051ec63a617999ad291acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>controllerValues</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a91a1c6ac1a395d1ff4214c31c15e4c06</anchor>
      <arglist>[128]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1FourOscPlugin.html</anchorfile>
      <anchor>a4c32e2eaeda9b7d7496f7811f767ebf6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::FreezePointPlugin</name>
    <filename>classtracktion_1_1engine_1_1FreezePointPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <class kind="struct">tracktion::engine::FreezePointPlugin::ScopedPluginDisabler</class>
    <class kind="struct">tracktion::engine::FreezePointPlugin::ScopedTrackFreezer</class>
    <class kind="struct">tracktion::engine::FreezePointPlugin::ScopedTrackSoloIsolator</class>
    <class kind="struct">tracktion::engine::FreezePointPlugin::ScopedTrackUnsoloer</class>
    <member kind="enumeration">
      <type></type>
      <name>Position</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a25ec4cb74b5bfec05a60eae087e47e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>beforeAllPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a25ec4cb74b5bfec05a60eae087e47e4ea54f572813afbcbe8c0466c807fbe7800</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>preFader</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a25ec4cb74b5bfec05a60eae087e47e4ea630ce10343fa9143468d4adb31da2e1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>postFader</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a25ec4cb74b5bfec05a60eae087e47e4ea477ab581c6d1a62a137a06ade8059eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>beforeAllPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a25ec4cb74b5bfec05a60eae087e47e4ea54f572813afbcbe8c0466c807fbe7800</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>preFader</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a25ec4cb74b5bfec05a60eae087e47e4ea630ce10343fa9143468d4adb31da2e1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>postFader</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a25ec4cb74b5bfec05a60eae087e47e4ea477ab581c6d1a62a137a06ade8059eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FreezePointPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a207386c53d3d6815b2002db80ea73d15</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FreezePointPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a569538cf3f89f148600cb7da96fda4c2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseFully</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a2263f1e770ea89e26904f66da2e63096</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a5184e7cf5014ee0bbf7b94bcaa6b61a3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a9a2cf0ea163064cc695a7122148e4d43</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTooltip</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>ae09e03f140886eb2db1a7ef9bf23a3ad</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a823c8c158f897f30c371b9b7dbc90b63</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a99e2dbd7d878d3ca4d09473eb7a2bc3c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>aa1666861e318875bd52c8c8bc3db8482</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a31ddd7ace6169c58fa0091201d623472</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToMaster</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>ae4b1a4b72c71b03bc15e44249db2f4bf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeDisabled</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>ae5c427941d6067a7ca517b1b2263a908</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>ad702562cd177a00ef5cfe0b0768e6e8e</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a9a16d24a338e0e8db17da9972e81e376</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>ad9d2effd470a344bdcab176b976c174d</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a53728affa2e2210629c3883fec69e4b6</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTrackFrozen</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a461b1b2f9371b7036668c487e5b4a1e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freezeTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a0c43f64aaaffcd5e67be3bf3c997f55b</anchor>
      <arglist>(bool shouldBeFrozen)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; ScopedTrackFreezer &gt;</type>
      <name>createTrackFreezer</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a118c2a13a5311c095ef11b0721465c91</anchor>
      <arglist>(const Plugin::Ptr &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a53c83d4e27386215e297bdc0cf35e96d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a2cb2a10e83612056df2819e096d01bd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1FreezePointPlugin.html</anchorfile>
      <anchor>a00495fff58d4a1c57211bcb558d818f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AudioTrack::FreezePointRemovalInhibitor</name>
    <filename>structtracktion_1_1engine_1_1AudioTrack_1_1FreezePointRemovalInhibitor.html</filename>
    <member kind="function">
      <type></type>
      <name>FreezePointRemovalInhibitor</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioTrack_1_1FreezePointRemovalInhibitor.html</anchorfile>
      <anchor>abd3b332c7f4e85dde5f4f87f2289e703</anchor>
      <arglist>(AudioTrack &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FreezePointRemovalInhibitor</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioTrack_1_1FreezePointRemovalInhibitor.html</anchorfile>
      <anchor>a00e8120e86075dfe6b762452593f9ef6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AudioTrack &amp;</type>
      <name>track</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioTrack_1_1FreezePointRemovalInhibitor.html</anchorfile>
      <anchor>a76aaade24e9e87a2b1081ba7f03bf97c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::FunctionNode</name>
    <filename>classtracktion_1_1graph_1_1FunctionNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>FunctionNode</name>
      <anchorfile>classtracktion_1_1graph_1_1FunctionNode.html</anchorfile>
      <anchor>a6d71a32d0d5c3752132ca2fd75c228b7</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; input, std::function&lt; float(float)&gt; fn)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1graph_1_1FunctionNode.html</anchorfile>
      <anchor>ab4c4092cfab0f35baacb54a3cbb41253</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1graph_1_1FunctionNode.html</anchorfile>
      <anchor>a88a35d34f2d0f81c0bb4c951a2b69059</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1graph_1_1FunctionNode.html</anchorfile>
      <anchor>ac641ad3c7839c036f178bf314814e972</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1FunctionNode.html</anchorfile>
      <anchor>a1e736eb75d8f635b4223ddc381fff87a</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::GainNode</name>
    <filename>classtracktion_1_1graph_1_1GainNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>GainNode</name>
      <anchorfile>classtracktion_1_1graph_1_1GainNode.html</anchorfile>
      <anchor>a9302b7c20b34d36a4baf5e2f6c9285e1</anchor>
      <arglist>(Node *inputNode, std::function&lt; float()&gt; gainFunc, size_t nodeHashToUse=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GainNode</name>
      <anchorfile>classtracktion_1_1graph_1_1GainNode.html</anchorfile>
      <anchor>a0d78775d7b05c0b1ccabb6ed42077fd4</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; inputNode, std::function&lt; float()&gt; gainFunc, size_t nodeHashToUse=0)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1graph_1_1GainNode.html</anchorfile>
      <anchor>ab87105018d6db776ebb1c8d1152bd834</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1graph_1_1GainNode.html</anchorfile>
      <anchor>a8a2151f226d6f3910e7f3b9a91b47e18</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1graph_1_1GainNode.html</anchorfile>
      <anchor>ada8330c908d14f7661352322411954c4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1GainNode.html</anchorfile>
      <anchor>ae284b319ee4053587255cf25b4dd29f7</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AudioProxyGenerator::GeneratorJob</name>
    <filename>structtracktion_1_1engine_1_1AudioProxyGenerator_1_1GeneratorJob.html</filename>
    <base>tracktion::engine::ThreadPoolJobWithProgress</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; GeneratorJob &gt;</type>
      <name>Ptr</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioProxyGenerator_1_1GeneratorJob.html</anchorfile>
      <anchor>a8c88bd93ad2e3346dc6575d04499608c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GeneratorJob</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioProxyGenerator_1_1GeneratorJob.html</anchorfile>
      <anchor>aba41da4ec9b272b9a2897f2d7f922394</anchor>
      <arglist>(const AudioFile &amp;proxy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GeneratorJob</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioProxyGenerator_1_1GeneratorJob.html</anchorfile>
      <anchor>a7f2b951bb7749285c12761f0bf108a6e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>render</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioProxyGenerator_1_1GeneratorJob.html</anchorfile>
      <anchor>a158ae286c18f5682ced1ad1a3b68c640</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentTaskProgress</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioProxyGenerator_1_1GeneratorJob.html</anchorfile>
      <anchor>a9d32537c618af5f21b3a6c401399207c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>ThreadPoolJob::JobStatus</type>
      <name>runJob</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioProxyGenerator_1_1GeneratorJob.html</anchorfile>
      <anchor>a98895a6fb2efaee0f6bb9a54e27977e1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>AudioFile</type>
      <name>proxy</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioProxyGenerator_1_1GeneratorJob.html</anchorfile>
      <anchor>aed420e9f6a3c6961dcef37c0f372b8ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; float &gt;</type>
      <name>progress</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioProxyGenerator_1_1GeneratorJob.html</anchorfile>
      <anchor>a3de20523d7016d7c8a783b5346d23a25</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Edit::GlobalMacros</name>
    <filename>structtracktion_1_1engine_1_1Edit_1_1GlobalMacros.html</filename>
    <base>tracktion::engine::MacroParameterElement</base>
    <member kind="function">
      <type></type>
      <name>GlobalMacros</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1GlobalMacros.html</anchorfile>
      <anchor>a198bc07e23a0cdfa31dba1601620ec14</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1GlobalMacros.html</anchorfile>
      <anchor>aea95b4eff30cdbcb3cac768673a9293d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::GrooveTemplate</name>
    <filename>classtracktion_1_1engine_1_1GrooveTemplate.html</filename>
    <member kind="function">
      <type></type>
      <name>GrooveTemplate</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>acc378cce62d15e48e9bf14549b63d6af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GrooveTemplate</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a63d0e9681bfb62818b49d176ef2d14b7</anchor>
      <arglist>(const juce::XmlElement *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GrooveTemplate</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a89a005ec76d179c87d2d3a533373a34c</anchor>
      <arglist>(const GrooveTemplate &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GrooveTemplate</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a185db60000915fc345900d0e782c2f3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const GrooveTemplate &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>af199e255af3900fabadc6dc5dc41e9ad</anchor>
      <arglist>(const GrooveTemplate &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>aff5e614326c547489bdc8b574ab62326</anchor>
      <arglist>(const GrooveTemplate &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a5e68851a702736ba360846e258b766a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isParameterized</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a9a3273a6e0b58b11f0b934910aaeead3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterized</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a7a9c881d5517d90f9d7f0d806251039a</anchor>
      <arglist>(bool p)</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>beatsTimeToGroovyTime</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a1b3832bc6b2bec83446552471f3ee28a</anchor>
      <arglist>(BeatPosition beatsTime, float strength) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>editTimeToGroovyTime</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a482ea7f7b548cf78b16151ace8147aaf</anchor>
      <arglist>(TimePosition editTime, float strength, Edit &amp;edit) const</arglist>
    </member>
    <member kind="function">
      <type>const juce::String &amp;</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a95a0ec70a298af8500de518ef5cdb211</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>ab6a9f90050f2e07e511a5a85d982e2b9</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>aad53a45b13b324531a98f6cfdce31866</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumberOfNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a038d65f3e8ac713ec3302f2f73a0a917</anchor>
      <arglist>(int notes)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNotesPerBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>aa77ae7a0f2e89daac63600476345b777</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNotesPerBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>abc252a9c5bc0b889def6f7976683e9bc</anchor>
      <arglist>(int notes)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getLatenessProportion</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>aedd8ad714945efc8052b4dc8faecdbf3</anchor>
      <arglist>(int noteNumber, float strength) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLatenessProportion</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>ab0cc1cf54dbde27ade4868d56d0efab0</anchor>
      <arglist>(int noteNumber, float p, float strength)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLatenesses</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>ac44f9a44d6c3ad2c8ebc9fc3cd3d3657</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::XmlElement *</type>
      <name>createXml</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>a5daf25a33d79e0dd6f61acb02d26b80a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>grooveXmlTag</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplate.html</anchorfile>
      <anchor>afba7d91678aa34070b6ca0ea14bba2f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::GrooveTemplateManager</name>
    <filename>classtracktion_1_1engine_1_1GrooveTemplateManager.html</filename>
    <member kind="function">
      <type></type>
      <name>GrooveTemplateManager</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>ab033d72d07f26707f8c139383dd39d05</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useParameterizedGrooves</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>a86274d442ec47633d82f14c0c7af03c1</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTemplates</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>a8478889a422aff3852a65793bb49f0dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTemplateName</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>aa9b18af686e06bbfcf178a98ca9b81bb</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getTemplateNames</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>a4e87bcfccc4c45de26472040d8a48079</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const GrooveTemplate *</type>
      <name>getTemplate</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>a5c36548524da1dd57e3cd21b4e6ae7f0</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>const GrooveTemplate *</type>
      <name>getTemplateByName</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>a101701c43c4fad49c30446492ee86556</anchor>
      <arglist>(const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateTemplate</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>a5e98e9de2e3d0b52592b3a6f57044322</anchor>
      <arglist>(int index, const GrooveTemplate &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteTemplate</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>adfed157036a44f32d8d09db866c182ae</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reload</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>a71b140392f9b6721003dcfcc57ec3f59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1GrooveTemplateManager.html</anchorfile>
      <anchor>a72b6fd7d722cb91a49fead61129ce0e1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::VSTXML::Group</name>
    <filename>structtracktion_1_1engine_1_1VSTXML_1_1Group.html</filename>
    <base>tracktion::engine::VSTXML::Base</base>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Group.html</anchorfile>
      <anchor>af0b72fa01cd7bfc3f18a32e130fcf46e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; Base &gt;</type>
      <name>paramTree</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Group.html</anchorfile>
      <anchor>aa64690a94ce746af9ca835bb7965a86b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>engine::EditLoader::Handle</name>
    <filename>classengine_1_1EditLoader_1_1Handle.html</filename>
    <member kind="function">
      <type></type>
      <name>~Handle</name>
      <anchorfile>classengine_1_1EditLoader_1_1Handle.html</anchorfile>
      <anchor>a14b61be44ce049c110d62f7a54647cb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classengine_1_1EditLoader_1_1Handle.html</anchorfile>
      <anchor>a296703ede8597cdf502aa0f0ba2283a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getProgress</name>
      <anchorfile>classengine_1_1EditLoader_1_1Handle.html</anchorfile>
      <anchor>a724ecfab8c333683f19153e5a21e7c2f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>engine::EditRenderer::Handle</name>
    <filename>classengine_1_1EditRenderer_1_1Handle.html</filename>
    <member kind="function">
      <type></type>
      <name>~Handle</name>
      <anchorfile>classengine_1_1EditRenderer_1_1Handle.html</anchorfile>
      <anchor>a59ece351f4f352fa4d9e6385a3af6f6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancel</name>
      <anchorfile>classengine_1_1EditRenderer_1_1Handle.html</anchorfile>
      <anchor>a490e11940ebc8e8d013a577b32f0acb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getProgress</name>
      <anchorfile>classengine_1_1EditRenderer_1_1Handle.html</anchorfile>
      <anchor>aaca16799f0c9f88597ac9cb895569ef4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::HertzTag</name>
    <filename>structtracktion_1_1engine_1_1HertzTag.html</filename>
    <member kind="function">
      <type></type>
      <name>HertzTag</name>
      <anchorfile>structtracktion_1_1engine_1_1HertzTag.html</anchorfile>
      <anchor>ad2382ef837c7b71259e80dd01895c47a</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::HostedAudioDeviceInterface</name>
    <filename>classtracktion_1_1engine_1_1HostedAudioDeviceInterface.html</filename>
    <class kind="struct">tracktion::engine::HostedAudioDeviceInterface::Parameters</class>
    <member kind="function">
      <type></type>
      <name>HostedAudioDeviceInterface</name>
      <anchorfile>classtracktion_1_1engine_1_1HostedAudioDeviceInterface.html</anchorfile>
      <anchor>adfbb6a97536ff24e66f63a3b35b3f2da</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1HostedAudioDeviceInterface.html</anchorfile>
      <anchor>a168a101ea501165604a4fba45e42d0eb</anchor>
      <arglist>(const Parameters &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1HostedAudioDeviceInterface.html</anchorfile>
      <anchor>a12303acd652f71ea7d12b80d00d349ac</anchor>
      <arglist>(double sampleRate, int blockSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1HostedAudioDeviceInterface.html</anchorfile>
      <anchor>a2b89ee5a1fad378c297de563d219e204</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;buffer, juce::MidiBuffer &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isHostedMidiInputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1HostedAudioDeviceInterface.html</anchorfile>
      <anchor>a8392f53c0a2a569a059f6ddf8205cb2c</anchor>
      <arglist>(const MidiInputDevice &amp;)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>HostedAudioDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1HostedAudioDeviceInterface.html</anchorfile>
      <anchor>ab864dd4a5140fc0a9fe4a2136b735d21</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>HostedAudioDeviceType</name>
      <anchorfile>classtracktion_1_1engine_1_1HostedAudioDeviceInterface.html</anchorfile>
      <anchor>aa0a2b7cc98433cd45dfdd3590326b644</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>HostedMidiInputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1HostedAudioDeviceInterface.html</anchorfile>
      <anchor>a1d39141227954cd002351f7274edc856</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>HostedMidiOutputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1HostedAudioDeviceInterface.html</anchorfile>
      <anchor>a849f64ff2779ed80057e468d55c1a4f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::HostedMidiInputDeviceNode</name>
    <filename>classtracktion_1_1engine_1_1HostedMidiInputDeviceNode.html</filename>
    <base>tracktion::graph::Node</base>
    <base>tracktion::engine::InputDeviceInstance::Consumer</base>
    <base protection="private">tracktion::engine::TracktionEngineNode</base>
    <member kind="function">
      <type></type>
      <name>HostedMidiInputDeviceNode</name>
      <anchorfile>classtracktion_1_1engine_1_1HostedMidiInputDeviceNode.html</anchorfile>
      <anchor>ab97503296fac590fff0f15ff9fc0b16b</anchor>
      <arglist>(InputDeviceInstance &amp;, MidiInputDevice &amp;, tracktion::graph::PlayHeadState &amp;, tracktion::ProcessState &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HostedMidiInputDeviceNode</name>
      <anchorfile>classtracktion_1_1engine_1_1HostedMidiInputDeviceNode.html</anchorfile>
      <anchor>ac7c5fb466258386e776e2283811587cb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1HostedMidiInputDeviceNode.html</anchorfile>
      <anchor>a68e9389f214d61b69234b16b010f84ad</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1HostedMidiInputDeviceNode.html</anchorfile>
      <anchor>a9e585589220348c0f3790ad6020f9c26</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1HostedMidiInputDeviceNode.html</anchorfile>
      <anchor>a99fff58d86d872ecf7fc23641a81367d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1HostedMidiInputDeviceNode.html</anchorfile>
      <anchor>ac610be2ea6138acab36b6505d331affe</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1HostedMidiInputDeviceNode.html</anchorfile>
      <anchor>ab36fd9f025286dc263d3e0807280b8d3</anchor>
      <arglist>(const juce::MidiMessage &amp;, MPESourceID) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::IconProG2</name>
    <filename>classtracktion_1_1engine_1_1IconProG2.html</filename>
    <base>tracktion::engine::MackieMCU</base>
    <member kind="function">
      <type></type>
      <name>IconProG2</name>
      <anchorfile>classtracktion_1_1engine_1_1IconProG2.html</anchorfile>
      <anchor>a35ea74794937356bd8413c1883408ac4</anchor>
      <arglist>(ExternalControllerManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IconProG2</name>
      <anchorfile>classtracktion_1_1engine_1_1IconProG2.html</anchorfile>
      <anchor>ab03dc74ba0e627f4f1298f7778ea2b4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptMidiMessageInt</name>
      <anchorfile>classtracktion_1_1engine_1_1IconProG2.html</anchorfile>
      <anchor>abe3d5b4ba8eaa4d3c165ed500be35fb3</anchor>
      <arglist>(int deviceIdx, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1IconProG2.html</anchorfile>
      <anchor>a70a62c2a9b7aaa8f4594ecfd049eec70</anchor>
      <arglist>(bool isLoopOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>punchOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1IconProG2.html</anchorfile>
      <anchor>af2ca6eb58e3e8806de4daa37caf3ee8f</anchor>
      <arglist>(bool isPunching) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clickOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1IconProG2.html</anchorfile>
      <anchor>ad937fc46f6023e8387c3da11f9cbf6b3</anchor>
      <arglist>(bool isClickOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1IconProG2.html</anchorfile>
      <anchor>a5cf76043e87848850a6e427a57f767da</anchor>
      <arglist>(bool isSnapOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>slaveOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1IconProG2.html</anchorfile>
      <anchor>a233c300afe810cc2d4ea4d49216affe8</anchor>
      <arglist>(bool isSlaving) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1IconProG2.html</anchorfile>
      <anchor>a75b37da0a1737ed5e4df0f6bac114528</anchor>
      <arglist>(bool isScroll) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>undoStatusChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1IconProG2.html</anchorfile>
      <anchor>a71badebaebfb513db6d3ff7bdfc03d8f</anchor>
      <arglist>(bool undo, bool redo) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationReadModeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1IconProG2.html</anchorfile>
      <anchor>a199cf67e8d1c3333be2804afc8810631</anchor>
      <arglist>(bool isReading) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationWriteModeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1IconProG2.html</anchorfile>
      <anchor>af4c50024a72b43e9c90cef16dc5a8685</anchor>
      <arglist>(bool isWriting) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAssignmentMode</name>
      <anchorfile>classtracktion_1_1engine_1_1IconProG2.html</anchorfile>
      <anchor>ace32b33afcfefb9ff7626b6b6a166538</anchor>
      <arglist>(AssignmentMode newMode) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ImpulseResponsePlugin</name>
    <filename>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>ImpulseResponsePlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a59d12654dee127193e75c43dc6eb8856</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImpulseResponsePlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a3040639d355443755fa6fdb1c901e53a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadImpulseResponse</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a0c04ae7e14ed6143a93cc3912372dcd6</anchor>
      <arglist>(const void *sourceData, size_t sourceDataSize)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadImpulseResponse</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a94c1aa92dc5fb358bfeb7f4a8c816e79</anchor>
      <arglist>(const juce::File &amp;fileImpulseResponse)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadImpulseResponse</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>afd87afbaedb363fc2f67caa919e8b88e</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;&amp;bufferImpulseResponse, double sampleRateToStore, int bitDepthToStore)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a50b0d3453a76d3c563ee51b27494de86</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>adb568ef14610bef99014975ab3bee423</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a7931622cd69802064dea03db7548425f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a4ccd4f42d33b7b81f6eb0cafe3af73d3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a4d26e77623ca688fc8e164c07d923c74</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a354bb9436bac48068b82bad432a742fa</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a5c1e4aeaab7953b4b7ae2f14279e41b0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>affa42e7df1b2d8e637799d8b45f76ad8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a57c4e6020c61594df662649b6505bc77</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a36d539020d58b1f9f5b4a631f7ace951</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>af05f9531dd56b7dd8afa6cb0e91a1105</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>name</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a1c47fd587393d99a22ec558ad07a9080</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>normalise</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>aa810f628b666d4be3c50d6515e10026b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>trimSilence</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>ae7d067aa561431ee694b6a13988003ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>highPassCutoffParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>ab76e2c6722b6a93bf960d19cc614e8cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>lowPassCutoffParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a7977bb294bcd014742784c719c2bc89d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>gainParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a0f86e2fb7be9b485925f5bfa5c4d3512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>mixParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a14fc134b22477bde7dad23c335c3675f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>filterQParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a8cbef6f0f3906a075b8be536ab69b9e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1ImpulseResponsePlugin.html</anchorfile>
      <anchor>a06a47212c5c37d9060ff5e4908fc6a6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::TracktionArchiveFile::IndexEntry</name>
    <filename>structtracktion_1_1engine_1_1TracktionArchiveFile_1_1IndexEntry.html</filename>
    <member kind="function">
      <type></type>
      <name>IndexEntry</name>
      <anchorfile>structtracktion_1_1engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>a708bedad592bdcb04374390fad23a4f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IndexEntry</name>
      <anchorfile>structtracktion_1_1engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>ab1df7ed2b813593e155fd2cb7c9853cf</anchor>
      <arglist>(juce::InputStream &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IndexEntry</name>
      <anchorfile>structtracktion_1_1engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>a6aeaffa431eaa5d49d024268ded9959b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>structtracktion_1_1engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>ae6ff26eb599cd780d10ebd2e78571193</anchor>
      <arglist>(juce::OutputStream &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>originalName</name>
      <anchorfile>structtracktion_1_1engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>abacb694434de9005d9df2c1c46bebc0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>storedName</name>
      <anchorfile>structtracktion_1_1engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>a9242342bc591ab79369ecffe3792b4b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>offset</name>
      <anchorfile>structtracktion_1_1engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>a9d4035626d8a65d13e09747164052881</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>length</name>
      <anchorfile>structtracktion_1_1engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>afe718f9f67c6594b0e29e1e6a06364e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::StringArray</type>
      <name>extraNames</name>
      <anchorfile>structtracktion_1_1engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>a8d4da57396cf7e77e5ec66f0a371e4bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::StringArray</type>
      <name>extraValues</name>
      <anchorfile>structtracktion_1_1engine_1_1TracktionArchiveFile_1_1IndexEntry.html</anchorfile>
      <anchor>a5fa065bbce06a35da45cf0001e307f9c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::InputDevice</name>
    <filename>classtracktion_1_1engine_1_1InputDevice.html</filename>
    <base>tracktion::engine::Selectable</base>
    <member kind="enumeration">
      <type></type>
      <name>DeviceType</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>ac142baad652904d37630d4e5c1142d8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>ac142baad652904d37630d4e5c1142d8fadac51f9e10ac04c9731ec87aa2aa9ef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>trackWaveDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>ac142baad652904d37630d4e5c1142d8fa84f20e4b9a4de603178200e76480edac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>physicalMidiDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>ac142baad652904d37630d4e5c1142d8fa1d343cb414981835bf30e7c7912db336</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>virtualMidiDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>ac142baad652904d37630d4e5c1142d8fa2ed2b08e0167e75c5f18c81c0a11bd2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>trackMidiDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>ac142baad652904d37630d4e5c1142d8faeea22982bbf98a5cf39f99a9f2bef6bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MonitorMode</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>a30f8eb911d24e19420958698626371b2</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1InputDevice.html" anchor="a30f8eb911d24e19420958698626371b2a3262d48df5d75e3452f0f16b313b7808">off</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1InputDevice.html" anchor="a30f8eb911d24e19420958698626371b2a2bd9c0ed00116be1258e0cc66617d7c8">automatic</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1InputDevice.html" anchor="a30f8eb911d24e19420958698626371b2aed2b5c0139cec8ad2873829dc1117d50">on</enumvalue>
    </member>
    <member kind="enumvalue">
      <name>waveDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>ac142baad652904d37630d4e5c1142d8fadac51f9e10ac04c9731ec87aa2aa9ef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>trackWaveDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>ac142baad652904d37630d4e5c1142d8fa84f20e4b9a4de603178200e76480edac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>physicalMidiDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>ac142baad652904d37630d4e5c1142d8fa1d343cb414981835bf30e7c7912db336</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>virtualMidiDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>ac142baad652904d37630d4e5c1142d8fa2ed2b08e0167e75c5f18c81c0a11bd2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>trackMidiDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>ac142baad652904d37630d4e5c1142d8faeea22982bbf98a5cf39f99a9f2bef6bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>a879e56f43859e9cd5e272e8c2334e19a</anchor>
      <arglist>(Engine &amp;, juce::String type, juce::String name, juce::String deviceID)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~InputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>afcb913c9aaf0880adf75698108e7daf9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>const juce::String &amp;</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>a16f87185b8c86c12778fe87a6a33fba4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::String &amp;</type>
      <name>getType</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>a2ffef7eb31a0ace8485ae7c705af78a4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDeviceID</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>a25b98f39696222188913ae3f0b97e68a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DeviceType</type>
      <name>getDeviceType</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>ae6e43f5316347c505abf381fe6a7ea71</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTrackDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>a101911bb727470e5b7f74baf70d51e41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getAlias</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>a381743e312f8942d6b162a7d77c06cf9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlias</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>aec188036bbe0c81bf4d0803cabd479e7</anchor>
      <arglist>(const juce::String &amp;newAlias)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isAvailableToEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>a2cdbe8ba4030ae28041d1ef267e02040</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>a9d556856a868b6d7e46b0c0723d56822</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>ac0d7e0cde03d2fb569d2c339c23cca89</anchor>
      <arglist>(bool)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>a414ce494b70481735a21b8df7d061221</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MonitorMode</type>
      <name>getMonitorMode</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>a2b062b4a8dea25b2565a13060839c384</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMonitorMode</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>a2a69bd460bee79ce6b25c2647c954c58</anchor>
      <arglist>(MonitorMode)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual InputDeviceInstance *</type>
      <name>createInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>a7766f8f3fa4873b902aa206e825b2226</anchor>
      <arglist>(EditPlaybackContext &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>masterTimeUpdate</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>afbfc20d95c16040eb84e702f7645a12c</anchor>
      <arglist>(double time)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateRetrospectiveBufferLength</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>a54baa352166017567fd53ea456861aa9</anchor>
      <arglist>(double length)=0</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>adc15d5c4e912ac6227ddd54daa412969</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>saveProps</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>a044d9e005e377ea05abc4d19b94e9657</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setRetrospectiveLock</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>a1c5b2d0c023bd57362432401ee1a1f58</anchor>
      <arglist>(Engine &amp;, const juce::Array&lt; InputDeviceInstance * &gt; &amp;, bool lock)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>a0a39739fc48679b08fb8d8108d6a287e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LevelMeasurer</type>
      <name>levelMeasurer</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>ae943136a13a1c8a0c17c90064eeec2b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; bool &gt;</type>
      <name>enabled</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>acdfa99b5be8e0144bf6903ebb0558bb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MonitorMode</type>
      <name>monitorMode</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>ae51a8debdd440c56bd58da7a1bd2e8a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MonitorMode</type>
      <name>defaultMonitorMode</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>a48f98da159b537518881c94402f1aea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>retrospectiveRecordLock</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDevice.html</anchorfile>
      <anchor>aa48d8b2aca28ac21e85d82a98291a976</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::InputDeviceInstance</name>
    <filename>classtracktion_1_1engine_1_1InputDeviceInstance.html</filename>
    <class kind="struct">tracktion::engine::InputDeviceInstance::Consumer</class>
    <class kind="struct">tracktion::engine::InputDeviceInstance::Destination</class>
    <class kind="struct">tracktion::engine::InputDeviceInstance::DestinationList</class>
    <class kind="struct">tracktion::engine::InputDeviceInstance::MidiInputDestination</class>
    <class kind="class">tracktion::engine::InputDeviceInstance::RecordingContext</class>
    <class kind="struct">tracktion::engine::InputDeviceInstance::RecordingParameters</class>
    <class kind="struct">tracktion::engine::InputDeviceInstance::StopRecordingParameters</class>
    <class kind="struct">tracktion::engine::InputDeviceInstance::VirtualMidiInputDestination</class>
    <class kind="struct">tracktion::engine::InputDeviceInstance::WaveInputDestination</class>
    <member kind="typedef">
      <type>std::vector&lt; tl::expected&lt; std::unique_ptr&lt; RecordingContext &gt;, juce::String &gt; &gt;</type>
      <name>PreparedContext</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a06bfb2e264fbafe33e844eca296ce6b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputDeviceInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>aa8a5a2ff1f3ee6d04e8561bd7ea14490</anchor>
      <arglist>(InputDevice &amp;, EditPlaybackContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~InputDeviceInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a803f22c3a9c9747b6c6dece6710d57ba</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>InputDevice &amp;</type>
      <name>getInputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>aebf13c99fefb40c1ac1e5fb01c4103f7</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; EditItemID &gt;</type>
      <name>getTargets</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a0d176543cf56e8eeeed851250e97d7dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tl::expected&lt; Destination *, juce::String &gt;</type>
      <name>setTarget</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a3d8e6e848697e1791afc21eb7c3df077</anchor>
      <arglist>(EditItemID targetID, bool moveToTrack, juce::UndoManager *, std::optional&lt; int &gt; index=std::nullopt)</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>removeTarget</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>ab00706427f7c1ad2809c41291ac71d99</anchor>
      <arglist>(EditItemID targetID, juce::UndoManager *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isLivePlayEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a93ef8e380281f5891157b14781fc25c6</anchor>
      <arglist>(const Track &amp;) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isRecordingActive</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a085ae5230c7960b09522a82d50ba39e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isRecordingActive</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>ab6d93ea3b782d22d4a6b6bf9cad9dd11</anchor>
      <arglist>(EditItemID) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isRecordingQueuedToStop</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>ae2fda44177eb23b0e067c4be35457dbf</anchor>
      <arglist>(EditItemID)=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRecordingEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a1d5e0130c4c9aa1a6d9e6756453dd694</anchor>
      <arglist>(EditItemID) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRecordingEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a7027d79f95de05e021c794a8e669ef33</anchor>
      <arglist>(EditItemID, bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>shouldTrackContentsBeMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a5502b2f853be266be0d5baee4c40a0e1</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PreparedContext</type>
      <name>prepareToRecord</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a6a3e7a5ce2062816add1bfabf299d695</anchor>
      <arglist>(RecordingParameters)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::vector&lt; std::unique_ptr&lt; RecordingContext &gt; &gt;</type>
      <name>startRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a1bc1b092e68d30260b3d5b5361f60325</anchor>
      <arglist>(std::vector&lt; std::unique_ptr&lt; RecordingContext &gt;&gt;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>prepareToStopRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a6653150e5639942ae2a09f700b4563de</anchor>
      <arglist>(std::vector&lt; EditItemID &gt; targetsToStop)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tl::expected&lt; Clip::Array, juce::String &gt;</type>
      <name>stopRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a8eb5add2ee5d1c35a4daa84750b6ad66</anchor>
      <arglist>(StopRecordingParameters)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>stopRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a1894f0135064bb5e4a4ae89765e6a77d</anchor>
      <arglist>(StopRecordingParameters, std::function&lt; void(tl::expected&lt; Clip::Array, juce::String &gt;)&gt;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a65d9b6c297b3d9e04edeac1b29c367c1</anchor>
      <arglist>(EditItemID)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a6f4357f2c884cae68ecc5c1f8b8d6a79</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::File</type>
      <name>getRecordingFile</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a21927b5ac70e648e29f1112e8ad1d42e</anchor>
      <arglist>(EditItemID) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; choc::fifo::SingleReaderSingleWriterFIFO&lt; juce::MidiMessage &gt; &gt;</type>
      <name>getRecordingNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>ab36c7bf4ab1af1bb38e06ba19d933285</anchor>
      <arglist>(EditItemID) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TimePosition</type>
      <name>getPunchInTime</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>af5b8971cf6fb810fa5ec0f37d95f2457</anchor>
      <arglist>(EditItemID)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Array&lt; Clip * &gt;</type>
      <name>applyRetrospectiveRecord</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>ac8ca00c8213ac668cc528daa064432fa</anchor>
      <arglist>(bool armedOnly)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addConsumer</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>aa60622b0f764b26d9b173b2f95d610e8</anchor>
      <arglist>(Consumer *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removeConsumer</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>ac0c474410036f01b30c7e383fecda626</anchor>
      <arglist>(Consumer *)=0</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a4b5c587579837c21f4cb2c6cbbf73ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>InputDevice &amp;</type>
      <name>owner</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a7eeaa281f951f66054d1ff6a66b283f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditPlaybackContext &amp;</type>
      <name>context</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a7a9fc5d772fde6bd1a96eb80cb2616c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a1b5fe6d416f435e2bbf53f8ed783fb93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DestinationList</type>
      <name>destinations</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a828d9bd27571a5013af1206716ef507b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>ad5b6be0c03cbb2e81a9b1af411ac6329</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a2ad417b29495beff0df79d1ca9e53271</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a2832e40c45daf467a3cfdafbb7a071b5</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ClipSlot *</type>
      <name>getFreeSlot</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance.html</anchorfile>
      <anchor>a1e7720d896162d3619c94553221ad13d</anchor>
      <arglist>(AudioTrack &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::InputProvider</name>
    <filename>structtracktion_1_1engine_1_1InputProvider.html</filename>
    <member kind="function">
      <type></type>
      <name>InputProvider</name>
      <anchorfile>structtracktion_1_1engine_1_1InputProvider.html</anchorfile>
      <anchor>a0dd5b63357782794492c4b47c28c78a0</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InputProvider</name>
      <anchorfile>structtracktion_1_1engine_1_1InputProvider.html</anchorfile>
      <anchor>a00b15679dfa3009d65d494998fe2eb0e</anchor>
      <arglist>(choc::buffer::ChannelCount numChannelsToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInputs</name>
      <anchorfile>structtracktion_1_1engine_1_1InputProvider.html</anchorfile>
      <anchor>a5038b0128cf7be1206c5d6edc95a941a</anchor>
      <arglist>(tracktion::graph::Node::AudioAndMidiBuffer newBuffers)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::Node::AudioAndMidiBuffer</type>
      <name>getInputs</name>
      <anchorfile>structtracktion_1_1engine_1_1InputProvider.html</anchorfile>
      <anchor>a3a582eb2864f99865bf97af410409957</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContext</name>
      <anchorfile>structtracktion_1_1engine_1_1InputProvider.html</anchorfile>
      <anchor>ab087c7d41190811d24c813f61193233a</anchor>
      <arglist>(tracktion::engine::PluginRenderContext *pc)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::PluginRenderContext &amp;</type>
      <name>getContext</name>
      <anchorfile>structtracktion_1_1engine_1_1InputProvider.html</anchorfile>
      <anchor>ab2c8755a1aaadf4ff858e99265336b48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>choc::buffer::ChannelCount</type>
      <name>numChannels</name>
      <anchorfile>structtracktion_1_1engine_1_1InputProvider.html</anchorfile>
      <anchor>afd729f29c59100fbd548bd5f055c87a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>choc::buffer::ChannelArrayView&lt; float &gt;</type>
      <name>audio</name>
      <anchorfile>structtracktion_1_1engine_1_1InputProvider.html</anchorfile>
      <anchor>aa4bf9376c232a2b19d164dc88cadd075</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tracktion::engine::MidiMessageArray</type>
      <name>midi</name>
      <anchorfile>structtracktion_1_1engine_1_1InputProvider.html</anchorfile>
      <anchor>a50598033613056951269a5e5e13341c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tracktion::engine::PluginRenderContext *</type>
      <name>context</name>
      <anchorfile>structtracktion_1_1engine_1_1InputProvider.html</anchorfile>
      <anchor>a79d44e649510fe9fe12abac8ab46f352</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::InsertNode</name>
    <filename>classtracktion_1_1engine_1_1InsertNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>InsertNode</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertNode.html</anchorfile>
      <anchor>ada5984cf082cf2ee3d7c8f492c51d8db</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; input, InsertPlugin &amp;, std::unique_ptr&lt; Node &gt; returnNode, SampleRateAndBlockSize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~InsertNode</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertNode.html</anchorfile>
      <anchor>aa5a81d36115b169587135d3cf9fd572d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>InsertPlugin &amp;</type>
      <name>getInsert</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertNode.html</anchorfile>
      <anchor>a881068cac6fb1df3f2d9d9017de75227</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Node &amp;</type>
      <name>getInputNode</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertNode.html</anchorfile>
      <anchor>ad6f09ae99c610a16cf99a8f10a6abacf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TransformResult</type>
      <name>transform</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertNode.html</anchorfile>
      <anchor>a3e913f2d84e3919566837fb8551c70c9</anchor>
      <arglist>(Node &amp;, const std::vector&lt; Node * &gt; &amp;, TransformCache &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertNode.html</anchorfile>
      <anchor>a3ed16a22b10b6be62af7f73d445431aa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertNode.html</anchorfile>
      <anchor>a4cf86b832e4ee7acc05bcacbac85c374</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertNode.html</anchorfile>
      <anchor>afcb5ce5efc77901bbf4101b221553530</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertNode.html</anchorfile>
      <anchor>a9daf19b1eacc3194ba7cf470736a167f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertNode.html</anchorfile>
      <anchor>ab79e7fceb7bcf798b9bca4e3e82bd478</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::InsertPlugin</name>
    <filename>classtracktion_1_1engine_1_1InsertPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="enumeration">
      <type></type>
      <name>DeviceType</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ad2fd3dac8def4611b0652e5570a064ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ad2fd3dac8def4611b0652e5570a064aca65115238e993169a9758abc718d61ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>audioDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ad2fd3dac8def4611b0652e5570a064aca7610a7f395a8fcd03481f1240885f70f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midiDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ad2fd3dac8def4611b0652e5570a064aca2783811cbba585e9111e314c3e824c18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ad2fd3dac8def4611b0652e5570a064aca65115238e993169a9758abc718d61ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>audioDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ad2fd3dac8def4611b0652e5570a064aca7610a7f395a8fcd03481f1240885f70f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midiDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ad2fd3dac8def4611b0652e5570a064aca2783811cbba585e9111e314c3e824c18</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InsertPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a8dfc575c8361ab34e3733db0821f2bea</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~InsertPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a3b94419d172d0c2791c4867262f2b5ef</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a675daf0e602b026432525bf86be3b06c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ac9f64ddaaafd3c83d3fe6fba15fedcac</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a850be3ca25a20308f3568539466f7666</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a908b83afc4892cde915f9db51c3de217</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getChannelNames</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ac38f82a9e7bd6e557f5cfb7c8299d20d</anchor>
      <arglist>(juce::StringArray *, juce::StringArray *) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a80444af09e42bfb7f0cc9de031cc044f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesMidiInput</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a662db6bd43b32db448f33cef8819f9a3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ae8d32587c9eb228537bc2769a25f5bc5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a4cbe0729f3af9edff1dba55b676cc76c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a79bbdd3888913d5fd1f334615f08676c</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseWithoutStopping</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a6c352408a067501bed84b90870839c54</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a0f2b442fb8e51b48d4dd580ce4dfaa8f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a023f7e13f1ee9f852c31bf6bf787d632</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a70588123b90c27296b070e01e94dfe43</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ac6adcac300d51212429973c07b006fb8</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>DeviceType</type>
      <name>getSendDeviceType</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>ac7d38bb73d3317895d29962935ddaa69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DeviceType</type>
      <name>getReturnDeviceType</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a80ec7a5f48bb2a0d9749bbee0774f34b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateDeviceTypes</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>aefef86fa32fe7a9c161ad6a59fdd1555</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAudio</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>add95a79256577bcaf07f8b945e1adce4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a86c1bf3df831737f5833267b37f6976e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLatencyNumSamples</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a8ea40f51de4ac7ed9a3a0b517d57310c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>af3d4726f72bb666ea4a6255317cddaca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a80870c89295e06df23431e028339da05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getPossibleDeviceNames</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a54743f5a90d4f69065909f405b058548</anchor>
      <arglist>(Engine &amp;, juce::StringArray &amp;devices, juce::StringArray &amp;aliases, juce::BigInteger &amp;hasAudio, juce::BigInteger &amp;hasMidi, bool forInput)</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>name</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a8ae9c84b1a62e3c9f251b58992748705</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>inputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a9d608219380ddf5769fe7258d081933d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>outputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a244371563e00481cad71b7cecf63eab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>manualAdjustMs</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>aa69e8b81c59c85e7a8fbb78d90a9103d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertPlugin.html</anchorfile>
      <anchor>a21f995d61fff31489329a8ed69b4a580</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::InsertSendNode</name>
    <filename>classtracktion_1_1engine_1_1InsertSendNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>InsertSendNode</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertSendNode.html</anchorfile>
      <anchor>aeaffa4f3f13fa987bc0e0bab2dedc422</anchor>
      <arglist>(InsertPlugin &amp;)</arglist>
    </member>
    <member kind="function">
      <type>InsertPlugin &amp;</type>
      <name>getInsert</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertSendNode.html</anchorfile>
      <anchor>af7e129245149743adb5575ca1062546c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLatencyAtInput</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertSendNode.html</anchorfile>
      <anchor>a960c34d9cfcbd959d6233945909c45bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TransformResult</type>
      <name>transform</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertSendNode.html</anchorfile>
      <anchor>a3384b4f2852d9466bc0c2f27df4c6db8</anchor>
      <arglist>(Node &amp;, const std::vector&lt; Node * &gt; &amp;, TransformCache &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertSendNode.html</anchorfile>
      <anchor>a9e35351bf04a9ee7878fd93c9694aa52</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertSendNode.html</anchorfile>
      <anchor>afbb6982fb605ff89c7f73cd91f68a434</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertSendNode.html</anchorfile>
      <anchor>addd41412ac2d44f5fb02a2f82cf4d5cb</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertSendNode.html</anchorfile>
      <anchor>ab40649da3227a09eb3d80c36a230daca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1InsertSendNode.html</anchorfile>
      <anchor>a1ad8d85a9e18a6ca4863b7c5bf943bc7</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ReferencedMaterialList::IntervalList</name>
    <filename>structtracktion_1_1engine_1_1ReferencedMaterialList_1_1IntervalList.html</filename>
    <member kind="function">
      <type></type>
      <name>IntervalList</name>
      <anchorfile>structtracktion_1_1engine_1_1ReferencedMaterialList_1_1IntervalList.html</anchorfile>
      <anchor>a249336f59814d281c9207a98b26fc304</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumIntervals</name>
      <anchorfile>structtracktion_1_1engine_1_1ReferencedMaterialList_1_1IntervalList.html</anchorfile>
      <anchor>a408eddb8dede7e77d6c07114564304bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStart</name>
      <anchorfile>structtracktion_1_1engine_1_1ReferencedMaterialList_1_1IntervalList.html</anchorfile>
      <anchor>a9279673bff69d36fd5148204cf597271</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLength</name>
      <anchorfile>structtracktion_1_1engine_1_1ReferencedMaterialList_1_1IntervalList.html</anchorfile>
      <anchor>a8e7937aa06bfbffa505f97e9e649a683</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEnd</name>
      <anchorfile>structtracktion_1_1engine_1_1ReferencedMaterialList_1_1IntervalList.html</anchorfile>
      <anchor>a9a390c0568314579281352e68a2658e9</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInterval</name>
      <anchorfile>structtracktion_1_1engine_1_1ReferencedMaterialList_1_1IntervalList.html</anchorfile>
      <anchor>af013f988f682c8f9a454fe9a672baa2d</anchor>
      <arglist>(double start, double length)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::InvertEffect</name>
    <filename>structtracktion_1_1engine_1_1InvertEffect.html</filename>
    <base>tracktion::engine::ClipEffect</base>
    <member kind="function">
      <type></type>
      <name>InvertEffect</name>
      <anchorfile>structtracktion_1_1engine_1_1InvertEffect.html</anchorfile>
      <anchor>aecdec3c1366ba300810bfe18181945a6</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffect::ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion_1_1engine_1_1InvertEffect.html</anchorfile>
      <anchor>a78e04feca3f8cd0c9e52e21efcd77146</anchor>
      <arglist>(const AudioFile &amp;, double sourceLength) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::ProjectItems::ItemInfo</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1ProjectItems_1_1ItemInfo.html</filename>
    <member kind="variable">
      <type>ProjectItemID</type>
      <name>itemID</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ProjectItems_1_1ItemInfo.html</anchorfile>
      <anchor>acc1fc97aa9a68dea34d4f079a29e1d2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeRange</type>
      <name>range</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ProjectItems_1_1ItemInfo.html</anchorfile>
      <anchor>a22fbcd220ada4b0cd4ecb4cb581f163f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::SelectionManager::Iterator</name>
    <filename>structtracktion_1_1engine_1_1SelectionManager_1_1Iterator.html</filename>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectionManager_1_1Iterator.html</anchorfile>
      <anchor>a3d9b3b7e6ec132827545598d082f0ae0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>next</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectionManager_1_1Iterator.html</anchorfile>
      <anchor>a691398becf82a794d648c9a4856bee32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SelectionManager *</type>
      <name>get</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectionManager_1_1Iterator.html</anchorfile>
      <anchor>a36b5e63d9044e767b3b2b6150e98f826</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SelectionManager *</type>
      <name>operator-&gt;</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectionManager_1_1Iterator.html</anchorfile>
      <anchor>abc0ee701d32757aadf65a8be427710d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectionManager_1_1Iterator.html</anchorfile>
      <anchor>a1200c9986d9079668041430ef4c6eff2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::RenderManager::Job</name>
    <filename>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</filename>
    <base>tracktion::engine::ThreadPoolJobWithProgress</base>
    <class kind="struct">tracktion::engine::RenderManager::Job::Listener</class>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; Job &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>a57c7eb204f026d3c6ad4a7d779fdc641</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Job</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>a8033e8ae6242dcd98c4f3a7d31571904</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>JobStatus</type>
      <name>runJob</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>af8eeba6a336619c4b31ae0e876456b02</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentTaskProgress</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>a888a8ea5e885d80f0e2fe117bc3d50a4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancelJob</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>ae0415c42350112722c434a7dc1674abf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanUpDanglingJob</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>a6217ba172b33dcf28032fda0d68645be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>incReferenceCount</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>af182c950343f4dabbc15825700bfb0f2</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>decReferenceCountWithoutDeleting</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>a0512a8eb4075066537c1297e3fe45c68</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getReferenceCount</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>ac5f63454372bc5d4448f7a23f9d385af</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>ad2b798018c18bcf34e0b7687b5306009</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>aa05c79f5c552338c85a528a0603d15df</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>setUpRender</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>af42c0a1e179bdf52d656988d54db425f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>renderNextBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>a58d3fdd41e4de029d278b30d4726e0e4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>completeRender</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>a517a24bc2c1eed3bc11a3b70c1ef4e72</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>a5b438bb3492b1bb360f6a6b9de28ed69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioFile</type>
      <name>proxy</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>a8aa4d9bf697ebfe61ce0721bcc58089e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; float &gt;</type>
      <name>progress</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>a4db6f9096c35c7d1b66458d2da926ae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Job</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager_1_1Job.html</anchorfile>
      <anchor>a754b13e5d73e9964f1224ff89894e0cf</anchor>
      <arglist>(Engine &amp;, const AudioFile &amp;proxy)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::BackgroundJobManager::JobInfo</name>
    <filename>structtracktion_1_1engine_1_1BackgroundJobManager_1_1JobInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>JobInfo</name>
      <anchorfile>structtracktion_1_1engine_1_1BackgroundJobManager_1_1JobInfo.html</anchorfile>
      <anchor>a4a3f11f06d4a7154795ebd8361d80f4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JobInfo</name>
      <anchorfile>structtracktion_1_1engine_1_1BackgroundJobManager_1_1JobInfo.html</anchorfile>
      <anchor>a6636553a7089ff761ff7fa143b47b782</anchor>
      <arglist>(ThreadPoolJobWithProgress &amp;j, int id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JobInfo</name>
      <anchorfile>structtracktion_1_1engine_1_1BackgroundJobManager_1_1JobInfo.html</anchorfile>
      <anchor>aa7a17c4ddab03ade03a1aa3cc21e4a5c</anchor>
      <arglist>(const JobInfo &amp;o)</arglist>
    </member>
    <member kind="function">
      <type>JobInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion_1_1engine_1_1BackgroundJobManager_1_1JobInfo.html</anchorfile>
      <anchor>a9107a984464b790d16dbb7c372b7e0cf</anchor>
      <arglist>(const JobInfo &amp;o)</arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion_1_1engine_1_1BackgroundJobManager_1_1JobInfo.html</anchorfile>
      <anchor>ac428c1b5135a01df8caf87afd9cf8f65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>progress</name>
      <anchorfile>structtracktion_1_1engine_1_1BackgroundJobManager_1_1JobInfo.html</anchorfile>
      <anchor>a3f10368fd3873046961cc78f0d5f50e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>jobId</name>
      <anchorfile>structtracktion_1_1engine_1_1BackgroundJobManager_1_1JobInfo.html</anchorfile>
      <anchor>aabef43a934417dbe4d82f447730cd964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>canCancel</name>
      <anchorfile>structtracktion_1_1engine_1_1BackgroundJobManager_1_1JobInfo.html</anchorfile>
      <anchor>a01946da71d1c5afb2767d265b9f90a41</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::KeyResult</name>
    <filename>structtracktion_1_1engine_1_1KeyResult.html</filename>
    <member kind="function">
      <type></type>
      <name>KeyResult</name>
      <anchorfile>structtracktion_1_1engine_1_1KeyResult.html</anchorfile>
      <anchor>a0570f7883f49e52575c4fa2eb07ecaf9</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KeyResult</name>
      <anchorfile>structtracktion_1_1engine_1_1KeyResult.html</anchorfile>
      <anchor>a19220eb811a3c8c6e5cb5824bfa507cb</anchor>
      <arglist>(double r_, int k_, Scale::ScaleType s_)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structtracktion_1_1engine_1_1KeyResult.html</anchorfile>
      <anchor>acf9ff90d50703b77c4b434b5765f9947</anchor>
      <arglist>(const KeyResult &amp;other) const</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>r</name>
      <anchorfile>structtracktion_1_1engine_1_1KeyResult.html</anchorfile>
      <anchor>a60bade10d526eb75c5a59ed2fd3bdb05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>key</name>
      <anchorfile>structtracktion_1_1engine_1_1KeyResult.html</anchorfile>
      <anchor>a50c3f1e80324cba1955c405e39292b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Scale::ScaleType</type>
      <name>scale</name>
      <anchorfile>structtracktion_1_1engine_1_1KeyResult.html</anchorfile>
      <anchor>a972a23bcedd02fc5d2699a6e9b1286b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::LambdaSelectableListener</name>
    <filename>classtracktion_1_1engine_1_1LambdaSelectableListener.html</filename>
    <base>tracktion::engine::SelectableListener</base>
    <member kind="function">
      <type></type>
      <name>LambdaSelectableListener</name>
      <anchorfile>classtracktion_1_1engine_1_1LambdaSelectableListener.html</anchorfile>
      <anchor>a188f08665db8f232eba71e06237c65c3</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LambdaSelectableListener</name>
      <anchorfile>classtracktion_1_1engine_1_1LambdaSelectableListener.html</anchorfile>
      <anchor>a8666352c21497f245cf8585d9ebe4275</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LambdaSelectableListener</name>
      <anchorfile>classtracktion_1_1engine_1_1LambdaSelectableListener.html</anchorfile>
      <anchor>ad5ac4f57e9174dec4c7962ab9eb92240</anchor>
      <arglist>(Selectable &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1LambdaSelectableListener.html</anchorfile>
      <anchor>adcb1ee52bfeaa66b9a527e84eeca6819</anchor>
      <arglist>(Selectable *s=nullptr)</arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void()&gt;</type>
      <name>onSelectableChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1LambdaSelectableListener.html</anchorfile>
      <anchor>a74d5700995bb26c64b501e2284ec4c57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void()&gt;</type>
      <name>onSelectableAboutToBeDeleted</name>
      <anchorfile>classtracktion_1_1engine_1_1LambdaSelectableListener.html</anchorfile>
      <anchor>ac4dc093de33a8a4da2928998c2302473</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::LambdaTimer</name>
    <filename>classtracktion_1_1engine_1_1LambdaTimer.html</filename>
    <member kind="function">
      <type></type>
      <name>LambdaTimer</name>
      <anchorfile>classtracktion_1_1engine_1_1LambdaTimer.html</anchorfile>
      <anchor>a58a243343fdede02a7cb6f6f8bf76349</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LambdaTimer</name>
      <anchorfile>classtracktion_1_1engine_1_1LambdaTimer.html</anchorfile>
      <anchor>a5e3440ed76550f4571c8be1e64e07fe9</anchor>
      <arglist>(std::function&lt; void()&gt; newCallback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1LambdaTimer.html</anchorfile>
      <anchor>a5c02f0107a3160522bafa2f5f3834da1</anchor>
      <arglist>(std::function&lt; void()&gt; newCallback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startTimer</name>
      <anchorfile>classtracktion_1_1engine_1_1LambdaTimer.html</anchorfile>
      <anchor>ad4b53f252125c4d2067d94887a294cd7</anchor>
      <arglist>(std::chrono::duration&lt; DurationType &gt; interval)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1LambdaTimer.html</anchorfile>
      <anchor>ab4503d599d41195f5dc4e9f845297f7b</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::LAMEManager</name>
    <filename>classtracktion_1_1engine_1_1LAMEManager.html</filename>
    <member kind="function" static="yes">
      <type>static juce::File</type>
      <name>getLameEncoderExe</name>
      <anchorfile>classtracktion_1_1engine_1_1LAMEManager.html</anchorfile>
      <anchor>ac32c43de7effcc09a87b3a7ca382bb56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::File</type>
      <name>getFFmpegExe</name>
      <anchorfile>classtracktion_1_1engine_1_1LAMEManager.html</anchorfile>
      <anchor>a47117c0942eaf4cc461cc2f50ea81f6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerAudioFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1LAMEManager.html</anchorfile>
      <anchor>ab6ab9ebfd7e086098b015b4adcb63a16</anchor>
      <arglist>(AudioFileFormatManager &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>lameIsAvailable</name>
      <anchorfile>classtracktion_1_1engine_1_1LAMEManager.html</anchorfile>
      <anchor>a507962d58d69084507c6bbd22d7bdd84</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::LatencyNode</name>
    <filename>classtracktion_1_1graph_1_1LatencyNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>LatencyNode</name>
      <anchorfile>classtracktion_1_1graph_1_1LatencyNode.html</anchorfile>
      <anchor>a25211e709d053afb42c8cb08e084d47f</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; inputNode, int numSamplesToDelay)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LatencyNode</name>
      <anchorfile>classtracktion_1_1graph_1_1LatencyNode.html</anchorfile>
      <anchor>aa15f8036f3f2bd8f6e85c3e261ccd82a</anchor>
      <arglist>(std::shared_ptr&lt; Node &gt; inputNode, int numSamplesToDelay)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LatencyNode</name>
      <anchorfile>classtracktion_1_1graph_1_1LatencyNode.html</anchorfile>
      <anchor>a102349bf741562a76644e9c019274b63</anchor>
      <arglist>(Node *inputNode, int numSamplesToDelay)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1graph_1_1LatencyNode.html</anchorfile>
      <anchor>a0aba43f9404bd634bb7783d7d533ae16</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1graph_1_1LatencyNode.html</anchorfile>
      <anchor>a554ea296ed1c7d7de1ed40ebe4ca27e6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1graph_1_1LatencyNode.html</anchorfile>
      <anchor>afe0b351c580d2221680fd1f42f775a49</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1graph_1_1LatencyNode.html</anchorfile>
      <anchor>a06f2667cd45f7e473fde65ea88cea595</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1LatencyNode.html</anchorfile>
      <anchor>abc8254b828cac050759b8d81c10f4c13</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::LatencyPlugin</name>
    <filename>classtracktion_1_1engine_1_1LatencyPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>LatencyPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>a7ee885a4bf125bc6e2c21a716636c3c5</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LatencyPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>aaaad35bc1f80f9183147332328e1e2bf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>a7c1ccbd47ae2bad3e7135b5e06db2909</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>a6da0fbd1ab3b690aa44d7672e265e202</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>a079f6b8fcb7402bf0b8a6ed7d0c7f642</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>a2e608aaddb958204ecd50dc931daeb95</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>a30ac633ac0d42a537a3b6daeca4ea5bb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>a1d8fa65abd9805b13e86d54eb01351e1</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>ad266ab260859647acb67d910c240a3cf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>a686f2673f74ad0e9d2e37a21dd54a381</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>a14720398b0f9507ecf200d22dbdc7fcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>ae39a560c2335919ca9507ca061658655</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ConstrainedCachedValue&lt; float &gt;</type>
      <name>latencyTimeSeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>a134ba34d13f21d0c07beea80d8626af4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>applyLatency</name>
      <anchorfile>classtracktion_1_1engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>a05da7ec9c31fc64dd636e8f4cf081dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1LatencyPlugin.html</anchorfile>
      <anchor>a5d8fdc0506d062259b0a50072dd8bfc1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::LatencyProcessor</name>
    <filename>structtracktion_1_1graph_1_1LatencyProcessor.html</filename>
    <member kind="function">
      <type></type>
      <name>LatencyProcessor</name>
      <anchorfile>structtracktion_1_1graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>ac3618fc6cda11d5721827bcec5f26682</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSameConfigurationAs</name>
      <anchorfile>structtracktion_1_1graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>aea3d33761a6d3335eca11e3006951d8c</anchor>
      <arglist>(const LatencyProcessor &amp;o) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasConfiguration</name>
      <anchorfile>structtracktion_1_1graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>a37f817f9256198875528783e918ed6d1</anchor>
      <arglist>(int numLatencySamples, double preparedSampleRate, int numberOfChannels) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLatencyNumSamples</name>
      <anchorfile>structtracktion_1_1graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>aef8197ad95345750257f36993aaa4eaf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLatencyNumSamples</name>
      <anchorfile>structtracktion_1_1graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>a054c8b9f33ecbce04a0580859f782347</anchor>
      <arglist>(int numLatencySamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>structtracktion_1_1graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>a97d6aaa0b3bab57a8ae1030f0e5295a9</anchor>
      <arglist>(double sampleRateToUse, int blockSize, int numChannels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeAudio</name>
      <anchorfile>structtracktion_1_1graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>a141c9d74d309b44fb8c92e559d41f93f</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeMIDI</name>
      <anchorfile>structtracktion_1_1graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>a21a2995126f5c9639af0a72b354ea4fc</anchor>
      <arglist>(const tracktion_engine::MidiMessageArray &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readAudioAdding</name>
      <anchorfile>structtracktion_1_1graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>a23bb6fef3cf695e3726f7f92e111c6a7</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readAudioOverwriting</name>
      <anchorfile>structtracktion_1_1graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>a478f462dda48124aace26ee3a8db0929</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readMIDI</name>
      <anchorfile>structtracktion_1_1graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>ab2c3af94e078919164bdd04301533440</anchor>
      <arglist>(tracktion_engine::MidiMessageArray &amp;dst, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAudio</name>
      <anchorfile>structtracktion_1_1graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>a4f6b71a551728facf7ae9e2fa015f9a2</anchor>
      <arglist>(int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearMIDI</name>
      <anchorfile>structtracktion_1_1graph_1_1LatencyProcessor.html</anchorfile>
      <anchor>a3e16fa86c292ad8afca360767b14aa9a</anchor>
      <arglist>(int numSamples)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::LauncherClipPlaybackHandle</name>
    <filename>classtracktion_1_1engine_1_1LauncherClipPlaybackHandle.html</filename>
    <class kind="struct">tracktion::engine::LauncherClipPlaybackHandle::SplitBeatRange</class>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classtracktion_1_1engine_1_1LauncherClipPlaybackHandle.html</anchorfile>
      <anchor>a61648dfc6f8c133bc00f69d29aa946ac</anchor>
      <arglist>(BeatPosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classtracktion_1_1engine_1_1LauncherClipPlaybackHandle.html</anchorfile>
      <anchor>a918a9253a217cd0bc0b77da97e7f1be6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; BeatPosition &gt;</type>
      <name>getStart</name>
      <anchorfile>classtracktion_1_1engine_1_1LauncherClipPlaybackHandle.html</anchorfile>
      <anchor>a8ea1776861ee4595553a9587aaabc533</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SplitBeatRange</type>
      <name>timelineRangeToClipSourceRange</name>
      <anchorfile>classtracktion_1_1engine_1_1LauncherClipPlaybackHandle.html</anchorfile>
      <anchor>ae7561e690fa55fadf5cd46995f61aa2b</anchor>
      <arglist>(BeatRange) const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; float &gt;</type>
      <name>getProgress</name>
      <anchorfile>classtracktion_1_1engine_1_1LauncherClipPlaybackHandle.html</anchorfile>
      <anchor>a6ef1dfc87fc337be6b06dfacbe721557</anchor>
      <arglist>(BeatPosition) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LauncherClipPlaybackHandle</type>
      <name>forLooping</name>
      <anchorfile>classtracktion_1_1engine_1_1LauncherClipPlaybackHandle.html</anchorfile>
      <anchor>a10e3ef7dd5b2bc0fa42f4fbb74db3e6f</anchor>
      <arglist>(BeatRange loopRange, BeatDuration offset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LauncherClipPlaybackHandle</type>
      <name>forOneShot</name>
      <anchorfile>classtracktion_1_1engine_1_1LauncherClipPlaybackHandle.html</anchorfile>
      <anchor>ad06fbe7292a730a29ce472e4a6cbe0fc</anchor>
      <arglist>(BeatRange clipRange)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>engine::LaunchHandle</name>
    <filename>classengine_1_1LaunchHandle.html</filename>
    <class kind="struct">engine::LaunchHandle::SplitStatus</class>
    <member kind="enumeration">
      <type></type>
      <name>PlayState</name>
      <anchorfile>classengine_1_1LaunchHandle.html</anchorfile>
      <anchor>ada096023e677738fd840c60a6d09566c</anchor>
      <arglist></arglist>
      <enumvalue file="classengine_1_1LaunchHandle.html" anchor="ada096023e677738fd840c60a6d09566caf0a0bfe6bc7d2c58d2989034f83183e0">stopped</enumvalue>
      <enumvalue file="classengine_1_1LaunchHandle.html" anchor="ada096023e677738fd840c60a6d09566ca7ed501a93c1205e3a23f7f0313ea65dc">playing</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>QueueState</name>
      <anchorfile>classengine_1_1LaunchHandle.html</anchorfile>
      <anchor>a0004edbfe6f268c38645cd4eb2bf8c2c</anchor>
      <arglist></arglist>
      <enumvalue file="classengine_1_1LaunchHandle.html" anchor="a0004edbfe6f268c38645cd4eb2bf8c2ca41886f27e15eb3f30bfc386a18bb41b0">stopQueued</enumvalue>
      <enumvalue file="classengine_1_1LaunchHandle.html" anchor="a0004edbfe6f268c38645cd4eb2bf8c2ca66416093d869af1489e779b53fff6b7f">playQueued</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>LaunchHandle</name>
      <anchorfile>classengine_1_1LaunchHandle.html</anchorfile>
      <anchor>a61916eed222acb5518e39f5c52c9ba8d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LaunchHandle</name>
      <anchorfile>classengine_1_1LaunchHandle.html</anchorfile>
      <anchor>ace2925cfe03225e6837ed9c2ee7e7723</anchor>
      <arglist>(const LaunchHandle &amp;)</arglist>
    </member>
    <member kind="function">
      <type>PlayState</type>
      <name>getPlayingStatus</name>
      <anchorfile>classengine_1_1LaunchHandle.html</anchorfile>
      <anchor>a76a3d5b3314e66da6c1e6eb8e04da3e3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; QueueState &gt;</type>
      <name>getQueuedStatus</name>
      <anchorfile>classengine_1_1LaunchHandle.html</anchorfile>
      <anchor>a48b94a7af7997148f2cf3c9b84c50bc3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; MonotonicBeat &gt;</type>
      <name>getQueuedEventPosition</name>
      <anchorfile>classengine_1_1LaunchHandle.html</anchorfile>
      <anchor>ae445d6ae807915c5d8c80a77f46da91d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classengine_1_1LaunchHandle.html</anchorfile>
      <anchor>a048e2a838a0d22d27a7e4fffae05e564</anchor>
      <arglist>(std::optional&lt; MonotonicBeat &gt;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classengine_1_1LaunchHandle.html</anchorfile>
      <anchor>a4dd3af5bfb73c8275a8a6f07bf108dfc</anchor>
      <arglist>(std::optional&lt; MonotonicBeat &gt;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playSynced</name>
      <anchorfile>classengine_1_1LaunchHandle.html</anchorfile>
      <anchor>a267a00124933df8bfec03b4a4c945db9</anchor>
      <arglist>(const LaunchHandle &amp;, std::optional&lt; MonotonicBeat &gt;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLooping</name>
      <anchorfile>classengine_1_1LaunchHandle.html</anchorfile>
      <anchor>a5a61080680fdc7a39dd88775f638d6b1</anchor>
      <arglist>(std::optional&lt; BeatDuration &gt;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudge</name>
      <anchorfile>classengine_1_1LaunchHandle.html</anchorfile>
      <anchor>a682b63522dc440d92b36d0d60daed2fb</anchor>
      <arglist>(BeatDuration)</arglist>
    </member>
    <member kind="function">
      <type>SplitStatus</type>
      <name>advance</name>
      <anchorfile>classengine_1_1LaunchHandle.html</anchorfile>
      <anchor>a759319ade34b79108acc4e5153ba36cb</anchor>
      <arglist>(const SyncRange &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; BeatRange &gt;</type>
      <name>getPlayedRange</name>
      <anchorfile>classengine_1_1LaunchHandle.html</anchorfile>
      <anchor>ac705e11de5d9bf349ce0cb52afb9952a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; MonotonicBeatRange &gt;</type>
      <name>getPlayedMonotonicRange</name>
      <anchorfile>classengine_1_1LaunchHandle.html</anchorfile>
      <anchor>abe3a0fcd19900a2d4026cb75559439db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; BeatRange &gt;</type>
      <name>getLastPlayedRange</name>
      <anchorfile>classengine_1_1LaunchHandle.html</anchorfile>
      <anchor>ade868096c77f22f07e3f02a1a46511c6</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::LaunchQuantisation</name>
    <filename>classtracktion_1_1engine_1_1LaunchQuantisation.html</filename>
    <member kind="function">
      <type></type>
      <name>LaunchQuantisation</name>
      <anchorfile>classtracktion_1_1engine_1_1LaunchQuantisation.html</anchorfile>
      <anchor>a20d17c4dd18124b53ace382ac3c4e46a</anchor>
      <arglist>(juce::ValueTree &amp;, Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getNext</name>
      <anchorfile>classtracktion_1_1engine_1_1LaunchQuantisation.html</anchorfile>
      <anchor>a28d815c820cb112da98a5f7bff354c02</anchor>
      <arglist>(BeatPosition) const noexcept</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion_1_1engine_1_1LaunchQuantisation.html</anchorfile>
      <anchor>a799044617568cd08a4d2df785c93dcc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; LaunchQType &gt;</type>
      <name>type</name>
      <anchorfile>classtracktion_1_1engine_1_1LaunchQuantisation.html</anchorfile>
      <anchor>a5f18bf6baeb8cbf1e313270d00498b49</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::LevelMeasurer</name>
    <filename>classtracktion_1_1engine_1_1LevelMeasurer.html</filename>
    <class kind="struct">tracktion::engine::LevelMeasurer::Client</class>
    <member kind="enumeration">
      <type></type>
      <name>Mode</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a3ddbe3b40b23e1b24d9032a51c04294a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>peakMode</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a3ddbe3b40b23e1b24d9032a51c04294aaddc18511df62cedb2a1bfab60a979dd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RMSMode</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a3ddbe3b40b23e1b24d9032a51c04294aa7742defdf35759d7e67166c30b2229cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sumDiffMode</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a3ddbe3b40b23e1b24d9032a51c04294aa73a56f54584c6ad776ef65af87707b73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>peakMode</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a3ddbe3b40b23e1b24d9032a51c04294aaddc18511df62cedb2a1bfab60a979dd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RMSMode</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a3ddbe3b40b23e1b24d9032a51c04294aa7742defdf35759d7e67166c30b2229cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sumDiffMode</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a3ddbe3b40b23e1b24d9032a51c04294aa73a56f54584c6ad776ef65af87707b73</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LevelMeasurer</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a5a0fd22e797eae47d9384ffbd0180772</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LevelMeasurer</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>ad887bdae9a7705612554a5a16f3b44d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>aed52c1a6a6ac8459bcfdb7a0eca1cfbe</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;buffer, int start, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>aaab7208302cc95b96f0f91c92d8e3d86</anchor>
      <arglist>(MidiMessageArray &amp;midiBuffer, const float *gains)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processMidiLevel</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a9b79ee054d1bfcf06d3e86f5219753ec</anchor>
      <arglist>(float level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a7a62b17d054584c4945df90e67aaf5bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearOverload</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a4800b2d4f1ee791dba311c7cb2ffb70d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearPeak</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>aff5e68c9021e182138aa9d7ee23e0c0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMode</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>aa160047ab01895053f08b73adaa5bd71</anchor>
      <arglist>(Mode)</arglist>
    </member>
    <member kind="function">
      <type>Mode</type>
      <name>getMode</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a2ab28a54fe9a518a4c2b31cddcbed889</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShowMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a165c61c537458aec861cfb8bf9e41598</anchor>
      <arglist>(bool showMidi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumActiveChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a756ab5851dbbb292cd0de1c5afa91aa8</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addClient</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>ace2198408e488bdb7c39bccae9de4f94</anchor>
      <arglist>(Client &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeClient</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a1c38df211c457709e0b4364fd9cdba08</anchor>
      <arglist>(Client &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLevelCache</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>ab42eb0acd1fa84d924fd22bc63aa45ad</anchor>
      <arglist>(float dBL, float dBR) noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; float, float &gt;</type>
      <name>getLevelCache</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurer.html</anchorfile>
      <anchor>a17279ddbb01307b559c5f25851deebf7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::LevelMeasurerProcessingNode</name>
    <filename>classtracktion_1_1engine_1_1LevelMeasurerProcessingNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>LevelMeasurerProcessingNode</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurerProcessingNode.html</anchorfile>
      <anchor>af87644a3f7f78399212e5e985f2fc09e</anchor>
      <arglist>(std::unique_ptr&lt; tracktion::graph::Node &gt; inputNode, LevelMeterPlugin &amp;levelMeterPlugin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LevelMeasurerProcessingNode</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurerProcessingNode.html</anchorfile>
      <anchor>a8b3e87167df34bf8d5bf23b98f029019</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurerProcessingNode.html</anchorfile>
      <anchor>ad7e9b87acd9d4f383bd1b16ef617b931</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; tracktion::graph::Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurerProcessingNode.html</anchorfile>
      <anchor>ad39f8fb954c3346958499169341e60a1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurerProcessingNode.html</anchorfile>
      <anchor>a3e12279a96afca309fe856ffc510f3a3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurerProcessingNode.html</anchorfile>
      <anchor>ab7982abddabbc7319383048018865761</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurerProcessingNode.html</anchorfile>
      <anchor>a60b5feb6d84623e9c47edc0fb85572db</anchor>
      <arglist>(choc::buffer::FrameCount, juce::Range&lt; int64_t &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasurerProcessingNode.html</anchorfile>
      <anchor>a0eba6ed50cc6b54739c895bd8b87e0a5</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::LevelMeasuringNode</name>
    <filename>classtracktion_1_1engine_1_1LevelMeasuringNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>LevelMeasuringNode</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasuringNode.html</anchorfile>
      <anchor>aa9ba4e32e873dda72e0c43307c2b4a5c</anchor>
      <arglist>(std::unique_ptr&lt; tracktion::graph::Node &gt; inputNode, LevelMeasurer &amp;)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasuringNode.html</anchorfile>
      <anchor>a714c6fbab3c2e8b5a57842099a2b7603</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; tracktion::graph::Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasuringNode.html</anchorfile>
      <anchor>a49e05e584d98458ed8c4620ce279e555</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasuringNode.html</anchorfile>
      <anchor>aa4a2773d04d9400e9e80fa4865f25f36</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeasuringNode.html</anchorfile>
      <anchor>a5f556ce1d48307be013a408cda57b1e2</anchor>
      <arglist>(tracktion::graph::Node::ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::LevelMeterPlugin</name>
    <filename>classtracktion_1_1engine_1_1LevelMeterPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>LevelMeterPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>acebe95917ec56ba3f73d687fe216f649</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LevelMeterPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a4e73debc0f54330bc3a413f09ee94167</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>aca45be6bbfccb75cee44e5f4ecc3e781</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a81e0676ceb624b767d4ea133a3b2533e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>aac168480b2a63cf5e7825de4b95cb03c</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTooltip</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a63d76aa54975ddd4b9bc856e10c94cd1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeDisabled</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a1d197716ae30f3d445190933951e711b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldMeasureCpuUsage</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a40dfcb60503b1fac92759422ea5cecd5</anchor>
      <arglist>() const noexcept final</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a8f0b366e624b910902f8d52dc51600a4</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a4712eed03018796f9b3dac874f83b3f7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>ad78eee30a2c67728e0632e595b57ecc5</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseWithoutStopping</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a4c0c7920bfbc19f99415d7f4d09f2151</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a25fa22a0dab3eb1598cef2e82d202a45</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a874841f6288e5a90bf8ce39ab9fbbf50</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a9891f8480a2ec78605a500d3a3d54b46</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a9b3d13106fed4d1a5b1f0c860f88f871</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a7633efac6ebc1f04791b94ffd962574c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a5053f538164e519c97d866603cda99cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>LevelMeasurer</type>
      <name>measurer</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a7a1227568a0fa8828e1c7adf985f6c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>showMidiActivity</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>a61fdf603be396b682c8639f4409249d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1LevelMeterPlugin.html</anchorfile>
      <anchor>ac48906ced562dae3c1639d4020e288c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::EngineBehaviour::LevelMeterSettings</name>
    <filename>structtracktion_1_1engine_1_1EngineBehaviour_1_1LevelMeterSettings.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>maxPeakAgeMs</name>
      <anchorfile>structtracktion_1_1engine_1_1EngineBehaviour_1_1LevelMeterSettings.html</anchorfile>
      <anchor>afc53713321200eaa2d5088c0d1340e2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>decaySpeed</name>
      <anchorfile>structtracktion_1_1engine_1_1EngineBehaviour_1_1LevelMeterSettings.html</anchorfile>
      <anchor>a77aa1d2187f1715467bb04ea95c07757</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::LFOModifier</name>
    <filename>classtracktion_1_1engine_1_1LFOModifier.html</filename>
    <base>tracktion::engine::Modifier</base>
    <base protection="private">tracktion::engine::ValueTreeAllEventListener</base>
    <class kind="struct">tracktion::engine::LFOModifier::Assignment</class>
    <member kind="enumeration">
      <type></type>
      <name>Wave</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveSine</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777ab189019b0c9edf1a9df09305328854ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveTriangle</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777a86b05fed9fdf6209247b0ba9986f0bad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveSawUp</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777af659a2b5a07020d51a01f728bb8daa53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveSawDown</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777af96e60c1e6859a50a1738cadbf13ef9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveSquare</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777addd9a44d7b651c7b89c48cffc255e823</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fourStepsUp</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777ae227fdf34072d370d203a7d6eeb89a00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fourStepsDown</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777a9f68b3b48754100cd3f2dd91ed08a646</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eightStepsUp</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777afaab16d10456ac671d738abfe6ddb3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eightStepsDown</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777a62aca3ec465214d134f9553cb136891a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>random</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777a99e67038168d4ee6261d9be65c0d318e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noise</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777a3761b36a904ac80d8d12cf8f36e31e2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; LFOModifier &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a3cdf4c98529838ef2540d727d04a5c2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; LFOModifier &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a978a227635d90f99bd68f2fb0d012bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveSine</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777ab189019b0c9edf1a9df09305328854ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveTriangle</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777a86b05fed9fdf6209247b0ba9986f0bad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveSawUp</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777af659a2b5a07020d51a01f728bb8daa53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveSawDown</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777af96e60c1e6859a50a1738cadbf13ef9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>waveSquare</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777addd9a44d7b651c7b89c48cffc255e823</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fourStepsUp</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777ae227fdf34072d370d203a7d6eeb89a00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fourStepsDown</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777a9f68b3b48754100cd3f2dd91ed08a646</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eightStepsUp</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777afaab16d10456ac671d738abfe6ddb3d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eightStepsDown</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777a62aca3ec465214d134f9553cb136891a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>random</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777a99e67038168d4ee6261d9be65c0d318e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noise</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae6e128e7deb6362c9a896ffc1176b777a3761b36a904ac80d8d12cf8f36e31e2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LFOModifier</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a2390af3be61f84f76473d7df2ad880e0</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LFOModifier</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>aabfa76b97c6cfc64529ae5484898ab2e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a8981eb33b25706e80aef51efc1fe4af3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ae867a4e73b12da5ef721c751d3bc7f51</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a72964cc91db5e5612a78efdc37750849</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentPhase</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a82fa4d7bacb136911639940097af31f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::ModifierAssignment *</type>
      <name>createAssignment</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a8456313b25bf5ea9ef1494aff7c5076d</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>ProcessingPosition</type>
      <name>getProcessingPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a8fc5633f0c2540e9cfd40daf0892e84d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a78cdaba5f5725ff0724beb9fe5463030</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>adccebac922130fb0ab22f0b84de7ef20</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a7910b344c687168c108702bc3ddd2323</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a08b0ce6145809240435352b1112fc5fe</anchor>
      <arglist>(double, int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getWaveNames</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a44617ce6400d54fb9a0fce4fd93a8759</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>wave</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a58bc261d27fde22ac38d10c9a863bc72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>syncType</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a4930a7a8bc7c2e0e9e69f723499148a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rate</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a81fa16bfb5e3926f14a29c03596cdaf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rateType</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>af0643eaa97ab6fbf5f99fc1fd6eeac13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>depth</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a8b9f0e75ecb8c07b66c460bc1a7b3a02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>bipolar</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>afe46ff2c67a17e2ebc9a3851e8981290</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>phase</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a7495a1a484bd146e5382b538d796eda0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>offset</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>ac8e9e5616265d8b6f9a98e981ce46fdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>waveParam</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a7bb17e406ed1e211b6ab22b7c5aca657</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>syncTypeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>adeaa1f5e53c3a071b7bcf578d4ace372</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rateParam</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a75f6ddbb1026d80e0a5a22a6b85e0e30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rateTypeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>aeff17b702b579568d08913388f1dbf16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>depthParam</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a885e1eaa5da35abb8621ed5033647ec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>bipolarParam</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a42460960171ea00984b38125ea536105</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>phaseParam</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>aef1b672c7ec159f897393125694f025d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>offsetParam</name>
      <anchorfile>classtracktion_1_1engine_1_1LFOModifier.html</anchorfile>
      <anchor>a22835c7a8aff2fdccf7d00f1b2bd7474</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::FourOscPlugin::LFOParams</name>
    <filename>structtracktion_1_1engine_1_1FourOscPlugin_1_1LFOParams.html</filename>
    <member kind="function">
      <type></type>
      <name>LFOParams</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>aa2b1c40cd1ac9ae2c559e6f70d415a6b</anchor>
      <arglist>(FourOscPlugin &amp;plugin, int lfoNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attach</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>a8477b6ec13fab716a1fc46a8bcf952c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detach</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>ae4ed5f71ccc52f7d4002a1d95bb74d1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>a6760a93bc158e4fe91a9eafc049fc7dc</anchor>
      <arglist>(const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>syncValue</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>a8f8762d05077933115b992721c656cbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>waveShapeValue</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>aeb23849c49d7826d8bd3d6e86036fd27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rateValue</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>ae47343b42615aca7c60816b5f6f3a104</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>beatValue</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>ac6d0c2279d03486edc866d3603d80857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>depthValue</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>af363cd1de7b5a923d3a8d4cbca51b8aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rate</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>ae1ab76d745cd2c1fcbaea15927124626</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>depth</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1LFOParams.html</anchorfile>
      <anchor>ae4399b196d56fdadfe6bc5481afe2279</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::LightweightSemaphore</name>
    <filename>classtracktion_1_1graph_1_1LightweightSemaphore.html</filename>
    <member kind="function">
      <type></type>
      <name>LightweightSemaphore</name>
      <anchorfile>classtracktion_1_1graph_1_1LightweightSemaphore.html</anchorfile>
      <anchor>aed738af24bd4db988fb86da046839f21</anchor>
      <arglist>(int initialCount=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LightweightSemaphore</name>
      <anchorfile>classtracktion_1_1graph_1_1LightweightSemaphore.html</anchorfile>
      <anchor>a467a3d2d94e8ca3a7b5bfd39f0d5c02b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wait</name>
      <anchorfile>classtracktion_1_1graph_1_1LightweightSemaphore.html</anchorfile>
      <anchor>a1f7f6897d0d806e00c7a350dde4752e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_wait</name>
      <anchorfile>classtracktion_1_1graph_1_1LightweightSemaphore.html</anchorfile>
      <anchor>a44dbd0addd2f00ac9dfad75a848183dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>timed_wait</name>
      <anchorfile>classtracktion_1_1graph_1_1LightweightSemaphore.html</anchorfile>
      <anchor>a23fc96a29c6bc0211ef5e3ee33fbe6e4</anchor>
      <arglist>(std::uint64_t usecs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>signal</name>
      <anchorfile>classtracktion_1_1graph_1_1LightweightSemaphore.html</anchorfile>
      <anchor>a68926bfd9ff78b0bd549207eac1ca6d7</anchor>
      <arglist>(int count=1)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AudioFadeCurve::Linear</name>
    <filename>structtracktion_1_1engine_1_1AudioFadeCurve_1_1Linear.html</filename>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>preadjust</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve_1_1Linear.html</anchorfile>
      <anchor>a98df81406e41e2788330fccdfffc807c</anchor>
      <arglist>(double alpha) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>get</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve_1_1Linear.html</anchorfile>
      <anchor>a1e06ac6eeb85a92888e74ba095184292</anchor>
      <arglist>(float alpha) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::LinEnvelope</name>
    <filename>classtracktion_1_1engine_1_1LinEnvelope.html</filename>
    <class kind="struct">tracktion::engine::LinEnvelope::Parameters</class>
    <member kind="enumeration">
      <type></type>
      <name>State</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>ae5add9a31285d6c029daeca514a46438</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1LinEnvelope.html" anchor="ae5add9a31285d6c029daeca514a46438aec2f993aec2c27fc750119ab17b16cdb">idle</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1LinEnvelope.html" anchor="ae5add9a31285d6c029daeca514a46438afc7e987f23de5bd6562b7c0063cad659">attack</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1LinEnvelope.html" anchor="ae5add9a31285d6c029daeca514a46438a63faabca234a29640f3344e74c0672da">decay</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1LinEnvelope.html" anchor="ae5add9a31285d6c029daeca514a46438a02bc1150d41a4dfdc324849c25dce148">sustain</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1LinEnvelope.html" anchor="ae5add9a31285d6c029daeca514a46438a123fead50246387983ee340507115ef4">release</enumvalue>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>ae9cb7eda2ea5b264c12c703472924511</anchor>
      <arglist>(const Parameters &amp;newParameters)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>a447fda7caf9127382798aa139531ba81</anchor>
      <arglist>(double sr)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getEnvelopeValue</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>aaf67fffa8935344c5ee5cd1aa902a13a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>State</type>
      <name>getState</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>ade4f77af6fe0e99b93bb0ac44d416381</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>noteOn</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>af3c724624f03a93ccbb05091c87a87f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>noteOff</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>a85d7848e8e6b132e1efd9946c679458f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>ad29973574aa10130d01499e228b6bfe1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getNextSample</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>afa801e366a5fee2fd652db463619f4f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyEnvelopeToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>aa229564ac062ec236c4fda308ce9167e</anchor>
      <arglist>(juce::AudioBuffer&lt; FloatType &gt; &amp;buffer, int startSample, int numSamples)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>calculateRates</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>a507ba68e80f9b0a7831349368558099c</anchor>
      <arglist>(const Parameters &amp;parameters)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>State</type>
      <name>currentState</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>a366e4450bec12bef16b6bea5bc9acf0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Parameters</type>
      <name>currentParameters</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>ae18c04369a2d168ecf75fb2cc9b584a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>a2dd71c6a10324f278ad9459c7d6666dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>envelopeVal</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>af84b4e9205b43484735955bdead80c38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>sustainLevel</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>a3df34e58c1c4959a826a7338dcbf29e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>attackRate</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>ac0027e7aeb192165033068f4d1a2bbb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>decayRate</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>a5e0db7550f1e8d9a46e63468330373a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>releaseRate</name>
      <anchorfile>classtracktion_1_1engine_1_1LinEnvelope.html</anchorfile>
      <anchor>a2a27ea503348abbe24bc34c3b23807e8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AbletonLink::Listener</name>
    <filename>structtracktion_1_1engine_1_1AbletonLink_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion_1_1engine_1_1AbletonLink_1_1Listener.html</anchorfile>
      <anchor>a90e57a6d8834772506651d7dabb4291f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>linkRequestedStartStopChange</name>
      <anchorfile>structtracktion_1_1engine_1_1AbletonLink_1_1Listener.html</anchorfile>
      <anchor>a90c239b693c05971be06f463af221b2c</anchor>
      <arglist>(bool isPlaying)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>linkRequestedTempoChange</name>
      <anchorfile>structtracktion_1_1engine_1_1AbletonLink_1_1Listener.html</anchorfile>
      <anchor>a4c9861c3c049276bf466a8be1e89559d</anchor>
      <arglist>(double newBpm)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>linkConnectionChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1AbletonLink_1_1Listener.html</anchorfile>
      <anchor>ac174455b2015ddedbc87265a37b83021</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>linkRequestedPositionChange</name>
      <anchorfile>structtracktion_1_1engine_1_1AbletonLink_1_1Listener.html</anchorfile>
      <anchor>a7099c8f0d1d87b7e01753e0f1cff772d</anchor>
      <arglist>(BeatDuration adjustment)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AudioTrack::Listener</name>
    <filename>structtracktion_1_1engine_1_1AudioTrack_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioTrack_1_1Listener.html</anchorfile>
      <anchor>ab3eb1c331eb907e903346221af94cb59</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>injectLiveMidiMessage</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioTrack_1_1Listener.html</anchorfile>
      <anchor>adce2793146dbc3ab64c9324f1ff17445</anchor>
      <arglist>(AudioTrack &amp;, const MidiMessageWithSource &amp;, bool &amp;wasUsed)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>recordedMidiMessageSentToPlugins</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioTrack_1_1Listener.html</anchorfile>
      <anchor>afd5fdcbdde397c0179e7088f859f1539</anchor>
      <arglist>(AudioTrack &amp;, const juce::MidiMessage &amp;)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AutomatableParameter::Listener</name>
    <filename>structtracktion_1_1engine_1_1AutomatableParameter_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1Listener.html</anchorfile>
      <anchor>aa31e61dd78a8e205f77a43075d75f683</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>curveHasChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1Listener.html</anchorfile>
      <anchor>ad8f4a42f3cd220f4b9a718d2af6a6452</anchor>
      <arglist>(AutomatableParameter &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>currentValueChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1Listener.html</anchorfile>
      <anchor>a03f33eb0c796ed4947f60b7c5155cabb</anchor>
      <arglist>(AutomatableParameter &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parameterChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1Listener.html</anchorfile>
      <anchor>a41ddc8e415376110f33dd1481aa6a5df</anchor>
      <arglist>(AutomatableParameter &amp;, float)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parameterChangeGestureBegin</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1Listener.html</anchorfile>
      <anchor>a93e573491b77e2bc60222c4c4b40dd7a</anchor>
      <arglist>(AutomatableParameter &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parameterChangeGestureEnd</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1Listener.html</anchorfile>
      <anchor>ab4403cb8697ee213e42e10e7b892fc13</anchor>
      <arglist>(AutomatableParameter &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::BackgroundJobManager::Listener</name>
    <filename>classtracktion_1_1engine_1_1BackgroundJobManager_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>classtracktion_1_1engine_1_1BackgroundJobManager_1_1Listener.html</anchorfile>
      <anchor>a56f70841d74c953cc2599e7ae9e6a2b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>backgroundJobsChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1BackgroundJobManager_1_1Listener.html</anchorfile>
      <anchor>a7bfa6dbb880dbdb85b22033f6cdd0c72</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clip::Listener</name>
    <filename>structtracktion_1_1engine_1_1Clip_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion_1_1engine_1_1Clip_1_1Listener.html</anchorfile>
      <anchor>adb38a75ec88c89c87cf8c50adba2d6cf</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>midiMessageGenerated</name>
      <anchorfile>structtracktion_1_1engine_1_1Clip_1_1Listener.html</anchorfile>
      <anchor>a0975bbe454a79ed9961e4e8d180590ba</anchor>
      <arglist>(Clip &amp;, const juce::MidiMessage &amp;)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ClipEffects::Listener</name>
    <filename>structtracktion_1_1engine_1_1ClipEffects_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipEffects_1_1Listener.html</anchorfile>
      <anchor>ac00d2c6914dd780862872e955c3393bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>effectChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipEffects_1_1Listener.html</anchorfile>
      <anchor>ab62f50a8f805dfb39d565519a232d950</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>effectAdded</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipEffects_1_1Listener.html</anchorfile>
      <anchor>a27a4b60a3710a3fff0ee27e282dc13e8</anchor>
      <arglist>(ClipEffect *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>effectRemoved</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipEffects_1_1Listener.html</anchorfile>
      <anchor>a839dba8efd7c83a142c0fe60df2d0d47</anchor>
      <arglist>(ClipEffect *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>effectsReordered</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipEffects_1_1Listener.html</anchorfile>
      <anchor>a47d6748e33430e5af91ac43385c51398</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderComplete</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipEffects_1_1Listener.html</anchorfile>
      <anchor>a5bc78d70c072dedbb3ce33a7fe8ee196</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::EditSnapshot::Listener</name>
    <filename>structtracktion_1_1engine_1_1EditSnapshot_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion_1_1engine_1_1EditSnapshot_1_1Listener.html</anchorfile>
      <anchor>ada98de6e7339862e92a8a1c098086e6c</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>editChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1EditSnapshot_1_1Listener.html</anchorfile>
      <anchor>aa432d88bd9e402aca29ea42bfa8705e1</anchor>
      <arglist>(EditSnapshot &amp;)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MidiInputDevice::MidiKeyChangeDispatcher::Listener</name>
    <filename>structtracktion_1_1engine_1_1MidiInputDevice_1_1MidiKeyChangeDispatcher_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiInputDevice_1_1MidiKeyChangeDispatcher_1_1Listener.html</anchorfile>
      <anchor>a3fda7b7db0037a089b6b86ab6f3597a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>midiKeyStateChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiInputDevice_1_1MidiKeyChangeDispatcher_1_1Listener.html</anchorfile>
      <anchor>a5a558b98ff350e59080fcbd71a4ebcbe</anchor>
      <arglist>(AudioTrack *, const juce::Array&lt; int &gt; &amp;notesOn, const juce::Array&lt; int &gt; &amp;vels, const juce::Array&lt; int &gt; &amp;notesOff)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MidiLearnState::Listener</name>
    <filename>structtracktion_1_1engine_1_1MidiLearnState_1_1Listener.html</filename>
    <member kind="function">
      <type></type>
      <name>Listener</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiLearnState_1_1Listener.html</anchorfile>
      <anchor>a7a61c6e3a36d50177badf5e75eeece4c</anchor>
      <arglist>(MidiLearnState &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiLearnState_1_1Listener.html</anchorfile>
      <anchor>aee404a4afc43be0fe9e2d6137bd717f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>midiLearnStatusChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiLearnState_1_1Listener.html</anchorfile>
      <anchor>a05443dfc36606a5fede4aa5140e02110</anchor>
      <arglist>(bool isActive)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>midiLearnAssignmentChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiLearnState_1_1Listener.html</anchorfile>
      <anchor>a00c02052ee6e21144b9d0a8c436ac192</anchor>
      <arglist>(ChangeType)</arglist>
    </member>
    <member kind="variable">
      <type>MidiLearnState &amp;</type>
      <name>ownerState</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiLearnState_1_1Listener.html</anchorfile>
      <anchor>ade2ac284db13c3168208b7ab4455ee7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ParameterChangeHandler::Listener</name>
    <filename>structtracktion_1_1engine_1_1ParameterChangeHandler_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion_1_1engine_1_1ParameterChangeHandler_1_1Listener.html</anchorfile>
      <anchor>ac4288ae4e472d3b23c8e7560ce9de56e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>pluginParameterChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1ParameterChangeHandler_1_1Listener.html</anchorfile>
      <anchor>a71f66fb16428a78093aa7389dae656f1</anchor>
      <arglist>(AutomatableParameter &amp;, bool isFollowingAutomation)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::PhysicalMidiInputDevice::Listener</name>
    <filename>classtracktion_1_1engine_1_1PhysicalMidiInputDevice_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice_1_1Listener.html</anchorfile>
      <anchor>ac0b0276a4d18b850b9f96f4dd766634f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice_1_1Listener.html</anchorfile>
      <anchor>aa61b1446186d54bcf266f0ce30976aba</anchor>
      <arglist>(const juce::MidiMessage &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::RenderManager::Job::Listener</name>
    <filename>structtracktion_1_1engine_1_1RenderManager_1_1Job_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion_1_1engine_1_1RenderManager_1_1Job_1_1Listener.html</anchorfile>
      <anchor>a848840ef78c70cdd535c973026f841b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>jobStarted</name>
      <anchorfile>structtracktion_1_1engine_1_1RenderManager_1_1Job_1_1Listener.html</anchorfile>
      <anchor>a7b0855603bfc501e8735062f7bdb39a6</anchor>
      <arglist>(RenderManager::Job &amp;)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>jobFinished</name>
      <anchorfile>structtracktion_1_1engine_1_1RenderManager_1_1Job_1_1Listener.html</anchorfile>
      <anchor>a32ba67f546d861270b7a7f6367e41f88</anchor>
      <arglist>(RenderManager::Job &amp;, bool completedOk)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::SceneWatcher::Listener</name>
    <filename>structtracktion_1_1engine_1_1SceneWatcher_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion_1_1engine_1_1SceneWatcher_1_1Listener.html</anchorfile>
      <anchor>ac79fbb9703e45f40d6f6aaa1707e3df4</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>slotUpdated</name>
      <anchorfile>structtracktion_1_1engine_1_1SceneWatcher_1_1Listener.html</anchorfile>
      <anchor>a1a25aef02acb4ca640b07d84445c09e2</anchor>
      <arglist>(int audioTrackIndex, int slotIndex)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::Selectable::Listener</name>
    <filename>classtracktion_1_1engine_1_1Selectable_1_1Listener.html</filename>
    <base>tracktion::engine::SelectableListener</base>
    <member kind="function">
      <type></type>
      <name>Listener</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable_1_1Listener.html</anchorfile>
      <anchor>a311a88a9679f2a3d379cbdeac6134492</anchor>
      <arglist>(Selectable &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Listener</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable_1_1Listener.html</anchorfile>
      <anchor>a38379dd20c7dd06188807bc01eb084af</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableObjectChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable_1_1Listener.html</anchorfile>
      <anchor>a04f9e463a328db2ecf6b2cdac3595a50</anchor>
      <arglist>(Selectable *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableObjectAboutToBeDeleted</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable_1_1Listener.html</anchorfile>
      <anchor>a0612edc3f583a2f90bf544344f413b17</anchor>
      <arglist>(Selectable *) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::SharedTimer::Listener</name>
    <filename>structtracktion_1_1engine_1_1SharedTimer_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion_1_1engine_1_1SharedTimer_1_1Listener.html</anchorfile>
      <anchor>afe63ab9201828c60cd3265277c1461c7</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sharedTimerCallback</name>
      <anchorfile>structtracktion_1_1engine_1_1SharedTimer_1_1Listener.html</anchorfile>
      <anchor>a2be78b095710275d10053e81e2e2093f</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::TransportControl::Listener</name>
    <filename>structtracktion_1_1engine_1_1TransportControl_1_1Listener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Listener</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>a3c30285b96a6cb2c43fe78524a5fc028</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>playbackContextChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>a9b7b00e9822cb470afba9f133176b033</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>autoSaveNow</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>a1f087a3b06c39726b9c51959ed4fecf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAllLevelMetersActive</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>ab6ffd25e60275080dcaefed296515310</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVideoPosition</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>aad860b5582d652dbcf6467169a680fbf</anchor>
      <arglist>(TimePosition, bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>startVideo</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>af6e4b97caf4c9bcc0f930080672a78b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stopVideo</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>a341c60b7dbd26d7934a3e99043edfcfe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>recordingStarted</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>aa2a3dbb6438738ccf46f5606f4e66d58</anchor>
      <arglist>(SyncPoint, std::optional&lt; TimeRange &gt;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>recordingStopped</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>aa5d68c47c3e0fb30ee63c7ffb2d4ab7f</anchor>
      <arglist>(SyncPoint, bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>recordingAboutToStart</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>a48e0e17e5841cafb676dc84ef3c77ae8</anchor>
      <arglist>(InputDeviceInstance &amp;, EditItemID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>recordingAboutToStop</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>a7bd7ba78f138cbd5d8ad62a004c64a89</anchor>
      <arglist>(InputDeviceInstance &amp;, EditItemID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>recordingFinished</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1Listener.html</anchorfile>
      <anchor>a69d2b8ae2b5f1cfe4de3b554cd4d1ecc</anchor>
      <arglist>(InputDeviceInstance &amp;, EditItemID, const juce::ReferenceCountedArray&lt; Clip &gt; &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::LiveClipLevel</name>
    <filename>structtracktion_1_1engine_1_1LiveClipLevel.html</filename>
    <member kind="function">
      <type></type>
      <name>LiveClipLevel</name>
      <anchorfile>structtracktion_1_1engine_1_1LiveClipLevel.html</anchorfile>
      <anchor>af9c5b7f552539ec8f74f8ce1d30e0808</anchor>
      <arglist>() noexcept=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LiveClipLevel</name>
      <anchorfile>structtracktion_1_1engine_1_1LiveClipLevel.html</anchorfile>
      <anchor>a746ee9802d648da08525fdfe57f0c59b</anchor>
      <arglist>(std::shared_ptr&lt; ClipLevel &gt; l) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getGain</name>
      <anchorfile>structtracktion_1_1engine_1_1LiveClipLevel.html</anchorfile>
      <anchor>a081cf7b598b572a91bc0ec345ad97154</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getPan</name>
      <anchorfile>structtracktion_1_1engine_1_1LiveClipLevel.html</anchorfile>
      <anchor>a7e6469d34d589734c1783f6e62a715c7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMute</name>
      <anchorfile>structtracktion_1_1engine_1_1LiveClipLevel.html</anchorfile>
      <anchor>adafee237f89d85174565bc61e96c63f7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getGainIncludingMute</name>
      <anchorfile>structtracktion_1_1engine_1_1LiveClipLevel.html</anchorfile>
      <anchor>ad2f20aec47029706b2014a27039a3f4d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLeftAndRightGains</name>
      <anchorfile>structtracktion_1_1engine_1_1LiveClipLevel.html</anchorfile>
      <anchor>ae497e7c2aba00e0c871a0f31d61d9306</anchor>
      <arglist>(float &amp;left, float &amp;right) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::LiveMidiInjectingNode</name>
    <filename>classtracktion_1_1engine_1_1LiveMidiInjectingNode.html</filename>
    <base>tracktion::graph::Node</base>
    <base protection="private">tracktion::engine::AudioTrack::Listener</base>
    <member kind="function">
      <type></type>
      <name>LiveMidiInjectingNode</name>
      <anchorfile>classtracktion_1_1engine_1_1LiveMidiInjectingNode.html</anchorfile>
      <anchor>a6ad1ddb1dce6af4ca21038357bad36e5</anchor>
      <arglist>(AudioTrack &amp;, std::unique_ptr&lt; tracktion::graph::Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LiveMidiInjectingNode</name>
      <anchorfile>classtracktion_1_1engine_1_1LiveMidiInjectingNode.html</anchorfile>
      <anchor>a9a70f1184d622fad364c522e8f43d61c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1LiveMidiInjectingNode.html</anchorfile>
      <anchor>a87d76586995768e961f97b03ce6c4d02</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1LiveMidiInjectingNode.html</anchorfile>
      <anchor>a2e3b679682ac1d36268e0c7f874791fe</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1LiveMidiInjectingNode.html</anchorfile>
      <anchor>a1345bd4f8f6e0d1b02d05a8e3da79e2a</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1LiveMidiInjectingNode.html</anchorfile>
      <anchor>a269bf7a67e765a17333e244278b8d3b5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1LiveMidiInjectingNode.html</anchorfile>
      <anchor>a76c0f04a86a3db02a04062af81b31128</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::LiveMidiOutputNode</name>
    <filename>classtracktion_1_1engine_1_1LiveMidiOutputNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>LiveMidiOutputNode</name>
      <anchorfile>classtracktion_1_1engine_1_1LiveMidiOutputNode.html</anchorfile>
      <anchor>ac69542f420a95c959bbdbbf81f6fdc2b</anchor>
      <arglist>(AudioTrack &amp;, std::unique_ptr&lt; tracktion::graph::Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LiveMidiOutputNode</name>
      <anchorfile>classtracktion_1_1engine_1_1LiveMidiOutputNode.html</anchorfile>
      <anchor>aa9721fb1ee45a6baa606e5740f4e4730</anchor>
      <arglist>(Clip &amp;, std::unique_ptr&lt; tracktion::graph::Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1LiveMidiOutputNode.html</anchorfile>
      <anchor>ac2b25c723bea8ecb18a6f386a83ffa58</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1LiveMidiOutputNode.html</anchorfile>
      <anchor>a52d0c7d7c41adc84d78505e9a56113fb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1LiveMidiOutputNode.html</anchorfile>
      <anchor>acac00eaeb745a197816563763361efbb</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1LiveMidiOutputNode.html</anchorfile>
      <anchor>a88b9cf746839451f0e9b15c366b734dd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1LiveMidiOutputNode.html</anchorfile>
      <anchor>ab9690fe5d972abe12d90f31025f6b21b</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Edit::LoadContext</name>
    <filename>structtracktion_1_1engine_1_1Edit_1_1LoadContext.html</filename>
    <member kind="variable">
      <type>std::atomic&lt; float &gt;</type>
      <name>progress</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1LoadContext.html</anchorfile>
      <anchor>a4266ef5ee83ece093ddde70f53b75908</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; bool &gt;</type>
      <name>completed</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1LoadContext.html</anchorfile>
      <anchor>aa8941fe2cc19a9dd003c602bfbcc65bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; bool &gt;</type>
      <name>shouldExit</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1LoadContext.html</anchorfile>
      <anchor>a788f9e76889c5017853e7feb91aadbc6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Edit::LoadFinishedCallback</name>
    <filename>structtracktion_1_1engine_1_1Edit_1_1LoadFinishedCallback.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>LoadFinishedCallback</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1LoadFinishedCallback.html</anchorfile>
      <anchor>a7d321a4596291466f5bad47b898295c7</anchor>
      <arglist>(OwnerType &amp;o, Edit &amp;e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LoadFinishedCallback</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1LoadFinishedCallback.html</anchorfile>
      <anchor>ab358d29ad64230e5899af5030d914993</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1LoadFinishedCallback.html</anchorfile>
      <anchor>a62a80babf5f660b1e3d8a49f9dadd7c9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>OwnerType &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1LoadFinishedCallback.html</anchorfile>
      <anchor>aa70ebee7fbfe332d3291ed70853b36b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1LoadFinishedCallback.html</anchorfile>
      <anchor>a7011d074dc0a8b4ba2f6bbb09c44d1f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::LockFreeMultiThreadedNodePlayer</name>
    <filename>classtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer.html</filename>
    <class kind="struct">tracktion::graph::LockFreeMultiThreadedNodePlayer::ThreadPool</class>
    <member kind="typedef">
      <type>std::function&lt; std::unique_ptr&lt; ThreadPool &gt;(LockFreeMultiThreadedNodePlayer &amp;)&gt;</type>
      <name>ThreadPoolCreator</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>ab06bfeedd026ccea7027def20a886e6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LockFreeMultiThreadedNodePlayer</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>aee2986b57c41de1111127edc6ad87570</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LockFreeMultiThreadedNodePlayer</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>a10ca96022475b0fd09b298880362119e</anchor>
      <arglist>(ThreadPoolCreator, juce::AudioWorkgroup={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LockFreeMultiThreadedNodePlayer</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>a2f0fcc9486aa40d6ae2646a8c7239304</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumThreads</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>ab5580fe4fe4b433cf44345432d1bc08b</anchor>
      <arglist>(size_t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>a23f413594492042ef4dfc4f764a69e38</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>a24839af753a512616aa574675562ae1f</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; newNode, double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>ac6213f3e57993f46344a83d1d6249c8e</anchor>
      <arglist>(double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>Node *</type>
      <name>getNode</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>afc61d9ec297b370baf6558c3ba7b06ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>aabdff5292c538aa99f990a9a9baaa5b5</anchor>
      <arglist>(const Node::ProcessContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearNode</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>a0e3c10cc63d6536a7067def7b372678b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>a9962bf2804f65c1c7be553838f8cd667</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBlockSize</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>a2d11599123ee4012c88a8e94a53db3d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enablePooledMemoryAllocations</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>a25839f0e5ea8e12f7e69dfb9a72bc97c</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableNodeMemorySharing</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer.html</anchorfile>
      <anchor>a9606f852703182111c508bcbbfb67374</anchor>
      <arglist>(bool shouldBeEnabled)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::LockFreeObject</name>
    <filename>classtracktion_1_1graph_1_1LockFreeObject.html</filename>
    <templarg></templarg>
    <class kind="class">tracktion::graph::LockFreeObject::ScopedRealTimeAccess</class>
    <member kind="function">
      <type></type>
      <name>LockFreeObject</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject.html</anchorfile>
      <anchor>a268a656b67001bb279907268c7e98dea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject.html</anchorfile>
      <anchor>a0f2f1c2622ea143307478a1956470f43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushNonRealTime</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject.html</anchorfile>
      <anchor>aa857b152ecd75813e5c2c9d46b1a859a</anchor>
      <arglist>(ObjectType &amp;&amp;newObj)</arglist>
    </member>
    <member kind="function">
      <type>ObjectType *</type>
      <name>retainRealTime</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject.html</anchorfile>
      <anchor>a5f286e4d713b5133338226b7e846ab18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseRealTime</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject.html</anchorfile>
      <anchor>af2a6a29e7231737e98ccda05115cd4ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScopedRealTimeAccess</type>
      <name>getScopedAccess</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject.html</anchorfile>
      <anchor>a7548ae1f43e2777d740f99fff16e1e88</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LockFreeObject&lt; PreparedNode &gt;</name>
    <filename>classtracktion_1_1graph_1_1LockFreeObject.html</filename>
    <member kind="function">
      <type></type>
      <name>LockFreeObject</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject.html</anchorfile>
      <anchor>a268a656b67001bb279907268c7e98dea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject.html</anchorfile>
      <anchor>a0f2f1c2622ea143307478a1956470f43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushNonRealTime</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject.html</anchorfile>
      <anchor>aa857b152ecd75813e5c2c9d46b1a859a</anchor>
      <arglist>(PreparedNode &amp;&amp;newObj)</arglist>
    </member>
    <member kind="function">
      <type>PreparedNode *</type>
      <name>retainRealTime</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject.html</anchorfile>
      <anchor>a5f286e4d713b5133338226b7e846ab18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseRealTime</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject.html</anchorfile>
      <anchor>af2a6a29e7231737e98ccda05115cd4ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScopedRealTimeAccess</type>
      <name>getScopedAccess</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject.html</anchorfile>
      <anchor>a7548ae1f43e2777d740f99fff16e1e88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LockFreeObject</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject.html</anchorfile>
      <anchor>a268a656b67001bb279907268c7e98dea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject.html</anchorfile>
      <anchor>a0f2f1c2622ea143307478a1956470f43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushNonRealTime</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject.html</anchorfile>
      <anchor>aa857b152ecd75813e5c2c9d46b1a859a</anchor>
      <arglist>(PreparedNode &amp;&amp;newObj)</arglist>
    </member>
    <member kind="function">
      <type>PreparedNode *</type>
      <name>retainRealTime</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject.html</anchorfile>
      <anchor>a5f286e4d713b5133338226b7e846ab18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseRealTime</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject.html</anchorfile>
      <anchor>af2a6a29e7231737e98ccda05115cd4ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScopedRealTimeAccess</type>
      <name>getScopedAccess</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject.html</anchorfile>
      <anchor>a7548ae1f43e2777d740f99fff16e1e88</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::LoopInfo</name>
    <filename>classtracktion_1_1engine_1_1LoopInfo.html</filename>
    <class kind="struct">tracktion::engine::LoopInfo::LoopPoint</class>
    <member kind="enumeration">
      <type></type>
      <name>LoopPointType</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a854c3b50796305ba5e3b2d22cedba4b4</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1LoopInfo.html" anchor="a854c3b50796305ba5e3b2d22cedba4b4a3c78b35502b2693fefdfc51cba3a53a5">manual</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1LoopInfo.html" anchor="a854c3b50796305ba5e3b2d22cedba4b4a2bd9c0ed00116be1258e0cc66617d7c8">automatic</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>LoopInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a270a7b2460ef4e9af562cfab59e6bd46</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LoopInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>ab3ec805be7d67d1339097d7be63b0ebd</anchor>
      <arglist>(const LoopInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LoopInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a35244a2ca35d1fc9096facb3708d85b2</anchor>
      <arglist>(Engine &amp;, const juce::ValueTree &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LoopInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a4bd8171d5645985220aba2496f3a98d1</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LoopInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a0b4c1cc8069175f928a564d449e40f63</anchor>
      <arglist>(Engine &amp;, const juce::AudioFormatReader *, const juce::AudioFormat *, const juce::File &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>LoopInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a50dc46b81d58a0fb7c1d724f264db54d</anchor>
      <arglist>(const LoopInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBpm</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>aa44caa9fe074b6883a9b0bfa388c2062</anchor>
      <arglist>(const AudioFileInfo &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBeatsPerSecond</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>aff9cc89447cf09f67a1f5ba98db48b6b</anchor>
      <arglist>(const AudioFileInfo &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBpm</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a16c5f21cca24362f17f47242b5a85201</anchor>
      <arglist>(double newBpm, const AudioFileInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDenominator</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a2afae9d7b35f10657f7c80d2896a3ffb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumerator</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>add47ea4ade00ab376af30e2ae00f0fa5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDenominator</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a13ed4a28ee613db568d8e337cea05e52</anchor>
      <arglist>(int newDenominator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumerator</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a13210e2e25140f5f8042d5f830d225b6</anchor>
      <arglist>(int newNumerator)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNumBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a99df11e8ede4f54561a73b464b21db66</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>aff803a44556d7b1e137c5351e9952ae6</anchor>
      <arglist>(double newNumBeats)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLoopable</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a6d361dab696f72ba1400de50bdf2bac7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOneShot</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a029c93b7574653a192a728fbe24f0d23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRootNote</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a78652a40b98f2fa9bced33091f2eecd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRootNote</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>aec5fc854a15e973529e71cc142023329</anchor>
      <arglist>(int note)</arglist>
    </member>
    <member kind="function">
      <type>SampleCount</type>
      <name>getInMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a8660ba83344747e15d51586fb677add0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SampleCount</type>
      <name>getOutMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a0441c2684af57f9f661dc25f381360d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a075c93c3fb7a67557364d18e2687637a</anchor>
      <arglist>(SampleCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>ad4280d775fe08d82a56d959fa813b54f</anchor>
      <arglist>(SampleCount)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumLoopPoints</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a7f362b49572360b6cddb1189554bedb0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>LoopPoint</type>
      <name>getLoopPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>acd621a6581c5eb4e0146081ec0ca4684</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLoopPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a22d9c71beb7321f2fccd0c37bde3cea5</anchor>
      <arglist>(SampleCount, LoopPointType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeLoopPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a7a61ea63a481c18a307a75f64684b766</anchor>
      <arglist>(int index, SampleCount, LoopPointType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteLoopPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>ad6fe68dafd81bc9a1711f151f4e0c257</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLoopPoints</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a05482aaa26dccae97b28c9d39b7227b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLoopPoints</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a4b65876918844806e46395994ce7c686</anchor>
      <arglist>(LoopPointType)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTags</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a33a4ba1ae36c5b25ffadf8e873fd3634</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearTags</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>ab54b287ce06cd8d777b873a3773491be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTag</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>aeb547dba2f2a1c7e337c97ea9b2b57d8</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTag</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a60185bcc6c90f0ce167daf4070525d87</anchor>
      <arglist>(const juce::String &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTags</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>a8dc16a3344cfd511034860c6199952f1</anchor>
      <arglist>(const juce::StringArray &amp;tags)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>ade39c18b3f0253c2388a4694b0142d95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopInfo.html</anchorfile>
      <anchor>aa21ee47932c54f6b9f9f52906956c7dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::LoopingMidiNode</name>
    <filename>classtracktion_1_1engine_1_1LoopingMidiNode.html</filename>
    <base>tracktion::graph::Node</base>
    <base>tracktion::engine::TracktionEngineNode</base>
    <base>tracktion::engine::DynamicallyOffsettableNodeBase</base>
    <member kind="function">
      <type></type>
      <name>LoopingMidiNode</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopingMidiNode.html</anchorfile>
      <anchor>a6d865a42598cfcf751033ea8af837f7f</anchor>
      <arglist>(std::vector&lt; juce::MidiMessageSequence &gt; sequences, juce::Range&lt; int &gt; midiChannelNumbers, bool useMPE, BeatRange editRange, BeatRange loopRange, BeatDuration offset, LiveClipLevel, ProcessState &amp;, EditItemID, const QuantisationType &amp;, const GrooveTemplate *, float grooveStrength, std::function&lt; bool()&gt; shouldBeMutedDelegate=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>getItemID</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopingMidiNode.html</anchorfile>
      <anchor>a295c93ae4e9aafaf4a816e94e2373230</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MPESourceID</type>
      <name>getMPESourceID</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopingMidiNode.html</anchorfile>
      <anchor>a03c54521fa96ec85399fa172f4b39160</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; ActiveNoteList &gt; &amp;</type>
      <name>getActiveNoteList</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopingMidiNode.html</anchorfile>
      <anchor>a86eea3be0c823cfac6e0976bf09fb81b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDynamicOffsetBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopingMidiNode.html</anchorfile>
      <anchor>afe13c88632cc3fedf7aa5af18d8ffd86</anchor>
      <arglist>(BeatDuration) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>killActiveNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopingMidiNode.html</anchorfile>
      <anchor>ae4abd283f244cc9e43908d25bad8409e</anchor>
      <arglist>(MidiMessageArray &amp;, double timestampForNoteOffs)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopingMidiNode.html</anchorfile>
      <anchor>a49c95e24abf3c97fc053626c0b5b5523</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopingMidiNode.html</anchorfile>
      <anchor>aa838b2771b063299112dfe2c006cae31</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopingMidiNode.html</anchorfile>
      <anchor>a2a3265fd65f6d8c97504afa229d9cb2d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1LoopingMidiNode.html</anchorfile>
      <anchor>ad8701f880baf21f18ab168b190299a20</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::LoopInfo::LoopPoint</name>
    <filename>structtracktion_1_1engine_1_1LoopInfo_1_1LoopPoint.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>isAutomatic</name>
      <anchorfile>structtracktion_1_1engine_1_1LoopInfo_1_1LoopPoint.html</anchorfile>
      <anchor>ac0cdd9a200e155b79f33cb3fa61e1ef7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>SampleCount</type>
      <name>pos</name>
      <anchorfile>structtracktion_1_1engine_1_1LoopInfo_1_1LoopPoint.html</anchorfile>
      <anchor>a71c1273b27b508f543b5c1d6bce21557</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LoopPointType</type>
      <name>type</name>
      <anchorfile>structtracktion_1_1engine_1_1LoopInfo_1_1LoopPoint.html</anchorfile>
      <anchor>a404188478a60bd539060d7515d1b8aba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::LowPassPlugin</name>
    <filename>classtracktion_1_1engine_1_1LowPassPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>LowPassPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>aa69f676e604e1d0bbba63e55c340b543</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LowPassPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>af388200eaa6404810ed5535437a1c702</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>a8a7a54251d9e0894272ef0134710c863</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>a624c063b4d5c2655e483661de92b612e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>a92d07383f1ec788b35c55baa5cbccb49</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>a773e8357eb30e5163e168dd51c3d4ee1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>ae2974ab27bdd1c684da9443aee2f5960</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>acfafa51e21869ba4dd813f3c81fc2232</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>ab726e0e4b383b18fa13ff402b829192a</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>a02093dd8f1154a824fac6bc5660fe56f</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLowPass</name>
      <anchorfile>classtracktion_1_1engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>aef0cd3da515cca30e7c856b28d89a177</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>a28d7a5b9081b55fab08f14d24793e0ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>frequencyValue</name>
      <anchorfile>classtracktion_1_1engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>ae81d587ac5beef12d4c1f6a926d826e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>mode</name>
      <anchorfile>classtracktion_1_1engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>ae46e76622efe6af4a863a4491cac4b04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>frequency</name>
      <anchorfile>classtracktion_1_1engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>ae872872775f6f887a4f62137a0b422de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1LowPassPlugin.html</anchorfile>
      <anchor>ac927b303f2d34acf1b92ee194f467f8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MackieC4</name>
    <filename>classtracktion_1_1engine_1_1MackieC4.html</filename>
    <base>tracktion::engine::ControlSurface</base>
    <member kind="function">
      <type></type>
      <name>MackieC4</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a55733f082fa5c41099d0e96db51faec1</anchor>
      <arglist>(ExternalControllerManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MackieC4</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a62577c239e611e4f706911f1a1720431</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a5096c21e2c6ad50c0e58bdc5fad422b1</anchor>
      <arglist>(bool connect) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutDownDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a0b1da6364e702fa11a784b7ee2ede533</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMiscFeatures</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a97d90db9e129e57a6ad9c4f1aa49f12b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a8c834546589d70a4a5d9c6d39437b205</anchor>
      <arglist>(int, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentSelectionChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a8e3981769494b611ea5370fca5bbcfe9</anchor>
      <arglist>(juce::String) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameterChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>aaf2d0b70924f8950ec0f05346899a132</anchor>
      <arglist>(int parameterNumber, const ParameterSetting &amp;newValue) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a5d0dfb359f6b8fd669b4396d8f9b100f</anchor>
      <arglist>(int parameterNumber) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveFader</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a691a3481bb1455bbf3c2f476c7b96636</anchor>
      <arglist>(int channelNum, float newSliderPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePanPot</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a7d8df45b8461bbb73ce5fa9daa7d21cd</anchor>
      <arglist>(int channelNum, float newPan) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a7808a8709b0b77eeeb3934a518c361b2</anchor>
      <arglist>(int newStartChannelNumber, const juce::StringArray &amp;trackNames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveAux</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>af4a8d40be3b8e8b3b7861ae45aefd5ce</anchor>
      <arglist>(int channelNum, int auxNum, const char *bus, float newPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAux</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>ada1f7ac2a5741b46b72d4e45e0257271</anchor>
      <arglist>(int channel, int auxNum) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>channelLevelChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>acee3b70509401fcd2b4d12aee6311bcd</anchor>
      <arglist>(int channel, float l, float r) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSoloAndMute</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>afffe3e6e4b7553ba7a45b4d250282968</anchor>
      <arglist>(int channelNum, Track::MuteAndSoloLightState, bool isBright) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloCountChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>add62be0f07b86503f3b8f78a0d99d145</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackSelectionChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>aa2f2f10edf09bc8c7886626e7685a41a</anchor>
      <arglist>(int channel, bool isSelected) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a395bb3b60121940f3905112e2cb8b888</anchor>
      <arglist>(bool isPlaying) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>ac4e4d521229f1860d1be317170cc30ae</anchor>
      <arglist>(bool isRecording) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationReadModeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>ac57004390be81eb9f6aa6d89182e5af5</anchor>
      <arglist>(bool isReading) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationWriteModeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>ab6609b24b655b7294fde8c073306b2b4</anchor>
      <arglist>(bool isWriting) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clickOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>af313bc33f0876a610ab3e1dfd153474c</anchor>
      <arglist>(bool isClickOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>ae46329781b51b8b5f82a142d045fdcd8</anchor>
      <arglist>(bool isSnapOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a146178d230b46bce80243aab21f1bae7</anchor>
      <arglist>(bool isLoopOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>slaveOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>aab0b828007860ac92248c2730425f7de</anchor>
      <arglist>(bool isSlaving) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>punchOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a0ac660d5ea0840b814459b23023b43ea</anchor>
      <arglist>(bool isPunching) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>masterLevelsChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a845711c7a240dd149b30a67fc38b29b5</anchor>
      <arglist>(float leftLevel, float rightLevel) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timecodeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a143aff650b64ba01e78cc219ede2d9cf</anchor>
      <arglist>(int barsOrHours, int beatsOrMinutes, int ticksOrSeconds, int millisecs, bool isBarsBeats, bool isFrames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackRecordEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a9d7801e20cd96ef40d875ec5ad613365</anchor>
      <arglist>(int channel, bool isEnabled) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canChangeSelectedPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a5f71ba57026e9369fcd9ccdad53e452c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingPluginParams</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>abde6489ab1387e05ab1d3a6aff9e2aba</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>aec926d7e899b26c306b086ed69ce8922</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markerChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a6142a7d0eb869c75c1a428af3b72a083</anchor>
      <arglist>(int parameterNumber, const MarkerSetting &amp;newValue) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a0643d8c3efe2f28dd18f847fed62191e</anchor>
      <arglist>(int parameterNumber) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>auxBankChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>aaf20534d4adcfcb6b174fad9d72107bc</anchor>
      <arglist>(int bank) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pluginBypass</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieC4.html</anchorfile>
      <anchor>a54a0cc118f4f0c79c69100cc3f91ff01</anchor>
      <arglist>(bool) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MackieMCU</name>
    <filename>classtracktion_1_1engine_1_1MackieMCU.html</filename>
    <base>tracktion::engine::ControlSurface</base>
    <class kind="struct">tracktion::engine::MackieMCU::AuxTimer</class>
    <class kind="struct">tracktion::engine::MackieMCU::CpuMeterTimer</class>
    <member kind="enumeration">
      <type></type>
      <name>AssignmentMode</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a0e58216781c18fa51696cf62fcbce1c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanMode</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a0e58216781c18fa51696cf62fcbce1c5aab9fedd99763ce7d50f21446a382a1c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PluginMode</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a0e58216781c18fa51696cf62fcbce1c5a7b05e2fde5087b4269a14a2b69cddaba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AuxMode</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a0e58216781c18fa51696cf62fcbce1c5a5ce49c3d009685a15372ed934e4bbb13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MarkerMode</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a0e58216781c18fa51696cf62fcbce1c5a1a3ce065bee3952bc624ebd31cabbdb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mcuFootswitch1Key</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>afbc016e1b64eb2ab32463a724993a518a4e31510b2fc7e2cc81bf6e96bd749a4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mcuFootswitch2Key</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>afbc016e1b64eb2ab32463a724993a518a682168437445167e2b2d87a26fcb6129</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxNumSurfaces</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a45a283549afbd214fafb743dc66843aea01fb36538fd347d300b66ec958f6183b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxNumChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a45a283549afbd214fafb743dc66843aeaaaed4972159f5c31ed6bdc0e2ee0be86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxCharsOnDisplay</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a45a283549afbd214fafb743dc66843aeabfa12a31e64ad92674f19c0764dcb01a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanMode</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a0e58216781c18fa51696cf62fcbce1c5aab9fedd99763ce7d50f21446a382a1c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PluginMode</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a0e58216781c18fa51696cf62fcbce1c5a7b05e2fde5087b4269a14a2b69cddaba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AuxMode</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a0e58216781c18fa51696cf62fcbce1c5a5ce49c3d009685a15372ed934e4bbb13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MarkerMode</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a0e58216781c18fa51696cf62fcbce1c5a1a3ce065bee3952bc624ebd31cabbdb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mcuFootswitch1Key</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>afbc016e1b64eb2ab32463a724993a518a4e31510b2fc7e2cc81bf6e96bd749a4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mcuFootswitch2Key</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>afbc016e1b64eb2ab32463a724993a518a682168437445167e2b2d87a26fcb6129</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxNumSurfaces</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a45a283549afbd214fafb743dc66843aea01fb36538fd347d300b66ec958f6183b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxNumChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a45a283549afbd214fafb743dc66843aeaaaed4972159f5c31ed6bdc0e2ee0be86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxCharsOnDisplay</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a45a283549afbd214fafb743dc66843aeabfa12a31e64ad92674f19c0764dcb01a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MackieMCU</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a007b414300b7cd9ff299e406952dbfe6</anchor>
      <arglist>(ExternalControllerManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MackieMCU</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a72b76d22b6bd9682c73104e9d85e4b7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a1b3105b75ad8ec1d43d67ad8a0a5b79b</anchor>
      <arglist>(bool connect) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutDownDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a2032efb89d169cad9cfc4cd3187558b7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMiscFeatures</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>ad68846ba74881b0cce0e893b5a1d3a4b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cpuTimerCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>ae1b2c8cd30765dda4138c11d75b13568</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>auxTimerCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a0da3de110cb2bc006aa61ed675d4b1f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a79021aa6be36133ad3aa9ce379443fc8</anchor>
      <arglist>(int, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>acceptMidiMessageInt</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>aa97ff36579103d496a6b0f9a5731c0f6</anchor>
      <arglist>(int deviceIdx, const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flip</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a053e4eeabfb3b5cd957b620b5c0457d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAssignmentText</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>ab53221595cbb1047e3520f9d74bb49cd</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDisplay</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a3afd82f062ca4cc49acd0ed8409a96b0</anchor>
      <arglist>(int devIdx, const char *topLine, const char *bottomLine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>indicesChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>aa67d2335e20619c9d63b4a4f56e2dc90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSignalMetersEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>af53c2a869a9e4179173423c5377430d3</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSignalMetersEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>ac8f173673b7f82f94d692dc357a92927</anchor>
      <arglist>(int dev, bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAssignmentMode</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>afda6508125f682a271bf3ac74c86ead0</anchor>
      <arglist>(AssignmentMode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveFaderInt</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a67b7f0a301c87fed90f665de4b0184c7</anchor>
      <arglist>(int dev, int channelNum, float newSliderPos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveFader</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a91245df0663cd2f7adcec82c339a54c8</anchor>
      <arglist>(int channelNum, float newSliderPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveMasterLevelFader</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>acb743b13538d9b2c7fc7f97623548b39</anchor>
      <arglist>(float newPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePanPotInt</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a506e40be9a7f1a233edfecdc855a692d</anchor>
      <arglist>(int dev, int channelNum, float newPan)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePanPot</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>abfefe2e90b446412804c277cdf0c82e4</anchor>
      <arglist>(int channelNum, float newPan) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveAux</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a2a41a6d22b7ed5cb686e9bb097ccce4c</anchor>
      <arglist>(int channelNum, int auxNum, const char *bus, float newPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lightUpButton</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>aa26012943153ce1bfbf40374b27fc0c5</anchor>
      <arglist>(int dev, int buttonNum, bool on)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSoloAndMute</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>aa308e21ed083e4147b8e89b875d2326c</anchor>
      <arglist>(int channelNum, Track::MuteAndSoloLightState, bool isBright) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloCountChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a44e62d9ccd45fabb383b8f609388de36</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackSelectionChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>aeec82c900e1fe7acc0066f56f4ac407b</anchor>
      <arglist>(int channel, bool isSelected) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a1a73072b0ddfdd4ae4893e9362214dac</anchor>
      <arglist>(bool isPlaying) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a2e5cbc97ffd64b036070cc4075c0a78f</anchor>
      <arglist>(bool isRecording) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a580208107e12b50950b15f3453e622c7</anchor>
      <arglist>(bool isLoopOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>punchOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a65fbb84a9b1231f0a6dbbb503f91fc11</anchor>
      <arglist>(bool isPunching) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clickOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a314ef958027e19d98542a43062d07f20</anchor>
      <arglist>(bool isClickOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a0716fc07f83c67a758689a0d9ca8799f</anchor>
      <arglist>(bool isSnapOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>slaveOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a2bfab36dc729925b741f5bdcf09426b1</anchor>
      <arglist>(bool isSlaving) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>undoStatusChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a55977731e1c14e62c732e2f19ababe36</anchor>
      <arglist>(bool undo, bool redo) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationReadModeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a95746bf25057e03cd33416daa66c97bb</anchor>
      <arglist>(bool isReading) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationWriteModeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>ac60fc2bb81d1065bfb7bf9e33b2da8c6</anchor>
      <arglist>(bool isWriting) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameterChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>afb2e4e6836ac7d714daf3ffa6153945b</anchor>
      <arglist>(int parameterNumber, const ParameterSetting &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>aea7fe61e9772748d1f56f14a3085db64</anchor>
      <arglist>(int parameterNumber) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a9d2e7984a7b0cbce346684255016fd47</anchor>
      <arglist>(int newStartChannelNumber, const juce::StringArray &amp;trackNames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>channelLevelChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a38f408b6d3255be2a6f85c3b16c7840d</anchor>
      <arglist>(int channel, float l, float r) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>masterLevelsChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a1c6420823772ec59fbe6cf6c628db7df</anchor>
      <arglist>(float leftLevel, float rightLevel) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateTCDisplay</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a15dd2a8a0a5a11fa2c6394093eb07714</anchor>
      <arglist>(const char *newDigits)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timecodeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>ae8e0d2ad9fbe068db86dab0a6fe85345</anchor>
      <arglist>(int barsOrHours, int beatsOrMinutes, int ticksOrSeconds, int millisecs, bool isBarsBeats, bool isFrames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackRecordEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>aef6e364b3dcd223e35249f8c9d193cce</anchor>
      <arglist>(int channel, bool isEnabled) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingPluginParams</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a19de4a9f43a82385bc2fb642cb6b98f9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingMarkers</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>aab2e3e344e556e77036610af71369ab6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>ac15c0a505e0d9a12f2fb0c0f908a9cdc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markerChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>ae7ff37b6233d15e088ff20da02be362a</anchor>
      <arglist>(int parameterNumber, const MarkerSetting &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>aeec61c763ffa5e4e963f287246f0326a</anchor>
      <arglist>(int parameterNumber) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>auxBankChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a9d5f1eb537d936deb1c8c79f0fd3e0e6</anchor>
      <arglist>(int bank) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAux</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a54c13e21e58437b2f15a6e4aa07a3954</anchor>
      <arglist>(int channel, int auxNum) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerXT</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a889b850994878f2c01e241f6fcfd8485</anchor>
      <arglist>(MackieXT *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterXT</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>aaf6301d768a9a1793b377f7936696320</anchor>
      <arglist>(MackieXT *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMidiCommandToController</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a8eb0360488d6e43629ab509f9a8393d8</anchor>
      <arglist>(int devIdx, uint8_t byte1, uint8_t byte2, uint8_t byte3)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMidiCommandToController</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>aa2a2c4797b2e7b42dd819ed5b2f4387b</anchor>
      <arglist>(int devIdx, const unsigned char *midiData, int numBytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceIndex</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>adcbacced40539f297d3cab7ba3cd7d48</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOneTouchRecord</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a4346aae39de2ff603e79977072c53e70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOneTouchRecord</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>af4fb6c50f6be3cc80d0ff5d16447770d</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearAllDisplays</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>afbfb9d4cb44b333f05f1e391705e9d53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setDisplay</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a01bd0901309875ecf3e210b7cf71a753</anchor>
      <arglist>(int devIdx, const juce::String &amp;text, int pos)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearDisplaySegment</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a0e27e422654ece8562b9542f5c6edd4f</anchor>
      <arglist>(int devIdx, int column, int row)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setDisplaySegment</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a5c53622eef34f18040776691273cea86</anchor>
      <arglist>(int devIdx, int column, int row, const juce::String &amp;text)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>centreDisplaySegment</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>ac653469869d0d1256e131b6c39da97bb</anchor>
      <arglist>(int devIdx, int column, int row, const juce::String &amp;text)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleAsyncUpdate</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a700311e1471a488e827573990aa3e0a8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>ae6cd946baa91f87b3e1c0c8a052bf26d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>juce::String</type>
      <name>auxString</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a537b562891dbb70aa4544bde3b47a781</anchor>
      <arglist>(int chan) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isEditValidAndNotSafeRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>aa21565ee5f66e3a747739e2be24b9e93</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AssignmentMode</type>
      <name>assignmentMode</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a8f151788c47cc5b223c821586a7c1913</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>panPos</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a0a3c14d546a175cd6867139aaf27293d</anchor>
      <arglist>[maxNumChannels]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>timecodeDigits</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>ac71991dd8d5e427c5473dc9b1fa03693</anchor>
      <arglist>[9]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>lastSmpteBeatsSetting</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a44cd6efd8d52134469f767a16b0b0ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isZooming</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a953196725bbcb6e1dac7646b98ca1645</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>marker</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a35fa4fffff47e1f790ff150770a1fb1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>nudge</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a3514573a20c54ca8177d24cfb99dc452</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>lastChannelLevels</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a9eb86f67845a0604f34ad41c3b792ef6</anchor>
      <arglist>[maxNumChannels]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>recLight</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>ac1573a83d30c27cd3a44bb736f84f0dd</anchor>
      <arglist>[maxNumChannels]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isRecButtonDown</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a39ed0a13c19ad2d0f7fa6ac22ce91df3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>flipped</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a217fca843aa056ce6e32d8a7f72b2ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>editFlip</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a318e73cd9fb80ddea2e26a9d5332709e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>cpuVisible</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>ace08978a48f762ec207d692b839edb34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>oneTouchRecord</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a19adeb1510125441b1e310c9fbbd8c57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>shiftKeysDown</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>af77f255f863ad39ff2023c8e0e677067</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>currentDisplayChars</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>ab06820b8d22b97e508dd2d265bc87c16</anchor>
      <arglist>[maxNumSurfaces][maxCharsOnDisplay]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>newDisplayChars</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>ada4e778dcd583768e161c6c2eb25d876</anchor>
      <arglist>[maxNumSurfaces][maxCharsOnDisplay]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>lastRewindPress</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>af16aebf213090ad7112c8af058846338</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>lastFaderPos</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>ad84d21bf0c3924ba4e82f36c9cbfdfbe</anchor>
      <arglist>[maxNumSurfaces][9]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>auxLevels</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a6bab2d0badcffaecf2adc6634979173a</anchor>
      <arglist>[maxNumChannels]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>auxBusNames</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a055b8293c8612b7510acc27c38251dd9</anchor>
      <arglist>[maxNumChannels][7]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>lastStartChan</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>aa2ab6a62e45dccf9ed5ebe30266e4bb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>deviceIdx</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a1a61a7cc26150ae5ba6d6caf0186787c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>auxBank</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a7ddb938b6ae55aafb74c5855bf90f3e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::Array&lt; int &gt;</type>
      <name>userMovedAuxes</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a2ec7a3878dac6aa83de6fe3fcee4c868</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; CpuMeterTimer &gt;</type>
      <name>cpuMeterTimer</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a4bd0ce33f8044513322898a4763cbe36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; AuxTimer &gt;</type>
      <name>auxTimer</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>a6b62f81b52939a92adc119a9508d404d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::Array&lt; MackieXT * &gt;</type>
      <name>extenders</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieMCU.html</anchorfile>
      <anchor>ab9eae148c989acf58ec88d4ff54963b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MackieXT</name>
    <filename>classtracktion_1_1engine_1_1MackieXT.html</filename>
    <base>tracktion::engine::ControlSurface</base>
    <member kind="function">
      <type></type>
      <name>MackieXT</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieXT.html</anchorfile>
      <anchor>a8aee1e491090d1e9711e984b1ec9f48d</anchor>
      <arglist>(ExternalControllerManager &amp;, MackieMCU &amp;, int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MackieXT</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieXT.html</anchorfile>
      <anchor>a1cd6d7d796148506d083379f41e5c56b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieXT.html</anchorfile>
      <anchor>a342dd5a9267d39eaf81360f26f62b353</anchor>
      <arglist>(bool connect) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutDownDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieXT.html</anchorfile>
      <anchor>a228e6e9bae1376ef90b94b245b1feb27</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieXT.html</anchorfile>
      <anchor>a563182c975d7fe16b0792f07345725e7</anchor>
      <arglist>(int, const juce::MidiMessage &amp;m) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDeviceIndex</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieXT.html</anchorfile>
      <anchor>a02b92a449ef458dabac4cf517f4ddeb3</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDeviceIndex</name>
      <anchorfile>classtracktion_1_1engine_1_1MackieXT.html</anchorfile>
      <anchor>a71ef477b9b41c91d9170a17da2075bce</anchor>
      <arglist>(int idx)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MacroParameter</name>
    <filename>classtracktion_1_1engine_1_1MacroParameter.html</filename>
    <base>tracktion::engine::AutomatableParameter</base>
    <base>tracktion::engine::AutomatableParameter::ModifierSource</base>
    <class kind="struct">tracktion::engine::MacroParameter::Assignment</class>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; MacroParameter &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameter.html</anchorfile>
      <anchor>a1f3ad88e8ce69e175ed30f3ef902daa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MacroParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameter.html</anchorfile>
      <anchor>a03734706f89b1e3f458beeeb69a47e0d</anchor>
      <arglist>(AutomatableEditItem &amp;, Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MacroParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameter.html</anchorfile>
      <anchor>a188f0c5184b7f97416d40cea08b977a7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameter.html</anchorfile>
      <anchor>acf924604bbf6b5512f0a9af093f20514</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getParameterName</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameter.html</anchorfile>
      <anchor>abefa8d0e6b078e92c4aa00fe3c52632e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; float &gt;</type>
      <name>getDefaultValue</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameter.html</anchorfile>
      <anchor>a7c4d87b192c88176dd96dc3411ce56ea</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameter.html</anchorfile>
      <anchor>a3348d7416b55422dc03d02193f6d5088</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameter.html</anchorfile>
      <anchor>ac3ec6f0fe66299ced0943570be994cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>value</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameter.html</anchorfile>
      <anchor>a3e590f1fe988f1d6ff845f929c36ed39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>defaultValue</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameter.html</anchorfile>
      <anchor>ab2558f22e2d4d980d5e735b61482383f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>macroName</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameter.html</anchorfile>
      <anchor>a0a82b6e7287e67b5b9fc34df83566e3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MacroParameterElement</name>
    <filename>classtracktion_1_1engine_1_1MacroParameterElement.html</filename>
    <member kind="function">
      <type></type>
      <name>MacroParameterElement</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameterElement.html</anchorfile>
      <anchor>a9a5e350030837007e921b67f2e58f34b</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MacroParameterElement</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameterElement.html</anchorfile>
      <anchor>a14aa57472ab4cd8d80fd535ad5e2f767</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>MacroParameterList *</type>
      <name>getMacroParameterList</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameterElement.html</anchorfile>
      <anchor>a5fdf49ae2a402b89a562a2f702a0945e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MacroParameterList &amp;</type>
      <name>getMacroParameterListForWriting</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameterElement.html</anchorfile>
      <anchor>a4eecad5f77def7795312f622764e6209</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; MacroParameter &gt;</type>
      <name>getMacroParameters</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameterElement.html</anchorfile>
      <anchor>af96a5e2813176fa40fa61e9f4f561cc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>ownerEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameterElement.html</anchorfile>
      <anchor>af69d5a6f8735c3fcc47c42db9be959c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>parentStateForList</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameterElement.html</anchorfile>
      <anchor>aee86b39be76877e3c7c382c8cc6beba9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MacroParameterList</name>
    <filename>classtracktion_1_1engine_1_1MacroParameterList.html</filename>
    <base>tracktion::engine::AutomatableEditItem</base>
    <member kind="function">
      <type></type>
      <name>MacroParameterList</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameterList.html</anchorfile>
      <anchor>a48c97f6977f8b5641895ca7e9eec217c</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MacroParameterList</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameterList.html</anchorfile>
      <anchor>a45e143936b3d73a859c150a16db82bf4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>MacroParameter *</type>
      <name>createMacroParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameterList.html</anchorfile>
      <anchor>a52441e19f0d183003aea6d66d762fb64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeMacroParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameterList.html</anchorfile>
      <anchor>abe470b6203409513233eba8fd635523d</anchor>
      <arglist>(MacroParameter &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideMacroParametersFromTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameterList.html</anchorfile>
      <anchor>a223f3910f00b624cc56c0028e748c604</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; MacroParameter &gt;</type>
      <name>getMacroParameters</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameterList.html</anchorfile>
      <anchor>a7eea1b3eb176c89f5b9a912840b79904</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitMacroParameters</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameterList.html</anchorfile>
      <anchor>a08943c687376f9851ce5661bac782732</anchor>
      <arglist>(const std::function&lt; void(AutomatableParameter &amp;)&gt; &amp;visit) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameterList.html</anchorfile>
      <anchor>a9b5063bcd028b4b57192271a6de898f7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameterList.html</anchorfile>
      <anchor>ac6e8a13883dee07053b80b5c2a08fd89</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameterList.html</anchorfile>
      <anchor>a7f15cdb9973a681980e623b0f39dcb8f</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1MacroParameterList.html</anchorfile>
      <anchor>a7f3305338adcb74d17a90670dd7b234b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MakeMonoEffect</name>
    <filename>structtracktion_1_1engine_1_1MakeMonoEffect.html</filename>
    <base>tracktion::engine::ClipEffect</base>
    <base>tracktion::engine::Selectable</base>
    <member kind="enumeration">
      <type></type>
      <name>SrcChannels</name>
      <anchorfile>structtracktion_1_1engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>ac18d60d1750340975f985c76013ec13e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chLR</name>
      <anchorfile>structtracktion_1_1engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>ac18d60d1750340975f985c76013ec13ea96a3d1a51beb2c4be0cc3191a7cb1227</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chL</name>
      <anchorfile>structtracktion_1_1engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>ac18d60d1750340975f985c76013ec13ea36c9f3ac80bec79e4450f76867f9b2dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chR</name>
      <anchorfile>structtracktion_1_1engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>ac18d60d1750340975f985c76013ec13ea25d5d2716872a5c76cb9e51088fe8250</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chLR</name>
      <anchorfile>structtracktion_1_1engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>ac18d60d1750340975f985c76013ec13ea96a3d1a51beb2c4be0cc3191a7cb1227</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chL</name>
      <anchorfile>structtracktion_1_1engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>ac18d60d1750340975f985c76013ec13ea36c9f3ac80bec79e4450f76867f9b2dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>chR</name>
      <anchorfile>structtracktion_1_1engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>ac18d60d1750340975f985c76013ec13ea25d5d2716872a5c76cb9e51088fe8250</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MakeMonoEffect</name>
      <anchorfile>structtracktion_1_1engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>ab01eb239b2873075bb4e4e9e71160506</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MakeMonoEffect</name>
      <anchorfile>structtracktion_1_1engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>a1afb879083552daf0d28f60bb3c56e8f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion_1_1engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>a56204d6d5edfdc0cad7bde2caa80fc23</anchor>
      <arglist>(const AudioFile &amp;, double sourceLength) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProperties</name>
      <anchorfile>structtracktion_1_1engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>a22ae796ed7bbab74532ece7a8c4e5935</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>propertiesButtonPressed</name>
      <anchorfile>structtracktion_1_1engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>a1c73b898ea5618a967f0520060918413</anchor>
      <arglist>(SelectionManager &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>structtracktion_1_1engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>aee042ea277b3bd4e188bb8a6cf914ab4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>channels</name>
      <anchorfile>structtracktion_1_1engine_1_1MakeMonoEffect.html</anchorfile>
      <anchor>ae67f6715feb52598d46425745a4126ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AudioFileUtils::MappedFileAndReader</name>
    <filename>structtracktion_1_1engine_1_1AudioFileUtils_1_1MappedFileAndReader.html</filename>
    <member kind="variable">
      <type>std::unique_ptr&lt; juce::MemoryMappedFile &gt;</type>
      <name>mappedFile</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils_1_1MappedFileAndReader.html</anchorfile>
      <anchor>ac1e2d805baf42e2f6d9f63530507e4f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; juce::AudioFormatReader &gt;</type>
      <name>reader</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFileUtils_1_1MappedFileAndReader.html</anchorfile>
      <anchor>a679eb73e132860364042ca8ef35ea0b1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::CustomControlSurface::Mapping</name>
    <filename>structtracktion_1_1engine_1_1CustomControlSurface_1_1Mapping.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>isControllerAssigned</name>
      <anchorfile>structtracktion_1_1engine_1_1CustomControlSurface_1_1Mapping.html</anchorfile>
      <anchor>a0b66ec357cc3608295ee797262db322c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>structtracktion_1_1engine_1_1CustomControlSurface_1_1Mapping.html</anchorfile>
      <anchor>a972bed63c15bfa9d022b8300ace8f412</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>addr</name>
      <anchorfile>structtracktion_1_1engine_1_1CustomControlSurface_1_1Mapping.html</anchorfile>
      <anchor>a89a3dfc5207da6917402dec59deb1ec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>note</name>
      <anchorfile>structtracktion_1_1engine_1_1CustomControlSurface_1_1Mapping.html</anchorfile>
      <anchor>a70d2c218d82cd0ea953097a15e4a3457</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>channel</name>
      <anchorfile>structtracktion_1_1engine_1_1CustomControlSurface_1_1Mapping.html</anchorfile>
      <anchor>a450e2607350c8d0436afcf57805d937c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>function</name>
      <anchorfile>structtracktion_1_1engine_1_1CustomControlSurface_1_1Mapping.html</anchorfile>
      <anchor>aaf923e8a49718f7e03f5923003da00f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ParameterControlMappings::Mapping</name>
    <filename>structtracktion_1_1engine_1_1ParameterControlMappings_1_1Mapping.html</filename>
    <member kind="function">
      <type></type>
      <name>Mapping</name>
      <anchorfile>structtracktion_1_1engine_1_1ParameterControlMappings_1_1Mapping.html</anchorfile>
      <anchor>a558c5884268b112009aa6b8a6e07ecfa</anchor>
      <arglist>(AutomatableParameter *p, int cont, int chan)</arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter *</type>
      <name>parameter</name>
      <anchorfile>structtracktion_1_1engine_1_1ParameterControlMappings_1_1Mapping.html</anchorfile>
      <anchor>afd362148c27085aa3741b964571dd27c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>controllerID</name>
      <anchorfile>structtracktion_1_1engine_1_1ParameterControlMappings_1_1Mapping.html</anchorfile>
      <anchor>a1d0e6613ce1d2434c7e320b30f1122ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>channelID</name>
      <anchorfile>structtracktion_1_1engine_1_1ParameterControlMappings_1_1Mapping.html</anchorfile>
      <anchor>a6986a10a6141ba2f96c12d70ad1b016a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MidiPatchBayPlugin::Mappings</name>
    <filename>structtracktion_1_1engine_1_1MidiPatchBayPlugin_1_1Mappings.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>map</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiPatchBayPlugin_1_1Mappings.html</anchorfile>
      <anchor>a2c74379d7a2caee177f3e9af41081453</anchor>
      <arglist>[17]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::CustomControlSurface::MappingSet</name>
    <filename>structtracktion_1_1engine_1_1CustomControlSurface_1_1MappingSet.html</filename>
    <member kind="function">
      <type></type>
      <name>MappingSet</name>
      <anchorfile>structtracktion_1_1engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>abc1c20628e15e36ce879f7ca975822d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MappingSet</name>
      <anchorfile>structtracktion_1_1engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>abb76038f12091ef2ae347eb0e072df13</anchor>
      <arglist>(const MappingSet &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>MappingSet &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion_1_1engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>a0e0d17cdfde58ed128831a45d1aca1c4</anchor>
      <arglist>(const MappingSet &amp;)=default</arglist>
    </member>
    <member kind="variable">
      <type>ActionID</type>
      <name>id</name>
      <anchorfile>structtracktion_1_1engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>a7bc45efda46871b6dd0dddeae05a7260</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>addr</name>
      <anchorfile>structtracktion_1_1engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>a5be1222850de765bb77d0a36ca52c4df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>controllerID</name>
      <anchorfile>structtracktion_1_1engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>a908af59eaf391ad5466018029baab0a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>note</name>
      <anchorfile>structtracktion_1_1engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>a0a7f7b336cef7b4b982b15aa29945562</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>channel</name>
      <anchorfile>structtracktion_1_1engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>a368846ab18272f1cad123bca2fbfbbd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Colour</type>
      <name>colour</name>
      <anchorfile>structtracktion_1_1engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>acad88a73bf8c4ea388a999a0adc30144</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>surfaceName</name>
      <anchorfile>structtracktion_1_1engine_1_1CustomControlSurface_1_1MappingSet.html</anchorfile>
      <anchor>a7a81bf76cde996688c8c80aecb44672a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::EditSnapshot::Marker</name>
    <filename>structtracktion_1_1engine_1_1EditSnapshot_1_1Marker.html</filename>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion_1_1engine_1_1EditSnapshot_1_1Marker.html</anchorfile>
      <anchor>a2cd8a47f6db01c5b3ff871b4f0448934</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Colour</type>
      <name>colour</name>
      <anchorfile>structtracktion_1_1engine_1_1EditSnapshot_1_1Marker.html</anchorfile>
      <anchor>a2cf8114ca95203f3b2cd1e048c6bd573</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeRange</type>
      <name>time</name>
      <anchorfile>structtracktion_1_1engine_1_1EditSnapshot_1_1Marker.html</anchorfile>
      <anchor>a30c8bb4999f186759552b98631bdad02</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MarkerClip</name>
    <filename>classtracktion_1_1engine_1_1MarkerClip.html</filename>
    <base>tracktion::engine::Clip</base>
    <member kind="function">
      <type></type>
      <name>MarkerClip</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerClip.html</anchorfile>
      <anchor>a787e2dbf854ee16c4fb12015ac507b97</anchor>
      <arglist>(const juce::ValueTree &amp;, EditItemID, ClipOwner &amp;targetParent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MarkerClip</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerClip.html</anchorfile>
      <anchor>abd224f2915d7fd00a245243708b22090</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMarkerID</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerClip.html</anchorfile>
      <anchor>ad03aa341f6555d73008961317b5a6fe5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkerID</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerClip.html</anchorfile>
      <anchor>ab3333ca03c16ff242b64b1cb52ff34e8</anchor>
      <arglist>(int newID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSyncAbsolute</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerClip.html</anchorfile>
      <anchor>a8c9efb6e5813d07bd3ef27549b3b54c6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSyncBarsBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerClip.html</anchorfile>
      <anchor>a0d88d7a32031d985b645b9f149c0442a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerClip.html</anchorfile>
      <anchor>aaaaf32134f387c1b1c8db564f74e5a43</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedTo</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerClip.html</anchorfile>
      <anchor>ab9b5dc498f34dd47f7e66b5bf21db08e</anchor>
      <arglist>(ClipOwner &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getColour</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerClip.html</anchorfile>
      <anchor>a541f3869d12da6c8b5a8a95076675fc7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getDefaultColour</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerClip.html</anchorfile>
      <anchor>a2342f55c9b43c3038bd387eef13c5fbe</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerClip.html</anchorfile>
      <anchor>a08141fab4628dc99381eade7a07e6f76</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerClip.html</anchorfile>
      <anchor>a1df3cffa7856b2ca63bafe997ec2da66</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerClip.html</anchorfile>
      <anchor>aed8974eee43afeead94d3cabd86c339f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerClip.html</anchorfile>
      <anchor>a02d066c5984a61dfb7a319e4d4a25824</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MarkerManager</name>
    <filename>classtracktion_1_1engine_1_1MarkerManager.html</filename>
    <member kind="function">
      <type></type>
      <name>MarkerManager</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerManager.html</anchorfile>
      <anchor>abda0abf1ea261481810551ed211363bf</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MarkerManager</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerManager.html</anchorfile>
      <anchor>a43a5498b1f6424f79a6dfa3b67356540</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNextUniqueID</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerManager.html</anchorfile>
      <anchor>a8bc3196be468435eab7b87519395c887</anchor>
      <arglist>(int start=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkForDuplicates</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerManager.html</anchorfile>
      <anchor>a6629c2196b2d505bc3add1076d81e868</anchor>
      <arglist>(MarkerClip &amp;, bool changeOthers)</arglist>
    </member>
    <member kind="function">
      <type>MarkerClip::Ptr</type>
      <name>createMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerManager.html</anchorfile>
      <anchor>ac628dcb1087d232d4b7b39ad6034dc3c</anchor>
      <arglist>(int number, TimePosition, TimeDuration, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>MarkerClip::Ptr</type>
      <name>createMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerManager.html</anchorfile>
      <anchor>a1810355930661140e13e34a73dd6e2fb</anchor>
      <arglist>(int number, TimePosition, TimeDuration, Clip::SyncType, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>Clip::SyncType</type>
      <name>getNewMarkerMode</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerManager.html</anchorfile>
      <anchor>a6a3dc60f6566d21689883d9c6068fb35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MarkerClip *</type>
      <name>getMarkerByID</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerManager.html</anchorfile>
      <anchor>ae522dcebae7aa7595714077de62bf7de</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>MarkerClip *</type>
      <name>getNextMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerManager.html</anchorfile>
      <anchor>a8fb5d258a439b5c3dd316f460cb4be70</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>MarkerClip *</type>
      <name>getPrevMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerManager.html</anchorfile>
      <anchor>a19cee5c850732501520b64d705d3b062</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; MarkerClip &gt;</type>
      <name>getMarkers</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerManager.html</anchorfile>
      <anchor>afaa160d5fc0e27b3a5ca21cb4e684a03</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MarkerSetting</name>
    <filename>structtracktion_1_1engine_1_1MarkerSetting.html</filename>
    <member kind="function">
      <type></type>
      <name>MarkerSetting</name>
      <anchorfile>structtracktion_1_1engine_1_1MarkerSetting.html</anchorfile>
      <anchor>a29dc2df793e9591c4fdac8f1dc0ee52a</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>structtracktion_1_1engine_1_1MarkerSetting.html</anchorfile>
      <anchor>a749c831aaf7795ac1de70441ddcc7ee6</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>label</name>
      <anchorfile>structtracktion_1_1engine_1_1MarkerSetting.html</anchorfile>
      <anchor>a181340fa2df491fc4e7572925a2aac1c</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>number</name>
      <anchorfile>structtracktion_1_1engine_1_1MarkerSetting.html</anchorfile>
      <anchor>a312a605c2aebf71fb86890f49ba6e489</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>absolute</name>
      <anchorfile>structtracktion_1_1engine_1_1MarkerSetting.html</anchorfile>
      <anchor>aa0bbf7e89b1a5e1a684e8361eb047585</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MarkerTrack</name>
    <filename>classtracktion_1_1engine_1_1MarkerTrack.html</filename>
    <base>tracktion::engine::ClipTrack</base>
    <member kind="function">
      <type></type>
      <name>MarkerTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerTrack.html</anchorfile>
      <anchor>aef0bbaf9c935bbb78c6f7c7ef2767f77</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MarkerTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerTrack.html</anchorfile>
      <anchor>a0eb1ea2d67e5656acb7117bb880dc4e1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMarkerTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerTrack.html</anchorfile>
      <anchor>a43409935b3c9c769d42f4a7c822b5166</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerTrack.html</anchorfile>
      <anchor>af5ee20be7d89a85b659c357c66e3fc24</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerTrack.html</anchorfile>
      <anchor>aa11af0bcbb070f62af69259c33651009</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1MarkerTrack.html</anchorfile>
      <anchor>a84e53104226fefa6df9bf44e1f568b00</anchor>
      <arglist>(Plugin *) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MasterTrack</name>
    <filename>classtracktion_1_1engine_1_1MasterTrack.html</filename>
    <base>tracktion::engine::Track</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; MasterTrack &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1MasterTrack.html</anchorfile>
      <anchor>a94950d260ac0032b31569e356ccbfff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MasterTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1MasterTrack.html</anchorfile>
      <anchor>ac22f8778b582dd8ba8f7a1c9459646dc</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MasterTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1MasterTrack.html</anchorfile>
      <anchor>a102deb7f5d3329014ed66f6c6bfd0cdb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1MasterTrack.html</anchorfile>
      <anchor>a39dbf54b41edcd01967728c8f1b166e4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMasterTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1MasterTrack.html</anchorfile>
      <anchor>aaf6e39267fb1a2aa5fb571d39f9a4e6b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1MasterTrack.html</anchorfile>
      <anchor>a91dbf0192a8ae6ee057bfe2dbbd58d2a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1MasterTrack.html</anchorfile>
      <anchor>a459f472c4036485f6a8f8b2aaad27744</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1MasterTrack.html</anchorfile>
      <anchor>a2a816ea71938d7e408e957c531d0b880</anchor>
      <arglist>(Plugin *) const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MelodyneFileReader</name>
    <filename>classtracktion_1_1engine_1_1MelodyneFileReader.html</filename>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; MelodyneFileReader &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>afe4b90140fbcfd823d0b83e6f0242ec3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MelodyneFileReader</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>a6268e030819d40efc7cca4b61888fc30</anchor>
      <arglist>(Edit &amp;, AudioClipBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MelodyneFileReader</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>af5393fbe91dd6de86003bcd232a9afe2</anchor>
      <arglist>(Edit &amp;, AudioClipBase &amp;, MelodyneFileReader &amp;oneToClone)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MelodyneFileReader</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>ab920211a3ee3def88b9b6188a48a29c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>a788018c5bfb5058b64a9f7b782c48fc9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ExternalPlugin *</type>
      <name>getPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>a9372f443bfb41c3bd1672b243369bce1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showPluginWindow</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>a54f08b06e29de3b9a820ee62f89ca6e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hidePluginWindow</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>af6f80357e9c39b441ff0df7814ceacb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAnalysingContent</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>ac81479deb3b8683e90c4bbaaca6ac89a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::MidiMessageSequence</type>
      <name>getAnalysedMIDISequence</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>af90780c3416d8ecf403003beae7e0725</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sourceClipChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>ac2580732805d14c86781c67c29bc0d6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>cleanUpOnShutdown</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneFileReader.html</anchorfile>
      <anchor>a32ab1a2c424c4db1cfa6f3ae3703c7ff</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MelodyneInstance</name>
    <filename>structMelodyneInstance.html</filename>
    <member kind="variable">
      <type>ExternalPlugin::Ptr</type>
      <name>plugin</name>
      <anchorfile>structMelodyneInstance.html</anchorfile>
      <anchor>a0fecdc73dc76550cbc8dda6e05ae1a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ARAFactory *</type>
      <name>factory</name>
      <anchorfile>structMelodyneInstance.html</anchorfile>
      <anchor>af2ef3a98d1e8183bee97f99b502ee53c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ARAPlugInExtensionInstance *</type>
      <name>extensionInstance</name>
      <anchorfile>structMelodyneInstance.html</anchorfile>
      <anchor>a35385f1d325e0cbaef0443829ff7f3b9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MelodyneInstanceFactory</name>
    <filename>structMelodyneInstanceFactory.html</filename>
    <member kind="function">
      <type>ExternalPlugin::Ptr</type>
      <name>createPlugin</name>
      <anchorfile>structMelodyneInstanceFactory.html</anchorfile>
      <anchor>a1955be4931b561db8a6f45565ac6c2a5</anchor>
      <arglist>(Edit &amp;ed)</arglist>
    </member>
    <member kind="function">
      <type>MelodyneInstance *</type>
      <name>createInstance</name>
      <anchorfile>structMelodyneInstanceFactory.html</anchorfile>
      <anchor>a6652bcfec25bcb3643820facaa232518</anchor>
      <arglist>(ExternalPlugin &amp;p, ARADocumentControllerRef dcRef)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MelodyneInstanceFactory &amp;</type>
      <name>getInstance</name>
      <anchorfile>structMelodyneInstanceFactory.html</anchorfile>
      <anchor>a10162f1ea54afe7e6eb2d42a32aaa789</anchor>
      <arglist>(Engine &amp;engine)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>shutdown</name>
      <anchorfile>structMelodyneInstanceFactory.html</anchorfile>
      <anchor>a49382ebdd4fdc4c3e3311130f0d86612</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>const ARAFactory *</type>
      <name>factory</name>
      <anchorfile>structMelodyneInstanceFactory.html</anchorfile>
      <anchor>adf6c1b045f7440163ea990c6f21a21eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MelodyneNode</name>
    <filename>classtracktion_1_1engine_1_1MelodyneNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>MelodyneNode</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneNode.html</anchorfile>
      <anchor>af9d5096835ca9d86299ed2f132556737</anchor>
      <arglist>(AudioClipBase &amp;, tracktion::graph::PlayHead &amp;, bool isOfflineRender)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MelodyneNode</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneNode.html</anchorfile>
      <anchor>accc86a8f04e0e93356d63a95cd02158a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneNode.html</anchorfile>
      <anchor>a6e9635f3ddfda166f5f946cca084b1bd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneNode.html</anchorfile>
      <anchor>aa63df2e3607193922a678c7c1f4219b5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneNode.html</anchorfile>
      <anchor>aec98f332c1d7c79df71de5e762dfdf5d</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneNode.html</anchorfile>
      <anchor>afe5c0bfb9135d06d130f61ed8bb58cfa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1MelodyneNode.html</anchorfile>
      <anchor>ad2ece188439ee5a1e6230cd409293378</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MemoryMappedFileReader</name>
    <filename>structtracktion_1_1engine_1_1MemoryMappedFileReader.html</filename>
    <base>tracktion::engine::FallbackReader</base>
    <member kind="function">
      <type></type>
      <name>MemoryMappedFileReader</name>
      <anchorfile>structtracktion_1_1engine_1_1MemoryMappedFileReader.html</anchorfile>
      <anchor>a6552010f98d8345752496100fb158aa6</anchor>
      <arglist>(std::unique_ptr&lt; AudioFileUtils::MappedFileAndReader &gt; mappedFileAndReader)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadTimeout</name>
      <anchorfile>structtracktion_1_1engine_1_1MemoryMappedFileReader.html</anchorfile>
      <anchor>a67b4e5651fc8326410525c8853f32696</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readSamples</name>
      <anchorfile>structtracktion_1_1engine_1_1MemoryMappedFileReader.html</anchorfile>
      <anchor>aae9aea5665d35d4439653ca4ec9e66dc</anchor>
      <arglist>(int *const *destSamples, int numDestChannels, int startOffsetInDestBuffer, juce::int64 startSampleInFile, int numSamples) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MessageThreadCallback</name>
    <filename>classtracktion_1_1engine_1_1MessageThreadCallback.html</filename>
    <member kind="function">
      <type></type>
      <name>MessageThreadCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1MessageThreadCallback.html</anchorfile>
      <anchor>a490d8385703b43a294fc57824261be23</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MessageThreadCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1MessageThreadCallback.html</anchorfile>
      <anchor>af99e09f3ac281a9f57d9fd66275fd28c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFinished</name>
      <anchorfile>classtracktion_1_1engine_1_1MessageThreadCallback.html</anchorfile>
      <anchor>abc141c3b158f19d1b1336ea115dfe470</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>triggerAndWaitForCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1MessageThreadCallback.html</anchorfile>
      <anchor>a22cfe9b7f0128e8130e7ad5427700634</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>performAction</name>
      <anchorfile>classtracktion_1_1engine_1_1MessageThreadCallback.html</anchorfile>
      <anchor>a196792777d64f78e5d148398b536eb1b</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Edit::Metadata</name>
    <filename>structtracktion_1_1engine_1_1Edit_1_1Metadata.html</filename>
    <member kind="variable">
      <type>juce::String</type>
      <name>artist</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1Metadata.html</anchorfile>
      <anchor>afbc296f3dd3e57261fb35f9c84b4a013</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>title</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1Metadata.html</anchorfile>
      <anchor>a778e6a9feffb8c0fa741aea3470c91c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>album</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1Metadata.html</anchorfile>
      <anchor>a879ec485a9999eb80bd35658ff14d1cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>date</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1Metadata.html</anchorfile>
      <anchor>aee22feb88124dd69d7b899c642a6b2c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>genre</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1Metadata.html</anchorfile>
      <anchor>a3c57c56adea3d3012ebda7abd0305cb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>comment</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1Metadata.html</anchorfile>
      <anchor>a47eb032f8688873b57fb81947c7a176b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>trackNumber</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1Metadata.html</anchorfile>
      <anchor>a0a348862dc829342e48f30ecdcfe6e17</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MidiAssignable</name>
    <filename>classtracktion_1_1engine_1_1MidiAssignable.html</filename>
    <class kind="struct">tracktion::engine::MidiAssignable::Assignment</class>
    <member kind="function">
      <type></type>
      <name>MidiAssignable</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiAssignable.html</anchorfile>
      <anchor>a3e481e028f3eebd1bfd29c0a2ab8f188</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MidiAssignable</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiAssignable.html</anchorfile>
      <anchor>a4632eb29dca7b275f486529e2876bfe0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAssignent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiAssignable.html</anchorfile>
      <anchor>a01e813be7b9143729052a8f4d3f395b8</anchor>
      <arglist>(Assignment)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Assignment &gt; &amp;</type>
      <name>getAssignments</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiAssignable.html</anchorfile>
      <anchor>a12022dc8a87b7a30e74982ddb70798e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSingleAssignment</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiAssignable.html</anchorfile>
      <anchor>a3590b03d3e8c98190ecac9c51911ae4f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildMenu</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiAssignable.html</anchorfile>
      <anchor>a83797c311b4eb7d406cc684bd5f74e29</anchor>
      <arglist>(juce::PopupMenu &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMenuResult</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiAssignable.html</anchorfile>
      <anchor>a167e280ad90a3b5fddbf66df34167c2e</anchor>
      <arglist>(int menuResult)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFaderIndex</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiAssignable.html</anchorfile>
      <anchor>a1d62c0c223849e89568c3fbc8c8112c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isAssignable</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiAssignable.html</anchorfile>
      <anchor>ac69f73e3d45706a017a1a37f49d8ced6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::String</type>
      <name>getDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiAssignable.html</anchorfile>
      <anchor>aed8c51c490726c038aec5f7afcd0eb1a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Track::Ptr</type>
      <name>getControlledTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiAssignable.html</anchorfile>
      <anchor>a6db92f919d0780fdfd6939c9fc7346f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiAssignable.html</anchorfile>
      <anchor>a922e932f2f4ea006e81175a619be5d74</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MidiProgramManager::MidiBank</name>
    <filename>structtracktion_1_1engine_1_1MidiProgramManager_1_1MidiBank.html</filename>
    <member kind="function">
      <type>juce::XmlElement *</type>
      <name>createXml</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiProgramManager_1_1MidiBank.html</anchorfile>
      <anchor>a0add4812d54945dc79d8c07c63f9f84e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFromXml</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiProgramManager_1_1MidiBank.html</anchorfile>
      <anchor>a4159e4991e9612539256ac8ce17edebd</anchor>
      <arglist>(const juce::XmlElement &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiProgramManager_1_1MidiBank.html</anchorfile>
      <anchor>aed53d1022f3cb6e8a0dc0f7baea17ddb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiProgramManager_1_1MidiBank.html</anchorfile>
      <anchor>ac282941ff1e55a7dd3fdeb39dfb6daeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; int, juce::String &gt;</type>
      <name>programNames</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiProgramManager_1_1MidiBank.html</anchorfile>
      <anchor>aec805eee7bde93fb62f4aeaa5ccd4d28</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MidiChannel</name>
    <filename>structtracktion_1_1engine_1_1MidiChannel.html</filename>
    <member kind="function">
      <type></type>
      <name>MidiChannel</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiChannel.html</anchorfile>
      <anchor>ac04841f5b96511057c4cd2556d17c071</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiChannel</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiChannel.html</anchorfile>
      <anchor>ab6d41384ee286adefccfb761e82870fe</anchor>
      <arglist>(const MidiChannel &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>MidiChannel &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiChannel.html</anchorfile>
      <anchor>a78e8b18b94e5c6c6eb254190a7df96f2</anchor>
      <arglist>(const MidiChannel &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiChannel</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiChannel.html</anchorfile>
      <anchor>a6fe3e143516ef78c80ad24551aeae747</anchor>
      <arglist>(int channelNumber1to16) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiChannel</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiChannel.html</anchorfile>
      <anchor>ac6840c5802d855eab408fbeb7743c5cb</anchor>
      <arglist>(const juce::var &amp;storedChannel) noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getChannelNumber</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiChannel.html</anchorfile>
      <anchor>ae9d2543560ff7c9ba14bae1443524979</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiChannel.html</anchorfile>
      <anchor>a483a4d1f4c75bb1880df2601588fe0aa</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiChannel.html</anchorfile>
      <anchor>a20538df40e75a4dab5ed7b3c250ed626</anchor>
      <arglist>(const MidiChannel &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiChannel.html</anchorfile>
      <anchor>a26effd71f7dc00797ee86f63e78a57fe</anchor>
      <arglist>(const MidiChannel &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator juce::var</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiChannel.html</anchorfile>
      <anchor>a361f601c8774bba678b8af1607f05e79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MidiChannel</type>
      <name>fromChannelOrZero</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiChannel.html</anchorfile>
      <anchor>a6b53a5b25e7b13119ba6df35db5ec968</anchor>
      <arglist>(int channel) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MidiClip</name>
    <filename>classtracktion_1_1engine_1_1MidiClip.html</filename>
    <base>tracktion::engine::Clip</base>
    <class kind="struct">tracktion::engine::MidiClip::ScopedEventsList</class>
    <member kind="enumeration">
      <type></type>
      <name>LoopedSequenceType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a1aab114bdfad1f5fc0c411ea2bd3fa12</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1MidiClip.html" anchor="a1aab114bdfad1f5fc0c411ea2bd3fa12ad75973f0eaa6f6e708e0c4447d0267b3">loopRangeDefinesAllRepetitions</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1MidiClip.html" anchor="a1aab114bdfad1f5fc0c411ea2bd3fa12af1850633ff0d05b04b5b0d56be7d51db">loopRangeDefinesSubsequentRepetitions</enumvalue>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; MidiClip &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a2fb8cafaf30967a76fc9af4689bd8dea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiClip</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>abff4086ba87119832e5fa65ebc1a31e4</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiClip</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a2ab139c38f8a2c71cc9ab95cc3cc97fc</anchor>
      <arglist>(const juce::ValueTree &amp;, EditItemID, ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiClip</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>ab2447a4a7af881d3c0ba497edd748b86</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cloneFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>aba08fddb1815530f5c53c71cc50909e4</anchor>
      <arglist>(Clip *) override</arglist>
    </member>
    <member kind="function">
      <type>AudioTrack *</type>
      <name>getAudioTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>af28b1e51d200e3753044d321e64cfd77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MidiList &amp;</type>
      <name>getSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a727649ebf5ead2b5b6e9a78b20cb8bb0</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>MidiList &amp;</type>
      <name>getSequenceLooped</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a7950f70cee60cb3387e9b40507310f50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; MidiList &gt;</type>
      <name>createSequenceLooped</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a58b4acd38f0dae7e07c9c73e43c07e98</anchor>
      <arglist>(MidiList &amp;sourceSequence)</arglist>
    </member>
    <member kind="function">
      <type>const SelectedMidiEvents *</type>
      <name>getSelectedEvents</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a456bfcbe7d856964e5ab4b4d911c0f79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUsesProxy</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a40c5b33b40f5fca3cece88c0b08f1418</anchor>
      <arglist>(bool canUseProxy) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canUseProxy</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>ab2ffa7b17e76c93ce5d3603c2c0ad780</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; LaunchHandle &gt;</type>
      <name>getLaunchHandle</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a934fd5135647a71f513361d12655818f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUsesGlobalLaunchQuatisation</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a97629fef3683b9bec2fb82a7a88d2044</anchor>
      <arglist>(bool useGlobal) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesGlobalLaunchQuatisation</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a037cea0952f10a0f83d6979d7e07c652</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>LaunchQuantisation *</type>
      <name>getLaunchQuantisation</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>ad03a600b9b5514d228da5272b5368f36</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FollowActions *</type>
      <name>getFollowActions</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a5b208ecb4879029c922698875efc69be</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleVerticallyToFit</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a77e67e4bb06ce5cbcb429b3733c8ee3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasValidSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a45f80be687286b227233e1bc36b8e837</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>MidiChannel</type>
      <name>getMidiChannel</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a5ed5b11e055350468728a5a9d5ed6e62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidiChannel</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a94376b84211ed178f0be933f866a5a72</anchor>
      <arglist>(MidiChannel newChannel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMPEMode</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a6efe46c5346341601710266ed7273274</anchor>
      <arglist>(bool shouldUseMPE)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getMPEMode</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>acdeded8b69fc9d68b4ab3dfc4c0ec614</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRhythm</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a7dd5163374fdfcd04e1db1fef24e3996</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>QuantisationType &amp;</type>
      <name>getQuantisation</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a7c832d5db97a3c426a2e69f6d34f76b8</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuantisation</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a485d889794d70f784f6e089aafee8332</anchor>
      <arglist>(const QuantisationType &amp;newType)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getGrooveTemplate</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>abddbc558d496e20e5be786bcd0e9a234</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGrooveTemplate</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a708317e6549eb142540dd104c93b675c</anchor>
      <arglist>(const juce::String &amp;templateName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesGrooveStrength</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a03397d43c43307db41cb11da218a40ee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getGrooveStrength</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a39b723b34f026ba75f46ddc21ef86299</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGrooveStrength</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a1e073db0f3ec3b5ca0b1a63fec4ab1b1</anchor>
      <arglist>(float g)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeInMidiSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>af9229a1c2aab407599231f1386758b48</anchor>
      <arglist>(juce::MidiMessageSequence &amp;, MidiList::NoteAutomationType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTake</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a13985f733367482d0dbdd989d2589854</anchor>
      <arglist>(juce::MidiMessageSequence &amp;, MidiList::NoteAutomationType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extendStart</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a44b8a17d8d86668ea3f5308d510fb252</anchor>
      <arglist>(TimePosition newStartTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trimBeyondEnds</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a3ff440a827d87b50f75fe6178a93aa52</anchor>
      <arglist>(bool beyondStart, bool beyondEnd, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>legatoNote</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>ae1a907b1a570b06746068e3e602b6a0d</anchor>
      <arglist>(MidiNote &amp;note, const juce::Array&lt; MidiNote * &gt; &amp;notesToUse, BeatPosition maxEndBeat, juce::UndoManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getVolumeDb</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>abfa1c7a04e65340207684c4f0af101b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVolumeDb</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>ad69466e178e5cd150a9c354c03b08991</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSendingBankChanges</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a53147068dbf0db74f396650a4d9617fb</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSendingBankChanges</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a6c603a6816f8075b0c8ef4cbbdf3d5d4</anchor>
      <arglist>(bool sendBank)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a1c62d5b484afc50e5985dd75b2770c56</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a59c250b789ffd383444712aa8911c49e</anchor>
      <arglist>(bool m) override</arglist>
    </member>
    <member kind="function">
      <type>LiveClipLevel</type>
      <name>getLiveClipLevel</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a94b4c71f04a94deb16224814119f40d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a62388885622ebec5f8087d6b2ceded68</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a899b23eed4f7609203aefa2abe9c616b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rescale</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a6a67f2d58a737af41f0af96c0815ce64</anchor>
      <arglist>(TimePosition pivotTimeInEdit, double factor) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedTo</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>aa05fca08712b3c4eac86be9c4ad3c1f0</anchor>
      <arglist>(ClipOwner &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>ae846c6b3eb7eb528468f129b0fc79808</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getDefaultColour</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a4cc01c51571315867a3fed867fb42004</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a636866a48c1acf15f3f5a74898f1afc9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAnyTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>af1539855570a8c88b4a7cb54778d74c4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a38f252ea8bbbb2d5beae404ddfdea472</anchor>
      <arglist>(bool includeComps) override</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getTakeDescriptions</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>ae7da04dfc0bffe1fd9c67ea9d253bbd5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentTake</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>aea2687df5f3f52b5ac9d0e41db796cbb</anchor>
      <arglist>(int takeIndex) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCurrentTake</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a6be5ff594d32b4df5680fa805ee06986</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCurrentTakeComp</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>aed36e5941f57ff2e4a02586f12b44fc5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteAllUnusedTakesConfirmingWithUser</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a001f1f1578bd94aca8bdacb316d25057</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Clip::Array</type>
      <name>unpackTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>abfcd45c1cd1b6de7384d6e89af1ef7f0</anchor>
      <arglist>(bool toNewTracks) override</arglist>
    </member>
    <member kind="function">
      <type>MidiList *</type>
      <name>getTakeSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>ae9b06eb12d6f9c7189927f3b83a46123</anchor>
      <arglist>(int takeIndex) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canLoop</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a676e1a25a709715830efbacb947ae9d6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLooping</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a51cc3c581d71c13daf3ec79bf26eaec3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beatBasedLooping</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>ade97dc924cf979cd5769450eb4d3da41</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumberOfLoops</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>aed6b763fbf9fbd6898be31722bc871ae</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableLooping</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a89d99b4c20b189b3276a85da751a90c0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopRange</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a30e03659d57be5f8c1d100ebd5ddc0ab</anchor>
      <arglist>(TimeRange) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopRangeBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>ade47e4ede4633f695378410c39afb4a9</anchor>
      <arglist>(BeatRange) override</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getLoopStartBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a17e829603d4fe3b42d4bdcce518de2ff</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>BeatDuration</type>
      <name>getLoopLengthBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a20a0a710b714ad1910aa2d7a42bfc0f3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getLoopStart</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a189fff517e595a9bfef6d3b5ae16973d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getLoopLength</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a12462140e93e1a879052c0c5f145d4a2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>MidiCompManager &amp;</type>
      <name>getCompManager</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a1f4d08209a727e60cbe07d5c99e32dab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PatternGenerator *</type>
      <name>getPatternGenerator</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>aa60cea217bab5aa9986540fb6fd8d8c9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pitchTempoTrackChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a042e1aa8ea6a873c8eba69039bc41141</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; LoopedSequenceType &gt;</type>
      <name>loopedSequenceType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a7194c1800f68e0c947b6b3e43dc9286c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a313150fd04f8bb59d071d2afff03c84b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a403658961ba02fb06b6efa33b4dc9975</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>ab0364f0e1c0474169be9a02cce88348a</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;, int) override</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>MidiNote</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiClip.html</anchorfile>
      <anchor>a28433d816ae9d06b4cc17e4e53840edf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MidiCompManager</name>
    <filename>classtracktion_1_1engine_1_1MidiCompManager.html</filename>
    <base>tracktion::engine::CompManager</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; MidiCompManager &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a990b84eb288382d4f346e4867184d0d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiCompManager</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a552f24a7f3ac460c900a7762df4e4aa2</anchor>
      <arglist>(MidiClip &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiCompManager</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a022c90a17f2ea866d2003dd2cb1aa53f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a0f52f3d1e6b0a6bcde11d1b377ae93f8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>MidiList *</type>
      <name>getSequenceLooped</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiCompManager.html</anchorfile>
      <anchor>ad65a31edb339ab6de3e245a8322875ea</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getBaseTakeHash</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiCompManager.html</anchorfile>
      <anchor>aed7e7b62d840f7bb86cd64865fb9f6f7</anchor>
      <arglist>(int takeIndex) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTakeLength</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a4ecdb56c13bb695cb77fe8c577c5be6e</anchor>
      <arglist>(int takeIndex) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOffset</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiCompManager.html</anchorfile>
      <anchor>aef35332229af57326b074dd9c74a8fee</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLoopLength</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a090d23802e4345d5ddd5be48b09959a5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAutoTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a95d92085159190abf4d842f9b46a7415</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSourceTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a15fa85a5c90b88cae3ccaadb1a30d950</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getWarning</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a84a1c6e6829db7dacaf9482f27b4798a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getRenderProgress</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a513def9c6e5948aadfbaaeb82b2bec40</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>discardCachedData</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a4b0bdc3f9f15a9058eadf0818b3a1e39</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>triggerCompRender</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiCompManager.html</anchorfile>
      <anchor>adda42e176c8d11199f0ca533bc8e03c0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flattenTake</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a7b1f393f2f90065efe99154371cd0b07</anchor>
      <arglist>(int takeIndex, bool deleteSourceFiles) override</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>addNewComp</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiCompManager.html</anchorfile>
      <anchor>a44f28ecca0e9813b842425a8e3e22af8</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MidiControllerEvent</name>
    <filename>classtracktion_1_1engine_1_1MidiControllerEvent.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ExtraControllerTypes</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0182a484d888a5d149dd53f6cf93c6b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>programChangeType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0182a484d888a5d149dd53f6cf93c6b8a0e37d108ac87a7d4ba99da34cacda0cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noteVelocities</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0182a484d888a5d149dd53f6cf93c6b8acc4da721fb525209f19f303e83677720</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>aftertouchType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0182a484d888a5d149dd53f6cf93c6b8a4237a4c6a736352550cd11430ca1cc0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pitchWheelType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0182a484d888a5d149dd53f6cf93c6b8a27c12cd07b5d83985220e250d50d3c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sysExType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0182a484d888a5d149dd53f6cf93c6b8ae59cd09044e3692fea3b11e193b2337a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>channelPressureType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0182a484d888a5d149dd53f6cf93c6b8a8ce160d4321776a2914e960f7ff50ed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UnknownType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0182a484d888a5d149dd53f6cf93c6b8acb00ecb56831e049c9a700a737d02d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>programChangeType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0182a484d888a5d149dd53f6cf93c6b8a0e37d108ac87a7d4ba99da34cacda0cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noteVelocities</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0182a484d888a5d149dd53f6cf93c6b8acc4da721fb525209f19f303e83677720</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>aftertouchType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0182a484d888a5d149dd53f6cf93c6b8a4237a4c6a736352550cd11430ca1cc0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pitchWheelType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0182a484d888a5d149dd53f6cf93c6b8a27c12cd07b5d83985220e250d50d3c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sysExType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0182a484d888a5d149dd53f6cf93c6b8ae59cd09044e3692fea3b11e193b2337a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>channelPressureType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0182a484d888a5d149dd53f6cf93c6b8a8ce160d4321776a2914e960f7ff50ed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UnknownType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a0182a484d888a5d149dd53f6cf93c6b8acb00ecb56831e049c9a700a737d02d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiControllerEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a9aaccf0258a6e8734c25fc7d8a971cb9</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiControllerEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a896e482739b1a1645ae9a5fa8665fec4</anchor>
      <arglist>(MidiControllerEvent &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getControllerValue</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>ac540b354525fa11c086eb9b931c8ced3</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setControllerValue</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a760c6de849ddf1e08e480519935672c1</anchor>
      <arglist>(int newValue, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMetadata</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a88266802fbc2307771fd9448daecbaca</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMetadata</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a76646dd2f39f85df53b99330671eb4f7</anchor>
      <arglist>(int metaValue, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getBeatPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a59484d9d3d2d687e1000df26c1baad67</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBeatPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a738d908ce1400ea7fd2eeeb75188f27c</anchor>
      <arglist>(BeatPosition, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getEditBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a859a1c69e7f8dc0b453d2af9a2f34841</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getEditTime</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>aadf4c03ed94cb571dab342da6d3293bc</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getLevelDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>aeb4351d2631adbdb92565f09af0d6490</anchor>
      <arglist>(MidiClip *) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a540faf9ac0d99eecedb8ca4b85dd78c0</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a6482af588ab99e661c51e61e68d2d724</anchor>
      <arglist>(int type, juce::UndoManager *um)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>createControllerEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>afcb08996882a4d6ffcc7698676e5ea8c</anchor>
      <arglist>(BeatPosition, int controllerType, int controllerValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>createControllerEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a36b488218786258fd446c8667c41d429</anchor>
      <arglist>(BeatPosition, int controllerType, int controllerValue, int metadata)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>createControllerEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a31f76d251ef9a87ce244ed576c9ff598</anchor>
      <arglist>(const MidiControllerEvent &amp;, BeatPosition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getControllerDefautValue</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a31fd7edd8e6920c6bfd4902287277e73</anchor>
      <arglist>(int type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getControllerTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>adc11b24d0234b22e3f6f4675c7691b0d</anchor>
      <arglist>(int type) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>bankIDToCoarse</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>af737e85b23a5010a9fe2d46a6f2363f7</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>bankIDToFine</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>ac263680ffb78f5b99aca8adb27150101</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>ada1bd42de606cf4e3736a8a59d6fec67</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>MidiList</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiControllerEvent.html</anchorfile>
      <anchor>a00f07d9357a6bcb92fd73cab09de07f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::MIDIEvents</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1MIDIEvents.html</filename>
    <base>tracktion::engine::Clipboard::ContentType</base>
    <member kind="function">
      <type></type>
      <name>MIDIEvents</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1MIDIEvents.html</anchorfile>
      <anchor>a75f8783651a6a7462121b6a8aebc0355</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MIDIEvents</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1MIDIEvents.html</anchorfile>
      <anchor>a012e226c6e26200751edb937be842521</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; juce::Array&lt; MidiNote * &gt;, juce::Array&lt; MidiControllerEvent * &gt; &gt;</type>
      <name>pasteIntoClip</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1MIDIEvents.html</anchorfile>
      <anchor>a1b58e02b8ee6c0b5ecd0c0dec0bf4be0</anchor>
      <arglist>(MidiClip &amp;, const juce::Array&lt; MidiNote * &gt; &amp;selectedNotes, const juce::Array&lt; MidiControllerEvent * &gt; &amp;selectedEvents, TimePosition cursorPosition, const std::function&lt; BeatPosition(BeatPosition)&gt; &amp;snapBeat, int destController) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1MIDIEvents.html</anchorfile>
      <anchor>a33e394ccf85cc2cc1481d3aa6b69bc8c</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1MIDIEvents.html</anchorfile>
      <anchor>ae3179b071e4302d9007657da52f29b5a</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1MIDIEvents.html</anchorfile>
      <anchor>a2b8ac2e249e6721e16dd1ca7831b15da</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; juce::ValueTree &gt;</type>
      <name>notes</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1MIDIEvents.html</anchorfile>
      <anchor>a4ef3f8f6e1349b35cdf9fa45d1eb20f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; juce::ValueTree &gt;</type>
      <name>controllers</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1MIDIEvents.html</anchorfile>
      <anchor>a2ab455730da80ea425d5182c0ef5fa2e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MidiExpression</name>
    <filename>structtracktion_1_1engine_1_1MidiExpression.html</filename>
    <member kind="function">
      <type></type>
      <name>MidiExpression</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiExpression.html</anchorfile>
      <anchor>a70b516fb2a7c9e3ba02d08ee6885147e</anchor>
      <arglist>(const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getBeatPosition</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiExpression.html</anchorfile>
      <anchor>a10bce12d20890622cafbf25b8001d682</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBeatPosition</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiExpression.html</anchorfile>
      <anchor>a840dbaa7532649a517ee872911b6164a</anchor>
      <arglist>(BeatPosition newBeat, juce::UndoManager *um)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getValue</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiExpression.html</anchorfile>
      <anchor>acda39859094aed3920b126425cde2f8c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiExpression.html</anchorfile>
      <anchor>aa039d2c3a654c55141b8fd8c21e371c6</anchor>
      <arglist>(float newValue, juce::UndoManager *um)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>noteHasExpression</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiExpression.html</anchorfile>
      <anchor>a0711e18c8e20d7ba9e0e94a37b02f344</anchor>
      <arglist>(const juce::ValueTree &amp;noteState) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>noteHasExpression</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiExpression.html</anchorfile>
      <anchor>a48e24946aa14792d6dae7799e772bbef</anchor>
      <arglist>(const juce::ValueTree &amp;noteState, const juce::Identifier &amp;type) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>listHasExpression</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiExpression.html</anchorfile>
      <anchor>a5a9f385a67844e9622c1b70888cbdc1c</anchor>
      <arglist>(const MidiList &amp;midiList) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isExpression</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiExpression.html</anchorfile>
      <anchor>a542d5855c14be6e01169cdf5e9608d81</anchor>
      <arglist>(const juce::Identifier &amp;type) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>createAndAddExpressionToNote</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiExpression.html</anchorfile>
      <anchor>a21bc20c78701d6d2a03e9ad26c4a0aa2</anchor>
      <arglist>(juce::ValueTree &amp;noteState, const juce::Identifier &amp;expressionType, BeatPosition beat, float value, juce::UndoManager *um)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiExpression.html</anchorfile>
      <anchor>aaf6846224b9b7d3a592571071317ed12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MidiID</name>
    <filename>structtracktion_1_1engine_1_1MidiID.html</filename>
    <member kind="variable">
      <type>uint16_t</type>
      <name>manufacturer</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiID.html</anchorfile>
      <anchor>a25dc8bd0c6c127d951caf0fb76da7785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>family</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiID.html</anchorfile>
      <anchor>a96961e9c71c5e7129df18d5eab07eb65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>model</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiID.html</anchorfile>
      <anchor>a494c3b5f8b0544d4c08999d30855c795</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>version</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiID.html</anchorfile>
      <anchor>a5538b297079084be3ec1970c14795e13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::InputDeviceInstance::MidiInputDestination</name>
    <filename>structtracktion_1_1engine_1_1InputDeviceInstance_1_1MidiInputDestination.html</filename>
    <base>tracktion::engine::InputDeviceInstance::Destination</base>
    <member kind="function">
      <type></type>
      <name>MidiInputDestination</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1MidiInputDestination.html</anchorfile>
      <anchor>a45a3476455b69d8cbebe5d7c422b14d8</anchor>
      <arglist>(InputDeviceInstance &amp;i, juce::ValueTree v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiInputDestination</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1MidiInputDestination.html</anchorfile>
      <anchor>a989c54f6bd7d8e92168215d4982d16cb</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MidiInputDevice</name>
    <filename>classtracktion_1_1engine_1_1MidiInputDevice.html</filename>
    <base>tracktion::engine::InputDevice</base>
    <class kind="struct">tracktion::engine::MidiInputDevice::MidiKeyChangeDispatcher</class>
    <class kind="struct">tracktion::engine::MidiInputDevice::NoteFilterRange</class>
    <member kind="enumeration">
      <type></type>
      <name>MergeMode</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a43580ddbc607e05168cd78e36f9df151</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1MidiInputDevice.html" anchor="a43580ddbc607e05168cd78e36f9df151af9f90eeaf400d228facde6bc48da5cfb">always</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1MidiInputDevice.html" anchor="a43580ddbc607e05168cd78e36f9df151ac7561db7a418dd39b2201dfe110ab4a4">never</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1MidiInputDevice.html" anchor="a43580ddbc607e05168cd78e36f9df151ad57c24f3fe52d16e7169b912dd647f0d">optional</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiInputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a8806396a17e99f821ec492a0a29abb3d</anchor>
      <arglist>(Engine &amp;, juce::String type, juce::String name, juce::String deviceID)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiInputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a4effc1aad9c81088dd37001a9abca084</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::String</type>
      <name>openDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a570485b98ca1b9b45ff29cc9b172905b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>closeDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ae9e47473d1c3b00327c44bf359bd38e5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a8a223b5d4d720b32649f179f936ec07c</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a1c9964cd5416a95a5b735ca50d8823f7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>MidiChannel</type>
      <name>getChannelToUse</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a73db6db972ff366856ca83b743cf812a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChannelToUse</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>af708bc1ee665e7f73a7697c8d378b9b3</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getProgramToUse</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ac8df171fc1a16d7f15f25d9015c58c01</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProgramToUse</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a483a05ce0c4411dcb08b600715ef0ac0</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBankToUse</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a2bae4a1dd5569b198ee18c7a86339a91</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBankToUse</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>acabb00e639688f26f2b07529a3ce29e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChannelAllowed</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a69ab1f952e69559982c9a074db62d776</anchor>
      <arglist>(int midiChannel, bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChannelAllowed</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a22823aaafbc2b4b3ffb08fa3a4f4ee6f</anchor>
      <arglist>(int midiChannel) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoteFilterRange</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ac20f7e9aece996a7d751270afd7e8eca</anchor>
      <arglist>(NoteFilterRange)</arglist>
    </member>
    <member kind="function">
      <type>NoteFilterRange</type>
      <name>getNoteFilterRange</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a2288e467a5a56c346a6364c082d3f7b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOverridingNoteVelocities</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a04295a44fbda130b92da8d073619d091</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOverridingNoteVelocities</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a443440721d3b1a55250ae09d478fdc64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setManualAdjustmentMs</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a79d32ff23ac919c205c6e23bbf8b737b</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getManualAdjustmentMs</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>aeb9f222fb2fbe4f965336b8a283719ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimumLengthMs</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a7fd55f69194ac2f38639e332cf4baaf1</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMinimumLengthMs</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a909e212317391cb7a89d159b1596c51d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMPEDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ac64e0e77fb863a2a1667522d4ff9f83c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>masterTimeUpdate</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a29d39a073f1bf0cdd7eff6b5887d2b36</anchor>
      <arglist>(double time) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connectionStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ac3e2c2055df510bb1d7b5845c12c946c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>handleIncomingMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a2fed10c348883266a3b35d989d0ac37d</anchor>
      <arglist>(juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a638194bac0d31955d49cb4390c0376af</anchor>
      <arglist>(MidiInputDeviceInstanceBase *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>af21702b004986b6779f9abf7c1615995</anchor>
      <arglist>(MidiInputDeviceInstanceBase *)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>loadProps</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a78ac21a98852abd7f592ad4e30b7916c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>addMidiAsTransaction</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ab6c11142016e0ddb0f5da06a1670f73a</anchor>
      <arglist>(Edit &amp;, EditItemID targetID, Clip *takeClip, juce::MidiMessageSequence, TimeRange markedRange, MergeMode, MidiChannel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a671c3aaae21a9aaa96cb75bed408cc2f</anchor>
      <arglist>(juce::MidiInput *, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ade5c87f9a1415977a0a7cae638024668</anchor>
      <arglist>(const juce::MidiMessage &amp;, MPESourceID)=0</arglist>
    </member>
    <member kind="function">
      <type>RetrospectiveMidiBuffer *</type>
      <name>getRetrospectiveMidiBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a22e5f2f4785bcc7c7c4fd49a9b05f208</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateRetrospectiveBufferLength</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a7bb12110306747baf8b83d985c003428</anchor>
      <arglist>(double length) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAdjustSecs</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a81fad6bdcf8a1652f4c873bbd77e060f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AudioTrack * &gt;</type>
      <name>getDestinationTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>aa0c7e5b591e5d0e43b5c24d254460e4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MidiChannel</type>
      <name>getMidiChannelFor</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ae55980a90112e5477ebd773ea36ceb56</anchor>
      <arglist>(int rawChannelNumber) const</arglist>
    </member>
    <member kind="function">
      <type>MPESourceID</type>
      <name>getMPESourceID</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ad3c187990f859611ca82dc660a6ae24d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mergeRecordings</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>af81a0e0cbb690faf6056a323be1865a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>recordingEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a969cac9b2abfdad1923337343a51d752</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>replaceExistingClips</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ad956245f3c05f39b1e48ca3583460a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>recordToNoteAutomation</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ad71ca838e49a3b0e2cbeff5c7aa1661f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QuantisationType</type>
      <name>quantisation</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>aa849858a9c4ee83e61dc70eb7544587a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::MidiKeyboardState</type>
      <name>keyboardState</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a92fdbc6a44b121b8dd779bee41d7ef02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleNoteOn</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a056385f0e3fd561a9e810df3660ccfa4</anchor>
      <arglist>(juce::MidiKeyboardState *, int midiChannel, int midiNoteNumber, float velocity) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleNoteOff</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ab9da34a87709a5cd8bd2d3219021cb10</anchor>
      <arglist>(juce::MidiKeyboardState *, int midiChannel, int midiNoteNumber, float velocity) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a47f1d3f89aba875299833a1326cf3767</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendNoteOnToMidiKeyListeners</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a76d203731e714252fbad0f30e536bc8b</anchor>
      <arglist>(juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loadMidiProps</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>af2daccc5a74e987394e8ccdd65886a31</anchor>
      <arglist>(const juce::XmlElement *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>saveMidiProps</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>af55f702d44d334214c8843732d45b9a3</anchor>
      <arglist>(juce::XmlElement &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendMessageToInstances</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a0bed9d732d79b17083f1a568528b9fe7</anchor>
      <arglist>(const juce::MidiMessage &amp;, MPESourceID)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::atomic&lt; double &gt;</type>
      <name>adjustSecs</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>aa5d27c1d645464b6d0c1e97683373677</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>manualAdjustMs</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a9140713165922507a91050866b0b57ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>minimumLengthMs</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>acc634ddd87bd978fa3af740f704f32af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>overrideNoteVels</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>aa6285b478f3f9b68d77ed3e51f2f9f9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>eventReceivedFromDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>abbab15e269157e5ba919e976bf4b6793</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::BigInteger</type>
      <name>disallowedChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>af211971d84f0fa82157a329fd15f4263</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MidiChannel</type>
      <name>channelToUse</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a7cbdf266bb8e248d64a11a4bb0a981c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>programToUse</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>af5713b8322c4bc04982772dead639fa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>bankToUse</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ac2335abbf544a81c392f7bcef88185f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NoteFilterRange</type>
      <name>noteFilterRange</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a3050599c68f831cf29206e7fd4b4a6f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MPESourceID</type>
      <name>midiSourceID</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>aacfcf0169f97ae225dc9028ff1abccf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; NoteDispatcher &gt;</type>
      <name>noteDispatcher</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ab5af409ec1e2680dd7c85ea79efe35b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>lastNoteOns</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a03aaee72ea3e46f9c0584d80959c6788</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CriticalSection</type>
      <name>noteLock</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a356118b2214c57fc71b1b519e42ac71c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>keysDown</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a24f33f8fe9630014b1a8e3ebec11e8b8</anchor>
      <arglist>[128]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>keysUp</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a663fba4a8f5a9e7142fe3ebc26bfe402</anchor>
      <arglist>[128]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>keyDownVelocities</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>abcae49fcd17c811726b2616977157cd0</anchor>
      <arglist>[128]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::SharedResourcePointer&lt; MidiKeyChangeDispatcher &gt;</type>
      <name>midiKeyChangeDispatcher</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a202bba105f4204abb1988efd9f081eac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CriticalSection</type>
      <name>instanceLock</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>a74cd693f7e2b7e21e25d9a64ed8bd188</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::Array&lt; MidiInputDeviceInstanceBase * &gt;</type>
      <name>instances</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>aa7d4cd2afe3372ee721f05495fc369cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; RetrospectiveMidiBuffer &gt;</type>
      <name>retrospectiveBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDevice.html</anchorfile>
      <anchor>ae9fff67f6cbf340f0ed224ced0a76023</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MidiInputDeviceNode</name>
    <filename>classtracktion_1_1engine_1_1MidiInputDeviceNode.html</filename>
    <base>tracktion::graph::Node</base>
    <base>tracktion::engine::InputDeviceInstance::Consumer</base>
    <member kind="function">
      <type></type>
      <name>MidiInputDeviceNode</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDeviceNode.html</anchorfile>
      <anchor>abaea9d70cb1bb05f577592afb597f81f</anchor>
      <arglist>(InputDeviceInstance &amp;, MidiInputDevice &amp;, MPESourceID, tracktion::graph::PlayHeadState &amp;, EditItemID targetID)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiInputDeviceNode</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDeviceNode.html</anchorfile>
      <anchor>a4767d3d86246a23eadba79849426189a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDeviceNode.html</anchorfile>
      <anchor>ab7ce6eb6b390bf26d7d1734e5519dfc9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDeviceNode.html</anchorfile>
      <anchor>a66f2d7d07da3109b78f44bbd62989666</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDeviceNode.html</anchorfile>
      <anchor>a04a7782ebe897e38414ad486927f6def</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDeviceNode.html</anchorfile>
      <anchor>aa3d6d513a0f84bfc117ea5e689a26a55</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDeviceNode.html</anchorfile>
      <anchor>a73f21fd03d02a99a0273b02d9c73c362</anchor>
      <arglist>(const juce::MidiMessage &amp;, MPESourceID) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>discardRecordings</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiInputDeviceNode.html</anchorfile>
      <anchor>ac416d540f441560954fed9eddbd1ddda</anchor>
      <arglist>(EditItemID) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MidiInputDevice::MidiKeyChangeDispatcher</name>
    <filename>structtracktion_1_1engine_1_1MidiInputDevice_1_1MidiKeyChangeDispatcher.html</filename>
    <class kind="struct">tracktion::engine::MidiInputDevice::MidiKeyChangeDispatcher::Listener</class>
    <member kind="variable">
      <type>juce::ListenerList&lt; Listener &gt;</type>
      <name>listeners</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiInputDevice_1_1MidiKeyChangeDispatcher.html</anchorfile>
      <anchor>a5036cfb14302bd53468938b0eb4071a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>juce::SharedResourcePointer&lt; MidiKeyChangeDispatcher &gt;</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiInputDevice_1_1MidiKeyChangeDispatcher.html</anchorfile>
      <anchor>a7e35dc50d90e29ac89a752f1a053be8d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MidiLearnState</name>
    <filename>classtracktion_1_1engine_1_1MidiLearnState.html</filename>
    <class kind="struct">tracktion::engine::MidiLearnState::Listener</class>
    <class kind="struct">tracktion::engine::MidiLearnState::ScopedChangeCaller</class>
    <member kind="enumeration">
      <type></type>
      <name>ChangeType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiLearnState.html</anchorfile>
      <anchor>ac813f7bccffc6d29c9dac1049cf2de11</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>added</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiLearnState.html</anchorfile>
      <anchor>ac813f7bccffc6d29c9dac1049cf2de11a001466d294164af9d2d367c161e4a7e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>removed</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiLearnState.html</anchorfile>
      <anchor>ac813f7bccffc6d29c9dac1049cf2de11a0c127c58a22b2a20a7cd9e4624954898</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>added</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiLearnState.html</anchorfile>
      <anchor>ac813f7bccffc6d29c9dac1049cf2de11a001466d294164af9d2d367c161e4a7e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>removed</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiLearnState.html</anchorfile>
      <anchor>ac813f7bccffc6d29c9dac1049cf2de11a0c127c58a22b2a20a7cd9e4624954898</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiLearnState</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiLearnState.html</anchorfile>
      <anchor>acbc17c9fddd7cac7ec2e17d06054ec48</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiLearnState</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiLearnState.html</anchorfile>
      <anchor>acb4da49cdd3392df50e91322a76872e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActive</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiLearnState.html</anchorfile>
      <anchor>ac57c1be7e1ca7fcf1f0c95caf5fbbe75</anchor>
      <arglist>(bool shouldBeActive)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiLearnState.html</anchorfile>
      <anchor>a66df98b13132261b5a05b64bd5847e48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assignmentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiLearnState.html</anchorfile>
      <anchor>a4fe5e5e24dacccd90bc8a392422c78d9</anchor>
      <arglist>(ChangeType t)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiLearnState.html</anchorfile>
      <anchor>a24b191a4b5e65f9a38abf44f47ea3111</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MidiList</name>
    <filename>classtracktion_1_1engine_1_1MidiList.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>NoteAutomationType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>ac8803872ee6d1e9b3569728ccdbb5000</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1MidiList.html" anchor="ac8803872ee6d1e9b3569728ccdbb5000a334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1MidiList.html" anchor="ac8803872ee6d1e9b3569728ccdbb5000a63973cd3ad7ccf2c8d5dce94b215f683">expression</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TimeBase</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a9d9af5294100f73961a88ccca2dc3394</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1MidiList.html" anchor="a9d9af5294100f73961a88ccca2dc3394a783e8e29e6a8c3e22baa58a19420eb4f">seconds</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1MidiList.html" anchor="a9d9af5294100f73961a88ccca2dc3394a1e4cb5f584d055a0992385c1b2155786">beats</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1MidiList.html" anchor="a9d9af5294100f73961a88ccca2dc3394adedba50d634ac3088c83b9cbdc6fc2ac">beatsRaw</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiList</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>abaa4fd361419526a20c156fbe3a71fc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiList</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a37add9b43d5c7030944745e23ec3fb08</anchor>
      <arglist>(const juce::ValueTree &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiList</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a1301ec3e679b9ab86eae9f8ed6ca3c3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a33529e5e94e1ca05767f16b2c19d5c8f</anchor>
      <arglist>(const MidiList &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a59b100651fe340c27fd0a7a7cc849f1b</anchor>
      <arglist>(const MidiList &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; MidiNote * &gt; &amp;</type>
      <name>getNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a9bb78cac3c03fdcc8660647f3cdbdd10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; MidiControllerEvent * &gt; &amp;</type>
      <name>getControllerEvents</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a9c6223fab704ca723360146ab423c47f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; MidiSysexEvent * &gt; &amp;</type>
      <name>getSysexEvents</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a686a91df4a15ace8f268f3ab3a8eff52</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAttachedToClip</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a751579f903d91426dcb6cdd2dbc4181a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCompList</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a505085f5813fb81c60821a26d7e0cedc</anchor>
      <arglist>(bool shouldBeComp) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCompList</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a492d58004556dcb263fb43629f0705f7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>MidiChannel</type>
      <name>getMidiChannel</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a3d92a7c95d67c652c2ac6e91652e0ff8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidiChannel</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a52a9875df7be2c30d27ab17da578f191</anchor>
      <arglist>(MidiChannel chanNum)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getImportedMidiTrackName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>aca3544fd8356e2b76bb4a68a6c763a5c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getImportedFileName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a9212abd246d99e89f4c85ed17f7116d2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImportedFileName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a4faf0484ae8d23d07da7463dca844340</anchor>
      <arglist>(const juce::String &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a65b2909efdf972966a26232dc3c1be7e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>aaef73e25385fd7900189bb569cc8da96</anchor>
      <arglist>(juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trimOutside</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>ac7ed11dc9f18694f2b5be6036ec005ed</anchor>
      <arglist>(BeatPosition firstBeat, BeatPosition lastBeat, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveAllBeatPositions</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a2a1f34cc4518584ff8d3e840cfa5d5a8</anchor>
      <arglist>(BeatDuration deltaBeats, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rescale</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>acf7fdbd2a61b5891bea95313973799d1</anchor>
      <arglist>(double factor, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a9ff51a9600bf0d4e366d52c412f9098c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MidiNote *</type>
      <name>getNote</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a01f4f436fa4f9e02d382267e27644824</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>MidiNote *</type>
      <name>getNoteFor</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a55761d7a7324e4e04fca003deb116e00</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; int &gt;</type>
      <name>getNoteNumberRange</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>acf865b3c52a8420ce1c596abd04ce793</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getFirstBeatNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>ac9df7db27bba04b52ca7305bbc4c1775</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getLastBeatNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a860ede1eec55127ef022f4257f439e05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MidiNote *</type>
      <name>addNote</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a0c294fcec2103277b01827e792effe09</anchor>
      <arglist>(const MidiNote &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>MidiNote *</type>
      <name>addNote</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a01b53405895f4f5708bb27add26c53d9</anchor>
      <arglist>(int pitch, BeatPosition startBeat, BeatDuration lengthInBeats, int velocity, int colourIndex, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeNote</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>adce9549c29eb056759f82bb79e4061b1</anchor>
      <arglist>(MidiNote &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a07fe3f94cb3c67479bde0372cf3fe384</anchor>
      <arglist>(juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumControllerEvents</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a825bf468db5e2b42bcff79060092fc32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MidiControllerEvent *</type>
      <name>getControllerEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a3219b0a371142c3f767fdf29e202eff2</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>MidiControllerEvent *</type>
      <name>getControllerEventAt</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a60fc47a44576bf2106a897a1af44c1e3</anchor>
      <arglist>(BeatPosition, int controllerType) const</arglist>
    </member>
    <member kind="function">
      <type>MidiControllerEvent *</type>
      <name>addControllerEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a008c4a55f40c5278af5f4e1ab28fa816</anchor>
      <arglist>(const MidiControllerEvent &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>MidiControllerEvent *</type>
      <name>addControllerEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>ae3e80454f92af776f54cf7539132d47a</anchor>
      <arglist>(BeatPosition, int controllerType, int controllerValue, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>MidiControllerEvent *</type>
      <name>addControllerEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a59fe458b872fdef2849148fe4182999c</anchor>
      <arglist>(BeatPosition, int controllerType, int controllerValue, int metadata, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeControllerEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a059f1e5499f188a86e294b45d6df8365</anchor>
      <arglist>(MidiControllerEvent &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllControllers</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a8133cb020e776bd0a5af742c0ef0837c</anchor>
      <arglist>(juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsController</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a9666c274c069bd7f20f828ae2dae0f33</anchor>
      <arglist>(int controllerType) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setControllerValueAt</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a58bf8d2c14f2f36ecba21e936c82461d</anchor>
      <arglist>(int controllerType, BeatPosition beatNumber, int newValue, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeControllersBetween</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a0215367aa50f9a4b40ec7c61ed1701c2</anchor>
      <arglist>(int controllerType, BeatPosition beatNumberStart, BeatPosition beatNumberEnd, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertRepeatedControllerValue</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a1d6c665c4093b0ec1f759d3c166c11ab</anchor>
      <arglist>(int type, int startVal, int endVal, BeatRange rangeBeats, BeatDuration intervalBeats, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSysExEvents</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>afa0f4857ad6c4c214bb8eb5e8e589745</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MidiSysexEvent *</type>
      <name>getSysexEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a982584c4105ab449b7ca81e0417f7548</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>MidiSysexEvent *</type>
      <name>getSysexEventUnchecked</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a4db38ccb88703b1b1b0efa6491eb4346</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>MidiSysexEvent *</type>
      <name>getSysexEventFor</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a5cb54628b74986fc7c78d879d3cce03a</anchor>
      <arglist>(const juce::ValueTree &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>MidiSysexEvent &amp;</type>
      <name>addSysExEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a35b1fe870eb7e8c5c3c2deed88873801</anchor>
      <arglist>(const juce::MidiMessage &amp;, BeatPosition, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSysExEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a03e5bc8d0892b3e7d1990c1549195412</anchor>
      <arglist>(const MidiSysexEvent &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllSysexes</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a45ee9d249642ab6f205780f850c8cb74</anchor>
      <arglist>(juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>importMidiSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a854f6f7589d927026c59b65a4e8e69a3</anchor>
      <arglist>(const juce::MidiMessageSequence &amp;, Edit *, TimePosition editTimeOfListTimeZero, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>importFromEditTimeSequenceWithNoteExpression</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>af82f426d3ef3e22cbcacff965af90f5b</anchor>
      <arglist>(const juce::MidiMessageSequence &amp;, Edit *, TimePosition editTimeOfListTimeZero, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>juce::MidiMessageSequence</type>
      <name>exportToPlaybackMidiSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a5aef56aa2d47fd15ede7e4fdf53f9910</anchor>
      <arglist>(MidiClip &amp;, TimeBase, bool generateMPE) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>createMidiList</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>aa0eb0519b532181b8b1fdff9d485113d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::MidiMessageSequence</type>
      <name>createDefaultPlaybackMidiSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a05912f0e9503a6deb00a147ff48ec18b</anchor>
      <arglist>(const MidiList &amp;, MidiClip &amp;, TimeBase, bool generateMPE)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>looksLikeMPEData</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a949a5528b4cedbf8d5b6728bb61c7e88</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>fileHasTempoChanges</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>adc2a24e6ee18148cc9d5ccc26ab3cc2e</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>readSeparateTracksFromFile</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a048a692087cb82f34f2ce925cb10cf4d</anchor>
      <arglist>(const juce::File &amp;, juce::OwnedArray&lt; MidiList &gt; &amp;lists, juce::Array&lt; BeatPosition &gt; &amp;tempoChangeBeatNumbers, juce::Array&lt; double &gt; &amp;bpms, juce::Array&lt; int &gt; &amp;numerators, juce::Array&lt; int &gt; &amp;denominators, BeatDuration &amp;songLength, bool importAsNoteExpression)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sortMidiEventsByTime</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a2a762b601f91dcca44afb866f4c14990</anchor>
      <arglist>(juce::Array&lt; Type &gt; &amp;notes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sortMidiEventsByNoteNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>acb206fa121b39b40ca4d273841c89c24</anchor>
      <arglist>(juce::Array&lt; Type &gt; &amp;notes)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>ad44489c6e907793cc51b4b2325d0975f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const double</type>
      <name>defaultInitialTimbreValue</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a4832bde51da98ce8e6e80dd5f194669c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const double</type>
      <name>defaultInitialPitchBendValue</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a5671fc7920349bace86165355a16e611</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const double</type>
      <name>defaultInitialPressureValue</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiList.html</anchorfile>
      <anchor>a6a92751b3e24ab573d324fd4f6f85989</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MidiMessageArray</name>
    <filename>structtracktion_1_1engine_1_1MidiMessageArray.html</filename>
    <member kind="typedef">
      <type>tracktion::engine::MidiMessageWithSource</type>
      <name>MidiMessageWithSource</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a09c500d204b93ed9142c2d091ec1d478</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>tracktion::engine::MPESourceID</type>
      <name>MPESourceID</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a73e5a7d5c52059c42446e68b987adadd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>adf97135584508bac3281e49db0db3f08</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNotEmpty</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a209fe9fac127110837e91341d39f980a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>aeaa6eaabb559a58d5afbc91614f1ed1a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>MidiMessageWithSource &amp;</type>
      <name>operator[]</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>ae083cd0b7c80a86469e429f65872fbbb</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const MidiMessageWithSource &amp;</type>
      <name>operator[]</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>ab37c31b95f7054cbf4009e3815de3777</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>MidiMessageWithSource *</type>
      <name>begin</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>ac841f090bc06d82b99fe79957641b2be</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const MidiMessageWithSource *</type>
      <name>begin</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a817660c4a5af7c3e882bab9abb4d2889</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>MidiMessageWithSource *</type>
      <name>end</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a869b402bdf073a8e377ee256e23f70ca</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const MidiMessageWithSource *</type>
      <name>end</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>ab62b7abe0e49fa564d2cfd4f0b7e4093</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a69baacf2f9a666eaa56030cc37fdae93</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapWith</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a4ad566f2628c79afa924eabbc0cab29c</anchor>
      <arglist>(MidiMessageArray &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a072d6a0acb03b626b62b5de7b3028c02</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMidiMessage</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>ad765ea363a7424d9b5607a6307c9c8eb</anchor>
      <arglist>(const juce::MidiMessage &amp;m, MPESourceID mpeSourceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMidiMessage</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>ac442b04a223d3c85ac0b2636a07fbed3</anchor>
      <arglist>(juce::MidiMessage &amp;&amp;m, MPESourceID mpeSourceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMidiMessage</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>aead0d90284f06e08b4f74c62cc72222d</anchor>
      <arglist>(const juce::MidiMessage &amp;m, double time, MPESourceID mpeSourceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMidiMessage</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>acf0c0f425616038a8362c50056491739</anchor>
      <arglist>(juce::MidiMessage &amp;&amp;m, double time, MPESourceID mpeSourceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a05dca9f924a73eb563950c651ea2a17a</anchor>
      <arglist>(const MidiMessageWithSource &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a796055ec9946abd9c571cd2891994f3a</anchor>
      <arglist>(MidiMessageWithSource &amp;&amp;m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>ae9491a15ff425a1e709b22a2c88ce126</anchor>
      <arglist>(const MidiMessageWithSource &amp;m, double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a42ae4580371a3fe36392915c7c8a5711</anchor>
      <arglist>(MidiMessageWithSource &amp;&amp;m, double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyFrom</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a627916fdf6200f13144833744b0b3f3b</anchor>
      <arglist>(const MidiMessageArray &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeFrom</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a466665e28461e69d2ebab039856cbbaf</anchor>
      <arglist>(const MidiMessageArray &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeFromWithOffset</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a1d55717e5deee51b4dba61cb938553d9</anchor>
      <arglist>(const MidiMessageArray &amp;source, double delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeFromAndClear</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>aa152abe6a0163c5eb9119a85dfdc40ab</anchor>
      <arglist>(MidiMessageArray &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeFromAndClearWithOffset</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a93de1ef5839a4c7a15811bc493bc0f9b</anchor>
      <arglist>(MidiMessageArray &amp;source, double delta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeFromAndClearWithOffsetAndLimit</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>ad5a530e4c8b258cbd9a6a592a5dc9886</anchor>
      <arglist>(MidiMessageArray &amp;source, double delta, int numItemsToTake)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeFromAndClear</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>adbfc36cffe4967d7917312dfc859c98d</anchor>
      <arglist>(juce::Array&lt; juce::MidiMessage &gt; &amp;source, MPESourceID mpeSourceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeNoteOnsAndOffs</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a59dd16222703446e0691dcf4fdeff170</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeIf</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>ab42eb1e63ffdb2894c52f8cc9954473a</anchor>
      <arglist>(Predicate &amp;&amp;pred)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToTimestamps</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>ad20f90468488aec6ec85eab841325809</anchor>
      <arglist>(double delta) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToNoteNumbers</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>ae4be093a1f9eea8817cf23651494def0</anchor>
      <arglist>(int delta) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiplyVelocities</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a596d4fc4ea11462a03ea2eb74770630b</anchor>
      <arglist>(float factor) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sortByTimestamp</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>aead38b040b061e3817033b2064527202</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a83f0641fa5c9a8b2be9b272faf45308d</anchor>
      <arglist>(int size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tracktion::engine::MPESourceID</type>
      <name>createUniqueMPESourceID</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>af13a796b8cd3312a329f69f7f168eeea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isAllNotesOff</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a25216b4bb39dd99cfa5f7c5bef089f95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr tracktion::engine::MPESourceID</type>
      <name>notMPE</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageArray.html</anchorfile>
      <anchor>a399bfa0286481f0e74a03904a45e9c01</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MidiMessageWithSource</name>
    <filename>structtracktion_1_1engine_1_1MidiMessageWithSource.html</filename>
    <member kind="function">
      <type></type>
      <name>MidiMessageWithSource</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageWithSource.html</anchorfile>
      <anchor>af19e35dc80432e5e29c10926fe60f61f</anchor>
      <arglist>(const juce::MidiMessage &amp;m, MPESourceID source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiMessageWithSource</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageWithSource.html</anchorfile>
      <anchor>a44ce6123c1f58fc15253792801c17dd7</anchor>
      <arglist>(juce::MidiMessage &amp;&amp;m, MPESourceID source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiMessageWithSource</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageWithSource.html</anchorfile>
      <anchor>afef54e88545cbdc4a15a3fe9e6f9cdb9</anchor>
      <arglist>(const MidiMessageWithSource &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiMessageWithSource</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageWithSource.html</anchorfile>
      <anchor>adaac3f88e6a8c51101ed5b855fef3050</anchor>
      <arglist>(MidiMessageWithSource &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>MidiMessageWithSource &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageWithSource.html</anchorfile>
      <anchor>a6211d4be4b72fd9a35107921fbf5178e</anchor>
      <arglist>(const MidiMessageWithSource &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>MidiMessageWithSource &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageWithSource.html</anchorfile>
      <anchor>a5120dc0b119dc2fc7fc376cc306da762</anchor>
      <arglist>(MidiMessageWithSource &amp;&amp;)=default</arglist>
    </member>
    <member kind="variable">
      <type>MPESourceID</type>
      <name>mpeSourceID</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiMessageWithSource.html</anchorfile>
      <anchor>a06e029b76a5f5bf656be733a6b65db4f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MidiModifierPlugin</name>
    <filename>classtracktion_1_1engine_1_1MidiModifierPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>MidiModifierPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a2498367d90328f1a34a8e646814afd54</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiModifierPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a81a09783d27168b3b0a8359c0aeec1ad</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>aa5288ca563a411d68bfc0208ef6a50ed</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a55e92c1e3efcc3736d3f0fa24fba31d7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a1a7b67a5316543ebe08d1326081c6df3</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>aef29b3457a72181b3a4cb790cf2f50ea</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a9a37ac3affa24e44eadbb39512f5f48e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a67b2389039ee40499368a538df168408</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a2f2eaa62fd690719d29c2bd3b6dd9ea6</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getChannelNames</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>abfd0cd8347a2c0b0703de0cc9d19b5d0</anchor>
      <arglist>(juce::StringArray *, juce::StringArray *) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a49106f39dfb84689e620c0c07fd25e8b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a9930a09b93b1da5ef374a8b60e339bda</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a3ce8c37ae33c57a6903351a53d5085e0</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>ad18366cfce72e55096a53ce14a3d4455</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a90cbccdc7006bc5fd95bae9819941b42</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>getMaximumSemitones</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>af89d84ff05b4181094b52528dda3606a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a51561b9fed6cd947be0f3f5e55f03758</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>semitonesValue</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>a42b7a45862c4435ac33bb4673f70edda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>semitones</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>abcbff21b96079c58c28bdf9afd5bafe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiModifierPlugin.html</anchorfile>
      <anchor>aeb4c35041a1533082c1f5e16a03a1e18</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MidiNode</name>
    <filename>classtracktion_1_1engine_1_1MidiNode.html</filename>
    <base>tracktion::graph::Node</base>
    <base>tracktion::engine::TracktionEngineNode</base>
    <member kind="function">
      <type></type>
      <name>MidiNode</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNode.html</anchorfile>
      <anchor>a3039a29ea89454e30b3d1b757ed420de</anchor>
      <arglist>(std::vector&lt; juce::MidiMessageSequence &gt; sequences, MidiList::TimeBase, juce::Range&lt; int &gt; midiChannelNumbers, bool useMPE, juce::Range&lt; double &gt; editSection, LiveClipLevel, ProcessState &amp;, EditItemID, std::function&lt; bool()&gt; shouldBeMutedDelegate=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNode.html</anchorfile>
      <anchor>a475e61ba5375cb7d37769fe359d4cb81</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNode.html</anchorfile>
      <anchor>a44c72c71c09a25ee316fb643a2315f9d</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNode.html</anchorfile>
      <anchor>a6469010016db4342a026bf40e1c2b2f2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNode.html</anchorfile>
      <anchor>a7869b47af836495adbd14cbecdbc83a2</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::MidiNode</name>
    <filename>classtracktion_1_1graph_1_1MidiNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>MidiNode</name>
      <anchorfile>classtracktion_1_1graph_1_1MidiNode.html</anchorfile>
      <anchor>a6e88c30572d426d0e9719ce01fb325fa</anchor>
      <arglist>(juce::MidiMessageSequence sequenceToPlay)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1graph_1_1MidiNode.html</anchorfile>
      <anchor>ace3f0f37ab6e3f089300ed7a4627a3ba</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1graph_1_1MidiNode.html</anchorfile>
      <anchor>a564d8bf5327db1e3a3bf688ef504921a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1graph_1_1MidiNode.html</anchorfile>
      <anchor>a3fea6f54bc51df5a878ca6c6c18ca242</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1MidiNode.html</anchorfile>
      <anchor>af7d655bd40cc83ef49314560cbfbedaa</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MidiNote</name>
    <filename>classtracktion_1_1engine_1_1MidiNote.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>NoteEdge</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a32ac5c33fcafb16d56bd4e81528b4df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>startEdge</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a32ac5c33fcafb16d56bd4e81528b4df5a3d9f140845a64455bd90534d09777878</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>endEdge</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a32ac5c33fcafb16d56bd4e81528b4df5aa3f34e3bac4cf080e5f92bd84090501f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>startEdge</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a32ac5c33fcafb16d56bd4e81528b4df5a3d9f140845a64455bd90534d09777878</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>endEdge</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a32ac5c33fcafb16d56bd4e81528b4df5aa3f34e3bac4cf080e5f92bd84090501f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiNote</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a539a8aa6c1409761e51809de866912c1</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiNote</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a60c71531a52ec8ceb36e68eed5cb8ca7</anchor>
      <arglist>(MidiNote &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>aa210606ac2dd9951f1d247d0a2dd4b61</anchor>
      <arglist>(const MidiNote &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a96d444734d0d55e8503af5a8cf23ce92</anchor>
      <arglist>(const MidiNote &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getBeatPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a08d88f11545639d65c9bcd467a019fb4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getStartBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a64d22e12dc415e81bdaf6b5c6e42a24f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getEndBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a93240def469239b1a10a4581db7e8289</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>BeatDuration</type>
      <name>getLengthBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>ac4deb8f9c8702cf5e9c8b93a0cab3328</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>BeatRange</type>
      <name>getRangeBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>ac2aba752d16d341e36dbafc6101b5a97</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getPlaybackTime</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>ae2bd8d62e49bfbe9cbd7b4900f23afd9</anchor>
      <arglist>(NoteEdge, const MidiClip &amp;, const GrooveTemplate *) const</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getPlaybackBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>ae59cd79d0dda48bf6e0191086986f9ad</anchor>
      <arglist>(NoteEdge, const MidiClip &amp;, const GrooveTemplate *) const</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getQuantisedStartBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a327fc5e1f0d0cc03046ebfad67686598</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getQuantisedStartBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a91a0160d84f6e9ac3b5948f1bb27bc92</anchor>
      <arglist>(const MidiClip *) const</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getQuantisedEndBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a545b39724311e7f8661c5333bbf8b274</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getQuantisedEndBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>acbed41d685a317165b389cae72bee84b</anchor>
      <arglist>(const MidiClip *) const</arglist>
    </member>
    <member kind="function">
      <type>BeatDuration</type>
      <name>getQuantisedLengthBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>aeacad629335a67800fe997e1b681bf8c</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>BeatDuration</type>
      <name>getQuantisedLengthBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>ac42420ec6b2f7ac825aa1cd0338741ca</anchor>
      <arglist>(const MidiClip *) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getEditStartTime</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>accf9bc2c908acb9ce8fbaa11ffe0bdad</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getEditEndTime</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>ad6caf9353559c1e2b0fae90aa2b1d740</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getLengthSeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a4d92d51cd3e472e58aba0f41e86b3969</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>getEditTimeRange</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a83437e9f7f3c936964cf02a8e116c764</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStartAndLength</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a931f2931fb22d59a5211ed109e214cec</anchor>
      <arglist>(BeatPosition newStartBeat, BeatDuration newLengthInBeats, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNoteNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a45ebb99abaf2a3700e850519e2249248</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoteNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>ad088ffaaf39eccd8fe68cf8aff95cdeb</anchor>
      <arglist>(int newNoteNumber, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getVelocity</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>ac355dc8b1bbaee6b1a54e6962c8a51b4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a31e666d16b99706c0565a6b6a77ac2bf</anchor>
      <arglist>(int newVelocity, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getColour</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a997e4b8f1ee0f8a928c6d840714ff5f4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColour</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>addabe277f457974fb02440645fda5b1e</anchor>
      <arglist>(int newColourIndex, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMute</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a221a0b4004afd6e2471d75d0d98532ac</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMute</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>aab0af9bfa0e1126c8b341875aa8ecc0e</anchor>
      <arglist>(bool shouldMute, juce::UndoManager *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>createNote</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>ad7d8c4f158528bf01262b06ba0b95561</anchor>
      <arglist>(const MidiNote &amp;, BeatPosition newStart, BeatDuration newLength)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a05e6798346692c93fd73a240477481d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>MidiList</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>a00f07d9357a6bcb92fd73cab09de07f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend struct</type>
      <name>NoteChannelAssigner</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNote.html</anchorfile>
      <anchor>ad82a007dc3337c6aba02037777c1f618</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MidiNoteDispatcher</name>
    <filename>classtracktion_1_1engine_1_1MidiNoteDispatcher.html</filename>
    <member kind="function">
      <type></type>
      <name>MidiNoteDispatcher</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNoteDispatcher.html</anchorfile>
      <anchor>a63dfea522cadac3950088048a7255d1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiNoteDispatcher</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNoteDispatcher.html</anchorfile>
      <anchor>a69c713853768e281ec42eb592aadb0f3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidiDeviceList</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNoteDispatcher.html</anchorfile>
      <anchor>ac4ebb472857d4484264605c82269ea56</anchor>
      <arglist>(const juce::OwnedArray&lt; MidiOutputDeviceInstance &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dispatchPendingMessagesForDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNoteDispatcher.html</anchorfile>
      <anchor>a59bea3c7905ce0afc23544209a31ace4</anchor>
      <arglist>(TimePosition editTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>masterTimeUpdate</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNoteDispatcher.html</anchorfile>
      <anchor>a1bc497d4595b953e32767222a5daf790</anchor>
      <arglist>(TimePosition editTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNoteDispatcher.html</anchorfile>
      <anchor>a6c9e699ee4f6370bcbb51867363c9a0b</anchor>
      <arglist>(TimePosition editTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hiResTimerCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiNoteDispatcher.html</anchorfile>
      <anchor>ad5e3be11d72c846efcd78ee0f8e054b5</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MidiOutputDevice</name>
    <filename>classtracktion_1_1engine_1_1MidiOutputDevice.html</filename>
    <base>tracktion::engine::OutputDevice</base>
    <member kind="function">
      <type></type>
      <name>MidiOutputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ac471077e123342c4e837737106277778</anchor>
      <arglist>(Engine &amp;, juce::MidiDeviceInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiOutputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ab7eb82041ca9df5fa18d318356e74333</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>openDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>aea4fa748339de2530e89c5eda943e3fb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>aef3b55fbd91bded40cf08d76500a2765</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a7e863f64414447c3868bb8139f4b6ade</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a46dafc73a018836bad0255d6be5e599f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MidiOutputDeviceInstance *</type>
      <name>createInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ac2677c7ba89d0f37aac044a4b7c14789</anchor>
      <arglist>(EditPlaybackContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a1551d08939251b5b5b542911335b564d</anchor>
      <arglist>(Edit *, TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>start</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ab37d94d594a092b50cc292f426ce8392</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a43066365b758e971e1fb2606b8559d8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getNameForMidiNoteNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a244bbd4b2c00ccc3606ded23b1e285f2</anchor>
      <arglist>(int note, int midiChannel, bool useSharp=true) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnectedToExternalController</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a0d87ebf7a087fd8b3a02f71dff35c9c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExternalController</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>aa4d9c5c23d70a707cb26e3c23b6cc311</anchor>
      <arglist>(ExternalController *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeExternalController</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a515a4fa21a9d34ea8163f0065326d806</anchor>
      <arglist>(ExternalController *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMidiTC</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a6ae59cc4276f7924adbdc2b812959222</anchor>
      <arglist>(Edit *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSendingMMC</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a76aa716d5e554fe8b0ddccddfbe40005</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSendingMMC</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ae78949f10db2426e0e9317bfb5368abe</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSendingClock</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a272a1483ae46b0746dbaf1e9a230a974</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSendingClock</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>adbbe91deabd1761a8307ce1bb74fae15</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSendingTimecode</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a1b30fbca65880a6694e15105a6b3a1ae</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipSendingTimecode</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a922ab97a0d5f133b4ff282bb4eae65b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSendControllerMidiClock</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ae30ae3f87da44a1521be34ac8f754af5</anchor>
      <arglist>(bool b) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSendingControllerMidiClock</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>aa3836994eca22016cf624eed6c3bf88b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fireMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a2f0df87e1b638af4a9b801f805fcfbda</anchor>
      <arglist>(const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendNoteOffMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ae1be88d2e733022f32ed6bb16551a53a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getDeviceDelay</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a52c65fefc1e9fc833060dd6ca1a6cab1</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPreDelayMs</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ac1a3cb861eae726f138697c34bb9eb45</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreDelayMs</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>adfe8ed268a0ef6851c01344463ab2da2</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getProgramSets</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>aa5ce2fa2275dfa1f94b2dd9897748911</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCurrentSetIndex</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a68705498b7b34208a7a8c011ce14658a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentProgramSet</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a4ead22b1df589a20162676c09b68bfd0</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getCurrentProgramSet</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>af3c1b8950f5a0523648c1556ae86169c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getProgramName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a921a3762a05d278a7b061651a6e52795</anchor>
      <arglist>(int programNumber, int bank)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canEditProgramSet</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>afef3089aeb4b916dd8f89da016a222c1</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canDeleteProgramSet</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>aeadb6789e49b2fbea9c903067822ebce</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getBankName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ad4cebe1677d7746ee4b55b22f46c729d</anchor>
      <arglist>(int bank)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBankID</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a229306a46da25decedaffe1ee1cb92a3</anchor>
      <arglist>(int bank)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areMidiPatchesZeroBased</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a3a2900cd3937e2fc18a700fd9ebaa59c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MidiProgramManager &amp;</type>
      <name>getMidiProgramManager</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>aa8f8226f254b923bde44df45c368b609</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setControllerOffMessagesSent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a073fbb9cbbc6276860cbe3ec1f74c18c</anchor>
      <arglist>(Engine &amp;, bool)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getControllerOffMessagesSent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a8b2af61510611ff2ae72775f495d38db</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>sendMessageNow</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a4b2643589e18b1042673117ec7e55c55</anchor>
      <arglist>(const juce::MidiMessage &amp;message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>loadProps</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>af782b41e082e35cc0523eeb4a5e2ae28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>saveProps</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a120b889b53a7e9d0738dbed88d6120a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::MidiDeviceInfo</type>
      <name>deviceInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>affaca618c6713eca8b9e355c33c87e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>preDelayMillisecs</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>afab160a791e508ace223ea1750f4d67b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>audioAdjustmentDelay</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a00b973d814155eb894f4ccbbff6963d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; MidiTimecodeGenerator &gt;</type>
      <name>timecodeGenerator</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a9af8730fb93fe94b1ebbb343ba1e78b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; MidiClockGenerator &gt;</type>
      <name>midiClockGenerator</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a5ec7833373b287346756739d6a5cfc06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>sendTimecode</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a84986286c715413b6d2a24905f244405</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>sendMidiClock</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a909888364fd31e6887a642bf7063e086</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>playing</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a6baeca73ffe70f0fe33d0c00b5d9a851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::String</type>
      <name>programNameSet</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a57ccb502f166ad43e13bd0eac25a4b74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a6819f55b33dfe4d45131075832cbdd41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; juce::MidiOutput &gt;</type>
      <name>outputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a47f749016742cc5543c6c26b68ec7f73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>sendingMMC</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a736bffaec8352fff1de38c222ec1d296</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>sendControllerMidiClock</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ab8da81a25aafc7881c1ac1f727e68e05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>softDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a762a4e00656ad3c1196df2f5a83d1d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ExternalController *</type>
      <name>externalController</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a96d3b9ce3b1c9930de4b8ce9ea53ff5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::BigInteger</type>
      <name>midiNotesOn</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a7d59e0de80a7dee66acdcba90458b697</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::BigInteger</type>
      <name>channelsUsed</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a2bdf123bfcfcf1bef1ecab223c04f1a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>sustain</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ae2f8cd8f87e011ba5c4e1107c92d643e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MidiMessageArray</type>
      <name>midiMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>a2cbf9c2536ac12c302646806e09b6b13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CriticalSection</type>
      <name>noteOnLock</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>ae44929ddd116a33786d198b91236ae94</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="protected">
      <type>friend class</type>
      <name>MidiOutputDeviceInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDevice.html</anchorfile>
      <anchor>aea51d0512d9e616d5d4fbde19b432506</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MidiOutputDeviceInstance</name>
    <filename>classtracktion_1_1engine_1_1MidiOutputDeviceInstance.html</filename>
    <base>tracktion::engine::OutputDeviceInstance</base>
    <member kind="function">
      <type></type>
      <name>MidiOutputDeviceInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>acd14b1bbc521b0b06adae016b8a8d94e</anchor>
      <arglist>(MidiOutputDevice &amp;, EditPlaybackContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiOutputDeviceInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>afdee3a0dd9cc518f77307fb3955cf363</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>acf9beddd2913dde14643dadbabf67d21</anchor>
      <arglist>(TimePosition start, bool shouldSendMidiTC)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>start</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>a23d13bc435b73a496301e541ab63d15e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>a2ad4868d8f4c6da3993ee7a2f51b6bef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MidiOutputDevice &amp;</type>
      <name>getMidiOutput</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>ac3eeca5ec0608f1f17d5ae0360a4e55f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeInMidiMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>a5938215c6b18c3cd3ea00aebb8335f08</anchor>
      <arglist>(const MidiMessageArray &amp;, TimePosition editTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMidiClockMessagesToCurrentBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>af24bc520326d1b57ae55465461dba3ce</anchor>
      <arglist>(bool isPlaying, bool isDragging, TimeRange streamTime)</arglist>
    </member>
    <member kind="function">
      <type>MidiMessageArray &amp;</type>
      <name>getPendingMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>ae147617558a61b83e20f3efba7fbef89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>sendMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDeviceInstance.html</anchorfile>
      <anchor>ae73b3ce9185c4d3bac0c0f9f7f359d7d</anchor>
      <arglist>(MidiMessageArray &amp;, TimePosition)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MidiOutputDeviceInstanceInjectingNode</name>
    <filename>classtracktion_1_1engine_1_1MidiOutputDeviceInstanceInjectingNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>MidiOutputDeviceInstanceInjectingNode</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDeviceInstanceInjectingNode.html</anchorfile>
      <anchor>a3c3b8032cd55176fea757b952457c977</anchor>
      <arglist>(MidiOutputDeviceInstance &amp;, std::unique_ptr&lt; tracktion::graph::Node &gt;, tracktion::graph::PlayHead &amp;)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDeviceInstanceInjectingNode.html</anchorfile>
      <anchor>a471e9d8b8811929997096d801a75b525</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDeviceInstanceInjectingNode.html</anchorfile>
      <anchor>a0673d1919bd05eb5130a01181a2e9f22</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDeviceInstanceInjectingNode.html</anchorfile>
      <anchor>a25671143ed9a5f12bf2ef46ffa9ad3d3</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDeviceInstanceInjectingNode.html</anchorfile>
      <anchor>a467d0a40dbada086023c110c70e624c3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiOutputDeviceInstanceInjectingNode.html</anchorfile>
      <anchor>ac38bb4c788134b779bcd743bd1daa480</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MidiPatchBayPlugin</name>
    <filename>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <class kind="struct">tracktion::engine::MidiPatchBayPlugin::Mappings</class>
    <member kind="function">
      <type></type>
      <name>MidiPatchBayPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>ac12f6b6d173ef19f957faed2bb6a9e46</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiPatchBayPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>aaefbb7614bbaf4d4d1411746f279fa9f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a7c094935e48d396275921db78d4f41d9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a711d88bbb94c893a53d0e06ea56ddc6e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a08698a5ccc10f5f4344f7fc951537fbb</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a1efbdda14fec3584e0f196235248924c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a3e9cb06609230a97190fe9f055467d2a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>ae44a091038d39be296fc68c42b8028af</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a761ff131eeb8d0bffd39dc7dfe6ebe81</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>ab46ca69aef049477db117db3954d8215</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a0455d9f2527ef23e8162b1dd2af7b0b9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a9feb868ea1099c0c9c2191eac6c41ea3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>af9ea38e612b0e36b7a388b2411fde74f</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getChannelNames</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>ab033130fc2a22ea24253dd8b852b7d32</anchor>
      <arglist>(juce::StringArray *, juce::StringArray *) override</arglist>
    </member>
    <member kind="function">
      <type>Mappings</type>
      <name>getMappings</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a70f8a36945620dc4aa279c9440ae42d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMappings</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>aed4ae56421334cb24ab4a1862c974dac</anchor>
      <arglist>(const Mappings &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetMappings</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>addd0e21b67ba9aeb1fa044fa2e4a2ef9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeConnection</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>ad0f84119806edcb58904b096131dbb2a</anchor>
      <arglist>(int srcChannel, int dstChannel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanityCheckMappings</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a8d018d165997654306e11d91d873efdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>blockAllMappings</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a2801e9072737ef1804f328951b6033f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; int, int &gt;</type>
      <name>getFirstMapping</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>afbd813015b31d61299885920858fe711</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a8d3eee7d4436a144223656c5eef1fcf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>a6804321e1fdb96fa53c5cefedda1e1d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiPatchBayPlugin.html</anchorfile>
      <anchor>ae6b0e34ffede74f166ab7eef60a04870</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MidiProgramManager</name>
    <filename>classtracktion_1_1engine_1_1MidiProgramManager.html</filename>
    <class kind="struct">tracktion::engine::MidiProgramManager::MidiBank</class>
    <class kind="struct">tracktion::engine::MidiProgramManager::MidiProgramSet</class>
    <member kind="function">
      <type></type>
      <name>MidiProgramManager</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a6d54dc794f54769fbe3c4f8c6ae4bf89</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getMidiProgramSetNames</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>afbb435eb400e34c02756ef46e9a8e827</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getProgramName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a1092b2874db53da34eb800164ef8c053</anchor>
      <arglist>(int set, int bank, int program)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getBankName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a8d37f41e68bfd893e5474760040119e2</anchor>
      <arglist>(int set, int bank)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBankID</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a4fbb69bc30637417f5ab6e6fe9d2741b</anchor>
      <arglist>(int set, int bank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBankID</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a637cfb5dc281cdc7cd0418a3be910c89</anchor>
      <arglist>(int set, int bank, int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProgramName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>af6c10a418a1a4063deaf4479744c01b6</anchor>
      <arglist>(int set, int bank, int program, const juce::String &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBankName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a995ec6b7312e9380d66cbc4012ea7842</anchor>
      <arglist>(int set, int bank, const juce::String &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearProgramName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a559db539ff533060476d9f3e059342fe</anchor>
      <arglist>(int set, int bank, int program)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDefaultName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>aab520a217bf43cfd9deccb1654d06758</anchor>
      <arglist>(int bank, int program, bool zeroBased)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDefaultCustomName</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a39207bebe2c1bc132f041715313a274b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSetIndex</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>afe1933cd5cac647f10f0f07696dc4c4f</anchor>
      <arglist>(const juce::String &amp;setName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isZeroBased</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>af51421b8a2bf1da3b7db73d5ce51af3b</anchor>
      <arglist>(int set)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setZeroBased</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a1582e267b4a414868b0bbc87ab7a5252</anchor>
      <arglist>(int set, bool zeroBased)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doesSetExist</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a8ff260543c149369c2392f921da3ae3a</anchor>
      <arglist>(const juce::String &amp;name) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canEditProgramSet</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a4ae55b467f3efc81da8aae08fb156411</anchor>
      <arglist>(int set) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canDeleteProgramSet</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a8c4b8536d85400c2bef3c81a924a313c</anchor>
      <arglist>(int set) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNewSet</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a9c6f416256170a78d0868194a295331b</anchor>
      <arglist>(const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNewSet</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a7fd76c259ed2d0ca95a3e12ba274bc1b</anchor>
      <arglist>(const juce::String &amp;name, const juce::XmlElement &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteSet</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a6b16914653e422935752104fa17aae32</anchor>
      <arglist>(int set)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>importSet</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a733e92c7a11ab8c6a53efc706f735baa</anchor>
      <arglist>(int set, const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exportSet</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a6f6635a632784244bbda7c70756d16f4</anchor>
      <arglist>(int set, const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPresetXml</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a724cdfa5f92707a500ff015838f7ac43</anchor>
      <arglist>(juce::String presetName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveAll</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>adc7962aff8c726da9fc2c263f701e94e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getListOfPresets</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a399e0e65f015cd4b184bcec4c3c5a866</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>a0ea9a25ff0cb38886f5c1ff93186289d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::OwnedArray&lt; MidiProgramSet &gt;</type>
      <name>programSets</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiProgramManager.html</anchorfile>
      <anchor>ab27432f9d23555bbf658270dd2d3c62d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MidiProgramManager::MidiProgramSet</name>
    <filename>structtracktion_1_1engine_1_1MidiProgramManager_1_1MidiProgramSet.html</filename>
    <member kind="function">
      <type></type>
      <name>MidiProgramSet</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiProgramManager_1_1MidiProgramSet.html</anchorfile>
      <anchor>a89fbac73fff56ffb987b9592d51245b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::XmlElement *</type>
      <name>createXml</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiProgramManager_1_1MidiProgramSet.html</anchorfile>
      <anchor>ab860450e2c199f244b86a40f13cd8256</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFromXml</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiProgramManager_1_1MidiProgramSet.html</anchorfile>
      <anchor>a4b67719e3693f2d2cdabed730003e902</anchor>
      <arglist>(const juce::XmlElement &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiProgramManager_1_1MidiProgramSet.html</anchorfile>
      <anchor>a1eee48d1ee3b37c5d200d78c3e21758d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>zeroBased</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiProgramManager_1_1MidiProgramSet.html</anchorfile>
      <anchor>a17dafaf26ffa9abace9bf4360555e337</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MidiBank</type>
      <name>midiBanks</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiProgramManager_1_1MidiProgramSet.html</anchorfile>
      <anchor>a46c8881f910ea71d4c358b854d68f97b</anchor>
      <arglist>[16]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MidiSysexEvent</name>
    <filename>classtracktion_1_1engine_1_1MidiSysexEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>MidiSysexEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a65fcd9c2110581482c29b1172da71c86</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiSysexEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a9e8cbe795be8f21b39e5409c3b9c567e</anchor>
      <arglist>(const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MidiSysexEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a885bef19defa2da945ab760d4ccf33a3</anchor>
      <arglist>(const juce::MidiMessage &amp;, BeatPosition)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MidiSysexEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a27438dc6f4f631e60602babe6e8072c4</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::MidiMessage &amp;</type>
      <name>getMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a4634a48c7098115060390aa0be4ee2c1</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a97ddb3b08035a108a2c4cee81db92234</anchor>
      <arglist>(const juce::MidiMessage &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getBeatPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>ac5608eca2e303989bcfe4f540e691dd9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBeatPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>af73a52ca99e9d0bea297e1c5b38f8708</anchor>
      <arglist>(BeatPosition, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getEditTime</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>aa605c765efabd1a4142f322c006ef7c7</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getEditBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a84ad8a7248431de2c42fa7088d32056c</anchor>
      <arglist>(const MidiClip &amp;) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>createSysexEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a48a1f01d1a50f1328477ef9148839f39</anchor>
      <arglist>(const MidiSysexEvent &amp;, BeatPosition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>createSysexEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a3690f50b7b3153385c89b16d2afecd9c</anchor>
      <arglist>(const juce::MidiMessage &amp;, BeatPosition)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a95daba01b9d29dfe1c7e916eafca2c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>MidiList</name>
      <anchorfile>classtracktion_1_1engine_1_1MidiSysexEvent.html</anchorfile>
      <anchor>a00f07d9357a6bcb92fd73cab09de07f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MIDITrackerModifier</name>
    <filename>classtracktion_1_1engine_1_1MIDITrackerModifier.html</filename>
    <base>tracktion::engine::Modifier</base>
    <base protection="private">tracktion::engine::ValueTreeAllEventListener</base>
    <class kind="struct">tracktion::engine::MIDITrackerModifier::Assignment</class>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>accface57dc74546c41dfd87fd0d083bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pitch</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>accface57dc74546c41dfd87fd0d083bda089e5cb0161b3826566d8f1db57ab9dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>velocity</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>accface57dc74546c41dfd87fd0d083bda39b10f055e9ba2da2eb18d8095069e1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Mode</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a4600a89f9295c8b0e9c7b6df6614da86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>absolute</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a4600a89f9295c8b0e9c7b6df6614da86adb1f6b0616ca9648241efefc3d969ce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>relative</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a4600a89f9295c8b0e9c7b6df6614da86aadc73d2ea73998824777c0c3259ae3d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; MIDITrackerModifier &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>af58e9c0391100674d7b95cdc9a344ce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; MIDITrackerModifier &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>aac59466150a409920c1cdf4e5286e315</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>pitch</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>accface57dc74546c41dfd87fd0d083bda089e5cb0161b3826566d8f1db57ab9dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>velocity</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>accface57dc74546c41dfd87fd0d083bda39b10f055e9ba2da2eb18d8095069e1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>absolute</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a4600a89f9295c8b0e9c7b6df6614da86adb1f6b0616ca9648241efefc3d969ce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>relative</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a4600a89f9295c8b0e9c7b6df6614da86aadc73d2ea73998824777c0c3259ae3d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIDITrackerModifier</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>ad5867b14bdeb59463fa652161a985d42</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MIDITrackerModifier</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a80b3bf8fa55d5ba32a3be7911ae2b01a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>ad23b20cb4c50cba35b5d2892be57dadd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>ae52b04ec06a037dae32b7dd2b36cd4bb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>ad822e155750b794ec4898b73f0bbe5b7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCurrentMIDIValue</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a36c8befe0889472e8b22e50424630620</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::ModifierAssignment *</type>
      <name>createAssignment</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a3560a37be815da6f964eecdb461db714</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getMidiInputNames</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a5ed841e51933f34abca065e477194727</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>ProcessingPosition</type>
      <name>getProcessingPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a5632c70934cd2a1ec33eba41f8012269</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>ac010330935937c309e0f2a5172e9d1e3</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>aa949e81b41a2330feb9db1250d1314d5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getNodeState</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>ae461543cc079522a579df97b950d7e04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a7910b344c687168c108702bc3ddd2323</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a08b0ce6145809240435352b1112fc5fe</anchor>
      <arglist>(double, int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getTypeNames</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a3a2cbc559946eda990d6851cc75f7c48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getModeNames</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a6591aa40d2bc87fdb869766a60b741b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>type</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a3e33deb5a2ad883342efbe65a39dc290</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>mode</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>ae87bd5e9b555ac7cb569ec562f71f4bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>relativeRoot</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>ad348d11fe48676c7895854d5264ecac2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>relativeSpread</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a95c2eb00ef952dc661dd7d0e4694de08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>typeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>ab4161797fff93dca271852f986c6615b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>modeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>ab99445a2f6bb9b486e5b88a15960a9d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>relativeRootParam</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>a3d484f49ca295a07765a3ba6b13558a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>relativeSpreadParam</name>
      <anchorfile>classtracktion_1_1engine_1_1MIDITrackerModifier.html</anchorfile>
      <anchor>ab9a5455656635e0ed76f0949d085b82d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::FourOscPlugin::ModAssign</name>
    <filename>structtracktion_1_1engine_1_1FourOscPlugin_1_1ModAssign.html</filename>
    <member kind="function">
      <type></type>
      <name>ModAssign</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1ModAssign.html</anchorfile>
      <anchor>a7810af5689ff0d131eea4bc38e16b907</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateCachedInfo</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1ModAssign.html</anchorfile>
      <anchor>a4dde1a1c1b3f99f2eda631f10cb52ca0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isModulated</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1ModAssign.html</anchorfile>
      <anchor>ac81a0a766bb766e204dbf577fbc7726e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>firstModIndex</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1ModAssign.html</anchorfile>
      <anchor>aece0c25c4108275db700d4b66ec480a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lastModIndex</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1ModAssign.html</anchorfile>
      <anchor>ad3bacf862e3eedca216173b858ff5586</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>depths</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1ModAssign.html</anchorfile>
      <anchor>a1889d619af15c3718b57d6be2bf0aac8</anchor>
      <arglist>[numModSources]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ModelUpdateFunctions</name>
    <filename>structModelUpdateFunctions.html</filename>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>notifyAudioSourceAnalysisProgress</name>
      <anchorfile>structModelUpdateFunctions.html</anchorfile>
      <anchor>a54d174608f025983012f81c55325dbfd</anchor>
      <arglist>(ARAModelUpdateControllerHostRef, ARAAudioSourceHostRef, ARAAnalysisProgressState, float)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>notifyAudioSourceContentChanged</name>
      <anchorfile>structModelUpdateFunctions.html</anchorfile>
      <anchor>a5feea024c101f98edc69235cea37cca7</anchor>
      <arglist>(ARAModelUpdateControllerHostRef hostRef, ARAAudioSourceHostRef, const ARAContentTimeRange *, ARAContentUpdateFlags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>notifyAudioModificationContentChanged</name>
      <anchorfile>structModelUpdateFunctions.html</anchorfile>
      <anchor>a9e0b046c60f0e8e9ca7b21f63212448b</anchor>
      <arglist>(ARAModelUpdateControllerHostRef hostRef, ARAAudioModificationHostRef, const ARAContentTimeRange *, ARAContentUpdateFlags)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::FourOscPlugin::MODEnvParams</name>
    <filename>structtracktion_1_1engine_1_1FourOscPlugin_1_1MODEnvParams.html</filename>
    <member kind="function">
      <type></type>
      <name>MODEnvParams</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>a5f5cac166dae3d1a81bf671cd34fd04d</anchor>
      <arglist>(FourOscPlugin &amp;plugin, int envNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attach</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>af4e99104dd926229b813e3a45404d76e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detach</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>a8c45b8ed49ff589cc371d3e62f5f5379</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>a6996dabad4ff8ba80bc085fc0018c2cd</anchor>
      <arglist>(const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>modAttackValue</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>a17b3ed517cfb4004756120897a4133c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>modDecayValue</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>aab81a374c055afd8e14f7b448d7553de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>modSustainValue</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>a5c468a039d6cb7890905906e6471dad6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>modReleaseValue</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>a690e840bd3911ec29fa1eb3052224dd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>modAttack</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>a1fd32a682942db587e02c5da5705fce7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>modDecay</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>a513e36e3b86c7ceb0268b7c1e27f8c8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>modSustain</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>a31782f7b221a958077cb3945e823d3ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>modRelease</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1MODEnvParams.html</anchorfile>
      <anchor>ae8784ab5f4fb1b4a24661fafc6a1e18f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Modifier</name>
    <filename>structtracktion_1_1engine_1_1Modifier.html</filename>
    <base>tracktion::engine::AutomatableEditItem</base>
    <base>tracktion::engine::Selectable</base>
    <base>tracktion::engine::AutomatableParameter::ModifierSource</base>
    <member kind="enumeration">
      <type></type>
      <name>ProcessingPosition</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>af0bbf1482adac6bf37da3e1eb3fe6464</anchor>
      <arglist></arglist>
      <enumvalue file="structtracktion_1_1engine_1_1Modifier.html" anchor="af0bbf1482adac6bf37da3e1eb3fe6464a334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="structtracktion_1_1engine_1_1Modifier.html" anchor="af0bbf1482adac6bf37da3e1eb3fe6464a548d312395b2b6402e483c60f136b86e">preFX</enumvalue>
      <enumvalue file="structtracktion_1_1engine_1_1Modifier.html" anchor="af0bbf1482adac6bf37da3e1eb3fe6464a7e4fcf98449de35fa953cf4fbaf85e37">postFX</enumvalue>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; Modifier &gt;</type>
      <name>Ptr</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a3c429dca0b5b58a52e65de9cd96afa4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; Modifier &gt;</type>
      <name>Array</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>ac6286f23bbb74ce2d8a14acbce78393b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Modifier</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>ae54fa5fbea5cd3d7752faf2dbdaef050</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Modifier</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a52ca68e9ef678f4753f81d938ed798db</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>ab077c024701c06cec415e829130c4acf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a7910b344c687168c108702bc3ddd2323</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>getCurrentValue</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a22d8cee80b75308d6e4dc851c11f05b0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual AutomatableParameter::ModifierAssignment *</type>
      <name>createAssignment</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a8cc0feaf5d8d69ebf9e6ff0f72d7499f</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::StringArray</type>
      <name>getMidiInputNames</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a6658d57e853d684ab9fb4cdeb723dc81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::StringArray</type>
      <name>getAudioInputNames</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a0b154b031647207c288eb04978558d05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ProcessingPosition</type>
      <name>getProcessingPosition</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>ad6cca5144bb737984774974b467ce6a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a08b0ce6145809240435352b1112fc5fe</anchor>
      <arglist>(double, int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deinitialise</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a60f512aac27d089484e87ea42e7bd98e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyToBuffer</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a3bcfc59ee9a90d696a0683521f9f59a6</anchor>
      <arglist>(const PluginRenderContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>baseClassNeedsInitialising</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>acb791bf9ee30515b6c062a477628df55</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>baseClassInitialise</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a61631f642adef03d33509bcd2650a9be</anchor>
      <arglist>(double sampleRate, int blockSizeSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>baseClassDeinitialise</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>ad7c0dbef6cbe1d2da2f0b10b88e847cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>baseClassApplyToBuffer</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a2d90bd471552392b85f960bc37bae429</anchor>
      <arglist>(const PluginRenderContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getCurrentTime</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a415cefda0a04ebca72b3a36661ebfc97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getValueAt</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>ae8a4157f6a6139c228a5fbed7de3e2d0</anchor>
      <arglist>(TimeDuration numSecondsBeforeNow) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; float &gt;</type>
      <name>getValues</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a6fc9a9eb6c4aa58cc9f2e0a2698578ea</anchor>
      <arglist>(TimeDuration numSecondsBeforeNow) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>af74d4d05d5ffc187acaeb49ec93aa42e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableAboutToBeDeleted</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a256feea004d8bfa506d3d36bd1ff6e70</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a261e1b8ef29c8151bf289be1bc621732</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::Colour &gt;</type>
      <name>colour</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a82e6a9b33cf86c16312e87fa26d9933d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>enabled</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>ac09d1b929e0fe10ae51ba5627437f000</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>enabledParam</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a8bd5c4e46959b49d3e1b9855aae73290</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr TimeDuration</type>
      <name>maxHistoryTime</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a64116010bbcd5855d16a7d3b5e6b09af</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setEditTime</name>
      <anchorfile>structtracktion_1_1engine_1_1Modifier.html</anchorfile>
      <anchor>a43ca89ccc0bdf42fc41c5333a6655de0</anchor>
      <arglist>(TimePosition newEditTime)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AutomatableParameter::ModifierAssignment</name>
    <filename>structtracktion_1_1engine_1_1AutomatableParameter_1_1ModifierAssignment.html</filename>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; ModifierAssignment &gt;</type>
      <name>Ptr</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1ModifierAssignment.html</anchorfile>
      <anchor>ac542d6f2b59c9c4d13fc4e49405b1539</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModifierAssignment</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1ModifierAssignment.html</anchorfile>
      <anchor>a691f1396d0ae09cef3c351afa6e7dda7</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isForModifierSource</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1ModifierAssignment.html</anchorfile>
      <anchor>a7b20247f5fb67e4851886aa85efb15a2</anchor>
      <arglist>(const ModifierSource &amp;) const =0</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1ModifierAssignment.html</anchorfile>
      <anchor>aaf468c8c416ac9b739e06d647a4d9be5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1ModifierAssignment.html</anchorfile>
      <anchor>aae298ec7199b47d375fec295c65f7b8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>value</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1ModifierAssignment.html</anchorfile>
      <anchor>a92b6d9ed88668d123734d195f6f70fa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>offset</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1ModifierAssignment.html</anchorfile>
      <anchor>ac787fe9458320401b8e10ea1ecd3da81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>curve</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1ModifierAssignment.html</anchorfile>
      <anchor>af57fdac142d3bb7994dda1ef84631b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>inputStart</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1ModifierAssignment.html</anchorfile>
      <anchor>a7d8d055d9b1f0ae2bcbf383a6b29f7de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>inputEnd</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1ModifierAssignment.html</anchorfile>
      <anchor>aff60cd4c7be5ff006b47d5bc432c10c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ModifierList</name>
    <filename>classtracktion_1_1engine_1_1ModifierList.html</filename>
    <base protection="private">ValueTreeObjectList&lt; Modifier &gt;</base>
    <member kind="function">
      <type></type>
      <name>ModifierList</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierList.html</anchorfile>
      <anchor>a6b8cbd19d08873bd29e6f64cb15f821d</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ModifierList</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierList.html</anchorfile>
      <anchor>a140af36a04dcdf3ff8debd853de6b200</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; Modifier &gt;</type>
      <name>getModifiers</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierList.html</anchorfile>
      <anchor>a6353c2c41f8553ae8283432d96bb4644</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; Modifier &gt;</type>
      <name>insertModifier</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierList.html</anchorfile>
      <anchor>a865217f409a21ec730977e9c5030a9d6</anchor>
      <arglist>(juce::ValueTree, int index, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierList.html</anchorfile>
      <anchor>a0a94194a38e9957004e1ddc458a2950e</anchor>
      <arglist>(const juce::ValueTree &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>Modifier *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierList.html</anchorfile>
      <anchor>a103ef4afc9ec15e446d6363f377bc584</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierList.html</anchorfile>
      <anchor>aab48e13821492126f861089da67e8285</anchor>
      <arglist>(Modifier *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierList.html</anchorfile>
      <anchor>a8084ecde4ad39f45183ba5aa73f7a988</anchor>
      <arglist>(Modifier *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierList.html</anchorfile>
      <anchor>a088a304bbfb30fa67c1c441818738228</anchor>
      <arglist>(Modifier *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierList.html</anchorfile>
      <anchor>aab2906ce682090db1a4587062a55e9d5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isModifier</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierList.html</anchorfile>
      <anchor>a8784b41352d75ab7218eb9d05529bb04</anchor>
      <arglist>(const juce::Identifier &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierList.html</anchorfile>
      <anchor>a96a0b96d6a39853314114df902e7b175</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierList.html</anchorfile>
      <anchor>a0ba5025bec638d3227b3572c1f2bf963</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ModifierNode</name>
    <filename>classtracktion_1_1engine_1_1ModifierNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>ModifierNode</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierNode.html</anchorfile>
      <anchor>a60e9c347871a040fefeab64437b5b0e3</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; input, tracktion::engine::Modifier::Ptr, double sampleRateToUse, int blockSizeToUse, const TrackMuteState *, tracktion::graph::PlayHeadState &amp;, bool rendering)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModifierNode</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierNode.html</anchorfile>
      <anchor>aec8f16cd67553b3a8b5cfe619795b0a8</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; input, tracktion::engine::Modifier::Ptr, double sampleRateToUse, int blockSizeToUse, std::shared_ptr&lt; InputProvider &gt;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ModifierNode</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierNode.html</anchorfile>
      <anchor>aa3e34f46ea2c26062b0fd98c1ba79e0a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Modifier &amp;</type>
      <name>getModifier</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierNode.html</anchorfile>
      <anchor>a6e46431d62391bc8d643a7850ee259ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierNode.html</anchorfile>
      <anchor>aa1f2e99d1acecd9083243724574d65dd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierNode.html</anchorfile>
      <anchor>ae01e82c8c3672160af8bb10528fc11d8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierNode.html</anchorfile>
      <anchor>ade50d9041316c174dee63bed98ed7131</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierNode.html</anchorfile>
      <anchor>a29299505fee6ea1b7fff5c4938b91a1e</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1ModifierNode.html</anchorfile>
      <anchor>a361e59e5bd0a72eb20ae656889173f6b</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::Modifiers</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1Modifiers.html</filename>
    <base>tracktion::engine::Clipboard::ContentType</base>
    <member kind="function">
      <type></type>
      <name>Modifiers</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Modifiers.html</anchorfile>
      <anchor>a6cc39502d4e7783b7916ee2c8b8ac667</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Modifiers</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Modifiers.html</anchorfile>
      <anchor>abcd55b5ee4007f8a2d835bc205b97868</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Modifiers.html</anchorfile>
      <anchor>a22b37920b893e1e03962f44d73164975</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Modifiers.html</anchorfile>
      <anchor>ae3179b071e4302d9007657da52f29b5a</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Modifiers.html</anchorfile>
      <anchor>a2b8ac2e249e6721e16dd1ca7831b15da</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; juce::ValueTree &gt;</type>
      <name>modifiers</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Modifiers.html</anchorfile>
      <anchor>a71baafcccc435bc1c366b1abae941a41</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AutomatableParameter::ModifierSource</name>
    <filename>structtracktion_1_1engine_1_1AutomatableParameter_1_1ModifierSource.html</filename>
    <member kind="function">
      <type></type>
      <name>ModifierSource</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1ModifierSource.html</anchorfile>
      <anchor>a9a05652daaa568375e40e0ef2e8484a6</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ModifierSource</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1ModifierSource.html</anchorfile>
      <anchor>aacea46bacd73709f97c5f769c5bfb515</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>juce::WeakReference&lt; ModifierSource &gt;</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameter_1_1ModifierSource.html</anchorfile>
      <anchor>a90236f6c8817085a2bc77a55268a73be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ModifierTimer</name>
    <filename>structtracktion_1_1engine_1_1ModifierTimer.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ModifierTimer</name>
      <anchorfile>structtracktion_1_1engine_1_1ModifierTimer.html</anchorfile>
      <anchor>aae8931aea4ab46fcb84bf743c66837c2</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateStreamTime</name>
      <anchorfile>structtracktion_1_1engine_1_1ModifierTimer.html</anchorfile>
      <anchor>ae443ee12ae8f3dd67caf329a22f9699d</anchor>
      <arglist>(TimePosition editTime, int numSamples)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MonotonicBeat</name>
    <filename>structtracktion_1_1engine_1_1MonotonicBeat.html</filename>
    <member kind="variable">
      <type>BeatPosition</type>
      <name>v</name>
      <anchorfile>structtracktion_1_1engine_1_1MonotonicBeat.html</anchorfile>
      <anchor>a577ba1e9139d4b5fa988ca0dc8f9f261</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MonotonicBeatRange</name>
    <filename>structtracktion_1_1engine_1_1MonotonicBeatRange.html</filename>
    <member kind="variable">
      <type>BeatRange</type>
      <name>v</name>
      <anchorfile>structtracktion_1_1engine_1_1MonotonicBeatRange.html</anchorfile>
      <anchor>a9c31ea287fa9640b8ce426139dbca1c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MouseHoverDetector</name>
    <filename>classtracktion_1_1engine_1_1MouseHoverDetector.html</filename>
    <member kind="function">
      <type></type>
      <name>MouseHoverDetector</name>
      <anchorfile>classtracktion_1_1engine_1_1MouseHoverDetector.html</anchorfile>
      <anchor>a924d71965e8ecc071ffa17c8f3378fdf</anchor>
      <arglist>(int hoverTimeMillisecs_=400)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MouseHoverDetector</name>
      <anchorfile>classtracktion_1_1engine_1_1MouseHoverDetector.html</anchorfile>
      <anchor>a1900c53a935c3c053a2dd0e814938f47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHoverTimeMillisecs</name>
      <anchorfile>classtracktion_1_1engine_1_1MouseHoverDetector.html</anchorfile>
      <anchor>a8f91f71b530802cc2ddbefbb8175bd96</anchor>
      <arglist>(int newTimeInMillisecs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHoverComponent</name>
      <anchorfile>classtracktion_1_1engine_1_1MouseHoverDetector.html</anchorfile>
      <anchor>acb9e0fda63e2a734a2a5a17ef7241eca</anchor>
      <arglist>(juce::Component *newSourceComponent, bool wantsEventsForAllNestedChildComponents)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hoverTimerCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1MouseHoverDetector.html</anchorfile>
      <anchor>a22f1cac519cd14348b5601bd94effe30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkJustHoveredCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1MouseHoverDetector.html</anchorfile>
      <anchor>a9acb1a8fef708a94035352c33be56a15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>mouseHovered</name>
      <anchorfile>classtracktion_1_1engine_1_1MouseHoverDetector.html</anchorfile>
      <anchor>a80266ce50fa28041725fad1aa79596d3</anchor>
      <arglist>(int mouseX, int mouseY)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>mouseMovedAfterHover</name>
      <anchorfile>classtracktion_1_1engine_1_1MouseHoverDetector.html</anchorfile>
      <anchor>a3fff97fa2da55e91424e9585afaa1c9f</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MPEStartTrimmer</name>
    <filename>structtracktion_1_1engine_1_1MPEStartTrimmer.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>reconstructExpression</name>
      <anchorfile>structtracktion_1_1engine_1_1MPEStartTrimmer.html</anchorfile>
      <anchor>af7861625bb6dcd66bf0de5a68f73ca12</anchor>
      <arglist>(juce::Array&lt; juce::MidiMessage &gt; &amp;mpeMessagesToAddAtStart, const juce::MidiMessageSequence &amp;data, int trimIndex, int channel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>reconstructExpression</name>
      <anchorfile>structtracktion_1_1engine_1_1MPEStartTrimmer.html</anchorfile>
      <anchor>a13f8fe03f24a77e9fa47c1588cc0be36</anchor>
      <arglist>(juce::Array&lt; juce::MidiMessage &gt; &amp;mpeMessagesToAddAtStart, const choc::midi::Sequence &amp;data, size_t trimIndex, int channel1to16)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MultiThreadedNodePlayer</name>
    <filename>classtracktion_1_1engine_1_1MultiThreadedNodePlayer.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiThreadedNodePlayer</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a0888443b87b1fc56768ac82d0cfbb679</anchor>
      <arglist>(ProcessState &amp;processStateToUse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiThreadedNodePlayer</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a19ff2da3c3ccf9c4ef59ffe29718e754</anchor>
      <arglist>(std::unique_ptr&lt; tracktion::graph::Node &gt; node, ProcessState &amp;processStateToUse, double sampleRate, int blockSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumThreads</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a99329b4d096c74a18f729de0ad7ea1a9</anchor>
      <arglist>(size_t numThreads)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::Node *</type>
      <name>getNode</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a29335795aea9ffbb2c6b12e2cf3ecef4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a05451ee9facb31b3a87adc7d38a0c4f8</anchor>
      <arglist>(std::unique_ptr&lt; tracktion::graph::Node &gt; newNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>af6d363c421cbe7d859bd90673a836ba1</anchor>
      <arglist>(std::unique_ptr&lt; tracktion::graph::Node &gt; newNode, double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>ab0abdca637264c8d41c463daeba6af4a</anchor>
      <arglist>(double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a5b35282c647f688f77fc7aeccebfb144</anchor>
      <arglist>(const tracktion::graph::Node::ProcessContext &amp;pc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearNode</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a9aa3bcf9bc89b5afffb076a862abbcdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a3904b5b86acff621e41ff21861c37aff</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::MultiThreadedNodePlayer</name>
    <filename>classtracktion_1_1graph_1_1MultiThreadedNodePlayer.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiThreadedNodePlayer</name>
      <anchorfile>classtracktion_1_1graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a7d325f4be4644ef954544044bb51975b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MultiThreadedNodePlayer</name>
      <anchorfile>classtracktion_1_1graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a91e978f732823f913f350a7ea05e5247</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumThreads</name>
      <anchorfile>classtracktion_1_1graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>aecaabc553312e7fbe82b3cca3abdba31</anchor>
      <arglist>(size_t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion_1_1graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a5cb692c51329fe35f7bace28cc9d5b6f</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion_1_1graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a03738756d14797f8aaf61ccec59fb81a</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; newNode, double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>ad5c0fee8714db1ab9828d1e6f89834b9</anchor>
      <arglist>(double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>Node *</type>
      <name>getNode</name>
      <anchorfile>classtracktion_1_1graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>af03108939514cab809b2e1f95d4ca4b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a3ff44367d6c6ccbc180e16bd39743dfd</anchor>
      <arglist>(const Node::ProcessContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearNode</name>
      <anchorfile>classtracktion_1_1graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a5c6d442bac55ff4d770bed8b7ada3321</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion_1_1graph_1_1MultiThreadedNodePlayer.html</anchorfile>
      <anchor>a37e0ad219e45ce772acf948ac81deae3</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::MultiVoiceOscillator</name>
    <filename>classtracktion_1_1engine_1_1MultiVoiceOscillator.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiVoiceOscillator</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>a1a633ddd5c1df5f422794bbdeb09fc55</anchor>
      <arglist>(int maxVoices=8)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>acf9d1717809b1155ce67a4ec595d0fea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>af6c6f5e64e055cfd701f6f7fd4ba2e86</anchor>
      <arglist>(double sr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWave</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>af6f9babca20876ef6826691a73bb257b</anchor>
      <arglist>(Oscillator::Waves w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNote</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>ac74d17484ab7123792b83b5bd1620fbe</anchor>
      <arglist>(float n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGain</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>a073a053d2ab34377858cef6c9346e3de</anchor>
      <arglist>(float g)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPan</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>a7f941f2815be793d808a29dcffbe4623</anchor>
      <arglist>(float p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPulseWidth</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>a0fdf9d8c780117ece71c15b9c31fcb2f</anchor>
      <arglist>(float p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumVoices</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>ae289e4185e3c4ed39f44f7e7adaebe86</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDetune</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>a628bfaacf10919633309d8101c4e9283</anchor>
      <arglist>(float d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSpread</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>a8b45e0d3b116d2b036c518a48aa7016e</anchor>
      <arglist>(float s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1MultiVoiceOscillator.html</anchorfile>
      <anchor>affce3691f55f1dd207c0d23c99af62df</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;buffer, int startSample, int numSamples)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MusicalContextFunctions</name>
    <filename>structMusicalContextFunctions.html</filename>
    <member kind="function" static="yes">
      <type>static ARA::ARACircleOfFifthsIndex</type>
      <name>getCircleOfFifthsIndexforMIDINote</name>
      <anchorfile>structMusicalContextFunctions.html</anchorfile>
      <anchor>acc224058eb8bc84baf208bd5c62b61ec</anchor>
      <arglist>(int note, bool useSharps)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::array&lt; ARA::ARAChordIntervalUsage, 12 &gt;</type>
      <name>getChordARAIntervalUsage</name>
      <anchorfile>structMusicalContextFunctions.html</anchorfile>
      <anchor>a778cfa5f3562c1d69b6b8708ac9ca979</anchor>
      <arglist>(Chord c)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MusicalContextWrapper</name>
    <filename>classMusicalContextWrapper.html</filename>
    <member kind="function">
      <type></type>
      <name>MusicalContextWrapper</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a396f7e72c675c984a00c3ffb9ae99777</anchor>
      <arglist>(ARADocument &amp;doc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MusicalContextWrapper</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a04245d561f63665cc2d94e895ffe8e6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a792cc50768768e07d17797e84b55f292</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SizedStruct&lt; ARA_STRUCT_MEMBER(ARAMusicalContextProperties, color)&gt;</type>
      <name>getMusicalContextProperties</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a7c3df47dccb435c3ab868feb6cebd517</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARABool ARA_CALL</type>
      <name>isMusicalContextContentAvailable</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>ad645196eb3376b33bee90ea9d78283eb</anchor>
      <arglist>(ARAContentAccessControllerHostRef editRef, ARAMusicalContextHostRef, ARAContentType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARAContentGrade ARA_CALL</type>
      <name>getMusicalContextContentGrade</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>ae0eecab9ba0e1323e8578df62c1e2c2b</anchor>
      <arglist>(ARAContentAccessControllerHostRef, ARAMusicalContextHostRef, ARAContentType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARAContentReaderHostRef ARA_CALL</type>
      <name>createMusicalContextContentReader</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>aad94b5b2ce7ff28cc93b5c4b221d139a</anchor>
      <arglist>(ARAContentAccessControllerHostRef controllerHostRef, ARAMusicalContextHostRef, ARAContentType type, const ARAContentTimeRange *range)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARABool ARA_CALL</type>
      <name>isAudioSourceContentAvailable</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>ab141b82fb89484679fa32a5b1101cbbe</anchor>
      <arglist>(ARAContentAccessControllerHostRef, ARAAudioSourceHostRef, ARAContentType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARAContentGrade ARA_CALL</type>
      <name>getAudioSourceContentGrade</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a2c41015be8cf7032faf7de528fc74d2c</anchor>
      <arglist>(ARAContentAccessControllerHostRef, ARAAudioSourceHostRef, ARAContentType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARAContentReaderHostRef ARA_CALL</type>
      <name>createAudioSourceContentReader</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a87849b850a2e07428bf3f4607db033ec</anchor>
      <arglist>(ARAContentAccessControllerHostRef, ARAAudioSourceHostRef, ARAContentType, const ARAContentTimeRange *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ARAInt32 ARA_CALL</type>
      <name>getContentReaderEventCount</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a3866805ae92dfd4370c68c6ae0e1f0c7</anchor>
      <arglist>(ARAContentAccessControllerHostRef, ARAContentReaderHostRef contentReaderRef)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const void *ARA_CALL</type>
      <name>getContentReaderDataForEvent</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>ac4e0c4ce7e52102634d97cae7f1ede49</anchor>
      <arglist>(ARAContentAccessControllerHostRef, ARAContentReaderHostRef contentReaderRef, ARAInt32 eventIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void ARA_CALL</type>
      <name>destroyContentReader</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a62270bbb11b2766ad39a139572cf4373</anchor>
      <arglist>(ARAContentAccessControllerHostRef, ARAContentReaderHostRef contentReaderRef)</arglist>
    </member>
    <member kind="variable">
      <type>ARADocument &amp;</type>
      <name>document</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a6379f29afabefc6024843b9cc6c7c019</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ARAMusicalContextRef</type>
      <name>musicalContextRef</name>
      <anchorfile>classMusicalContextWrapper.html</anchorfile>
      <anchor>a9f42fc9f3a7fed05682a5a633aa55fe2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MuteAudioNode</name>
    <filename>structtracktion_1_1engine_1_1MuteAudioNode.html</filename>
    <base>tracktion::engine::SingleInputAudioNode</base>
    <member kind="function">
      <type></type>
      <name>MuteAudioNode</name>
      <anchorfile>structtracktion_1_1engine_1_1MuteAudioNode.html</anchorfile>
      <anchor>a7c1e8462c28ee9feabb2fcb16d7d0cfb</anchor>
      <arglist>(AudioNode *source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderOver</name>
      <anchorfile>structtracktion_1_1engine_1_1MuteAudioNode.html</anchorfile>
      <anchor>a9af8adf24d7f2023d0d01cb848ee0ebe</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderAdding</name>
      <anchorfile>structtracktion_1_1engine_1_1MuteAudioNode.html</anchorfile>
      <anchor>a85a661e6203c96534b428c5236cbdcde</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::Node</name>
    <filename>classtracktion_1_1graph_1_1Node.html</filename>
    <class kind="struct">tracktion::graph::Node::AudioAndMidiBuffer</class>
    <class kind="struct">tracktion::graph::Node::ProcessContext</class>
    <member kind="function">
      <type></type>
      <name>Node</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>a9471b3c4f3839be9a7599e61744e6deb</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Node</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>adc4ddee86bbf5bdf80f89b233d282031</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>aa2cc880a1f02e67947ccb997dca751f2</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForNextBlock</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>a5d3e2bddd78044d0c5ccdaa031c98e17</anchor>
      <arglist>(juce::Range&lt; int64_t &gt; referenceSampleRange)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>a9ff0864992fa1244cf754a1dea0ca6ec</anchor>
      <arglist>(choc::buffer::FrameCount numSamples, juce::Range&lt; int64_t &gt; referenceSampleRange)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProcessed</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>ae62f7e160525644535c445701c446b73</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AudioAndMidiBuffer</type>
      <name>getProcessedOutput</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>adc67998aa3b75e41bc7b89e1ebf94d50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TransformResult</type>
      <name>transform</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>ad8156b0902fe0ab5104a9c13b34dad77</anchor>
      <arglist>(Node &amp;, const std::vector&lt; Node * &gt; &amp;, TransformCache &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>a6cb3cafc0fa760ab48d4bc3e8da241d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; Node * &gt;</type>
      <name>getInternalNodes</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>aea8b99cdbe626c76bc7517bdce2870c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>a2291fdfb7d1ce385e30ae52d9f2fdfc0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>a3d69e6a5785ba2ae876b349f4fc7aae3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>retain</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>a83b72d53943bf53cb8319ac738dfb3f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>ab869d44b0677148fa6530dd33a7cfeef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getAllocatedBytes</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>a088bbdd559a5154e64844297afe127ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enablePreProcess</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>ada8998edbc18fa6788957b1917b0a7c7</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>internal</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>a7881602d9dbc53f46373b473f8ea0927</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numOutputNodes</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>a374c25dae63a229ca307c8ede3ac3b06</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>a1f44053e48b0f14d53639580fb101ce8</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>prefetchBlock</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>a6734a58168c033e19232b2606718955d</anchor>
      <arglist>(juce::Range&lt; int64_t &gt;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>a60ae77583768afb8a381ce174bd2e8de</anchor>
      <arglist>(ProcessContext &amp;)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcess</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>afb9d61e25eb8323fd9055fdcc729758a</anchor>
      <arglist>(choc::buffer::FrameCount, juce::Range&lt; int64_t &gt;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setOptimisations</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>abc14ebc574707335389982cf4dbd9285</anchor>
      <arglist>(NodeOptimisations)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setBufferViewToUse</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>a44b730e717db388216125d0528da28f4</anchor>
      <arglist>(Node *sourceNode, const choc::buffer::ChannelArrayView&lt; float &gt; &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setAudioOutput</name>
      <anchorfile>classtracktion_1_1graph_1_1Node.html</anchorfile>
      <anchor>af2be088d7f4fcc191028c33b29c3c10d</anchor>
      <arglist>(Node *sourceNode, const choc::buffer::ChannelArrayView&lt; float &gt; &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::NodeAndID</name>
    <filename>structtracktion_1_1graph_1_1NodeAndID.html</filename>
    <member kind="variable">
      <type>Node *</type>
      <name>node</name>
      <anchorfile>structtracktion_1_1graph_1_1NodeAndID.html</anchorfile>
      <anchor>a397548d3e72305f4c228246d8c718aa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>id</name>
      <anchorfile>structtracktion_1_1graph_1_1NodeAndID.html</anchorfile>
      <anchor>a915a2a4b365a54c02d21e62e90a2c622</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::NodeBuffer</name>
    <filename>structtracktion_1_1graph_1_1NodeBuffer.html</filename>
    <member kind="variable">
      <type>choc::buffer::ChannelArrayView&lt; float &gt;</type>
      <name>view</name>
      <anchorfile>structtracktion_1_1graph_1_1NodeBuffer.html</anchorfile>
      <anchor>a1ebbb02725e239109609ac90d2c89fa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>choc::buffer::ChannelArrayBuffer&lt; float &gt;</type>
      <name>data</name>
      <anchorfile>structtracktion_1_1graph_1_1NodeBuffer.html</anchorfile>
      <anchor>abf4abb116829c9b0c68e47ff907fccd9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::NodeGraph</name>
    <filename>structtracktion_1_1graph_1_1NodeGraph.html</filename>
    <member kind="variable">
      <type>std::unique_ptr&lt; Node &gt;</type>
      <name>rootNode</name>
      <anchorfile>structtracktion_1_1graph_1_1NodeGraph.html</anchorfile>
      <anchor>add874bfc578e0dfeaf09140c110cc047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Node * &gt;</type>
      <name>orderedNodes</name>
      <anchorfile>structtracktion_1_1graph_1_1NodeGraph.html</anchorfile>
      <anchor>a56bc9c14c9d88ba09d64830255b87868</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; NodeAndID &gt;</type>
      <name>sortedNodes</name>
      <anchorfile>structtracktion_1_1graph_1_1NodeGraph.html</anchorfile>
      <anchor>a4e6f8e96d49545285acdd0c997e42820</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::NodeOptimisations</name>
    <filename>structtracktion_1_1graph_1_1NodeOptimisations.html</filename>
    <member kind="variable">
      <type>ClearBuffers</type>
      <name>clear</name>
      <anchorfile>structtracktion_1_1graph_1_1NodeOptimisations.html</anchorfile>
      <anchor>ac89d22b6696b68a07f4760e2183c1dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AllocateAudioBuffer</type>
      <name>allocate</name>
      <anchorfile>structtracktion_1_1graph_1_1NodeOptimisations.html</anchorfile>
      <anchor>a8c6fb6998f093c7ae71ae5a018055fe0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::NodePlayer</name>
    <filename>classtracktion_1_1graph_1_1NodePlayer.html</filename>
    <member kind="function">
      <type></type>
      <name>NodePlayer</name>
      <anchorfile>classtracktion_1_1graph_1_1NodePlayer.html</anchorfile>
      <anchor>ae651fd6c435cb2bcfb58f1c431a87db0</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodePlayer</name>
      <anchorfile>classtracktion_1_1graph_1_1NodePlayer.html</anchorfile>
      <anchor>af1069cf11a82c526ba2166c9a1eb9f1d</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; nodeToProcess, PlayHeadState *playHeadStateToUse=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Node *</type>
      <name>getNode</name>
      <anchorfile>classtracktion_1_1graph_1_1NodePlayer.html</anchorfile>
      <anchor>aa91bbf27069f756fc7b365a783ebd3e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion_1_1graph_1_1NodePlayer.html</anchorfile>
      <anchor>ae54139fc706a7d021e6621f9796cee20</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; newNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion_1_1graph_1_1NodePlayer.html</anchorfile>
      <anchor>ae3616233d59653b27baed923ee1b7943</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; newNode, double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1graph_1_1NodePlayer.html</anchorfile>
      <anchor>ac0e6993eebc1d72dc0a4824652cd5972</anchor>
      <arglist>(double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; NodeGraph &gt;</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1graph_1_1NodePlayer.html</anchorfile>
      <anchor>a90925996ea360db38ea345b3585410bb</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; node, NodeGraph *oldGraph, double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1NodePlayer.html</anchorfile>
      <anchor>a95c81528f3347dfaaa01d23343cabd6e</anchor>
      <arglist>(const Node::ProcessContext &amp;pc)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion_1_1graph_1_1NodePlayer.html</anchorfile>
      <anchor>a2c14cee9d5b56be8fa260c15063a1a15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>processPostorderedNodes</name>
      <anchorfile>classtracktion_1_1graph_1_1NodePlayer.html</anchorfile>
      <anchor>a344f23b874c97be072eaaeac66305d1d</anchor>
      <arglist>(NodeGraph &amp;graphToProcess, const Node::ProcessContext &amp;pc)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>processWithPlayHeadState</name>
      <anchorfile>classtracktion_1_1graph_1_1NodePlayer.html</anchorfile>
      <anchor>a3918701803825590bdbf9659a3b8cec4</anchor>
      <arglist>(PlayHeadState &amp;phs, NodeGraph &amp;graphToProcess, const Node::ProcessContext &amp;pc)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static int</type>
      <name>processPostorderedNodesSingleThreaded</name>
      <anchorfile>classtracktion_1_1graph_1_1NodePlayer.html</anchorfile>
      <anchor>a16ac2a7199a000ff95a86a190e34be66</anchor>
      <arglist>(NodeGraph &amp;nodeGraph, const Node::ProcessContext &amp;pc)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; Node &gt;</type>
      <name>input</name>
      <anchorfile>classtracktion_1_1graph_1_1NodePlayer.html</anchorfile>
      <anchor>aef9a8c255f1e362c809ddbff9d42a1a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; NodeGraph &gt;</type>
      <name>nodeGraph</name>
      <anchorfile>classtracktion_1_1graph_1_1NodePlayer.html</anchorfile>
      <anchor>a1f59bcbe70ae0482b12bd5bdeec06bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PlayHeadState *</type>
      <name>playHeadState</name>
      <anchorfile>classtracktion_1_1graph_1_1NodePlayer.html</anchorfile>
      <anchor>aba98a2cd3b55aac5027f1606661f5134</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>classtracktion_1_1graph_1_1NodePlayer.html</anchorfile>
      <anchor>af49f0765b84d469fd75771113f61023c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>blockSize</name>
      <anchorfile>classtracktion_1_1graph_1_1NodePlayer.html</anchorfile>
      <anchor>ae5dfb2c0db0a934007e17992fe01c79c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::SpinLock</type>
      <name>inputAndNodesLock</name>
      <anchorfile>classtracktion_1_1graph_1_1NodePlayer.html</anchorfile>
      <anchor>a8f9fff6f5c76149dba8aeaf7899503ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::NodeProperties</name>
    <filename>structtracktion_1_1graph_1_1NodeProperties.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>hasAudio</name>
      <anchorfile>structtracktion_1_1graph_1_1NodeProperties.html</anchorfile>
      <anchor>a424a5365b326accfa493595c88c83e99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>hasMidi</name>
      <anchorfile>structtracktion_1_1graph_1_1NodeProperties.html</anchorfile>
      <anchor>aeb91080b0232d7d45b2a763da9a5393f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numberOfChannels</name>
      <anchorfile>structtracktion_1_1graph_1_1NodeProperties.html</anchorfile>
      <anchor>af59904ea90ee1cb608538b22354ce03b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>latencyNumSamples</name>
      <anchorfile>structtracktion_1_1graph_1_1NodeProperties.html</anchorfile>
      <anchor>a4004d596d1ef9f2f7387c127f38c9314</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nodeID</name>
      <anchorfile>structtracktion_1_1graph_1_1NodeProperties.html</anchorfile>
      <anchor>a5d4f44d195ca5757f9131e18c89fc0d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NodeReader</name>
    <filename>classNodeReader.html</filename>
    <member kind="function">
      <type></type>
      <name>NodeReader</name>
      <anchorfile>classNodeReader.html</anchorfile>
      <anchor>ab8fb99cf25f7ecbc7f6492e48ad96f4e</anchor>
      <arglist>(const AudioFile &amp;af)</arglist>
    </member>
    <member kind="function">
      <type>ARABool</type>
      <name>readAudioSamples</name>
      <anchorfile>classNodeReader.html</anchorfile>
      <anchor>afe234073b0959b63689a14db86a096c0</anchor>
      <arglist>(ARASamplePosition samplePosition, ARASampleCount samplesPerChannel, void *const *buffers)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classNodeReader.html</anchorfile>
      <anchor>a71875a45d4555683620817efe9c347aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumChannels</name>
      <anchorfile>classNodeReader.html</anchorfile>
      <anchor>a9e1c1c740f632cb5d3aaea7497d58816</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::NodeRenderContext</name>
    <filename>classtracktion_1_1engine_1_1NodeRenderContext.html</filename>
    <member kind="function">
      <type></type>
      <name>NodeRenderContext</name>
      <anchorfile>classtracktion_1_1engine_1_1NodeRenderContext.html</anchorfile>
      <anchor>a940881fa8f8d3c1fc6f5124aa0ea6c18</anchor>
      <arglist>(Renderer::RenderTask &amp;, Renderer::Parameters &amp;, std::unique_ptr&lt; tracktion::graph::Node &gt;, std::unique_ptr&lt; tracktion::graph::PlayHead &gt;, std::unique_ptr&lt; tracktion::graph::PlayHeadState &gt;, std::unique_ptr&lt; ProcessState &gt;, juce::AudioFormatWriter::ThreadedWriter::IncomingDataReceiver *sourceToUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NodeRenderContext</name>
      <anchorfile>classtracktion_1_1engine_1_1NodeRenderContext.html</anchorfile>
      <anchor>ad45e4eb60ce6ce197e332b80b050a874</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>getStatus</name>
      <anchorfile>classtracktion_1_1engine_1_1NodeRenderContext.html</anchorfile>
      <anchor>a9bf5ca4a0f55fa867a55f8a7acbd7bc1</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>renderNextBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1NodeRenderContext.html</anchorfile>
      <anchor>a61ea8a9bb1fc0c7301a99d97e5d7bfb9</anchor>
      <arglist>(std::atomic&lt; float &gt; &amp;progressToUpdate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>renderMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1NodeRenderContext.html</anchorfile>
      <anchor>a552f3e43e5ad42198a209f0bfd561507</anchor>
      <arglist>(Renderer::RenderTask &amp;, Renderer::Parameters &amp;, std::unique_ptr&lt; tracktion::graph::Node &gt;, std::unique_ptr&lt; tracktion::graph::PlayHead &gt;, std::unique_ptr&lt; tracktion::graph::PlayHeadState &gt;, std::unique_ptr&lt; ProcessState &gt;, std::atomic&lt; float &gt; &amp;progressToUpdate)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::NormaliseEffect</name>
    <filename>structtracktion_1_1engine_1_1NormaliseEffect.html</filename>
    <base>tracktion::engine::ClipEffect</base>
    <base>tracktion::engine::Selectable</base>
    <member kind="function">
      <type></type>
      <name>NormaliseEffect</name>
      <anchorfile>structtracktion_1_1engine_1_1NormaliseEffect.html</anchorfile>
      <anchor>a1d8cfa7c6c98d309e7230c4c11f59772</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NormaliseEffect</name>
      <anchorfile>structtracktion_1_1engine_1_1NormaliseEffect.html</anchorfile>
      <anchor>a438b40631fef79f679f99f4546808076</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion_1_1engine_1_1NormaliseEffect.html</anchorfile>
      <anchor>a9fbf4079e997f1e61f0fb9ac15320b97</anchor>
      <arglist>(const AudioFile &amp;sourceFile, double sourceLength) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProperties</name>
      <anchorfile>structtracktion_1_1engine_1_1NormaliseEffect.html</anchorfile>
      <anchor>a175a42626d9a4e724b5d594a9ca9e271</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>propertiesButtonPressed</name>
      <anchorfile>structtracktion_1_1engine_1_1NormaliseEffect.html</anchorfile>
      <anchor>a29d7e2a75afbebee0479a34835b3c39b</anchor>
      <arglist>(SelectionManager &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>structtracktion_1_1engine_1_1NormaliseEffect.html</anchorfile>
      <anchor>aeb48a44b883e3fd17b04b58c58486812</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>maxLevelDB</name>
      <anchorfile>structtracktion_1_1engine_1_1NormaliseEffect.html</anchorfile>
      <anchor>a18d04c8881968878646c748d0d27a6c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MidiInputDevice::NoteFilterRange</name>
    <filename>structtracktion_1_1engine_1_1MidiInputDevice_1_1NoteFilterRange.html</filename>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiInputDevice_1_1NoteFilterRange.html</anchorfile>
      <anchor>af0b41cddc5809c9adbf8b6a565a73648</anchor>
      <arglist>(int start, int end)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAllNotes</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiInputDevice_1_1NoteFilterRange.html</anchorfile>
      <anchor>a95db55fea205bd628b0e33e16c065180</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>startNote</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiInputDevice_1_1NoteFilterRange.html</anchorfile>
      <anchor>a346e98d843a6e8aaa0ac66713331410e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>endNote</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiInputDevice_1_1NoteFilterRange.html</anchorfile>
      <anchor>a2fbd865082c965da496e93138d2897fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::NovationRemoteSl</name>
    <filename>classtracktion_1_1engine_1_1NovationRemoteSl.html</filename>
    <base>tracktion::engine::ControlSurface</base>
    <member kind="function">
      <type></type>
      <name>NovationRemoteSl</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a0756703a2db761cc9c276e7703cd27c7</anchor>
      <arglist>(ExternalControllerManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NovationRemoteSl</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>af11b3a12471356209bcf924a9fff5d37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a301a42e699617e0a553889162fdb5936</anchor>
      <arglist>(bool connect) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutDownDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>abe6490c328edbeac4237ec7cc8ae84cd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateMiscFeatures</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>aff5471e2374b10ee9ca435455d47e85a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>ad80ff1c2207a2a669eb099f7b74887d5</anchor>
      <arglist>(int, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveFader</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a5a1314842d145a0182d7582145abb461</anchor>
      <arglist>(int channelNum, float newSliderPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePanPot</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>aa8d752ff83814ff1dbd72e9fbfdc805a</anchor>
      <arglist>(int channelNum, float newPan) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSoloAndMute</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a3022e31ef4d061f890574603dff2cfea</anchor>
      <arglist>(int channelNum, Track::MuteAndSoloLightState, bool isBright) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloCountChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a139545240ab3fe2328f68c9cc3ff939e</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a1aa3e0e13dce2f70b32d987e926f4e47</anchor>
      <arglist>(bool isPlaying) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a101f55029971a560daef6e670f4bccb7</anchor>
      <arglist>(bool isRecording) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationReadModeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a28f5b02b09b2c0c6bb903942a1c0c902</anchor>
      <arglist>(bool isReading) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>automationWriteModeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a2913f4493d5be0568a8fab8b10c1c30a</anchor>
      <arglist>(bool isWriting) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>aed832ff06b73bbe22fc972d7871a1bb3</anchor>
      <arglist>(int newStartChannelNumber, const juce::StringArray &amp;trackNames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameterChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>afefc2e982ad5353b28c1fdee7c912bf3</anchor>
      <arglist>(int parameterNumber, const ParameterSetting &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a7374921766f8befa805e14cbc2155daa</anchor>
      <arglist>(int parameterNumber) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wantsMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>adfd292b08f772e1bc96ee5a18fcd94e9</anchor>
      <arglist>(int, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eatsAllMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>aa2bee5398e8be0ef6daeffdad729d0da</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canChangeSelectedPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a0edbcc6b90cd483876c9ab007f6218c2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>currentSelectionChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>aa14899f8fd5bad2c5b64cc6fc5a56e50</anchor>
      <arglist>(juce::String) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingPluginParams</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>a94eefd323f6949a8365aac14d38fe14a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1NovationRemoteSl.html</anchorfile>
      <anchor>ad242aa6e26b2c2a7a706530d871b6ca7</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::OldEditConversion</name>
    <filename>structtracktion_1_1engine_1_1OldEditConversion.html</filename>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>convert</name>
      <anchorfile>structtracktion_1_1engine_1_1OldEditConversion.html</anchorfile>
      <anchor>a07eba4d2fbed3f3bc1866f8e97a28d23</anchor>
      <arglist>(const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>convert</name>
      <anchorfile>structtracktion_1_1engine_1_1OldEditConversion.html</anchorfile>
      <anchor>a8444f6c5ad3729052cbaabcd1267f0d8</anchor>
      <arglist>(juce::XmlElement &amp;editXML)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Edit::Options</name>
    <filename>structtracktion_1_1engine_1_1Edit_1_1Options.html</filename>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1Options.html</anchorfile>
      <anchor>a35168d9e132811f95305ce1913e818c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>editState</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1Options.html</anchorfile>
      <anchor>ae0f60056c3d82f50625c6a4ca25d43fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ProjectItemID</type>
      <name>editProjectItemID</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1Options.html</anchorfile>
      <anchor>ab78d4d877c5ee1092706ca5991fc8b52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditRole</type>
      <name>role</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1Options.html</anchorfile>
      <anchor>ad8bbd038fd08eae1ab21b9147815bc92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LoadContext *</type>
      <name>loadContext</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1Options.html</anchorfile>
      <anchor>a7e0b2d7e70cff52da17e772d7a52cafa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numUndoLevelsToStore</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1Options.html</anchorfile>
      <anchor>a9344b80e94e54ae73e9c0f56a0b336aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; juce::File()&gt;</type>
      <name>editFileRetriever</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1Options.html</anchorfile>
      <anchor>afb8791863b0fcbc228947729e03b1f7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; juce::File(const juce::String &amp;)&gt;</type>
      <name>filePathResolver</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1Options.html</anchorfile>
      <anchor>aba963059fdf366f6bae655acd0e6f1fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>numAudioTracks</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1Options.html</anchorfile>
      <anchor>abf180cf9fef0648df9d52f36094e25b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>defaultMasterVolumedB</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1Options.html</anchorfile>
      <anchor>ae3457802ed6165bba407094603d46ef3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::Oscillator</name>
    <filename>classtracktion_1_1engine_1_1Oscillator.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Waves</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>ab6d517c61b99418db1edc1beecf15ad2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>ab6d517c61b99418db1edc1beecf15ad2afb99bf9ac8eb5c47958b724f9babcfa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sine</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>ab6d517c61b99418db1edc1beecf15ad2ae6c9e8a04d92c3b89e86bfac8d24fe36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>square</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>ab6d517c61b99418db1edc1beecf15ad2a0d2b7cadf361b0007ace2e9a87836ee1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>saw</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>ab6d517c61b99418db1edc1beecf15ad2a696b1bb49e904ce1e54052b6bb953656</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>triangle</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>ab6d517c61b99418db1edc1beecf15ad2adc02fd03991d08ac1f3ff0027a1d216d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noise</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>ab6d517c61b99418db1edc1beecf15ad2a776c2e58757f628165a8b55d06b668b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>ab6d517c61b99418db1edc1beecf15ad2afb99bf9ac8eb5c47958b724f9babcfa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sine</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>ab6d517c61b99418db1edc1beecf15ad2ae6c9e8a04d92c3b89e86bfac8d24fe36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>square</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>ab6d517c61b99418db1edc1beecf15ad2a0d2b7cadf361b0007ace2e9a87836ee1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>saw</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>ab6d517c61b99418db1edc1beecf15ad2a696b1bb49e904ce1e54052b6bb953656</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>triangle</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>ab6d517c61b99418db1edc1beecf15ad2adc02fd03991d08ac1f3ff0027a1d216d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noise</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>ab6d517c61b99418db1edc1beecf15ad2a776c2e58757f628165a8b55d06b668b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Oscillator</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>ae8c2e3e5feb2885a3554cfc389f2b279</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>a9fc7ecaa448065fb3a55a6f1cb5703ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>aa756f2851ae55e269f318bc925dd448c</anchor>
      <arglist>(float p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>a1c53e7a7cb7101229aa3710ff9ab22c5</anchor>
      <arglist>(double sr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWave</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>ad1095ed3bf5bc6c6c005aace934864f7</anchor>
      <arglist>(Waves w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNote</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>aa860a61c7dcf29fcca6cc7462b8392c2</anchor>
      <arglist>(float n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGain</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>ab8d2ee6e44186ecae203070c265aa67b</anchor>
      <arglist>(float g)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPulseWidth</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>a21a41c2bc28860c32cc8d34f83dfaf77</anchor>
      <arglist>(float p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1Oscillator.html</anchorfile>
      <anchor>a83eb7ea85498d7e3a6ff2941645f26b7</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;buffer, int startSample, int numSamples)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::FourOscPlugin::OscParams</name>
    <filename>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</filename>
    <member kind="function">
      <type></type>
      <name>OscParams</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a1043ac008d5cc379e8c103b421f8ac41</anchor>
      <arglist>(FourOscPlugin &amp;plugin, int oscNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>attach</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>ac558ceb2d2a99c8054ce035eaac01030</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detach</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a0a47dbddc8187e49f30c85f89cd10ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a85c092c280c50776ff5b44c583b6e3eb</anchor>
      <arglist>(const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>waveShapeValue</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a3782b77a82ea25fc29e9aeb034c1ecec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>voicesValue</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a4e7a3b0fbded11c5c6795299aba2ef68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>tuneValue</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a4827dcf236521e3292d4984f99acbf1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>fineTuneValue</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a0fb5b66347343fb941696daae096a0bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>levelValue</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>ad64aefe231dcfeaa44b5f50efddfc53e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>pulseWidthValue</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a8c04d42147ef2d2e5bbd0a2b3939498a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>detuneValue</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a792c7fbea8a492f9590242e3a224d4ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>spreadValue</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>ac7fc61af07bc0b6db069feb6983b0139</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>panValue</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a90bce825341c3bda1866a6a03a012fe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>tune</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a8d58d00eb120e99159a9195fc91a6bcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>fineTune</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>ae3ad548f1ccbe223ab16e57860361c1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>level</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a1364b4d6b5b5d4d5cabb1849ab1e1dbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>pulseWidth</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a8b73b5c48779fa8ea1522e25a5bf94fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>detune</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>aeebed56c8cee41ed7cf70b0e16109baf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>spread</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a74f37c97f60a19086691e6e385577b36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>pan</name>
      <anchorfile>structtracktion_1_1engine_1_1FourOscPlugin_1_1OscParams.html</anchorfile>
      <anchor>a0b75757a5d6022f9a2fd1c4c817654c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::OutputDevice</name>
    <filename>classtracktion_1_1engine_1_1OutputDevice.html</filename>
    <base>tracktion::engine::Selectable</base>
    <member kind="function">
      <type></type>
      <name>OutputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDevice.html</anchorfile>
      <anchor>a1fdecaf045acdc55656c149d920766db</anchor>
      <arglist>(Engine &amp;, juce::String type, juce::String name, juce::String deviceID)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OutputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDevice.html</anchorfile>
      <anchor>abd249a6cfe606f4feefcde3ef707a1a6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDevice.html</anchorfile>
      <anchor>a03ebb8f8c828108825dc3b0dd88a78fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getAlias</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDevice.html</anchorfile>
      <anchor>a7de3189fc8bedf32ab5a37550c238579</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlias</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDevice.html</anchorfile>
      <anchor>a0b0f3a301e20bb5a18db4abc3c7561e0</anchor>
      <arglist>(const juce::String &amp;alias)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDeviceID</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDevice.html</anchorfile>
      <anchor>aba86356ee4749df07de6def79da606af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDevice.html</anchorfile>
      <anchor>a9c0680c7bae77606d0134b1916b0e512</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDevice.html</anchorfile>
      <anchor>a3e4a34700ffb494ef944e0930ddbdb47</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDevice.html</anchorfile>
      <anchor>aa4b630f0ab796f152b874759bee713eb</anchor>
      <arglist>(bool b)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDevice.html</anchorfile>
      <anchor>a20b11a940978239fcd4487b9d9175dee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDevice.html</anchorfile>
      <anchor>a800b712d68b908a08e273ef9aeec0ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual juce::String</type>
      <name>openDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDevice.html</anchorfile>
      <anchor>ab68f6ed01c431ed769570602e8b75159</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>closeDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDevice.html</anchorfile>
      <anchor>a9839d660e065cc4ff2fc064a6df33764</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>enabled</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDevice.html</anchorfile>
      <anchor>ab07f8e2115003a9e7597fd2a9574c034</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::OutputDeviceInstance</name>
    <filename>classtracktion_1_1engine_1_1OutputDeviceInstance.html</filename>
    <member kind="function">
      <type></type>
      <name>OutputDeviceInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDeviceInstance.html</anchorfile>
      <anchor>addf63fc51d2d6f602310f7b9ac87a89c</anchor>
      <arglist>(OutputDevice &amp;, EditPlaybackContext &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OutputDeviceInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDeviceInstance.html</anchorfile>
      <anchor>ae8d37e7f8a5d5eb01276184516d7c468</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>OutputDevice &amp;</type>
      <name>owner</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDeviceInstance.html</anchorfile>
      <anchor>ab179a337ef3b94d54e5cc9801f46f78d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditPlaybackContext &amp;</type>
      <name>context</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDeviceInstance.html</anchorfile>
      <anchor>a6119ca189668dc06aa52011125ffe3ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion_1_1engine_1_1OutputDeviceInstance.html</anchorfile>
      <anchor>affa744ad6b7dd40fc1f26d045d5ec422</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::VSTXML::Param</name>
    <filename>structtracktion_1_1engine_1_1VSTXML_1_1Param.html</filename>
    <base>tracktion::engine::VSTXML::Base</base>
    <member kind="variable">
      <type>int</type>
      <name>paramID</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Param.html</anchorfile>
      <anchor>ae89a7ffc5733f2d3bb58707cc40d2fc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>expr</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Param.html</anchorfile>
      <anchor>ab6e890bac042f431dbfba45ada41319e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Param.html</anchorfile>
      <anchor>af76b1835b0314726d04e48bb82b25a47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>label</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Param.html</anchorfile>
      <anchor>a4f8b121e3bb242a316b3dbff1ad9e012</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::StringArray</type>
      <name>shortNames</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Param.html</anchorfile>
      <anchor>a4fc252e2f29d31e22b4b2c0e43ca4e8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>type</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Param.html</anchorfile>
      <anchor>a60aeb8efd1ee8532c9d76ab23ee165a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numberOfStates</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Param.html</anchorfile>
      <anchor>a897c6cf432a7db0a36006a5510fcc6a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>defaultValue</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Param.html</anchorfile>
      <anchor>a467d6559b58cf9d4b0691eef4cf42203</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ParameterChangeHandler</name>
    <filename>classtracktion_1_1engine_1_1ParameterChangeHandler.html</filename>
    <class kind="struct">tracktion::engine::ParameterChangeHandler::Disabler</class>
    <class kind="struct">tracktion::engine::ParameterChangeHandler::Listener</class>
    <member kind="function">
      <type></type>
      <name>ParameterChangeHandler</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>a80cf2eba8ab06e913e1ddc999c1e2a50</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>a2d77c6b0b767f34c4bab9d65a51cdc5e</anchor>
      <arglist>(Listener &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>a1098ad6410e097fe2bcdf6b46078c1b0</anchor>
      <arglist>(Listener &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEventPending</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>a735f018346422dd458bf46819ddedfc3</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameterChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>ae55b05f021c0cb666f566abbba5bde2d</anchor>
      <arglist>(AutomatableParameter &amp;parameter, bool fromAutomation)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isParameterPending</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>ac632f70dae0ac557bf17f5ae1cb326c5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::Ptr</type>
      <name>getPendingParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>abdba487f708af4de98b32e6877530494</anchor>
      <arglist>(bool consumeEvent) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>actionFunctionTriggered</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>af56631ea805c6acc19ad525df926ca88</anchor>
      <arglist>(int externalControllerID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActionFunctionPending</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>aa3b7b7fc4ae356f765f24802115612a5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPendingActionFunctionId</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>a572210e5bf63811d0f3d7819cd8fd734</anchor>
      <arglist>(bool consumeEvent) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterLearnActive</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterChangeHandler.html</anchorfile>
      <anchor>af593aed5b249b02258bef3ee14ea49b0</anchor>
      <arglist>(bool a)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ParameterControlMappings</name>
    <filename>classtracktion_1_1engine_1_1ParameterControlMappings.html</filename>
    <class kind="struct">tracktion::engine::ParameterControlMappings::Mapping</class>
    <member kind="function">
      <type></type>
      <name>ParameterControlMappings</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a7a21f55d259f8fb2c83e305a839a12be</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ParameterControlMappings</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a47c1caf7a407337c7edd50bd1470dc7d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadFromEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a78939ca8a6c015c29e8256545bd9d5c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveToEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>ab5453fe676cb04fc0ffb38fcfd25c0d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkForDeletedParams</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a677323748205b2f093b9d61c4bc20eac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendChange</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a92f3be5621ad22bf356eca072b59036a</anchor>
      <arglist>(int controllerID, float newValue, int channel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isParameterMapped</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a4d2bf533aa2f83f5f8402250ba4fe193</anchor>
      <arglist>(AutomatableParameter &amp;param) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getParameterMapping</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a519dda36088952bda01954fbd4e33af3</anchor>
      <arglist>(AutomatableParameter &amp;, int &amp;channel, int &amp;controllerID) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeParameterMapping</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a02547c8a9595183f3fda3d718ca0bd2f</anchor>
      <arglist>(AutomatableParameter &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumControllerIDs</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a643ea1ea8538847d4151a32b3a5ba514</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showMappingsListForRow</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>ab0d62c1ca483d70ba311daafe6483c45</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRowBeingListenedTo</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>ac3cb30bfa870c4b9c4e135c53b85540e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; juce::String, juce::String &gt;</type>
      <name>getTextForRow</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a7dba4dbeaf8182ca1470ccc34520dde9</anchor>
      <arglist>(int rowNumber) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>listenToRow</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>aca3ef37e4f452025ab780644e4c2a159</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLearntParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a09a8b3ad2c3c4aa6b572cd2593c8aed3</anchor>
      <arglist>(bool keepListening)</arglist>
    </member>
    <member kind="function">
      <type>Mapping</type>
      <name>getMappingForRow</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>afa08480e96286fc84dd361faece9f643</anchor>
      <arglist>(int row) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeMapping</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a675b0be9fbc6f8f6ede3a5977d289034</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showMappingsEditor</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a938c54592c42c45439a9b417828f03ab</anchor>
      <arglist>(juce::DialogWindow::LaunchOptions &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ParameterControlMappings *</type>
      <name>getCurrentlyFocusedMappings</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterControlMappings.html</anchorfile>
      <anchor>a7880b809388178ee60227b2a8fdab124</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ParameterisableDragDropSource</name>
    <filename>classtracktion_1_1engine_1_1ParameterisableDragDropSource.html</filename>
    <member kind="function">
      <type></type>
      <name>ParameterisableDragDropSource</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterisableDragDropSource.html</anchorfile>
      <anchor>ab75e639be9cc697f5c58284a28e152cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterisableDragDropSource</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterisableDragDropSource.html</anchorfile>
      <anchor>a546bd2b074ae1d9d93522db93510c9de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>draggedOntoAutomatableParameterTargetBeforeParamSelection</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterisableDragDropSource.html</anchorfile>
      <anchor>a33a226a0622d470e96e3006c00c63221</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>draggedOntoAutomatableParameterTarget</name>
      <anchorfile>classtracktion_1_1engine_1_1ParameterisableDragDropSource.html</anchorfile>
      <anchor>a72be8917e005635da86a8c2d47162b81</anchor>
      <arglist>(const AutomatableParameter::Ptr &amp;param)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AutomatableEditItem::ParameterListChangeListener</name>
    <filename>structtracktion_1_1engine_1_1AutomatableEditItem_1_1ParameterListChangeListener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterListChangeListener</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableEditItem_1_1ParameterListChangeListener.html</anchorfile>
      <anchor>aa65023bbbec012a7beb690fa55d6d4ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>parameterListChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableEditItem_1_1ParameterListChangeListener.html</anchorfile>
      <anchor>aed0b821b0146ff5fa8ef1120b2947587</anchor>
      <arglist>(AutomatableEditItem &amp;)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>engine::Renderer::Parameters</name>
    <filename>structengine_1_1Renderer_1_1Parameters.html</filename>
    <member kind="function">
      <type></type>
      <name>Parameters</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a3db6a829c9e6aea053517cda77e1dec8</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Parameters</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a910ab6b9b469d9617cae422fe2ebe816</anchor>
      <arglist>(Engine &amp;e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Parameters</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a8964b793b5d92f4a78058d53686138ee</anchor>
      <arglist>(Edit &amp;ed)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Parameters</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a84f49f76600c05596e2ac90de95fd5ac</anchor>
      <arglist>(const Parameters &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Parameters</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>aea20e5968854b2d3f82104d2a9c4be04</anchor>
      <arglist>(Parameters &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>Parameters &amp;</type>
      <name>operator=</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a03c7abe445c43956613e39fbf323b51c</anchor>
      <arglist>(const Parameters &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>Parameters &amp;</type>
      <name>operator=</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a4b8036e3b353fd81a529c359e7acc10e</anchor>
      <arglist>(Parameters &amp;&amp;)=default</arglist>
    </member>
    <member kind="variable">
      <type>Engine *</type>
      <name>engine</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a8f4bc9065805c2c7a557c0f5c84e3348</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit *</type>
      <name>edit</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>ab09137329f16eca2cc9c544f60489069</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::BigInteger</type>
      <name>tracksToDo</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a1d5e5ce975472ee8ffd924b730400e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; Clip * &gt;</type>
      <name>allowedClips</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>afe0f0f2686917dc030fbf846b4d17430</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::File</type>
      <name>destFile</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a0208b1dd7d3e91b683e279e9549c6707</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioFormat *</type>
      <name>audioFormat</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>ad86747fba92393d073da07b642b03ce7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bitDepth</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a72cb0b5b6982a9c0be8adf12770685d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>blockSizeForAudio</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a20c9ac6a2d9aee2d43b76e303fe00235</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sampleRateForAudio</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a1c5ba6fa1edc2f9e5d7c2b99f351c583</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeRange</type>
      <name>time</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a9ffbef3267bbbde7616d190e3ab9c8bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeDuration</type>
      <name>endAllowance</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a819127b855d7e3613906dd68d8ffbe0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>createMidiFile</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>ad507de4dcb5e27a51e6e8fc48b6cdc3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>trimSilenceAtEnds</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>aa6b07ff345a06cd9847458fc5d2c0146</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>shouldNormalise</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>adfcc9b23cd51dafb586e610551e6752a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>shouldNormaliseByRMS</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a1888ffcfab8039aa0ed1764550369076</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>normaliseToLevelDb</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a18179292715438444c064e09977a28a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>canRenderInMono</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a03b342f74cd97c4674758abd5b80d42e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mustRenderInMono</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a089d2585310e32ecfd4dd6a68b7c87ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>usePlugins</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a99b358fa5c1b8ebd695ff8a13ccd7335</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>useMasterPlugins</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a3f9912d7e98940a5bc2ce06dab9ef07e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>realTimeRender</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a8c5ca94c142f0d8798e83996cdd2c61b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ditheringEnabled</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>ab2fbf914c8b9cf70e72cf7e3dbdf61d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>checkNodesForAudio</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a5611a4464c1bd5f4d89eb3ee32e665d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>quality</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a369d8bcbfe5cfe63de775995661e407e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::StringPairArray</type>
      <name>metadata</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a76ea271f1cc63e21d0c6ae86ec86964e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>separateTracks</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>ab06600fab0d7e097a6ef4b14d3253061</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ProjectItem::Category</type>
      <name>category</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>ad22e656f15a49fd7797c89b22d0001fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>resultMagnitude</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a6485305067d53eb30ab39b1656c3fc77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>resultRMS</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>abeefdb33c035cd36f1ffe3b6c2ee5c06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>resultAudioDuration</name>
      <anchorfile>structengine_1_1Renderer_1_1Parameters.html</anchorfile>
      <anchor>a63710dcc5c17931611b2efbfe60333b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ExpEnvelope::Parameters</name>
    <filename>structtracktion_1_1engine_1_1ExpEnvelope_1_1Parameters.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>attack</name>
      <anchorfile>structtracktion_1_1engine_1_1ExpEnvelope_1_1Parameters.html</anchorfile>
      <anchor>af4edec98a6e0551118a73d89985eca6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>decay</name>
      <anchorfile>structtracktion_1_1engine_1_1ExpEnvelope_1_1Parameters.html</anchorfile>
      <anchor>a5ec0213405df2ebf14db111ed37ef9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>sustain</name>
      <anchorfile>structtracktion_1_1engine_1_1ExpEnvelope_1_1Parameters.html</anchorfile>
      <anchor>a83515b0518e8ddff3eee943089e32dac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>release</name>
      <anchorfile>structtracktion_1_1engine_1_1ExpEnvelope_1_1Parameters.html</anchorfile>
      <anchor>a38682874c91bbda3902726d423a0b593</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::HostedAudioDeviceInterface::Parameters</name>
    <filename>structtracktion_1_1engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>structtracktion_1_1engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</anchorfile>
      <anchor>a0817dd532bb7bf4cd6d203041df75dcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>blockSize</name>
      <anchorfile>structtracktion_1_1engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</anchorfile>
      <anchor>a609ddcd242993e377e68c92dfd520af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>useMidiDevices</name>
      <anchorfile>structtracktion_1_1engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</anchorfile>
      <anchor>a0fa9298cdd4b197d2f9045317f84da88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>inputChannels</name>
      <anchorfile>structtracktion_1_1engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</anchorfile>
      <anchor>a52350afe61dbaac4e66c666107947f38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>outputChannels</name>
      <anchorfile>structtracktion_1_1engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</anchorfile>
      <anchor>a28d44d5d9fb1850e0e9679ea81313c73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::StringArray</type>
      <name>inputNames</name>
      <anchorfile>structtracktion_1_1engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</anchorfile>
      <anchor>ab87998d992d56dbb1b2fc7bf3207e82c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::StringArray</type>
      <name>outputNames</name>
      <anchorfile>structtracktion_1_1engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</anchorfile>
      <anchor>a18506932872b517b1be4c078ba689256</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>inputLatencyNumSamples</name>
      <anchorfile>structtracktion_1_1engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</anchorfile>
      <anchor>a100b0a71422e17e27ba15acb357294a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>outputLatencyNumSamples</name>
      <anchorfile>structtracktion_1_1engine_1_1HostedAudioDeviceInterface_1_1Parameters.html</anchorfile>
      <anchor>a6cfbf40e36e11c7c78e5af72c30b9c84</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::LinEnvelope::Parameters</name>
    <filename>structtracktion_1_1engine_1_1LinEnvelope_1_1Parameters.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>attack</name>
      <anchorfile>structtracktion_1_1engine_1_1LinEnvelope_1_1Parameters.html</anchorfile>
      <anchor>a05994d82ac604521b23be0f878e1758c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>decay</name>
      <anchorfile>structtracktion_1_1engine_1_1LinEnvelope_1_1Parameters.html</anchorfile>
      <anchor>a052af8a819cb687defd82d58c00639f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>sustain</name>
      <anchorfile>structtracktion_1_1engine_1_1LinEnvelope_1_1Parameters.html</anchorfile>
      <anchor>ae0f43a4cf1ac4014a8db9977dd222d31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>release</name>
      <anchorfile>structtracktion_1_1engine_1_1LinEnvelope_1_1Parameters.html</anchorfile>
      <anchor>a65af635d49c20fa5187fe97d0b6d81de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::SimpleLFO::Parameters</name>
    <filename>structtracktion_1_1engine_1_1SimpleLFO_1_1Parameters.html</filename>
    <member kind="function">
      <type></type>
      <name>Parameters</name>
      <anchorfile>structtracktion_1_1engine_1_1SimpleLFO_1_1Parameters.html</anchorfile>
      <anchor>a574662e1128a2b64ce773a8a4759f9ac</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Parameters</name>
      <anchorfile>structtracktion_1_1engine_1_1SimpleLFO_1_1Parameters.html</anchorfile>
      <anchor>a5ee1bde70925845599d2cc91b4f6945c</anchor>
      <arglist>(float frequencyIn, float phaseOffsetIn, float offsetIn, float depthIn, WaveShape waveShapeIn, float pulseWidthIn)</arglist>
    </member>
    <member kind="variable">
      <type>WaveShape</type>
      <name>waveShape</name>
      <anchorfile>structtracktion_1_1engine_1_1SimpleLFO_1_1Parameters.html</anchorfile>
      <anchor>a31a2a14e44ab59a0f183a186a3be6b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>frequency</name>
      <anchorfile>structtracktion_1_1engine_1_1SimpleLFO_1_1Parameters.html</anchorfile>
      <anchor>aa3910200d3ba136ecd55bd4badb63ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>phaseOffset</name>
      <anchorfile>structtracktion_1_1engine_1_1SimpleLFO_1_1Parameters.html</anchorfile>
      <anchor>a856690ba0dd3988c19679c2cff630c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>offset</name>
      <anchorfile>structtracktion_1_1engine_1_1SimpleLFO_1_1Parameters.html</anchorfile>
      <anchor>a792bc391153c79b34b4bfd5c31c86b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>depth</name>
      <anchorfile>structtracktion_1_1engine_1_1SimpleLFO_1_1Parameters.html</anchorfile>
      <anchor>a43413b390222b3c12ef89d040e6f9c9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>pulseWidth</name>
      <anchorfile>structtracktion_1_1engine_1_1SimpleLFO_1_1Parameters.html</anchorfile>
      <anchor>aab3e6a2ae9cc7e319438cf69315d3488</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ParameterSetting</name>
    <filename>structtracktion_1_1engine_1_1ParameterSetting.html</filename>
    <member kind="function">
      <type></type>
      <name>ParameterSetting</name>
      <anchorfile>structtracktion_1_1engine_1_1ParameterSetting.html</anchorfile>
      <anchor>a9fc433b00bd8dba5402c143aebd1a0b8</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>structtracktion_1_1engine_1_1ParameterSetting.html</anchorfile>
      <anchor>a2f8893399581c997fca3e47eaba37783</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>label</name>
      <anchorfile>structtracktion_1_1engine_1_1ParameterSetting.html</anchorfile>
      <anchor>a8a6ba8494fcfb674ef080045c990375a</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>valueDescription</name>
      <anchorfile>structtracktion_1_1engine_1_1ParameterSetting.html</anchorfile>
      <anchor>a129bd68a76e0525c763ba0dd290ea7ea</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>value</name>
      <anchorfile>structtracktion_1_1engine_1_1ParameterSetting.html</anchorfile>
      <anchor>ab6f3449dd06c1cd12ecbe936210cea47</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>engine::ParameterWithStateValue</name>
    <filename>structengine_1_1ParameterWithStateValue.html</filename>
    <member kind="function">
      <type></type>
      <name>ParameterWithStateValue</name>
      <anchorfile>structengine_1_1ParameterWithStateValue.html</anchorfile>
      <anchor>abea763e41b69e6f533d8ed791f71d981</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParameterWithStateValue</name>
      <anchorfile>structengine_1_1ParameterWithStateValue.html</anchorfile>
      <anchor>a239a9afc2880146f75dfc0b0d9ae5476</anchor>
      <arglist>(Plugin &amp;, const juce::String &amp;paramID, const juce::Identifier &amp;propertyName, const juce::String &amp;description, float defaultValue, juce::NormalisableRange&lt; float &gt; valueRange, std::function&lt; juce::String(float)&gt; valueToStringFunction={}, std::function&lt; float(const juce::String &amp;)&gt; stringToValueFunction={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ParameterWithStateValue</name>
      <anchorfile>structengine_1_1ParameterWithStateValue.html</anchorfile>
      <anchor>a10a13d84c3befb0350d4f779f82d4f36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParameterWithStateValue</name>
      <anchorfile>structengine_1_1ParameterWithStateValue.html</anchorfile>
      <anchor>a655e88c37edac689d0cf25fe05d79aa0</anchor>
      <arglist>(ParameterWithStateValue &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>ParameterWithStateValue &amp;</type>
      <name>operator=</name>
      <anchorfile>structengine_1_1ParameterWithStateValue.html</anchorfile>
      <anchor>a91fd02822663089c2b66e735d5e13005</anchor>
      <arglist>(ParameterWithStateValue &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter &amp;</type>
      <name>getParameter</name>
      <anchorfile>structengine_1_1ParameterWithStateValue.html</anchorfile>
      <anchor>af31e82f8a4ca38c4eb4315e4df9ae13a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::CachedValue&lt; float &gt; &amp;</type>
      <name>getCachedValue</name>
      <anchorfile>structengine_1_1ParameterWithStateValue.html</anchorfile>
      <anchor>ab4cdbd72b79616ecebd15cddd1f9ce75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>structengine_1_1ParameterWithStateValue.html</anchorfile>
      <anchor>a371154428edcdd5762d377e822986b60</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameter</name>
      <anchorfile>structengine_1_1ParameterWithStateValue.html</anchorfile>
      <anchor>affc1bd5e7cb9f1b43a2c052ab97782a0</anchor>
      <arglist>(float newValue, juce::NotificationType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structengine_1_1ParameterWithStateValue.html</anchorfile>
      <anchor>a6ea409e482223fee8ca3195b5b36eb17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFromValueTree</name>
      <anchorfile>structengine_1_1ParameterWithStateValue.html</anchorfile>
      <anchor>a05d400aa1585c58420922119f2c3f051</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>parameter</name>
      <anchorfile>structengine_1_1ParameterWithStateValue.html</anchorfile>
      <anchor>acd07ca15a67b1f76dc712470b5d850a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; juce::CachedValue&lt; float &gt; &gt;</type>
      <name>value</name>
      <anchorfile>structengine_1_1ParameterWithStateValue.html</anchorfile>
      <anchor>a8032e5b4ca67fdfdcc8356c4d17234dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::PatchBayPlugin</name>
    <filename>classtracktion_1_1engine_1_1PatchBayPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <class kind="struct">tracktion::engine::PatchBayPlugin::Wire</class>
    <member kind="function">
      <type></type>
      <name>PatchBayPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a7c00fd3c6f2c600189c64ece825f55db</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PatchBayPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>ad89a8ee9736c940e08ea18b90d17dcc0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumWires</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a086ccbe30b4b72913fbc5fd55647bbfc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Wire *</type>
      <name>getWire</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>ac8a7c9ac9231aea850f5eea39e214004</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeConnection</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a15daf094a210346638f5026cf6958690</anchor>
      <arglist>(int inputChannel, int outputChannel, float gainDb, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>breakConnection</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>ab72241b761c76c79e098897289d220da</anchor>
      <arglist>(int inputChannel, int outputChannel)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>aed441ae74896fd9a6ccb7ead7505de8b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a38fffdbe9e849cc3c1c45012cc05b81b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a22d1ce85e30eb75e0f36475438a797dc</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>ae9330de603d3c827412054f68159e50e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a25b7cfbc62244c34bd1bb15d160756af</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a266f51e5765e8be4eeaf0da58cad895d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeDisabled</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>acec2eab6b9b3a9aeb9393e11663ada84</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a95d7ea03d6250a1af40669c47f049263</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>ad7ebbd3b197cc57a960bb6fa3e222183</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getChannelNames</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a1ac32fa372e0b11f1c5a3a0dcb8c5976</anchor>
      <arglist>(juce::StringArray *, juce::StringArray *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a61c88c8729eb009edbd88a4ae20bf7fc</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a2f7d0cb2b7736cad8e52706314ef574e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1PatchBayPlugin.html</anchorfile>
      <anchor>a92d0dc57cf987810af566d9cbdfcebc1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::StepClip::Pattern</name>
    <filename>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</filename>
    <class kind="struct">tracktion::engine::StepClip::Pattern::CachedPattern</class>
    <member kind="function">
      <type></type>
      <name>Pattern</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a955e3c9dc94cd8c9df9f5c3ea2c188e8</anchor>
      <arglist>(StepClip &amp;, const juce::ValueTree &amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pattern</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>aa172179952486eaab7b161ea3bbac493</anchor>
      <arglist>(const Pattern &amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a3aca05ef43b3863004e20f441f6a49fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>aeb23e34cc198449b3972cfe94d581b54</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getNote</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a2d94556ebca878b61395c372e0c5dfe4</anchor>
      <arglist>(int channel, int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNote</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>add1865f70ba1ba71ffa3a253c71d4cb9</anchor>
      <arglist>(int channel, int index, bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a2c40f7252ca652a227a67fbadb516668</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearChannel</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a3c40aae6fcc8d9161216f67d7bd23434</anchor>
      <arglist>(int channel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertChannel</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a0d18c00edf81795130a721db646b594d</anchor>
      <arglist>(int channel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeChannel</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a7fd737c3a5d15e44fb0c5deb56259f26</anchor>
      <arglist>(int channel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomiseChannel</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a1b8e51798dc2c3963089d91f86a6c3e8</anchor>
      <arglist>(int channel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomiseSteps</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a0c1355f62011e4dd8ffdaba142624cf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftChannel</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>acf2cf62cf11c8d55a95759fc10463ce6</anchor>
      <arglist>(int channel, bool toTheRight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleAtInterval</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>ab8862d9b1e96511ec06cb208ff121655</anchor>
      <arglist>(int channel, int interval)</arglist>
    </member>
    <member kind="function">
      <type>juce::BigInteger</type>
      <name>getChannel</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a80f6b868646b8a88c4506c5106169f85</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChannel</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>acb35ed53852d345db058f2497fa704ff</anchor>
      <arglist>(int index, const juce::BigInteger &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumNotes</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>ab7b7d713245bddf225485abea2094be3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumNotes</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a5f2d0288bc81a351d0ab919a08db1bf1</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>BeatDuration</type>
      <name>getNoteLength</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a06eb5d882ceba4c7e2104ea731521848</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoteLength</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a344f7adc0800399a99d939b6bb0ced6e</anchor>
      <arglist>(BeatDuration)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; int &gt;</type>
      <name>getVelocities</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a0eb8fb0c9668162ff646a6193ab52f5c</anchor>
      <arglist>(int channel) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a167da83a57591ff742220112e0da15cb</anchor>
      <arglist>(int channel, const juce::Array&lt; int &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getVelocity</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>af94c8fdd3b8ca791d8655792bb785acf</anchor>
      <arglist>(int channel, int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocity</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a005b05d6fb4ea78db473be3acf31ba52</anchor>
      <arglist>(int channel, int index, int value)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; double &gt;</type>
      <name>getGates</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a1fa2a2a65b11ffb76ca2e8d279071739</anchor>
      <arglist>(int channel) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGates</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>af731f046cc0ca6ab3162f41f009af0cb</anchor>
      <arglist>(int channel, const juce::Array&lt; double &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getGate</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a863b21882b614253ad0798a1b88a433d</anchor>
      <arglist>(int channel, int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGate</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a3a400e8da5b21e6a207f6ffa3b59b50f</anchor>
      <arglist>(int channel, int index, double value)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; float &gt;</type>
      <name>getProbabilities</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a6af119a3d88e931eeb9699d50ce6b929</anchor>
      <arglist>(int channel) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProbabilities</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a1455f9cf487cfdd099a68efba4b4df75</anchor>
      <arglist>(int channel, const juce::Array&lt; float &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getProbability</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>adb88dcf76c89ba879505a8d433b20716</anchor>
      <arglist>(int channel, int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProbability</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>ad145f1a2f3adc63b428b37050b83a0bf</anchor>
      <arglist>(int channel, int index, float value)</arglist>
    </member>
    <member kind="variable">
      <type>StepClip &amp;</type>
      <name>clip</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>a4912de15a485d4296490de007d93925c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1Pattern.html</anchorfile>
      <anchor>abadbb8a49ac3f6c3beaf35fa598d001f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::StepVolumeEffect::Pattern</name>
    <filename>structtracktion_1_1engine_1_1StepVolumeEffect_1_1Pattern.html</filename>
    <member kind="function">
      <type></type>
      <name>Pattern</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>af76a752c7678ef02dbaa8e3ad89f88d4</anchor>
      <arglist>(StepVolumeEffect &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pattern</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a6f3254202e3363551b665ee3504e1581</anchor>
      <arglist>(const Pattern &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getNote</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a98d67d0630e1214fbf1a57964690ac90</anchor>
      <arglist>(int index) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNote</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>ab11b7cca85c294182bcab9aa2cca9598</anchor>
      <arglist>(int index, bool value)</arglist>
    </member>
    <member kind="function">
      <type>juce::BigInteger</type>
      <name>getPattern</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a0fc6a940ab2068ac748fd8ddafc3165f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPattern</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a5cbc954b9d9daf38cfba186f74237f03</anchor>
      <arglist>(const juce::BigInteger &amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a85612836c85a3792eb723993aa6c6ca9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumNotes</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a323cdf1a5423acff9a73ad6e8ca50405</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shiftChannel</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>af53a3d2e6fb7c429a7557b7c6d922e6d</anchor>
      <arglist>(bool toTheRight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleAtInterval</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a84e10379c20d76cea45550aff800af7d</anchor>
      <arglist>(int interval)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomiseChannel</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a795a2bb70593fbbafcd36bc0e9889e77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>StepVolumeEffect &amp;</type>
      <name>effect</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>a288b25062f924fef443c21946871c07f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect_1_1Pattern.html</anchorfile>
      <anchor>afdb760dfe1d6618fc42c388a8408726b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::PatternGenerator</name>
    <filename>classtracktion_1_1engine_1_1PatternGenerator.html</filename>
    <base protection="private">tracktion::engine::ValueTreeAllEventListener</base>
    <class kind="struct">tracktion::engine::PatternGenerator::ProgressionItem</class>
    <member kind="enumeration">
      <type></type>
      <name>Mode</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a87e3536a690758ecd3435e00a2a01086</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1PatternGenerator.html" anchor="a87e3536a690758ecd3435e00a2a01086a3262d48df5d75e3452f0f16b313b7808">off</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1PatternGenerator.html" anchor="a87e3536a690758ecd3435e00a2a01086ac1b40dcc0012f80aec53213219b680bd">arpeggio</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1PatternGenerator.html" anchor="a87e3536a690758ecd3435e00a2a01086a4cc6bb18d258bec29c43b8ee90d177e8">chords</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1PatternGenerator.html" anchor="a87e3536a690758ecd3435e00a2a01086a9eca04f99c3d4532f3a8a11f9d264d12">bass</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1PatternGenerator.html" anchor="a87e3536a690758ecd3435e00a2a01086a9818e2287e76d37753313e255e2428a2">melody</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NoteType</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a69ba4d23c7544f72e2979f10764423fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ChordInKeyNote</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a69ba4d23c7544f72e2979f10764423fdab95be8ab9680f1c1bec7c0178e0463bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ChordNotInKeyNote</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a69ba4d23c7544f72e2979f10764423fdaa50b519fff31d1659f7a6a719eda3074</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InKeyNote</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a69ba4d23c7544f72e2979f10764423fdaf0c7b3af145d493a5729f720422b22cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NotInKeyNote</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a69ba4d23c7544f72e2979f10764423fda21fb1b6ee7281786ba4a7079b36afd82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ChordInKeyNote</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a69ba4d23c7544f72e2979f10764423fdab95be8ab9680f1c1bec7c0178e0463bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ChordNotInKeyNote</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a69ba4d23c7544f72e2979f10764423fdaa50b519fff31d1659f7a6a719eda3074</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InKeyNote</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a69ba4d23c7544f72e2979f10764423fdaf0c7b3af145d493a5729f720422b22cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NotInKeyNote</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a69ba4d23c7544f72e2979f10764423fda21fb1b6ee7281786ba4a7079b36afd82</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PatternGenerator</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>ad0ead3c87e38a8589a1d968003320b3d</anchor>
      <arglist>(Clip &amp;, juce::ValueTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PatternGenerator</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>ab7132ee2b759413c0c55cf0d6c3cc878</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>BeatDuration</type>
      <name>getMinimumChordLength</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>ae605ec656946a1dc771be9a1fe236461</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BeatDuration</type>
      <name>getMaximumChordLength</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a1915b82d27aa1d9b11600032fb49d9ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validateChordLengths</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a7b960562d66d41728d6963b1a9f9b349</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getPossibleTriadNames</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a6b51e0c2aab41196f8e24af72bfcfa1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getPossibleSeventhNames</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>afe74283579f856b8c2432555c20dfe1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getChordProgressionLength</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a56693d42d7b3d201e55df90e34b3e979</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; ProgressionItem * &gt; &amp;</type>
      <name>getChordProgression</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>aff8b8012666a90d3d23f94f98a13e380</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChordProgression</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a1cb0600e61e7012a7f9286004f906a95</anchor>
      <arglist>(juce::ValueTree v)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getChordProgressionChordNames</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>af2d4d9e63f90c69f97a6a39b31b856f6</anchor>
      <arglist>(bool simplified) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChordProgressionFromChordNames</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a8c8b5755fa325a508df2acedb4726303</anchor>
      <arglist>(juce::StringArray progression)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeIndexFromProgression</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a24c053b010d4f0261c3b25c553af9752</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeRangeFromProgression</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>af75ab75583c553b3d6b5d7b7a2f68486</anchor>
      <arglist>(int start, int end)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearProgression</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>ab3b935a44bed64cb20d2b72ed84018ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertChordIntoProgression</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>afeebbb702607989e8367be97da374ef8</anchor>
      <arglist>(int idx, juce::String chordName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertChordIntoProgression</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>ae2fad6823104eadb197554a47bd639ba</anchor>
      <arglist>(int idx, juce::String chordName, juce::String pitches)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveChordInProgression</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a05aa866d04d01bce9fbd030367293754</anchor>
      <arglist>(int srcIdx, int dstIdx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>duplicateChordInProgression</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>abc20491865eff42db922fa0dde878d1b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playGuideChord</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>af82f1177167e8b3fc7d5873aee8c9c92</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>NoteType</type>
      <name>getTypeForNote</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a849514377d7dcf75a7620e223cb7702e</anchor>
      <arglist>(const MidiClip &amp;, const MidiNote &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>formatChordName</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>ae73fb47e187d9f57d3e7497bf4ba5c5a</anchor>
      <arglist>(juce::String simplifiedChordName) const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getArpStyles</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>ac1713445d3c7c32da3c00115bfebc4c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getChordPattern</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a323fde55fbd0c0cd2bad97abcf845f01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getBassPattern</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a456500600c42a77ddb2f93816aa10055</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChordPattern</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a3811d979e0abeac9d6b24be264e01ddf</anchor>
      <arglist>(juce::ValueTree pattern)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBassPattern</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>af183e14b008b9500daa7e256ee55d099</anchor>
      <arglist>(juce::ValueTree pattern)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generatePattern</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a066c5130eff19a797ee475a03fd8c421</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Scale</type>
      <name>getScaleAtBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a2dcaa9f75b8bcb8517b46d6a7004696e</anchor>
      <arglist>(BeatPosition) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNoteAtBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a7e3ab3772512618acd11e008804ac849</anchor>
      <arglist>(BeatPosition) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAutoUpdate</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a6ee864987ef451203a36890e271b0fb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoUpdate</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>ae23e26828fbd0c6e78314265c2fc43c0</anchor>
      <arglist>(bool on)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshPatternIfNeeded</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a0d2ed437ebb12f662bf28bc8c47d76dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>editFinishedLoading</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a738c5b7022d2c5d0bdd7ae4ddd31705b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BeatDuration</type>
      <name>getFlattenedChordProgression</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>acdc6c40d3169bd15bbae6368904127d0</anchor>
      <arglist>(juce::OwnedArray&lt; ProgressionItem &gt; &amp;progression, bool globalTime=false)</arglist>
    </member>
    <member kind="variable">
      <type>Clip &amp;</type>
      <name>clip</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a1706fb572990f965ef07aa37ab71514a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>afd6ba59cfafce94174d0e08fd165f77f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; Mode &gt;</type>
      <name>mode</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a10fa5f928a36231faf9c5e8969a9078b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; Scale::ScaleType &gt;</type>
      <name>scaleType</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a7d27d385ccb914593b5031e0857ff3f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>autoUpdate</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a705202c1eac7b453fd4e1ef9e225566e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>arpUpDown</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a0ba383175b113f59ec3ee6a2d0a8f73f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>arpPlayRoot</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>aab8eb0ffbe6b6cbe54936c2b52c06c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>allNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a77664609a1437bda7adb09933e442e87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>octaveUp</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a955e0ce102a42108a806919600da9b83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>octaveDown</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>afb2ba517a4d21eadaec3686a5af0f689</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>spread</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a53cffeb11d69533f4a2f46237c32b24c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>arpPatternLength</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>aa96e6a62dabb149003e926582e5ff9e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>velocity</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>ade61880d2991ef28f61fe7c9291df5e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>gate</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a571614a452f31eb472d59100b4aa0463</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; BeatDuration &gt;</type>
      <name>melodyNoteLength</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a2c4d499993c6f3480221f620dd3d20a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>arpStyle</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a314ff70469532776c5429da1d1cf1673</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>scaleRoot</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>ac1086d97a65990034a7954ab6f8a6588</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>arpSteps</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a1c69c89480728277cf90c7bfdfb346a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>octave</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a1ccc51087a5995d82ab46c008cdd01f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::int64 &gt;</type>
      <name>patternHash</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a078cfe2132c0c0dcfb9417d43e53ca92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>scaleRootGlobalTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a8183264cc18ffdb465ab030c46f9b2ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>scaleRootChordTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1PatternGenerator.html</anchorfile>
      <anchor>a9a9e47d0d3aa8307174af432c598bfe0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::StepClip::PatternInstance</name>
    <filename>structtracktion_1_1engine_1_1StepClip_1_1PatternInstance.html</filename>
    <base>tracktion::engine::Selectable</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; PatternInstance &gt;</type>
      <name>Ptr</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1PatternInstance.html</anchorfile>
      <anchor>a7cb5e4b66df0a69abcf5944964945ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PatternInstance</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1PatternInstance.html</anchorfile>
      <anchor>ae9f4043723ca6a8df249625adcc6c8bc</anchor>
      <arglist>(StepClip &amp;c, int index)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PatternInstance</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1PatternInstance.html</anchorfile>
      <anchor>ab74d17dfba000e317090f996331fb614</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Pattern</type>
      <name>getPattern</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1PatternInstance.html</anchorfile>
      <anchor>a2e4f9ac6ad168a89ed287b442e7d9969</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSequenceIndex</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1PatternInstance.html</anchorfile>
      <anchor>a6d319770b3a53ac7e6578cd2b027c6ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1PatternInstance.html</anchorfile>
      <anchor>a1d188b64c2a218326676160bc71fa524</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>StepClip &amp;</type>
      <name>clip</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1PatternInstance.html</anchorfile>
      <anchor>ae877fd86e9e52d596c1e1818097a214e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>patternIndex</name>
      <anchorfile>structtracktion_1_1engine_1_1StepClip_1_1PatternInstance.html</anchorfile>
      <anchor>aa74b68535f7d94b3c9f7b935a6c35f6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::PerformanceMeasurement</name>
    <filename>classtracktion_1_1graph_1_1PerformanceMeasurement.html</filename>
    <class kind="struct">tracktion::graph::PerformanceMeasurement::Statistics</class>
    <member kind="function">
      <type></type>
      <name>PerformanceMeasurement</name>
      <anchorfile>classtracktion_1_1graph_1_1PerformanceMeasurement.html</anchorfile>
      <anchor>a7dd033ee195b7d9eeac28565327ede45</anchor>
      <arglist>(std::string counterName, int runsPerPrintout=100, bool printOnDestruction=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PerformanceMeasurement</name>
      <anchorfile>classtracktion_1_1graph_1_1PerformanceMeasurement.html</anchorfile>
      <anchor>a4be21483c43c3f15ce9c4306d4ae563a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classtracktion_1_1graph_1_1PerformanceMeasurement.html</anchorfile>
      <anchor>ae08840729b523fd5ab661fab85d89e6a</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stop</name>
      <anchorfile>classtracktion_1_1graph_1_1PerformanceMeasurement.html</anchorfile>
      <anchor>a44eaa79d2e95bb3fa0ff40bcc17aefd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printStatistics</name>
      <anchorfile>classtracktion_1_1graph_1_1PerformanceMeasurement.html</anchorfile>
      <anchor>a9096c62df232c32aa0c8352cbf29c81f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1graph_1_1PerformanceMeasurement.html</anchorfile>
      <anchor>ae95939661fd8c19456695e67a5738e3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Statistics</type>
      <name>getStatistics</name>
      <anchorfile>classtracktion_1_1graph_1_1PerformanceMeasurement.html</anchorfile>
      <anchor>addd892fae110667ea624b20725de1aa6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Statistics</type>
      <name>getStatisticsAndReset</name>
      <anchorfile>classtracktion_1_1graph_1_1PerformanceMeasurement.html</anchorfile>
      <anchor>a07156c13a79498ce80aa041a69d9371a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::PhaserPlugin</name>
    <filename>classtracktion_1_1engine_1_1PhaserPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>PhaserPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a602254a6a45c368deb01fcf6428d2da4</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PhaserPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>ab4e7bc46defaf255e8f92b882c51ef12</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a2eb27f70bc380441ecd5fa49b2d2ec65</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>aaa118e93221d9d4bc8a233284495f86a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>ab3208aa48ef042623e167e1329753172</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a2cccaaf55ea6c11cfc3b899b52d35885</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>aad813723930312044236368ca73c0f8d</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a3a968e2df8c10882edf3e9ad87e1036e</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>ad1eddff9408b3ea708ee898f399844a5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a6a2d6746ab2d57b7474c76d2db8c1ce8</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a66ddebf71e26a5bf7d2706a34b52de12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>depth</name>
      <anchorfile>classtracktion_1_1engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>ab8b7898bf3124b10f2321fe19283afed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rate</name>
      <anchorfile>classtracktion_1_1engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>afd1874cc5eba091acce8caba3c2ce2da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>feedbackGain</name>
      <anchorfile>classtracktion_1_1engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>a8153290379ef1145e9006c508404fcc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1PhaserPlugin.html</anchorfile>
      <anchor>adce4d3f5adbba500fb6fa42d6555d0dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::PhysicalMidiInputDevice</name>
    <filename>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</filename>
    <base>tracktion::engine::MidiInputDevice</base>
    <class kind="class">tracktion::engine::PhysicalMidiInputDevice::Listener</class>
    <member kind="function">
      <type></type>
      <name>PhysicalMidiInputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a1a7ef8f6d3389ba21c5baac2958b7382</anchor>
      <arglist>(Engine &amp;, juce::MidiDeviceInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PhysicalMidiInputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>ac9511fae9a3ec7d069465a2f51b5ab76</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance *</type>
      <name>createInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a83b50011e4b5e6a4a5f9e3a26b943b9b</anchor>
      <arglist>(EditPlaybackContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadingMidiTimecode</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a66ec3f94e33c363fb0973559fac04c6f</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIgnoresHours</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>aa587d29fcffe35c3255b74c622288267</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIgnoringHours</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a6033353487a23328cea28d18533f7848</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAcceptingMMC</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a97435acc60ddb4fcd510ae816042478e</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadingControllerMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a63326d3ad9feedc95f7d61f700aa9fb5</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAvailableToEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a2549b9b80c889268e975c1cf27cff1b1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExternalController</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a82a13642c23371357a6d0c8a51e91466</anchor>
      <arglist>(ExternalController *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeExternalController</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>aa990294b3569ed22fb92c606439c9112</anchor>
      <arglist>(ExternalController *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsedForExternalControl</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a522711e2e758a57080aadc5a05abd6f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a8c32d534d54728cf80ec310634d5f6fa</anchor>
      <arglist>(const juce::MidiMessage &amp;, MPESourceID) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadProps</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a9871d7a46b04f4a228d1da8bea5c46aa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveProps</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a2ce027eb5c997baa1d432678d9218ce6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>DeviceType</type>
      <name>getDeviceType</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a563fff934ac9f1560500f151291d34ce</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>ae62f88c8f62af2f21d165530cd42b697</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>ad44477a688380a92f93e4e0497d728ff</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>openDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>abb98323cffa853a21272ba232ef45383</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a192ef4b9f5a6a08acdaec5b7722cac62</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a671c3aaae21a9aaa96cb75bed408cc2f</anchor>
      <arglist>(juce::MidiInput *, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>ade5c87f9a1415977a0a7cae638024668</anchor>
      <arglist>(const juce::MidiMessage &amp;, MPESourceID)=0</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isTakingControllerMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a5336c563b9b13f0f9f08f1ed16736f0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend struct</type>
      <name>PhysicalMidiInputDeviceInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1PhysicalMidiInputDevice.html</anchorfile>
      <anchor>a14676162bedb8a2028dfb13bdfe0dc53</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Pitch</name>
    <filename>structtracktion_1_1engine_1_1Pitch.html</filename>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getPitchAsString</name>
      <anchorfile>structtracktion_1_1engine_1_1Pitch.html</anchorfile>
      <anchor>ab95a4e6ae9630c8c5b1790a4a581c0ca</anchor>
      <arglist>(Engine &amp;engine, int pitch)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getPitchAsStrings</name>
      <anchorfile>structtracktion_1_1engine_1_1Pitch.html</anchorfile>
      <anchor>ab42a10bf232f0f58c443a11a84052c7f</anchor>
      <arglist>(Engine &amp;engine, int pitch)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getPitchFromString</name>
      <anchorfile>structtracktion_1_1engine_1_1Pitch.html</anchorfile>
      <anchor>add46ea2e3435ef04dd0ca18905648cd0</anchor>
      <arglist>(Engine &amp;engine, const juce::String &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getPitchStrings</name>
      <anchorfile>structtracktion_1_1engine_1_1Pitch.html</anchorfile>
      <anchor>a2513707b20a34dddb747659697e0abda</anchor>
      <arglist>(Engine &amp;engine, bool separateSharpFlat)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>semitonesToRatio</name>
      <anchorfile>structtracktion_1_1engine_1_1Pitch.html</anchorfile>
      <anchor>ad8e686bad78940d235ee362add23602a</anchor>
      <arglist>(float semitonesUp) noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::Pitches</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1Pitches.html</filename>
    <base>tracktion::engine::Clipboard::ContentType</base>
    <member kind="function">
      <type></type>
      <name>Pitches</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Pitches.html</anchorfile>
      <anchor>a63b6d4ae73d6827b12e585b33b3e31e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Pitches</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Pitches.html</anchorfile>
      <anchor>a53798870ae86278a68dbb4a70e29005c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Pitches.html</anchorfile>
      <anchor>abc36d3a361b831d4af716ff0b6ad2b98</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Pitches.html</anchorfile>
      <anchor>ae3179b071e4302d9007657da52f29b5a</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Pitches.html</anchorfile>
      <anchor>a2b8ac2e249e6721e16dd1ca7831b15da</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; juce::ValueTree &gt;</type>
      <name>pitches</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Pitches.html</anchorfile>
      <anchor>ad2a6dc31e24968e97b12dc8ac05cad76</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::PitchSequence</name>
    <filename>classtracktion_1_1engine_1_1PitchSequence.html</filename>
    <member kind="function">
      <type></type>
      <name>PitchSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>a1193b6c95f03ba17f292e9b87864bbec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PitchSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>a2f3fe865770903488b2d83607b9029be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>ae2f16111d30a6727b0baec87f3a399d7</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeResources</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>a3f97ac9987bc25eb2efa9462a9e30d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Edit &amp;</type>
      <name>getEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>a05fdab3db039fd214f4fc4c99c0af038</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>a0ec4603fa409f62e8aab325cfe6bffa1</anchor>
      <arglist>(const PitchSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>acf5470ef4217da9aee37830a454029d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; PitchSetting * &gt; &amp;</type>
      <name>getPitches</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>a92c3b7474d50e8539095752a82dac66a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumPitches</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>abed1b57bc00e50604bdf773b354cc5c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PitchSetting *</type>
      <name>getPitch</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>ac937d4ee731c5b8a43d71cb72a334489</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>PitchSetting &amp;</type>
      <name>getPitchAt</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>ae8670bbcdf7cc4444b37d5076f4014c9</anchor>
      <arglist>(TimePosition) const</arglist>
    </member>
    <member kind="function">
      <type>PitchSetting &amp;</type>
      <name>getPitchAtBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>ab859a522fcd5f906fc5afc90816579bb</anchor>
      <arglist>(BeatPosition) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfPitch</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>a40b74aaf3bf1fe0b35e27518f2ce8125</anchor>
      <arglist>(const PitchSetting *) const</arglist>
    </member>
    <member kind="function">
      <type>PitchSetting::Ptr</type>
      <name>insertPitch</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>a35e74f4f4a0558e33ec816fa163b9394</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>PitchSetting::Ptr</type>
      <name>insertPitch</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>a841cfe4a4bb9c3797bd45677e153e2ad</anchor>
      <arglist>(BeatPosition, int pitch)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePitchStart</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>a7bb24320fa583a456f532c347ebcee7e</anchor>
      <arglist>(PitchSetting &amp;, BeatDuration deltaBeats, bool snapToBeat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpaceIntoSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>a1c0ac5fda5301ffbecfadb4df0f6b10d</anchor>
      <arglist>(TimePosition, TimeDuration amountOfSpace, bool snapToBeat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sortEvents</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>a85c5cff76cb72b136d6dbffa0f83f26b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSequence.html</anchorfile>
      <anchor>adce88fa49da86594eb4f2149ba435078</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::PitchSetting</name>
    <filename>classtracktion_1_1engine_1_1PitchSetting.html</filename>
    <base>tracktion::engine::TrackItem</base>
    <base protection="private">tracktion::engine::ValueTreeAllEventListener</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; PitchSetting &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>a590603385e5d4389d012f3cd41546f5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; PitchSetting &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>ac7fd8022457f9b42490438626bc63751</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PitchSetting</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>a823eb02a2d19f19935d0b29b976fff0f</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PitchSetting</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>ab37019f5be5bd9e3bbc10fff5c33634b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>a045190edd2b8cdb1dcce80b19aa8cb8a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getStartBeatNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>a6b65bcaaafea67f250debce41b3cf71a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStartBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>a174152d5048d63f66a9a4ae6ed0cdccc</anchor>
      <arglist>(BeatPosition)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPitch</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>ae8cc249e025cc631d07480109f6ce937</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPitch</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>a1126b44c4953fc7a110d5c0aa843c920</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>Scale::ScaleType</type>
      <name>getScale</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>a65a191ffb787bf41f4abf27081a99524</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScaleID</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>aeafafe04e40219948ccff7d65b7ff322</anchor>
      <arglist>(Scale::ScaleType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFromEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>ab08a109b36755d1d93a233a26d349ada</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>ac25da7ca1a6cebfc91dd938feb10bf81</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>a152832e5213f768b15a399423efc4708</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>ClipPosition</type>
      <name>getPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>a59a3acae8a8579d3d220471e9ba2cfed</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>ad29eb3d4fcb0cf5b995ae5d9e0e3c58a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; BeatPosition &gt;</type>
      <name>startBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>af5dfba2a63ec8c12f49b172ef28c179b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>pitch</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>a92c4fb7054391993671fc79177357aa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>accidentalsSharp</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>a7162e308f5c8c77c16e0f55d2297378e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; Scale::ScaleType &gt;</type>
      <name>scale</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchSetting.html</anchorfile>
      <anchor>a45604d7244625a7fea40f50ea933a4bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::PitchShiftEffect</name>
    <filename>structtracktion_1_1engine_1_1PitchShiftEffect.html</filename>
    <base>tracktion::engine::ClipEffect</base>
    <member kind="function">
      <type></type>
      <name>PitchShiftEffect</name>
      <anchorfile>structtracktion_1_1engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>a189cde762e0a35b64f1c5ca9f9837659</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>structtracktion_1_1engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>a47e450bb595d3d85862342368a15d7d0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion_1_1engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>a198982e743b79f1ffa14e95a323d569b</anchor>
      <arglist>(const AudioFile &amp;sourceFile, double sourceLength) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProperties</name>
      <anchorfile>structtracktion_1_1engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>a3897688db5d129fcae61867475c19034</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>propertiesButtonPressed</name>
      <anchorfile>structtracktion_1_1engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>afad648537f10900b971982df515aae29</anchor>
      <arglist>(SelectionManager &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getIndividualHash</name>
      <anchorfile>structtracktion_1_1engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>aefd566528f46f71e9846f8c1ca4ae63d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>a472377f7e037ada33d778ba0c226fa0c</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>a6d5d859f5295e6b77d6f40371591b2c7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>structtracktion_1_1engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>ad08c558b142a659ff577266e233d263d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::ReferenceCountedObjectPtr&lt; PitchShiftPlugin &gt;</type>
      <name>plugin</name>
      <anchorfile>structtracktion_1_1engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>a477164f43f13ae4d1b046f09196f4035</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; ClipEffects::RenderInhibitor &gt;</type>
      <name>inhibitor</name>
      <anchorfile>structtracktion_1_1engine_1_1PitchShiftEffect.html</anchorfile>
      <anchor>aee1a571f5bcd8809eea70fd7031496d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::PitchShiftPlugin</name>
    <filename>classtracktion_1_1engine_1_1PitchShiftPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>PitchShiftPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>aa68f5c383230c389ed0d4b520a33ac8f</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PitchShiftPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a63b69a51d86898463e5d940d1e42ef31</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PitchShiftPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a209ca5907e232b8dfd04e70f3a41b737</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>ab0069b94cf7f71372130a2581b4b3e73</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a981e8904393521e0e4bdb379c12763fb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>aa015bac2a83648cea72e79d3f94450be</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a7d79da110a73850063d47b14e41f985a</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>af031bff546c7fd8480dd8dae6741ec3c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>ad6627793fa487dc187248e6d5c335f1b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a668cdd36a01020f0190eee3a1bc7ed27</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a7edf261c6b015f38d7ab2f8e03cf0069</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a916d83d358ae64b72d8080e6879b9632</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a933d7a6ecab617612e6dd65cf1fcbc75</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a508cea268ba48f990cea42445decaf60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a9a0beae0288cf5ec59d855565bcf9f73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>getMaximumSemitones</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a445cd1bea31cc137e1b980226daf956b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>semitonesValue</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a589bc74543d0be603b7e48aad3438f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>mode</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a764e389bd34ed33771f26438f4aed4af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; TimeStretcher::ElastiqueProOptions &gt;</type>
      <name>elastiqueOptions</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>abf54752286bba0fc0c0ef242f07478a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>semitones</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>a0c991c43a42e4e6e2466c2f27f4ee2e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1PitchShiftPlugin.html</anchorfile>
      <anchor>af46fdb06fcb06bed57d74cd57735dfc3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::EditInsertPoint::Placement</name>
    <filename>structtracktion_1_1engine_1_1EditInsertPoint_1_1Placement.html</filename>
    <member kind="variable">
      <type>juce::ReferenceCountedObjectPtr&lt; Track &gt;</type>
      <name>track</name>
      <anchorfile>structtracktion_1_1engine_1_1EditInsertPoint_1_1Placement.html</anchorfile>
      <anchor>abc56cb8bcb281ab07c793fe471eac371</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClipOwner *</type>
      <name>clipOwner</name>
      <anchorfile>structtracktion_1_1engine_1_1EditInsertPoint_1_1Placement.html</anchorfile>
      <anchor>ab5b21dac9591cae3e5288c75e9d6fcac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; TimePosition &gt;</type>
      <name>time</name>
      <anchorfile>structtracktion_1_1engine_1_1EditInsertPoint_1_1Placement.html</anchorfile>
      <anchor>ab8e025f9e879513ebd448f602a15ae60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::PlaybackInitialisationInfo</name>
    <filename>structtracktion_1_1engine_1_1PlaybackInitialisationInfo.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>startTime</name>
      <anchorfile>structtracktion_1_1engine_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>aa396348c8a238c2d3e14c1191fc1f945</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>structtracktion_1_1engine_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>ae50a936154b8acf9e4c09471b59365b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>blockSizeSamples</name>
      <anchorfile>structtracktion_1_1engine_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>a7c4cde4c1717f0c0bff00f9fbf6b34a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const juce::Array&lt; AudioNode * &gt; *</type>
      <name>rootNodes</name>
      <anchorfile>structtracktion_1_1engine_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>a50f874d312553cdfd850a0294ebdd420</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PlayHead &amp;</type>
      <name>playhead</name>
      <anchorfile>structtracktion_1_1engine_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>aae3c538c5cb5e8a2e953afceb6495f0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::PlaybackInitialisationInfo</name>
    <filename>structtracktion_1_1graph_1_1PlaybackInitialisationInfo.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>structtracktion_1_1graph_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>a85ac75c13abc055ba7a6deccbbf25709</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>blockSize</name>
      <anchorfile>structtracktion_1_1graph_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>a2b8e82cc228692f44927a0212efaaed5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NodeGraph &amp;</type>
      <name>nodeGraph</name>
      <anchorfile>structtracktion_1_1graph_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>aa71244b58b1a39c74a71a1d28a524287</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NodeGraph *</type>
      <name>nodeGraphToReplace</name>
      <anchorfile>structtracktion_1_1graph_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>a17b1aec4ebc8090a6a44b7347a18cc04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; NodeBuffer(choc::buffer::Size)&gt;</type>
      <name>allocateAudioBuffer</name>
      <anchorfile>structtracktion_1_1graph_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>a821b6477c4e0c39d556ab0daa89e8e05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(NodeBuffer &amp;&amp;)&gt;</type>
      <name>deallocateAudioBuffer</name>
      <anchorfile>structtracktion_1_1graph_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>a439945f040ab06a8da6aba3839243c9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableNodeMemorySharing</name>
      <anchorfile>structtracktion_1_1graph_1_1PlaybackInitialisationInfo.html</anchorfile>
      <anchor>aa8b2daa473377cc84289a1fd244a08cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PlaybackRegionAndSource</name>
    <filename>classPlaybackRegionAndSource.html</filename>
    <member kind="function">
      <type></type>
      <name>PlaybackRegionAndSource</name>
      <anchorfile>classPlaybackRegionAndSource.html</anchorfile>
      <anchor>afe5381d185bbae3579622d8781b83987</anchor>
      <arglist>(ARADocument &amp;doc, AudioClipBase &amp;audioClip, const ARAFactory &amp;f, const ARAPlugInExtensionInstance &amp;pluginExtensionInstance, const juce::String &amp;itemID, PlaybackRegionAndSource *instanceToClone)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PlaybackRegionAndSource</name>
      <anchorfile>classPlaybackRegionAndSource.html</anchorfile>
      <anchor>aaf42b3a9bcc6f5807cacfe6b59b68c2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classPlaybackRegionAndSource.html</anchorfile>
      <anchor>a0c2dcf474ad9d2ef5f3ba6b6511b88ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classPlaybackRegionAndSource.html</anchorfile>
      <anchor>aa52f420d09ca256da9282358fc995608</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setViewSelection</name>
      <anchorfile>classPlaybackRegionAndSource.html</anchorfile>
      <anchor>a1e558acfdba850e1dc1303a46d859875</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; PlaybackRegionWrapper &gt;</type>
      <name>playbackRegion</name>
      <anchorfile>classPlaybackRegionAndSource.html</anchorfile>
      <anchor>ad0dedeb0835d78450b5db8e9d53304ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; AudioSourceWrapper &gt;</type>
      <name>audioSource</name>
      <anchorfile>classPlaybackRegionAndSource.html</anchorfile>
      <anchor>a71967fd92948b22f0893cf869f2dfe8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PlaybackRegionWrapper</name>
    <filename>classPlaybackRegionWrapper.html</filename>
    <member kind="function">
      <type></type>
      <name>PlaybackRegionWrapper</name>
      <anchorfile>classPlaybackRegionWrapper.html</anchorfile>
      <anchor>abd175d8f5b7d81bc04b87ee8f4a89a1c</anchor>
      <arglist>(ARADocument &amp;d, AudioClipBase &amp;audioClip, const ARAFactory &amp;factory, const AudioModificationWrapper &amp;audioModification)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PlaybackRegionWrapper</name>
      <anchorfile>classPlaybackRegionWrapper.html</anchorfile>
      <anchor>ac2f7bc3df1440be3ef9d718a120e0735</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateRange</name>
      <anchorfile>classPlaybackRegionWrapper.html</anchorfile>
      <anchor>a04f32a855b991d7d6050a1499eeee519</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SizedStruct&lt; ARA_STRUCT_MEMBER(ARAPlaybackRegionProperties, color)&gt;</type>
      <name>getPlaybackRegionProperties</name>
      <anchorfile>classPlaybackRegionWrapper.html</anchorfile>
      <anchor>a9f0ecb708fdff8b7c0fe6d46dd9363c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ARAPlaybackRegionRef</type>
      <name>playbackRegionRef</name>
      <anchorfile>classPlaybackRegionWrapper.html</anchorfile>
      <anchor>a61ba32a728316b6b21bc7e0698281a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ARADocument &amp;</type>
      <name>doc</name>
      <anchorfile>classPlaybackRegionWrapper.html</anchorfile>
      <anchor>afbffab49c3dc30614f4682fc4ac4e89a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioClipBase &amp;</type>
      <name>clip</name>
      <anchorfile>classPlaybackRegionWrapper.html</anchorfile>
      <anchor>acac88f1add1c57527866ba8c4bfd99cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::PlayHead</name>
    <filename>classtracktion_1_1engine_1_1PlayHead.html</filename>
    <class kind="struct">tracktion::engine::PlayHead::EditTimeWindow</class>
    <member kind="function">
      <type></type>
      <name>PlayHead</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a8904338bd58e44d82380d3879b96616b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a30d9cf0385daed3bcd19eee25a936106</anchor>
      <arglist>(double newTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>ae019a8710a4b8fa7ad49b86a0b1aab4f</anchor>
      <arglist>(legacy::EditTimeRange rangeToPlay, bool looped)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>af9a68b19225f67e81aecf0a246ef3a56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playLockedToEngine</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a20e2eebb1a7347d97b3e8b479d408ac1</anchor>
      <arglist>(legacy::EditTimeRange rangeToPlay)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a92dea7a1acac5c46a74c28aaaf76e17e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUserIsDragging</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a5383ad71929205660a6324c025634c85</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUserDragging</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a7eb4712608fd3075e2b7e8790a466cc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Time</type>
      <name>getLastUserInteractionTime</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a24dc760800e9321e1ef8800bfa72929d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>streamTimeToSourceTime</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a676937b3d8ec6db38dbe104b045de57e</anchor>
      <arglist>(double streamTime) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>streamTimeToSourceTimeUnlooped</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a8cc1e4ec25a0be7185719f30c594e4d1</anchor>
      <arglist>(double streamTime) const</arglist>
    </member>
    <member kind="function">
      <type>EditTimeWindow</type>
      <name>streamTimeToEditWindow</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a0127840a6b85353106cb8219ba659f5c</anchor>
      <arglist>(legacy::EditTimeRange streamTime) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>ae7747574de9ec6e23b307b7592b9ae2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getUnloopedPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>acc4440b4bebce5de55ed5e54324bfd64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>overridePosition</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>ad84f62e4cdfad7dd53fe8144aa18f2e3</anchor>
      <arglist>(double newTime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlaying</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a4d381dfa7fc16ee1bc363af8e73a54d3</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStopped</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a41b2f7d7267f1ee878a7100e9fefee49</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLooping</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>afd4560a1c7e57adc8b966e362e8ed451</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRollingIntoLoop</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a1139d53dc791fe9857221387ba0beff5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>legacy::EditTimeRange</type>
      <name>getLoopTimes</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a9c5779cacae887b2cbccd01a9d55bb24</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopTimes</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a125f1fa8ad5c2a41c60e7e01604b4a9a</anchor>
      <arglist>(bool loop, legacy::EditTimeRange times)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRollInToLoop</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a05b7ec7a32edf8c0dbfc2c37e2ad21b3</anchor>
      <arglist>(double t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deviceManagerPositionUpdate</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a3d94f8501b8ac7453c7470cfc32146e7</anchor>
      <arglist>(double newTime, double newTimeEnd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>linearTimeToLoopTime</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a8f0b2d725043e33a9c980009fae5815b</anchor>
      <arglist>(double time, legacy::EditTimeRange loop)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>linearTimeToLoopTime</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHead.html</anchorfile>
      <anchor>a10fabed8168ced91a80ced31dccc88a9</anchor>
      <arglist>(double time, double loopStart, double loopLen)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::PlayHead</name>
    <filename>classtracktion_1_1graph_1_1PlayHead.html</filename>
    <member kind="function">
      <type></type>
      <name>PlayHead</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>ae6e2544613e13da6abc05f95b02c4890</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>aa3b6cd7f8ea3dd4c1e81b4f64dd42077</anchor>
      <arglist>(int64_t newPosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>aaf4bbdbbc5d9e03d0c8d736b46e8a24b</anchor>
      <arglist>(juce::Range&lt; int64_t &gt; rangeToPlay, bool looped)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>aa824e230078f5836cab91daf7d24d546</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playSyncedToRange</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>ad4767df403d6e5404c2eb79e0668e369</anchor>
      <arglist>(juce::Range&lt; int64_t &gt; rangeToPlay)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>a4dbd33beb139754d1d9442e78fc421c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getPosition</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>a4b72f1c02725e7509e53c942a7b680b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getUnloopedPosition</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>aedfd4f3e0a4b8900e040ebc9448052f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>overridePosition</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>a4de4dbe7d80cc819a705c69a04a43ca6</anchor>
      <arglist>(int64_t newPosition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlaying</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>ac3356b0b0004b6fc340b67b2dd943f92</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStopped</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>aa90e0a5bfdcc119a4f6e5edaac6316f7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLooping</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>ac6024be3d53ada7466b54a4fc33b6376</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRollingIntoLoop</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>a514a80687a332fc66de170c128d20606</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; int64_t &gt;</type>
      <name>getLoopRange</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>aa98b2f414ff43a7e98d35b7cde952611</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopRange</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>a60bec6ac0630553386c2e15031ad99a6</anchor>
      <arglist>(bool loop, juce::Range&lt; int64_t &gt; loopRange, bool updatePosition=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRollInToLoop</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>ab4750ea61842260bb7f788b90c9a1872</anchor>
      <arglist>(int64_t playbackPosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUserIsDragging</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>a7fa4864f7a23d3c765e48e82c936c757</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUserDragging</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>a8cf106c89d45488fb0c81e6d93779fe9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::system_clock::time_point</type>
      <name>getLastUserInteractionTime</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>a031563c2aa5aa3f4e7737129378181eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScrubbingBlockLength</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>a8786527530f349aee89db329d56af535</anchor>
      <arglist>(int64_t numSamples)</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getScrubbingBlockLength</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>a561c6fefbfe3cc2e662e11f8c1882251</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>referenceSamplePositionToTimelinePosition</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>a9d45fe1c79837ff11ef0c339ea024557</anchor>
      <arglist>(int64_t referenceSamplePosition) const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>referenceSamplePositionToTimelinePositionUnlooped</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>a7771c67eed5d757224e2f4d867aba696</anchor>
      <arglist>(int64_t referenceSamplePosition) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; int64_t &gt;</type>
      <name>referenceSampleRangeToSourceRangeUnlooped</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>ad4e960d9f698065926d63ebc4511e762</anchor>
      <arglist>(juce::Range&lt; int64_t &gt; sourceReferenceSampleRange) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReferenceSampleRange</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>aa9b2c3a51f984a7d938115841051f7b1</anchor>
      <arglist>(juce::Range&lt; int64_t &gt; sampleRange)</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; int64_t &gt;</type>
      <name>getReferenceSampleRange</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>a9f3e1801e05951b696a4ada8f88ae582</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getPlayoutSyncPosition</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>ab2d36a2a694a26f37098220c387f4abf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int64_t</type>
      <name>linearPositionToLoopPosition</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHead.html</anchorfile>
      <anchor>ae54fdba5ca1748662a742c3940a11bd1</anchor>
      <arglist>(int64_t position, juce::Range&lt; int64_t &gt; loopRange)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::PlayHeadPositionNode</name>
    <filename>classtracktion_1_1engine_1_1PlayHeadPositionNode.html</filename>
    <base>tracktion::graph::Node</base>
    <base>tracktion::engine::TracktionEngineNode</base>
    <member kind="function">
      <type></type>
      <name>PlayHeadPositionNode</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHeadPositionNode.html</anchorfile>
      <anchor>ae434bb5d1c9fff9b5e3314c3563c726d</anchor>
      <arglist>(ProcessState &amp;processStateToUse, std::unique_ptr&lt; tracktion::graph::Node &gt; inputNode, std::atomic&lt; double &gt; &amp;playHeadTimeToUpdate)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHeadPositionNode.html</anchorfile>
      <anchor>a054da0ba6ef0fd838d281ee92cb9330a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; tracktion::graph::Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHeadPositionNode.html</anchorfile>
      <anchor>a2383e5d4dbc5515cd5041adf6933da5c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHeadPositionNode.html</anchorfile>
      <anchor>a292a134e9c245393bae7eafb462b89e7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHeadPositionNode.html</anchorfile>
      <anchor>a7566ab523c483212aa5b43f7dd65099a</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1PlayHeadPositionNode.html</anchorfile>
      <anchor>ac88ae10a1b3fca4ee9c01427367f3286</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::PlayHeadState</name>
    <filename>classtracktion_1_1graph_1_1PlayHeadState.html</filename>
    <member kind="function">
      <type></type>
      <name>PlayHeadState</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHeadState.html</anchorfile>
      <anchor>ad77cc974fa7f6815c776982abdfabbfc</anchor>
      <arglist>(PlayHead &amp;ph)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHeadState.html</anchorfile>
      <anchor>abbab551bc62145cf902b86e015b8d337</anchor>
      <arglist>(juce::Range&lt; int64_t &gt; referenceSampleRange)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContiguousWithPreviousBlock</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHeadState.html</anchorfile>
      <anchor>a6474335d78f5494c21b0fe04aa1b5269</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>didPlayheadJump</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHeadState.html</anchorfile>
      <anchor>ae8ff21bb34dda95c4aef27dd5cd5bf8b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFirstBlockOfLoop</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHeadState.html</anchorfile>
      <anchor>a74f5de9bad37da18ca50f51ddaf26686</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLastBlockOfLoop</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHeadState.html</anchorfile>
      <anchor>a5a303b276115861b670c5c456fa3330d</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="variable">
      <type>PlayHead &amp;</type>
      <name>playHead</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHeadState.html</anchorfile>
      <anchor>a10c3a29652520bb70fbb280ee1339ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isPlayHeadRunning</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHeadState.html</anchorfile>
      <anchor>a0aa35af8534614f3bef2acb72ae84809</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>playheadJumped</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHeadState.html</anchorfile>
      <anchor>ae1f79bdf96141b0feb3ef50bd9c6ddef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>lastBlockOfLoop</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHeadState.html</anchorfile>
      <anchor>a4fc419344f8345c17b90978aacc4e2ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>firstBlockOfLoop</name>
      <anchorfile>classtracktion_1_1graph_1_1PlayHeadState.html</anchorfile>
      <anchor>ac9bbc363c47aa3efbee90d29c553760d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::Plugin</name>
    <filename>classtracktion_1_1engine_1_1Plugin.html</filename>
    <base>tracktion::engine::Selectable</base>
    <base>tracktion::engine::Exportable</base>
    <base>tracktion::engine::AutomatableEditItem</base>
    <base>tracktion::engine::MacroParameterElement</base>
    <base protection="protected">tracktion::engine::ValueTreeAllEventListener</base>
    <class kind="struct">tracktion::engine::Plugin::EditorComponent</class>
    <class kind="struct">tracktion::engine::Plugin::WindowState</class>
    <class kind="struct">tracktion::engine::Plugin::Wire</class>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a40ac6aa87a5d994a3d796722c0ed16f9</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1Plugin.html" anchor="a40ac6aa87a5d994a3d796722c0ed16f9a1b0946070001f7747fcbd4dc1478d74d">allPlugins</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1Plugin.html" anchor="a40ac6aa87a5d994a3d796722c0ed16f9a585279d417834861136f0a63c58084e4">folderTrackPlugins</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1Plugin.html" anchor="a40ac6aa87a5d994a3d796722c0ed16f9a3a8e78d30b23e2d43dd5ad82426cb506">effectPlugins</enumvalue>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; Plugin &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ab7b2ef82c571b9b9b6fa12668f942346</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; Plugin &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>aae693dddcde3455d3ac37f4df0c5112d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plugin</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a78a1602081ac5659180e4945060211c6</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Plugin</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a9ee7724f1f2a11b50432c3c26d1be4b8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableAboutToBeDeleted</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ae66eead29e0bcc03aa78bd3b24344ed2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playStartedOrStopped</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>aa279b415db870ae425ad09335b1f714c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialiseFully</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>acfe234ba3bcbe62c6b3fb66431617a40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>flushPluginStateToValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a34674060476bb93136fef7e1fc9672c9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a28c7e39156aee6001d012571eb9e30ca</anchor>
      <arglist>() const override=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ae6fc463daa2041d1626d283a5045f82d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getVendor</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a054c24d91dfd216bd3dd8acd061e302b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a0e4af3975770e9027aaa0790018d8ae4</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getIdentifierString</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a9ef062cbd92049d1655bef8142d29abe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getTooltip</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a598e10a1228de063718dfad7f6f55689</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a37643091dff79aa8cf89c9d973ceb796</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a1547f9209211bf349d088237bfa7b207</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrozen</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a69679d3d44b5247a5576b0799b9eb1cf</anchor>
      <arglist>(bool shouldBeFrozen)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFrozen</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a34dc3dff2d9146a161b323aff73f2cd7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProcessingEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a6a4c596b9e1329a031d3a664bfabd0ac</anchor>
      <arglist>(bool p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isProcessingEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a992f3e61c4c706df55e349fae7ff4f49</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>af8a5b5e4a604c15476b9fabf48b1e507</anchor>
      <arglist>(const PluginInitialisationInfo &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialiseWithoutStopping</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a66a312b5427eea68590258148b3a5448</anchor>
      <arglist>(const PluginInitialisationInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialising</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>af33005d1295549668e60fd84cc884b6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a121a2b64061669af085dcfd5bc9dcbde</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>aaaf83c9e5c82417adabbff0894edb3fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>trackPropertiesChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ace54006a96b21d81ee07df00fd1c7e2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>midiPanic</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>aab8d62203243700936c28a3bcb16a747</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ae9d54a5aa397ea5dd6924a69e93976ee</anchor>
      <arglist>(const PluginRenderContext &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prepareForNextBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a6646140bca610b208b0753304e36d008</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBufferWithAutomation</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>acc74b4d20dcfe3b369da6767f0b37c7f</anchor>
      <arglist>(const PluginRenderContext &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>shouldMeasureCpuUsage</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>af83fde3004690c8a76c2f62f88bdfc1b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCpuUsage</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ac0cbbdc6363ace59678929419721e951</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a40a8968b46e0e312668f8636a0012e55</anchor>
      <arglist>(int numInputChannels)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>aa94dc100fa15fa3c89edf14f00cdcae9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>noTail</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a34dc95b86b8dfb3c1d74b8bce9749c29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getChannelNames</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a448b6f9bdb109377f6765b7efc143dc7</anchor>
      <arglist>(juce::StringArray *ins, juce::StringArray *outs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a9f1c8d5497fd2845b1ce736fc19fafb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>takesMidiInput</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a77e1ebf9b5908649c71957182e3846e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isSynth</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>acd49c1b24ec813e7054b412b14fcb5b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a29364c36c5b710b54daf1939d62a321f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getTailLength</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>aa5c7bffb4b11ab0fbef1bf208b52d64f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canSidechain</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a6850fe259637f5c09bea7473a73ba647</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter *</type>
      <name>addParam</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>af99279c46041387282eaaf967a37fa5f</anchor>
      <arglist>(const juce::String &amp;paramID, const juce::String &amp;name, juce::NormalisableRange&lt; float &gt; valueRange)</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter *</type>
      <name>addParam</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a0766b844daef02cd3c92db584978bdb2</anchor>
      <arglist>(const juce::String &amp;paramID, const juce::String &amp;name, juce::NormalisableRange&lt; float &gt; valueRange, std::function&lt; juce::String(float)&gt; valueToStringFunction, std::function&lt; float(const juce::String &amp;)&gt; stringToValueFunction)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getInputChannelNames</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ad1328899b3032bc6cdc732a71791dcec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getSidechainSourceNames</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a3d013b30700577a74c800562d8c4ba3c</anchor>
      <arglist>(bool allowNone)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSidechainSourceByName</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>aa0020e4ff3bdea4699ef7b4613bfbaa0</anchor>
      <arglist>(const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSidechainSourceName</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ac632affe52201683094e02405138f14d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>guessSidechainRouting</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a7d3839453b0a3961745c513c155c24e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumWires</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a6edc39829b98e836e7b8f741f8cce677</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Wire *</type>
      <name>getWire</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ae6e621d67ab0dd236c2a546808664919</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeConnection</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a5c703ba412728e30943a6bf7e2c17d40</anchor>
      <arglist>(int srcChannel, int dstChannel, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>breakConnection</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a7fb978ab35dddf7fe726591879b81b51</anchor>
      <arglist>(int srcChannel, int dstChannel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasNameForMidiNoteNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ab046b89c042b994d2efa619401d80981</anchor>
      <arglist>(int note, int midiChannel, juce::String &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasNameForMidiProgram</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>abd9a441e443f986fe39f6ec8e5632683</anchor>
      <arglist>(int programNum, int bank, juce::String &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasNameForMidiBank</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ac9a1dc457e561d384bcbc585d3308328</anchor>
      <arglist>(int bank, juce::String &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a6c7c98510554562cdb6a4458b718ef82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>adef997e258ef6e0123097d9a16620572</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canBeAddedToFolderTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>aca885bb5c7a072983bd29fb250bb48d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canBeAddedToMaster</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a5fa2b99e76a936e4a82fde0a8be11642</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canBeDisabled</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ac913514606ec6bdbc89ffa81555064a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canBeMoved</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>acf100cbeccbba6dcf19088bd6bd598b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a4b5b305d568fbd57d5493dd037435412</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isMissing</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a7dbb254e58249cac04cd00842686c34b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDisabled</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a710152712944c198ddc5ac2a3342e74b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInRack</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ab7015ae8e7a79dbf04f9b12fc0368bc2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; RackType &gt;</type>
      <name>getOwnerRackType</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a778efa8707039a76d4aa64f14f2388d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isClipEffectPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>acfdc8f93a6760140b1312fb915628515</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::AudioProcessor *</type>
      <name>getWrappedAudioProcessor</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>aebcb0c3081608e2b73677c3b33dcbc4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::Ptr</type>
      <name>getQuickControlParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a0e165ecdc80822518d298a6197f63470</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuickControlParameter</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>aaf537af1642cf361e59197b0be6284d1</anchor>
      <arglist>(AutomatableParameter *)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteFromParent</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a45287c74a197faab0f22cb824ad53eae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFromParent</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a8cb7a30de96a2767ad40d69b6614428d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getOwnerTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a9439916c2ede5b768b5b5f53277d53e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>getOwnerClip</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ac7ba33c5c2a2e4ac032ab941a2a5c179</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PluginList *</type>
      <name>getOwnerList</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a64094f3a04daa9609099a89068c42c7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr</type>
      <name>findPluginThatFeedsIntoThis</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a8c839d1786e11435af585c0f13468060</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr</type>
      <name>findPluginThatThisFeedsInto</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a165b9a5b7a20eefdeaeb52f3fd341833</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changed</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a012c7a98edf1f9924f9e6867efd28483</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ReferencedItem &gt;</type>
      <name>getReferencedItems</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ac8bee69ffcd2d735181db25ca7c0647d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reassignReferencedItem</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ade04d3a6bb8854b4f29df52d57f41d54</anchor>
      <arglist>(const ReferencedItem &amp;, ProjectItemID newID, double newStartTime) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sourceMediaChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a9c54b50728c121e4bd734e4a07ae2d75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPluginToMirror</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ae38e6d8e331f805eb77665268b5fde50</anchor>
      <arglist>(const Plugin::Ptr &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateFromMirroredPluginIfNeeded</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>aee763edca05ff37d6ef1517da37e686f</anchor>
      <arglist>(Plugin &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>getMirroredPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>aef85acd01d13816d265d04250018f338</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>baseClassNeedsInitialising</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ac7bc8442d28cd07daecdddc69e9b0b17</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>baseClassInitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a5bb8cc62dac5d4b18dd36c24d2da7246</anchor>
      <arglist>(const PluginInitialisationInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>baseClassDeinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ac99bc7c7a8735a1a75f828f5bda0abca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSidechainSourceID</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>aac158d5692199083b1dcd94a2d57fee3</anchor>
      <arglist>(EditItemID newID)</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>getSidechainSourceID</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>af455dfc0ea899d55ddd3b4b70fc1439d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; EditorComponent &gt;</type>
      <name>createEditor</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a7795e34ebb6c9de237a06e483c53b944</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showWindowExplicitly</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ab6569e8d31255832e6cf661d70f892ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideWindowForShutdown</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a1ed2cab419b1bb5ca263d1866b6d1f3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::UndoManager *</type>
      <name>getUndoManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a02745635df0732fc79c636c530dc910d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>areSelectedPluginsRackable</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a3a9988610f33d095649396c700b67c55</anchor>
      <arglist>(SelectionManager &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RackInstance *</type>
      <name>wrapSelectedPluginsInRack</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a2314bc347f573e7b86dffaecd158bc31</anchor>
      <arglist>(SelectionManager &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sortPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a572cfcf36a5f9cb4629eb5f6aaf2ab5a</anchor>
      <arglist>(Plugin::Array &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sortPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a0ee0bb8715f1cd5f35211076da49fd15</anchor>
      <arglist>(std::vector&lt; Plugin * &gt; &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; WindowState &gt;</type>
      <name>windowState</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>abbf6996c17acaab1df8370884bc3ec9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a086c326bbefa8fa9f4d9af78944c7dd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a1b68a862ff874ae2485ba2b914976e3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a77129a7c4210d20e4c5ae2eaab6336c0</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>aef8ac2b5a4f78a276c6fc1c3d3cee68f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a6805cd12cea4e0d79a41936d7e6b1210</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a03109ee1d9a383155f0c9c555df6557a</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a3c0b8bf769870dba65e5f5e72ea310a6</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>processingChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a07b6c0a416bbca88fcd0ba0b233685bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>getLeftRightChannelNames</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>aba1b4d19af84c5899f2117853291d7f9</anchor>
      <arglist>(juce::StringArray *ins, juce::StringArray *outs)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>getLeftRightChannelNames</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a09934eeabba046180aa1599ea486e637</anchor>
      <arglist>(juce::StringArray *chans)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; AtomicWrapper&lt; bool &gt; &gt;</type>
      <name>enabled</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a852d0cb3e6a4e2db4759d1fc53baeb73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>frozen</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a35f4e9783dba0e0b35b8ee50d9f87e7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>processing</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a9899de53c49862c442974260d1f86116</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>quickParamName</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a544b24c1d1d814b5ef2289b256ec9f47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; EditItemID &gt;</type>
      <name>masterPluginID</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>acf2377d5c19aca160c5e4937148e2a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::CachedValue&lt; EditItemID &gt;</type>
      <name>sidechainSourceID</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>ae01248fe5d0ba7ec61f8638139ac049d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>a34bfa72004e65d0d127b1c3a3e074ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>blockSizeSamples</name>
      <anchorfile>classtracktion_1_1engine_1_1Plugin.html</anchorfile>
      <anchor>affe7e9abf12ed97080074fae8196c417</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::PluginAudioNode</name>
    <filename>classtracktion_1_1engine_1_1PluginAudioNode.html</filename>
    <base>tracktion::engine::AudioNode</base>
    <member kind="function">
      <type></type>
      <name>PluginAudioNode</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a1a9064575f25a04f110bf95f51aacd91</anchor>
      <arglist>(const Plugin::Ptr &amp;p, AudioNode *in, bool denormalisationNoise)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PluginAudioNode</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a1866bbdc9389d3084fbe5194947a1ff5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAudioNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a9b568bb21f15ca51bb201e4bb75834c7</anchor>
      <arglist>(AudioNodeProperties &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>af506c2102c68496e08852a0177ec9de1</anchor>
      <arglist>(const VisitorFn &amp;v) override</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>getPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a3f4e6f52404bcb9647eec91890247e77</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>purgeSubNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>ac42ebe3abe92d5cb921497155e08ea52</anchor>
      <arglist>(bool keepAudio, bool keepMidi) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareAudioNodeToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a846628dc3789ab372fd3ebbc4af23ddf</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToRender</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a626e9bac860790716428225420fe9646</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>af8900924d68fca9ab202719a21011a97</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseAudioNodeResources</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a92a2e9d6153af6cc395891b473b761d7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderAdding</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>aa6f4d9f747aee9765f0f4f6283d7bad7</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderOver</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a4b8d8de038be6a28be1301f1ecd538cc</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>renderPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a7d74dc8f41ac243770a33f21e6462ad5</anchor>
      <arglist>(const AudioRenderContext &amp;rc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForNextBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>adcef4e57044c0e236a46934d37d60aa6</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>PluginRenderContext</type>
      <name>createPluginRenderContext</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a1e1a4762beeeded93b1dd0d225bf169e</anchor>
      <arglist>(const AudioRenderContext &amp;rc)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Plugin::Ptr</type>
      <name>plugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a0da0b296ac73b8c02f9eebcfe7e56b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; AudioNode &gt;</type>
      <name>input</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a14b3d957d51ec65fdfa44aaf4fbaa65e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>hasAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>ad3b07884d812324d8e49c265d12a1f39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>hasMidiInput</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a29a4fce6e9b1e33c446b70efff880a6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>applyAntiDenormalisationNoise</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>ab8d49fb2a400df11d3e2fd09864665ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>hasInitialised</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a622585d65387e24cfe1f5ae6cbe2bc99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>latencySeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginAudioNode.html</anchorfile>
      <anchor>a127f20267d378feed6183d14c2d68859</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::PluginCache</name>
    <filename>classtracktion_1_1engine_1_1PluginCache.html</filename>
    <member kind="function">
      <type></type>
      <name>PluginCache</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginCache.html</anchorfile>
      <anchor>a851578b041be7fba525404c938b7022e</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PluginCache</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginCache.html</anchorfile>
      <anchor>adc52658fdbaabd57a342697e1ff47cab</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>getPluginFor</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginCache.html</anchorfile>
      <anchor>aad6d44f7f523c4bd8fec906cd68cbc55</anchor>
      <arglist>(EditItemID pluginID) const</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>getPluginFor</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginCache.html</anchorfile>
      <anchor>acca11fe34c4b8d9331fefee86389d45f</anchor>
      <arglist>(const juce::ValueTree &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>getPluginFor</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginCache.html</anchorfile>
      <anchor>ab1a9b5f25278bc662e7e46dd2a9d707c</anchor>
      <arglist>(juce::AudioProcessor &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>getOrCreatePluginFor</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginCache.html</anchorfile>
      <anchor>a16a140dfee1a8288c2d6e0d0e39196e7</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>createNewPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginCache.html</anchorfile>
      <anchor>ac62149d4b526a00c62dbff0a0a538542</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>createNewPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginCache.html</anchorfile>
      <anchor>aac8b7adb2c9924b54e6148f6d0b7d19b</anchor>
      <arglist>(const juce::String &amp;type, const juce::PluginDescription &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Array</type>
      <name>getPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginCache.html</anchorfile>
      <anchor>ace373d058de359b3125ef20174cb4762</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(const Plugin &amp;)&gt;</type>
      <name>newPluginAddedCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginCache.html</anchorfile>
      <anchor>a52717218dcd1440d1ec04316de4587b9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::PluginComponent</name>
    <filename>structtracktion_1_1engine_1_1PluginComponent.html</filename>
    <member kind="function">
      <type></type>
      <name>PluginComponent</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginComponent.html</anchorfile>
      <anchor>a6c37f4e292b59edb245b3064e3107b7e</anchor>
      <arglist>(Plugin &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PluginComponent</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginComponent.html</anchorfile>
      <anchor>a07012b53a8b816c2048389a48a7fa4e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateColour</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginComponent.html</anchorfile>
      <anchor>a9b8fc878c5da27630eb1d9921f9a57a0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PluginComponent *</type>
      <name>getComponentFor</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginComponent.html</anchorfile>
      <anchor>a5040cd90ea2db8de202c359d94b0cde8</anchor>
      <arglist>(const Plugin &amp;p) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; PluginComponent * &gt;</type>
      <name>getComponentsFor</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginComponent.html</anchorfile>
      <anchor>a57be477c9febbf738fa4dec39dd8d5e2</anchor>
      <arglist>(const Plugin &amp;p) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>Plugin &amp;</type>
      <name>plugin</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginComponent.html</anchorfile>
      <anchor>a9a62492d6a044a67a4322a0dc99be37f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::PluginCreationInfo</name>
    <filename>structtracktion_1_1engine_1_1PluginCreationInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>PluginCreationInfo</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginCreationInfo.html</anchorfile>
      <anchor>a5af27d175aa041bb4b682ae198f3bd85</anchor>
      <arglist>(const PluginCreationInfo &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginCreationInfo</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginCreationInfo.html</anchorfile>
      <anchor>ab3f97b8012b3430c2b80f1f05cc33e8f</anchor>
      <arglist>(PluginCreationInfo &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>PluginCreationInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginCreationInfo.html</anchorfile>
      <anchor>a9adfda53461aa7dff2a439702625f9f8</anchor>
      <arglist>(PluginCreationInfo &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginCreationInfo</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginCreationInfo.html</anchorfile>
      <anchor>a05ed63443d05c1bced651b891f568477</anchor>
      <arglist>(Edit &amp;ed, const juce::ValueTree &amp;s, bool isNew) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginCreationInfo</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginCreationInfo.html</anchorfile>
      <anchor>aedf145379b782070571d04257e695c6a</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type>PluginCreationInfo &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginCreationInfo.html</anchorfile>
      <anchor>a5f97755987dd285e1d17056305d9e01e</anchor>
      <arglist>(const PluginCreationInfo &amp;)=delete</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginCreationInfo.html</anchorfile>
      <anchor>a227cb34311b3b59dba1d52cfac42864c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginCreationInfo.html</anchorfile>
      <anchor>ae608f8d99d8b91ecf3e99b69284f4ee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isNewPlugin</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginCreationInfo.html</anchorfile>
      <anchor>a8fac40647cedced000b449c8a18432c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::PluginEffect</name>
    <filename>structtracktion_1_1engine_1_1PluginEffect.html</filename>
    <base>tracktion::engine::ClipEffect</base>
    <base>tracktion::engine::AutomatableParameter::Listener</base>
    <member kind="function">
      <type></type>
      <name>PluginEffect</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginEffect.html</anchorfile>
      <anchor>a02f2aa828fb57f9612cbc6c2e93459fd</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginEffect.html</anchorfile>
      <anchor>a8e41222fdb1bf6fdc0077531836ca869</anchor>
      <arglist>(const AudioFile &amp;, double sourceLength) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginEffect.html</anchorfile>
      <anchor>a8c20368078ffc4350d5599736eb77188</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginEffect.html</anchorfile>
      <anchor>a8539088ed8b9e40796b1f5815dd8d2cd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProperties</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginEffect.html</anchorfile>
      <anchor>ab84e83782253ae8a5ff28b4f0d6a2939</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>propertiesButtonPressed</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginEffect.html</anchorfile>
      <anchor>a67475ae1eda71406a35049901fad90bd</anchor>
      <arglist>(SelectionManager &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getIndividualHash</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginEffect.html</anchorfile>
      <anchor>af9192e35c5c0c61301b1f2538057fd20</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginEffect.html</anchorfile>
      <anchor>a7b68a77b3b01320e3e589cfd1678418d</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginEffect.html</anchorfile>
      <anchor>a9bfb23b68e180827db55ae3b266eb3e6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginEffect.html</anchorfile>
      <anchor>ad32e9d495e04645e49eb4aa3feb19c38</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>curveHasChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginEffect.html</anchorfile>
      <anchor>a269efd37c707fa580a46495401fc8d6e</anchor>
      <arglist>(AutomatableParameter &amp;) override</arglist>
    </member>
    <member kind="variable">
      <type>Plugin::Ptr</type>
      <name>plugin</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginEffect.html</anchorfile>
      <anchor>aea61f9afaea508d5e9b26b1e02420c7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; ClipEffects::RenderInhibitor &gt;</type>
      <name>inhibitor</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginEffect.html</anchorfile>
      <anchor>ab4a488a1b8da63a61ea9740821cd6de3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; PluginUnloadInhibitor &gt;</type>
      <name>pluginUnloadInhibitor</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginEffect.html</anchorfile>
      <anchor>a3bd5736ac0bb8014787ea6688a8e3397</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>currentCurve</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginEffect.html</anchorfile>
      <anchor>af3ad248456c014b234b542e7732edd36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::int64 &gt;</type>
      <name>lastHash</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginEffect.html</anchorfile>
      <anchor>ad05f271face900da8b7ac2fd1b34c087</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::PluginInitialisationInfo</name>
    <filename>structtracktion_1_1engine_1_1PluginInitialisationInfo.html</filename>
    <member kind="variable">
      <type>TimePosition</type>
      <name>startTime</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginInitialisationInfo.html</anchorfile>
      <anchor>a6cdbfc249b2d7c0c8d4000c8da84b3ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginInitialisationInfo.html</anchorfile>
      <anchor>af285bfdce3c1fed496e2502247dd34a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>blockSizeSamples</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginInitialisationInfo.html</anchorfile>
      <anchor>a3e7d804cb0d07784dae68567f9e3436d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::PluginList</name>
    <filename>classtracktion_1_1engine_1_1PluginList.html</filename>
    <member kind="function">
      <type></type>
      <name>PluginList</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>ac2077f2f0ef2390bcf6c6398b8348b29</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PluginList</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a8a67401b384096f2e65291da3e97de61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Edit &amp;</type>
      <name>getEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a6b458a1767ed3a41863dce362a95ed0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>getOwnerClip</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a75c5e137e159b014c747f4a4dde37756</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getOwnerTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a492f50c70141f7debf369acb385bb561</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a872cf0c5b26f7b5158b93aeb29104476</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a525b3c22e98eb10dbda11b27cdaa9871</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTrackAndClip</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a23bb768d942acb61f3d939da952b6e44</anchor>
      <arglist>(Track *, Clip *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateTrackProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a543da48b456987b65f1bbb33a87d56a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Plugin **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>ab55a9324926f2afe883914a5f1bed800</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Plugin **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>acc6e2ad0d2a4d1748c68b98700634bb2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a29ad2a375223f9c34879d1e6e3a1be04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Plugin *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a32de7db4eaffdcb065e412d103852082</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>ac9785c2d74569f41fd949e23f966bf04</anchor>
      <arglist>(const Plugin *) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>abaeb00255d772bd0a5fa963504df2ee3</anchor>
      <arglist>(const Plugin *) const</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Array</type>
      <name>getPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>ab80076d427c0906369e144a618924a98</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMirrorUpdateToAllPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a9c75f30d6bc98f53618cda58b86d2778</anchor>
      <arglist>(Plugin &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a4a1aaab3b5a5a34611d33f535395527c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a692f6e21b687514a3f4b14a6d79f3af0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canInsertPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a5437e5f96c976bc318eb91e74c6cb27e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>insertPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a7ba91745cb66b404e9e965211f2bdfa5</anchor>
      <arglist>(const juce::ValueTree &amp;, int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a7e25d3f162704e3ac5f79efb2b0c7069</anchor>
      <arglist>(const Plugin::Ptr &amp;, int index, SelectionManager *selectionManagerToSelect)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDefaultTrackPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>ab61d0da45a319a96a88ab5462d8b94e5</anchor>
      <arglist>(bool useVCA)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPluginsFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a6263ae99e9bcf5b198702e91d863125b</anchor>
      <arglist>(const juce::ValueTree &amp;, bool clearFirst, bool atStart)</arglist>
    </member>
    <member kind="function">
      <type>PluginType *</type>
      <name>findFirstPluginOfType</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>af6df2efa8cac6a92675cd388c91fc3b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; PluginType * &gt;</type>
      <name>getPluginsOfType</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a75c28da77b03c74f459368a64de1f0b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginList.html</anchorfile>
      <anchor>a09db3feee015cb9c76a9b63dae7ad197</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::PluginManager</name>
    <filename>classtracktion_1_1engine_1_1PluginManager.html</filename>
    <class kind="struct">tracktion::engine::PluginManager::BuiltInType</class>
    <class kind="struct">tracktion::engine::PluginManager::BuiltInTypeBase</class>
    <member kind="function">
      <type></type>
      <name>PluginManager</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>a6f63318c72497a25fef6825ee62f66ae</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PluginManager</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>a9b316af65afa1ed1435e3a15f8581001</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>ad7e1b9384eceaf2e87fb09ba6cd4d19e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areGUIsLockedByDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>a1191efb20975b32cd5ea7f014fcb4ebe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGUIsLockedByDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>a043b56b1b506eee23bd395dc705cbd18</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doubleClickToOpenWindows</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>a64b29c87053e30566431f52f54ccaed2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDoubleClickToOpenWindows</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>a7e78d372a4110b6ddce3d6ed08ebc5fc</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfThreadsForScanning</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>a3a4204ba1740420a2354b3b3be46aa63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumberOfThreadsForScanning</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>a816a95261d19a19fcc1f838da5c21c31</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesSeparateProcessForScanning</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>a915d5637bbea915c813467ba1bf8f310</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUsesSeparateProcessForScanning</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>ad035006f7643f5eeea8b5fa75cc98ff2</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>createExistingPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>a7f565fd853f6ec3657f0527e2996dc41</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>createNewPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>a0fbdbd79ba75992ba96d9e2286ca0bc9</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>createNewPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>af06ca8be8daa53c6a6ed4bddc5a91e3c</anchor>
      <arglist>(Edit &amp;, const juce::String &amp;type, const juce::PluginDescription &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; juce::PluginDescription &gt;</type>
      <name>getARACompatiblePlugDescriptions</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>a96b5e8c757b9a72f29623a7ba0439328</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerBuiltInType</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>ad7041a9208afe0f44bee65f5fd8e4d86</anchor>
      <arglist>(std::unique_ptr&lt; BuiltInType &gt;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createBuiltInType</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>afca889fc9aae763e359a2459beb8bc7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>startChildProcessPluginScan</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>a931641ede751b881243aefb8048eed2d</anchor>
      <arglist>(const juce::String &amp;commandLine)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isBuiltInPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>a4c9bcd3504c8aed8e6c79569b9ec1fc0</anchor>
      <arglist>(const juce::PluginDescription &amp;d)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::PluginDescription</type>
      <name>createBuiltInPluginDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>a3860854f5502df6b8da27d9a39d00e5f</anchor>
      <arglist>(bool synth=false)</arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioPluginFormatManager</type>
      <name>pluginFormatManager</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>ae23d7ad0a938415092ee2a5ace486a44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::KnownPluginList</type>
      <name>knownPluginList</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>aa7c4d84d28757381fa8f694a78eb9177</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void()&gt;</type>
      <name>abortCurrentPluginScan</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>aa4e7bb9e153df33ad2aaabc554a07ace</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; std::unique_ptr&lt; juce::AudioPluginInstance &gt;const juce::PluginDescription &amp;, double rate, int blockSize, juce::String &amp;errorMessage)&gt;</type>
      <name>createPluginInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>a14694ffe0aef3d646bf3e52e5c094e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; bool(Plugin &amp;)&gt;</type>
      <name>canUseFineGrainAutomation</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>ac77acea09f5c996dc44a256135fbcf7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void()&gt;</type>
      <name>scanCompletedCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>a3685510ba1337fea167791acde0a379b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>builtInPluginFormatName</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginManager.html</anchorfile>
      <anchor>a04fb9fb8314465442fe4dd68d7bc1feb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::PluginNode</name>
    <filename>classtracktion_1_1engine_1_1PluginNode.html</filename>
    <base>tracktion::graph::Node</base>
    <base>tracktion::engine::TracktionEngineNode</base>
    <member kind="function">
      <type></type>
      <name>PluginNode</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginNode.html</anchorfile>
      <anchor>ac6b8b9ae31600d4d0cf35906d84a04da</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; input, tracktion::engine::Plugin::Ptr, double sampleRateToUse, int blockSizeToUse, const TrackMuteState *, ProcessState &amp;, bool rendering, bool balanceLatency, int maxNumChannelsToUse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PluginNode</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginNode.html</anchorfile>
      <anchor>acf30a89bffffd2abbd861579710bb9b7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Plugin &amp;</type>
      <name>getPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginNode.html</anchorfile>
      <anchor>a8bfa757c677dc2e4aed131e610bda466</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginNode.html</anchorfile>
      <anchor>a038a98dba604fa4196147ea963002fac</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginNode.html</anchorfile>
      <anchor>a8066f50ce0ade0b1864e1ed4b1fd09da</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginNode.html</anchorfile>
      <anchor>acb2cdc29a76552066857433d84385c1c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginNode.html</anchorfile>
      <anchor>ac010a624708b3151d0360d2b0b285305</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prefetchBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginNode.html</anchorfile>
      <anchor>a9a851a8950b380faa2019eb8dd082e2c</anchor>
      <arglist>(juce::Range&lt; int64_t &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginNode.html</anchorfile>
      <anchor>a5647cdb6005b97efa120c1d0df2b4f7f</anchor>
      <arglist>(choc::buffer::FrameCount, juce::Range&lt; int64_t &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1PluginNode.html</anchorfile>
      <anchor>a6db99486546ff24616b339171aa57dce</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::PluginRenderContext</name>
    <filename>structtracktion_1_1engine_1_1PluginRenderContext.html</filename>
    <member kind="function">
      <type></type>
      <name>PluginRenderContext</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>a2e49cd908e161c26241d6ff02098a688</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; *buffer, const juce::AudioChannelSet &amp;bufferChannels, int bufferStart, int bufferSize, MidiMessageArray *midiBuffer, double midiOffset, TimeRange editTime, bool playing, bool scrubbing, bool rendering, bool allowBypassedProcessing) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginRenderContext</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>ad90ee33f049bcb74e264b5e0e2a1bfe7</anchor>
      <arglist>(const PluginRenderContext &amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginRenderContext</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>aedb4e8273bc863f192e0251cf40e3097</anchor>
      <arglist>(PluginRenderContext &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>PluginRenderContext &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>acf03f80fddcbc7cebfdb84a30ccb84d8</anchor>
      <arglist>(const PluginRenderContext &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PluginRenderContext &amp;</type>
      <name>operator=</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>ae854464424b12ed7de15e37a678cc024</anchor>
      <arglist>(PluginRenderContext &amp;&amp;)=delete</arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioBuffer&lt; float &gt; *</type>
      <name>destBuffer</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>a3e48804f49af568503a04d53debf8836</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioChannelSet</type>
      <name>destBufferChannels</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>afbc06879d0c7e528f5d13f4d07f176a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bufferStartSample</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>a7e5fbba186efc4d4032ed54b05e1a0fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bufferNumSamples</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>a17693c7f380c75e41939a3730895bd88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MidiMessageArray *</type>
      <name>bufferForMidiMessages</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>a309d693a97fc0515bb2b708d745c852a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>midiBufferOffset</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>a81523f751a35f998fb1bd2654d230465</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeRange</type>
      <name>editTime</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>ae135ea11a3bb11bdf8063094eb8463d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isPlaying</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>abe0f09667a873def2e29baef955ba460</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isScrubbing</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>a1d4e6b1ee56092ffa64ad08b965b86ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isRendering</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>ab732ff5399ed12facf2b29fc75063abc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>allowBypassedProcessing</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginRenderContext.html</anchorfile>
      <anchor>a9d25409e64b24de963bd8fbb29e3571c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::Plugins</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1Plugins.html</filename>
    <base>tracktion::engine::Clipboard::ContentType</base>
    <member kind="function">
      <type></type>
      <name>Plugins</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Plugins.html</anchorfile>
      <anchor>a9e48331f74149dd5464cba22f9c6c24c</anchor>
      <arglist>(const Plugin::Array &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Plugins</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Plugins.html</anchorfile>
      <anchor>aade0e0f247ee41b7704e98d002abc5b7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Plugins.html</anchorfile>
      <anchor>a8228b46e56764fe9d2b5b7fe6f65ea3b</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Plugins.html</anchorfile>
      <anchor>ae3179b071e4302d9007657da52f29b5a</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Plugins.html</anchorfile>
      <anchor>a2b8ac2e249e6721e16dd1ca7831b15da</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; juce::ValueTree &gt;</type>
      <name>plugins</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Plugins.html</anchorfile>
      <anchor>af543a86d4df5337bcc9c05a00fb63d60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::pair&lt; SafeSelectable&lt; Edit &gt;, juce::ValueTree &gt; &gt;</type>
      <name>rackTypes</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Plugins.html</anchorfile>
      <anchor>aa9b16d07ad4b8251932f5bd262e9f91e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::PluginScanHelpers::PluginScanChildProcess</name>
    <filename>structtracktion_1_1engine_1_1PluginScanHelpers_1_1PluginScanChildProcess.html</filename>
    <member kind="function">
      <type></type>
      <name>PluginScanChildProcess</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1PluginScanChildProcess.html</anchorfile>
      <anchor>a4e36a613085c057946cd22e7b452310a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleConnectionMade</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1PluginScanChildProcess.html</anchorfile>
      <anchor>a38a8888158fd6e28a3119458ce31bc24</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleConnectionLost</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1PluginScanChildProcess.html</anchorfile>
      <anchor>ac225b3dc0afa26ecaf52ab73dc184a8f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleScanMessage</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1PluginScanChildProcess.html</anchorfile>
      <anchor>ab99752f70c000a02ef743afeffd54714</anchor>
      <arglist>(int requestID, const juce::String &amp;formatName, const juce::String &amp;fileOrIdentifier)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1PluginScanChildProcess.html</anchorfile>
      <anchor>a759bfa9da3efb0fa459ce31e31c08d4d</anchor>
      <arglist>(const juce::XmlElement &amp;xml)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::PluginScanHelpers</name>
    <filename>structtracktion_1_1engine_1_1PluginScanHelpers.html</filename>
    <class kind="struct">tracktion::engine::PluginScanHelpers::CustomScanner</class>
    <class kind="struct">tracktion::engine::PluginScanHelpers::PluginScanChildProcess</class>
    <class kind="struct">tracktion::engine::PluginScanHelpers::PluginScanMasterProcess</class>
    <member kind="function" static="yes">
      <type>static juce::MemoryBlock</type>
      <name>createScanMessage</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers.html</anchorfile>
      <anchor>ac1b9fc8e72024c74a8ffa28a83dea7f7</anchor>
      <arglist>(const juce::XmlElement &amp;xml)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr const char *</type>
      <name>commandLineUID</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers.html</anchorfile>
      <anchor>a458b84bd9648a7979ddfd2d82f381586</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::PluginScanHelpers::PluginScanMasterProcess</name>
    <filename>structtracktion_1_1engine_1_1PluginScanHelpers_1_1PluginScanMasterProcess.html</filename>
    <member kind="function">
      <type></type>
      <name>PluginScanMasterProcess</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1PluginScanMasterProcess.html</anchorfile>
      <anchor>af1408e55fa4b530b87b8c80be07ac3eb</anchor>
      <arglist>(Engine &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ensureChildProcessLaunched</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1PluginScanMasterProcess.html</anchorfile>
      <anchor>a388d5438e85adc81fa2c387d0dd0afd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sendScanRequest</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1PluginScanMasterProcess.html</anchorfile>
      <anchor>a46bea1646b088f1af114e69e140ce81c</anchor>
      <arglist>(juce::AudioPluginFormat &amp;format, const juce::String &amp;fileOrIdentifier, int requestID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>waitForReply</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1PluginScanMasterProcess.html</anchorfile>
      <anchor>a7072141423ef8e39af8c2c835dce8f7f</anchor>
      <arglist>(int requestID, const juce::String &amp;fileOrIdentifier, juce::OwnedArray&lt; juce::PluginDescription &gt; &amp;result, CustomScanner &amp;scanner)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessage</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1PluginScanMasterProcess.html</anchorfile>
      <anchor>a906a1333af9e123a4b0d4c77cc9e4b92</anchor>
      <arglist>(const juce::XmlElement &amp;xml)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleConnectionLost</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1PluginScanMasterProcess.html</anchorfile>
      <anchor>a5a2ecef3257ea9e67c7919d428e48843</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>volatile bool</type>
      <name>launched</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1PluginScanMasterProcess.html</anchorfile>
      <anchor>a11e6f0a4c3511c2ad0034a14f559fccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile bool</type>
      <name>crashed</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginScanHelpers_1_1PluginScanMasterProcess.html</anchorfile>
      <anchor>ab9433d60b9b3757dd584e43c0412ba8d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::PluginWetDryAutomatableParam</name>
    <filename>structtracktion_1_1engine_1_1PluginWetDryAutomatableParam.html</filename>
    <base>tracktion::engine::AutomatableParameter</base>
    <member kind="function">
      <type></type>
      <name>PluginWetDryAutomatableParam</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWetDryAutomatableParam.html</anchorfile>
      <anchor>ac0d69f562b9b5a11d64aa0919e25e5e2</anchor>
      <arglist>(const juce::String &amp;xmlTag, const juce::String &amp;name, Plugin &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PluginWetDryAutomatableParam</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWetDryAutomatableParam.html</anchorfile>
      <anchor>aa1d912a096c83fa1549c1444b6c07de7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>valueToString</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWetDryAutomatableParam.html</anchorfile>
      <anchor>a86dd49a1dac9b5cd5489a80e3b2f2bda</anchor>
      <arglist>(float value) override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>stringToValue</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWetDryAutomatableParam.html</anchorfile>
      <anchor>aa6fae461f4ef311718fdeba3eb0bb4af</anchor>
      <arglist>(const juce::String &amp;s) override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginWetDryAutomatableParam</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWetDryAutomatableParam.html</anchorfile>
      <anchor>a753cef2aa7cfb83fc42827c425defd9f</anchor>
      <arglist>()=delete</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::PluginWindowState</name>
    <filename>structtracktion_1_1engine_1_1PluginWindowState.html</filename>
    <member kind="function">
      <type></type>
      <name>PluginWindowState</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a6d4537557dee53bfcffe4245d80a5fff</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>incRefCount</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a2fa6c00249b6c0b5c8d6f86b247dcdb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>decRefCount</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a24658ab2962a13465b3cd66012b7f966</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWindowShowing</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a7fce117a164e6913e59b64b50d70c6dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showWindowExplicitly</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a290de69f1246f0ca9f9c7d62fa423a83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showWindowIfTemporarilyHidden</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a3e24e712422e5837db888c052ef0acef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recreateWindowIfShowing</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a68b68b969b8f8c7d45393d8c29cb4d5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>closeWindowExplicitly</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a97e9bf4f0cd8765572df70e6ff10da0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideWindowForShutdown</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a55eeba1dfe5d1ea7557bc131e5b41ed8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideWindowTemporarily</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a6a4d0d14a04ef6a6185e50c5f2b55326</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::Point&lt; int &gt;</type>
      <name>choosePositionForPluginWindow</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a4eb2ca26ec09a8029c1987bdba640002</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pluginClicked</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>aa03ee1c4aa9372fd1e9a2e7ea305f793</anchor>
      <arglist>(const juce::MouseEvent &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>hideAllWindowsTemporarily</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>aa82d9d5b4e04b8187c52217faec4fb8d</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>showAllTemporarilyHiddenWindows</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>ad9407ea7972d10741d19c059b7af36b5</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>showOrHideAllWindows</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a875bd60228549c1f6375fda962a04f2c</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; PluginWindowState * &gt;</type>
      <name>getAllWindows</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a02bd66d37596c9ea0dda7738624e0153</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint32_t</type>
      <name>getNumOpenWindows</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a1c90f655f1f43c19be2d1f27a5713dea</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a15aa5ca458cce0de2694a54846ee960c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>af1aab819e6e768e029c7382988a17b67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; juce::Component &gt;</type>
      <name>pluginWindow</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a6fb4a6df5fb2aac890df90b81f43ad93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>windowShowerCount</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a34303856c6512ad03d33c6e1e304c2d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>windowLocked</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a7647b6133db6e4a999201bb2cda14fbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>temporarilyHidden</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a3b517fc232104f6792f3d95fb31f3aa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>wasExplicitlyClosed</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>abb25a80c00c26bed298d9d8148c6ab0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; juce::Rectangle&lt; int &gt; &gt;</type>
      <name>lastWindowBounds</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>a8b61ed63d4623b66cf72c6a32c7e3ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Time</type>
      <name>windowOpenTime</name>
      <anchorfile>structtracktion_1_1engine_1_1PluginWindowState.html</anchorfile>
      <anchor>ae16fa6662992f34f7011cb0c783fc2c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::Node::ProcessContext</name>
    <filename>structtracktion_1_1graph_1_1Node_1_1ProcessContext.html</filename>
    <member kind="variable">
      <type>choc::buffer::FrameCount</type>
      <name>numSamples</name>
      <anchorfile>structtracktion_1_1graph_1_1Node_1_1ProcessContext.html</anchorfile>
      <anchor>a6df650ea9dc5f5430e9791e6b0ec4ffa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Range&lt; int64_t &gt;</type>
      <name>referenceSampleRange</name>
      <anchorfile>structtracktion_1_1graph_1_1Node_1_1ProcessContext.html</anchorfile>
      <anchor>ab94263d6f51f9ac25e15e9412f9acf83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioAndMidiBuffer</type>
      <name>buffers</name>
      <anchorfile>structtracktion_1_1graph_1_1Node_1_1ProcessContext.html</anchorfile>
      <anchor>a66575a91fe1882b64c737e54a605da72</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ProcessState</name>
    <filename>structtracktion_1_1engine_1_1ProcessState.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>UpdateContinuityFlags</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>a3f31780344fe2af81b66f26c231c44cd</anchor>
      <arglist></arglist>
      <enumvalue file="structtracktion_1_1engine_1_1ProcessState.html" anchor="a3f31780344fe2af81b66f26c231c44cda7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="structtracktion_1_1engine_1_1ProcessState.html" anchor="a3f31780344fe2af81b66f26c231c44cdaa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>ProcessState</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>a63607b73ac204a8b75860bdb8f539994</anchor>
      <arglist>(tracktion::graph::PlayHeadState &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProcessState</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>a2ef682284fd09749aaf21f64196e38e7</anchor>
      <arglist>(tracktion::graph::PlayHeadState &amp;, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProcessState</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>a25661571ee568402a46d4b3d49a3c271</anchor>
      <arglist>(tracktion::graph::PlayHeadState &amp;, const tempo::Sequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>a302a96f4f4cf25a8feb8a4d7d032f43a</anchor>
      <arglist>(double sampleRate, juce::Range&lt; int64_t &gt; referenceSampleRange, UpdateContinuityFlags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlaybackSpeedRatio</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>ab6048bd8d4cbcfe3227b8f5be73dff9c</anchor>
      <arglist>(double newRatio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTempoSequence</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>af0667cbc0b3bef63e54931f4ca76aa02</anchor>
      <arglist>(const tempo::Sequence *)</arglist>
    </member>
    <member kind="function">
      <type>const tempo::Sequence *</type>
      <name>getTempoSequence</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>aeb39f0795d8d54781d73e3c160e8dd17</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const tempo::Sequence::Position *</type>
      <name>getTempoSequencePosition</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>aa0a56eaa788ad5f20e40cd35cf8beeb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SyncRange</type>
      <name>getSyncRange</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>a9119c6a1e97354a80084a0de098dbdca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SyncPoint</type>
      <name>getSyncPoint</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>a616943925f701690e98184791edbcbf2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSyncRange</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>a650ffcea0a18e17928e6b93ca143d390</anchor>
      <arglist>(SyncRange)</arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void()&gt;</type>
      <name>onContinuityUpdated</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>a353b1a536b22de5a3a263465658b44d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tracktion::graph::PlayHeadState &amp;</type>
      <name>playHeadState</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>ac3210d4b41b525fe52f0ef7099163922</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>a813d9b82623e15748d1510ab07c51bae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>playbackSpeedRatio</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>a26a81aa60a0fa6d461f0ee89e4d2c79b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numSamples</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>a6045591bb372c1807d327c0b03801690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Range&lt; int64_t &gt;</type>
      <name>referenceSampleRange</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>a95a105ce10784daca1ba3eefbc61be85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Range&lt; int64_t &gt;</type>
      <name>timelineSampleRange</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>ae0206b0c12f2f537e9e2e7b35d4fbb39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeRange</type>
      <name>editTimeRange</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>aef901890480908cfc1dc4aa5aedba5b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BeatRange</type>
      <name>editBeatRange</name>
      <anchorfile>structtracktion_1_1engine_1_1ProcessState.html</anchorfile>
      <anchor>ab821612622c18f1a22348c6e041a978b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::PatternGenerator::ProgressionItem</name>
    <filename>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</filename>
    <member kind="function">
      <type></type>
      <name>ProgressionItem</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a9071adac40daeaee7d9cb05b2b9a93cd</anchor>
      <arglist>(PatternGenerator &amp;, const juce::ValueTree &amp;, bool temporary=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProgressionItem</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a06de3aa5dc90cd9e27cc00f5f4ff0b74</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a913a29589cd7519f690b74a617046f10</anchor>
      <arglist>(const ProgressionItem &amp;) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>ad3e326df575790713174ec1016d42b60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChordName</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a0b379150ad629626e23142473e78fe67</anchor>
      <arglist>(juce::String chord)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChordName</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a1dea924fa31523915978d2c605dcfbde</anchor>
      <arglist>(juce::String chord, juce::String pitches)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getChordName</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a2ec147c490d80fcd71152565f03abb12</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRoot</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a91edafe8cc19195364a9c81e6fbf5666</anchor>
      <arglist>(int root)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setChord</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>aff52763a0f30dc1038835a8dde235e69</anchor>
      <arglist>(int root, Chord::ChordType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRomanNumeral</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>ac0094fb28d1e71c38300f8b1bb18a713</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Chord</type>
      <name>getChord</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a6cfc044062894a0ccd015691ecb7a871</anchor>
      <arglist>(const Scale &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getChordSymbol</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a17a6696a40abec0aa05588640d9091e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRootNote</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>af1ad88b2ea5280cfa56b6346db5d3e37</anchor>
      <arglist>(int key, const Scale &amp;scale)</arglist>
    </member>
    <member kind="variable">
      <type>PatternGenerator &amp;</type>
      <name>generator</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a0c4390c9a25a1ac2961515acb4f88239</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>ac61e63f8787e6e8da2ed414c00efdb16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>chordName</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a0e9cff9da182ee1f082761adf327ad1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>pitches</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a56de3c57c6d89d918f844cd575f29a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; BeatDuration &gt;</type>
      <name>lengthInBeats</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a9306085739587b76e6f4b4855770ad64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>octave</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a0a4733af0de1325589278994bacf63d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>inversion</name>
      <anchorfile>structtracktion_1_1engine_1_1PatternGenerator_1_1ProgressionItem.html</anchorfile>
      <anchor>a3761300ecd3abce39b31188b735b6684</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::Project</name>
    <filename>classtracktion_1_1engine_1_1Project.html</filename>
    <base>tracktion::engine::Selectable</base>
    <member kind="enumeration">
      <type></type>
      <name>NagMode</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a99b56eec6dc9ec7020d080e7e59d7e21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nagAsk</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a99b56eec6dc9ec7020d080e7e59d7e21a099d1496374293b86bcc3967e547ff36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nagAutoYes</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a99b56eec6dc9ec7020d080e7e59d7e21ae91c19bd890af6fd055145d907946442</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nagAutoNo</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a99b56eec6dc9ec7020d080e7e59d7e21a5597a6f6a9387103f7fa2dfb93372ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ProjectSortType</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>afa805bb4a21a91a9d9f7a365a5df3c6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByName</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>afa805bb4a21a91a9d9f7a365a5df3c6ea6f65f81b7ddadf1cdfdfe07d0f959210</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByDesc</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>afa805bb4a21a91a9d9f7a365a5df3c6eaf1db3ba872e14be9ab95cbb4db10eea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByType</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>afa805bb4a21a91a9d9f7a365a5df3c6ea14a0f87eea7ef2294c67fd9e5b4dbb73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByLength</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>afa805bb4a21a91a9d9f7a365a5df3c6ea09b1ac7c12a4effc6d95874665d45f55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortBySize</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>afa805bb4a21a91a9d9f7a365a5df3c6ea6ddb35723ef0511cb17ebbf7b8d5ac67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByModified</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>afa805bb4a21a91a9d9f7a365a5df3c6ea37c01745d8642fe0c8112576f5ebce27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByCreated</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>afa805bb4a21a91a9d9f7a365a5df3c6ea3a559be416574490306acf600161e5df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; Project &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>aa52c7b8c0b70bbb2a5f3a96b376d85bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nagAsk</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a99b56eec6dc9ec7020d080e7e59d7e21a099d1496374293b86bcc3967e547ff36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nagAutoYes</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a99b56eec6dc9ec7020d080e7e59d7e21ae91c19bd890af6fd055145d907946442</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nagAutoNo</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a99b56eec6dc9ec7020d080e7e59d7e21a5597a6f6a9387103f7fa2dfb93372ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByName</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>afa805bb4a21a91a9d9f7a365a5df3c6ea6f65f81b7ddadf1cdfdfe07d0f959210</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByDesc</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>afa805bb4a21a91a9d9f7a365a5df3c6eaf1db3ba872e14be9ab95cbb4db10eea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByType</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>afa805bb4a21a91a9d9f7a365a5df3c6ea14a0f87eea7ef2294c67fd9e5b4dbb73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByLength</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>afa805bb4a21a91a9d9f7a365a5df3c6ea09b1ac7c12a4effc6d95874665d45f55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortBySize</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>afa805bb4a21a91a9d9f7a365a5df3c6ea6ddb35723ef0511cb17ebbf7b8d5ac67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByModified</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>afa805bb4a21a91a9d9f7a365a5df3c6ea37c01745d8642fe0c8112576f5ebce27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SortByCreated</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>afa805bb4a21a91a9d9f7a365a5df3c6ea3a559be416574490306acf600161e5df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Project</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>ac414fa0d5cd97f59446b55aca2fee3f3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a183a96786997a2a4a11e4c13633bebd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleAsyncUpdate</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a7105b9840ac9a6cb7248c63b85998c8a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a13d1bb0659ace4e79bcb1132253dc764</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadOnly</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>ae428cb77576085d66df5942120835cf0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTemporary</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>ae53fd3cb5bffcc2b724f856553e43db5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getProjectID</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a57aa0aead8897a2cdda7c2b9348a8a0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>ade768e3adb4befa0bf33a061215dc092</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>ae57af27b4f41df0c812ea27736f95e1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::File &amp;</type>
      <name>getProjectFile</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a24c5b70a41758a3a85f1be2a8a884f53</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getDefaultDirectory</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a7f9db3919af079048809fdfaa1ad6ada</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getDirectoryForMedia</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a2bf0b5597bc9c5acbeb8e0303973c44b</anchor>
      <arglist>(ProjectItem::Category category) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a5cd0aacb982f4ce8643c9bcc8b961a1a</anchor>
      <arglist>(const juce::String &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>ae0a3e3a3d28dfd71ca83643777098570</anchor>
      <arglist>(const juce::String &amp;newDesc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewProjectId</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a851858b6f857c9b085647d9a2558ea89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getProjectProperty</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a9c389b8da5df90bb89c35033137140a2</anchor>
      <arglist>(const juce::String &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProjectProperty</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a4368f9fc65fc9566577dcd2bfbd40638</anchor>
      <arglist>(const juce::String &amp;name, const juce::String &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshProjectPropertiesFromFile</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a7bb3a5690239457a7095596f1ee0a002</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLibraryProject</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a90a1dd8c981ffcbd8dffa8304f2f1b24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>askAboutTempoDetect</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a7c435c6f1e5fd9172d52f97b7e433757</anchor>
      <arglist>(const juce::File &amp;, bool &amp;shouldSetAutoTempo) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ProjectItemID &gt;</type>
      <name>findOrphanItems</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>ae1db615060fd0216b730630019265e07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumProjectItems</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a1845fb88255117cd2bcfe057aa43596c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProjectItemID</type>
      <name>getProjectItemID</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>aa9bf19b72e61028d02c73d0611a70a67</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ProjectItemID &gt;</type>
      <name>getAllProjectItemIDs</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>af49dd1b82a4819b9d3a46f6f15723465</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; int &gt;</type>
      <name>getAllItemIDs</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>aea9a098586e5e2d59029d38a4dde6a25</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>getProjectItemAt</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a32c6efad9e3954532c5932681532d82b</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ProjectItem::Ptr &gt;</type>
      <name>getAllProjectItems</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a1ac39efa63d41993a985accdbd5acb8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a1a2dc58ea81c1c511dedd4bcf3a75843</anchor>
      <arglist>(ProjectItemID) const</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>getProjectItemForID</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a333be285fdaddbde5b86f11b5494a45a</anchor>
      <arglist>(ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>getProjectItemForFile</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a6e66d9abd378d30d8384785038929eb9</anchor>
      <arglist>(const juce::File &amp;file)</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>createNewItem</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a622d660caa67bc13be14e9e3e8fe5b77</anchor>
      <arglist>(const juce::File &amp;fileToReference, const juce::String &amp;type, const juce::String &amp;name, const juce::String &amp;description, const ProjectItem::Category cat, bool atTopOfList)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeProjectItem</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a280ed99488ed94d871ccbacc6f523889</anchor>
      <arglist>(ProjectItemID, bool deleteSourceMaterial)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveProjectItem</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>ac3172c4a0106687a88f45cb1aeceb52c</anchor>
      <arglist>(int indexToMoveFrom, int indexToMoveTo)</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>createNewEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a878edff524d94ac41c0a13e1497a5006</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redirectIDsFromProject</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a3bddea1236c1d4ececc57fe0aba50c5a</anchor>
      <arglist>(int oldProjId, int newProjId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeArchiveContents</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>aab44e37f29c7c50730a2f1c7e398a2d7</anchor>
      <arglist>(const juce::File &amp;archiveFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeOtherProjectIntoThis</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>acb4501816acf2d83c6ba03727d84ceda</anchor>
      <arglist>(const juce::File &amp;otherProject)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshFolderStructure</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a8d548f31037a18aa2305e4a5d2ec038d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createDefaultFolders</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>af9b6536be9c126b2ef97a13cbbed8c39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>searchFor</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a8470b6a624307337855d35fff86c0d08</anchor>
      <arglist>(juce::Array&lt; ProjectItemID &gt; &amp;results, SearchOperation &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a65f25f22f9dc2223026bbb33dca556ae</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lockFile</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a10dee1a6ecb4a25ef8d75e6c3e4cfc4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlockFile</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>af7ddeda798a2d2f6d63ddeb89244113e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a0848dc57672d0b58d9bac4998f98f416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ProjectManager &amp;</type>
      <name>projectManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a7d56c09a1c14dca790ce4cac73a45d74</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ProjectItem</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>a041bde73ab38c3b63f9aaced635b2c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ProjectManager</name>
      <anchorfile>classtracktion_1_1engine_1_1Project.html</anchorfile>
      <anchor>aa860c957116c15c1b786357fbcd19fc7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ProjectItem</name>
    <filename>classtracktion_1_1engine_1_1ProjectItem.html</filename>
    <base>tracktion::engine::Selectable</base>
    <member kind="enumeration">
      <type></type>
      <name>Category</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a863e45f26bfc71747622cf23cfef8514</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1ProjectItem.html" anchor="a863e45f26bfc71747622cf23cfef8514a334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ProjectItem.html" anchor="a863e45f26bfc71747622cf23cfef8514ade95b43bceeb4b998aed4aed5cef1ae7">edit</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ProjectItem.html" anchor="a863e45f26bfc71747622cf23cfef8514ab0065da5492d5c44bc9eb3b6757340be">recorded</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ProjectItem.html" anchor="a863e45f26bfc71747622cf23cfef8514a2be756560ea379b223d8515924d4ffad">exports</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ProjectItem.html" anchor="a863e45f26bfc71747622cf23cfef8514a1a557283e5542468721ccbc770c8b13f">archives</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ProjectItem.html" anchor="a863e45f26bfc71747622cf23cfef8514a19290604eee3233f77c10a970658725f">imported</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ProjectItem.html" anchor="a863e45f26bfc71747622cf23cfef8514aa8bc0d9bfe8eac095ac699937038a6be">rendered</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ProjectItem.html" anchor="a863e45f26bfc71747622cf23cfef8514a72858d1af3c55029d5dc0bf1a77b6d9e">frozen</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ProjectItem.html" anchor="a863e45f26bfc71747622cf23cfef8514a421b47ffd946ca083b65cd668c6b17e6">video</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RenameMode</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a4ff8de8ad9bd9e16b03850e1f51b5e82</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1ProjectItem.html" anchor="a4ff8de8ad9bd9e16b03850e1f51b5e82af9f90eeaf400d228facde6bc48da5cfb">always</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ProjectItem.html" anchor="a4ff8de8ad9bd9e16b03850e1f51b5e82af5ddaf0ca7929578b408c909429f68f2">local</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ProjectItem.html" anchor="a4ff8de8ad9bd9e16b03850e1f51b5e82ac7561db7a418dd39b2201dfe110ab4a4">never</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SetNameMode</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>adc684adf3e111a2244fb8c0f0a9f38f5</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1ProjectItem.html" anchor="adc684adf3e111a2244fb8c0f0a9f38f5abd7b4b5faac95a9516c23291233e558a">doDefault</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ProjectItem.html" anchor="adc684adf3e111a2244fb8c0f0a9f38f5a7877fad09ef66b74c765698abb43fe7a">forceRename</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ProjectItem.html" anchor="adc684adf3e111a2244fb8c0f0a9f38f5a609fbd8c824fad7642def79d079a52fa">forceNoRename</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>FileMode</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a7896eb170142f9da0a5eb9c79fe2a488</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1ProjectItem.html" anchor="a7896eb170142f9da0a5eb9c79fe2a488adc4d53aa0d117d8b189b36d161af4e96">absolute</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ProjectItem.html" anchor="a7896eb170142f9da0a5eb9c79fe2a488a99c483e1d11b1a279a2a1a3960528487">relative</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ProjectItem.html" anchor="a7896eb170142f9da0a5eb9c79fe2a488a709eb756b756e64928d3cb90511149e5">relativeIfWithinProject</enumvalue>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; ProjectItem &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>aea9c02edfea08872dc73397c3025d97d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; ProjectItem &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>ae1012050488de68f6214c2db4ee06e8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProjectItem</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>ade05e0769b60e1029c476b3c3a2be52a</anchor>
      <arglist>(Engine &amp;, ProjectItemID, juce::InputStream *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProjectItem</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>ab0423456385521277fe59b9be8cb96e2</anchor>
      <arglist>(Engine &amp;, const juce::String &amp;name, const juce::String &amp;type, const juce::String &amp;desc, const juce::String &amp;file, Category, double length, ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProjectItem</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a9ab2c58ad66191842f8293f4efdcde3b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>ace381b1875ceba132a7741eeff79262b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectionStatusChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a9904bf7a85335e048f7b9727cfcd1d2d</anchor>
      <arglist>(bool isNowSelected) override</arglist>
    </member>
    <member kind="function">
      <type>ProjectItemID</type>
      <name>getID</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>adf9569d68bc0fc27337a6590ca71e3ae</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; Project &gt;</type>
      <name>getProject</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a7648f073aa79e0f80ebe6a9e78e1db1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBeenDeleted</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a262ca2784caa99b6207f3c63e11711e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::String &amp;</type>
      <name>getType</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a971e26e1ea31b2128be09c2e1686de39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWave</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a73e1065fd30aa73e0db407bf617f6fd3</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a045db40ec5d8ade646e9f4f638e5fe32</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a4b149a408a327c9dff9088e57085dc78</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isVideo</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>ada356d88d2327744250175d71a50fd63</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::String &amp;</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>ab608efd5043ce9b54d3b014b70dc6ddd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a4d4c75c3a18e4f121ec3efc26102a046</anchor>
      <arglist>(const juce::String &amp;name, SetNameMode mode)</arglist>
    </member>
    <member kind="function">
      <type>Category</type>
      <name>getCategory</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>af721f1e7d26469b20f8021809b8e4c89</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCategory</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a8d07dfe667f45e96493339140426e7ff</anchor>
      <arglist>(Category cat)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getNamedProperty</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a32642242574c12a09eba5b2098a4ad22</anchor>
      <arglist>(const juce::String &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNamedProperty</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a5b93cd617f2a38b95a86848e9be05d16</anchor>
      <arglist>(const juce::String &amp;name, const juce::String &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>ae74b0af573bb5b0cfd32de9c1e2fc318</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>aa645299d519959eef402c30ea6d6b881</anchor>
      <arglist>(const juce::String &amp;newDesc)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; TimePosition &gt;</type>
      <name>getMarkedPoints</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a74f99d192b3deb7ce382aecac026ae27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkedPoints</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>af21d69b9d4f7c7ed53b92ca7a35395f9</anchor>
      <arglist>(const juce::Array&lt; TimePosition &gt; &amp;points)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyAllPropertiesFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>abde799ebf483ac5fbe6f1e5c77bf0287</anchor>
      <arglist>(const ProjectItem &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>convertEditFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a0368dac713a2f8fa6e772d24bc810b83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLength</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>ae00d6ba61d2c0cf654403d7f5b347b4e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLength</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a868e21cde6c8b79c0e92181cc17fcd2b</anchor>
      <arglist>(double length)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getProjectName</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a8ead1e056f09d1588c52ac926be9c552</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getEditPreviewFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a237a59717500d2d8a6b5fac4e5f37a9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getEditThumbnailFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a6d188c76ec8abeea35fb5ed5e7cf3539</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getSourceFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a25c058b20b5769ae5aee11a333faf158</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getRawFileName</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a7ddb7f59ddad9fcfaa5454b20780fa26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getFileName</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>ab4abf62038d56d198d96f6dc64cf1f4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSourceFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a990d4f1c42f863f52df469465f04b46a</anchor>
      <arglist>(const juce::File &amp;, FileMode mode=FileMode::relativeIfWithinProject)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isForFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>ad8e88c388f06592441fc5dd005e6869b</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAbsolutePath</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>aae032f05bd98dfa37bfe2a92bce38292</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertToRelativePath</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a207e36b888a4b8121b19a2046e899eaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertToAbsolutePath</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>aac8709eec99995f226d370240b5b183b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renameSourceFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a212ed33327515b9ecb0b6784bc3739a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Ptr</type>
      <name>createCopy</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>aa89c40a12817d1abf4da5946b5b0a9d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendChange</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a6eed25e5aeeb8db0cadeccd38cd87c81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copySectionToNewFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a1b1a489fd26fe67f6b42c6abe2934c80</anchor>
      <arglist>(const juce::File &amp;destFile, juce::File &amp;actualFileCreated, double startTime, double length)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteSourceFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a52a3e90bbdfcb55ee7bc8cc754350463</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>verifyLength</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a65d3f8b028332ac2ae9490ea4ac22cea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeProjectId</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a0d8945018f37a903d47ee95a57521a51</anchor>
      <arglist>(int oldID, int newID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeToStream</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>ab2c32f34af0942693c60c470c91210ae</anchor>
      <arglist>(juce::OutputStream &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getSearchTokens</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>aa71fa8390942aebdc940fd117ca26e51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>waveItemType</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a00fb85f7812e3d8f6d8421a675da11c3</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>editItemType</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a82c90c40cdf79439842969adc6d16336</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>midiItemType</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a98c393e31ebe3acf8a652fb50564458b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>videoItemType</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a003998b6c298960ef26ebaf9e4dd5a4f</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>ad0ef7e248548d5b51ddba2872ec915a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ProjectManager</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>aa860c957116c15c1b786357fbcd19fc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Project</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItem.html</anchorfile>
      <anchor>a7aa96bc4f81b0d0c023b6d0cbf31f944</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ProjectItemID</name>
    <filename>classtracktion_1_1engine_1_1ProjectItemID.html</filename>
    <member kind="function">
      <type></type>
      <name>ProjectItemID</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a798ca3e84dbd67c7cc1e819405a0e28e</anchor>
      <arglist>() noexcept=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProjectItemID</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a77806066092a7b722ac42b15aaf05e2b</anchor>
      <arglist>(const ProjectItemID &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>ProjectItemID &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>af01c09865b702f2f2b31eeee8605a9d4</anchor>
      <arglist>(const ProjectItemID &amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProjectItemID</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>adb9ffa005a878cb6ce9d121f4d231618</anchor>
      <arglist>() noexcept=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProjectItemID</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>ae0300ca51418556930b883a399be4ac0</anchor>
      <arglist>(const juce::String &amp;stringID) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProjectItemID</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a95e3f3537e311972220a3ecb623f3b27</anchor>
      <arglist>(int itemID, int projectID) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ProjectItemID</type>
      <name>withNewProjectID</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>abe91fa0a8b53f59dd2e8a5830d70a0c7</anchor>
      <arglist>(int newProjectID) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getProjectID</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>aceaaa46d884074435e0069aac321b5d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getItemID</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a98ae14506b9e27d89517967dcb11c7ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getRawID</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>adfa30d1bcca2b6b4cf220e792c3e1a11</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>aa59fd45ddb64c8e68813c8cf423472ef</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInvalid</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>ab3d457aafdd5b2d59baff854c12a8713</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>toString</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>ab0a082d9b629f5ac11060984a8d9b7c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>toStringSuitableForFilename</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a2b337626684202be4daa8bff6b37ee56</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a155804808bf5679f84f0f4c6b2a2f44d</anchor>
      <arglist>(ProjectItemID other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a1a3c459f5314d7111173e2debd41766a</anchor>
      <arglist>(ProjectItemID other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>af865c93104f966636c474649dc4c1be1</anchor>
      <arglist>(ProjectItemID other) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ProjectItemID</type>
      <name>createNewID</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a9e244e9830f0fc388547d4538ac9f470</anchor>
      <arglist>(int projectID) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ProjectItemID</type>
      <name>fromProperty</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectItemID.html</anchorfile>
      <anchor>a9fd11bf5ad06a494f9d9ef6af7a3b2e3</anchor>
      <arglist>(const juce::ValueTree &amp;, const juce::Identifier &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::ProjectItems</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1ProjectItems.html</filename>
    <base>tracktion::engine::Clipboard::ContentType</base>
    <class kind="struct">tracktion::engine::Clipboard::ProjectItems::ItemInfo</class>
    <member kind="function">
      <type></type>
      <name>ProjectItems</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ProjectItems.html</anchorfile>
      <anchor>a00cf4554fac756295ba120789a31152a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProjectItems</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ProjectItems.html</anchorfile>
      <anchor>aa67f70d13abdc47531eff91bb8915d66</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ProjectItems.html</anchorfile>
      <anchor>aceb3ba0dabea05aec2007a0acaf48638</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoProject</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ProjectItems.html</anchorfile>
      <anchor>a3767f68e9e50e4068ac96c035c1b3b63</anchor>
      <arglist>(Project &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ProjectItems.html</anchorfile>
      <anchor>ae3179b071e4302d9007657da52f29b5a</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ProjectItems.html</anchorfile>
      <anchor>a2b8ac2e249e6721e16dd1ca7831b15da</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ItemInfo &gt;</type>
      <name>itemIDs</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1ProjectItems.html</anchorfile>
      <anchor>a60a6440076f49ea6270a74d0a55ca858</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ProjectManager</name>
    <filename>classtracktion_1_1engine_1_1ProjectManager.html</filename>
    <class kind="struct">tracktion::engine::ProjectManager::TempProject</class>
    <member kind="function">
      <type></type>
      <name>ProjectManager</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>aaea0bc85df309853064b09a0ba7a5b1c</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProjectManager</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a431986502f146754fea10f7b4af60de8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>ae24bbbe971ff7ed5ca2f9ab89a5dbc56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>addProjectToList</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a54ae4d2fa14e1398f6a23771789456f3</anchor>
      <arglist>(const juce::File &amp;projectFile, bool shouldSaveList, juce::ValueTree folderToAddTo, int insertIndex=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeProjectFromList</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a02394bea36a3f7b9d8c8fc30e987867f</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearProjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>ac9fc154f2ffa8c61b174547efc3e8e48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getActiveProjectsFolder</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>abc71cf7a56c57c70c993ce9dcbccf7f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getLibraryProjectsFolder</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a8b1b84c6e0455e7dafccab3ed86e2b71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>getProjectFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a01f099b599a8481128cda2df0f669de7</anchor>
      <arglist>(const juce::ValueTree &amp;, bool createIfNotFound=true)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>getProject</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>ab554dcb1aaf1b0b21f381900a2547ef4</anchor>
      <arglist>(int projectID)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>getProject</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>aed10046e261658350892417cc1e76b9e</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; Project &gt;</type>
      <name>getAllProjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a905775c0a71ab1a74f592ffb3f033b0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; Project &gt;</type>
      <name>getAllProjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>acf2f1256590309f36d77522a8f90c940</anchor>
      <arglist>(const juce::ValueTree &amp;folder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackArchiveAndAddToList</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a8112a3c13b0afcaac79fb7741727c21d</anchor>
      <arglist>(const juce::File &amp;archiveFile, juce::ValueTree folder)</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>getProjectItem</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>ab136d471a9f137e54a05f770c2e2d62b</anchor>
      <arglist>(ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>getProjectItem</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a98d93351f506a4e9d05e5ed723647bb8</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>getProject</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>ab0ff5b73b86752090cb8c17781adb77d</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>findSourceFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a06bff7b31a84928c03370ab3bf1e06f3</anchor>
      <arglist>(ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveAllProjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a2a3260bf1c9fd648a0c202169d0a5c8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getRecentProjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a4284d9bbef12f9be09544c41725d5a6c</anchor>
      <arglist>(bool printableFormat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFileToRecentProjectsList</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>aab8c2637703e26a06e573e42586a5c62</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>findFolderContaining</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>af5d93d5d94e11cb998787f25014ebfce</anchor>
      <arglist>(const Project &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>findFolderContaining</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>add113a1bb29fc7fc273bff083b8f4885</anchor>
      <arglist>(int projectId) const</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getFolderItemFor</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a60d530ec3196ec4a247b5c6961ec89df</anchor>
      <arglist>(const Project &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFolderIndexFor</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a11279168cfbd481059f0afe06df79781</anchor>
      <arglist>(const Project &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNewProjectFolder</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a204ffeea57bed150c31d4b9e1d75e3ef</anchor>
      <arglist>(juce::ValueTree parent, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteProjectFolder</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a3489d1b90a5221045bc9c5ee44c3be5b</anchor>
      <arglist>(juce::ValueTree folder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateProjectFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a64f3ef280255eaadb3bed7b090c5f08f</anchor>
      <arglist>(Project &amp;p, const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>createNewProject</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a079c0ec83e5ca08eb85e4a6d81f7b362</anchor>
      <arglist>(const juce::File &amp;projectFile)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>createNewProject</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>ae577113d992f5e7ad6290b6a3fdb73c6</anchor>
      <arglist>(const juce::File &amp;projectFile, juce::ValueTree folderToAddTo)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>createNewProjectInteractively</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>ab9930b79ae39ccae1ca4a4185ff3fd78</anchor>
      <arglist>(const juce::String &amp;suggestedName, const juce::File &amp;lastPath, juce::ValueTree folderToAddTo)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>createNewProjectFromTemplate</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a740d9bfc6b1cd0b0a78b1555cd2011e8</anchor>
      <arglist>(const juce::String &amp;suggestedName, const juce::File &amp;lastPath, const juce::File &amp;templateArchiveFile, juce::ValueTree folderToAddTo)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>findProjectWithId</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>ad134bd4865c0b159ae957a83da19ce9e</anchor>
      <arglist>(const juce::ValueTree &amp;folder, int pid)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>findProjectWithFile</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a4887edf7c1471e6d28d8ca0e1f1dff98</anchor>
      <arglist>(const juce::ValueTree &amp;folder, const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadList</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a3116af65281a8728591ad39be4ff28a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveList</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>aeef2118d097e77065a37e0a97139356a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>ac0cd1437f8fbdb1f72bb4fce1e2f7967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>folders</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>aa8e1539150f1a493b41791ae47f5d7b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Project</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectManager.html</anchorfile>
      <anchor>a7aa96bc4f81b0d0c023b6d0cbf31f944</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ProjectSearchIndex</name>
    <filename>classtracktion_1_1engine_1_1ProjectSearchIndex.html</filename>
    <member kind="function">
      <type></type>
      <name>ProjectSearchIndex</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectSearchIndex.html</anchorfile>
      <anchor>a98aee5b30c67956e06e56c1911fc68bb</anchor>
      <arglist>(Project &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addClip</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectSearchIndex.html</anchorfile>
      <anchor>af672bae4c01d7cd37b6232df4ba263d7</anchor>
      <arglist>(const ProjectItem::Ptr &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findMatches</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectSearchIndex.html</anchorfile>
      <anchor>a1ac48b7ec51fe3eabf1a7e392a2d8274</anchor>
      <arglist>(SearchOperation &amp;, juce::Array&lt; ProjectItemID &gt; &amp;results)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeToStream</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectSearchIndex.html</anchorfile>
      <anchor>a1e92fc888890ee83d8ccfbaace4462b8</anchor>
      <arglist>(juce::OutputStream &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readFromStream</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectSearchIndex.html</anchorfile>
      <anchor>a37d504fc9984e2b7893042e54b807653</anchor>
      <arglist>(juce::InputStream &amp;)</arglist>
    </member>
    <member kind="function">
      <type>IndexedWord *</type>
      <name>findWordMatch</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectSearchIndex.html</anchorfile>
      <anchor>a5ba77cdb9c76b3170e0c0b46bf02ea85</anchor>
      <arglist>(const juce::String &amp;word) const</arglist>
    </member>
    <member kind="variable">
      <type>Project &amp;</type>
      <name>project</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectSearchIndex.html</anchorfile>
      <anchor>ade3edc8fa8cc903ae43dd113aa86bfc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; IndexedWord &gt;</type>
      <name>index</name>
      <anchorfile>classtracktion_1_1engine_1_1ProjectSearchIndex.html</anchorfile>
      <anchor>af994865fa7dcbeb0750ced4096778722</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::PropertyStorage</name>
    <filename>classtracktion_1_1engine_1_1PropertyStorage.html</filename>
    <member kind="function">
      <type></type>
      <name>PropertyStorage</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a1cd7979566351ee38fb3aba680b3720d</anchor>
      <arglist>(juce::String appName_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PropertyStorage</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a3d4f3a321574f1280ce71a6dabb31419</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::File</type>
      <name>getAppCacheFolder</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a993a66d8ce04f261fa47ea13913cbf5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::File</type>
      <name>getAppPrefsFolder</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a7f3a0ec428beb72aed2cce16e7e2d911</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>flushSettingsToDisk</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a129cbe597148f9f8fdb1dc8162345671</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeProperty</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a99b5e342310ef9d465f7634cea6471c9</anchor>
      <arglist>(SettingID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::var</type>
      <name>getProperty</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>aa6f2fb8e1ff986b13c26d5e96543a107</anchor>
      <arglist>(SettingID setting, const juce::var &amp;defaultValue={})</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setProperty</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a88958b456f6716f0a72040288fc93408</anchor>
      <arglist>(SettingID setting, const juce::var &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; juce::XmlElement &gt;</type>
      <name>getXmlProperty</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a576ff655964814bb2ce8cb820425105f</anchor>
      <arglist>(SettingID setting)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setXmlProperty</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>addab9fb2dcc25c88f3f0b57fda7a50fc</anchor>
      <arglist>(SettingID setting, const juce::XmlElement &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removePropertyItem</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>afca275cdfb883d878ac8afc338d33d99</anchor>
      <arglist>(SettingID setting, juce::StringRef item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::var</type>
      <name>getPropertyItem</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a5c78e1d58faf1611d2d4602296e44eeb</anchor>
      <arglist>(SettingID setting, juce::StringRef item, const juce::var &amp;defaultValue={})</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPropertyItem</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a6710141f55e034254efa50f51edce448</anchor>
      <arglist>(SettingID setting, juce::StringRef item, const juce::var &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; juce::XmlElement &gt;</type>
      <name>getXmlPropertyItem</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a14cf283e67e3348f8e41219c7c000fa2</anchor>
      <arglist>(SettingID setting, juce::StringRef item)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setXmlPropertyItem</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a79e6b3817b9933aab916d9bf8342b3ed</anchor>
      <arglist>(SettingID setting, juce::StringRef item, const juce::XmlElement &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::File</type>
      <name>getDefaultLoadSaveDirectory</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a14732989ec20faa23f26387a8d30a830</anchor>
      <arglist>(juce::StringRef label)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDefaultLoadSaveDirectory</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>af1ec8f29cdcab1f53182cf6ee543f813</anchor>
      <arglist>(juce::StringRef label, const juce::File &amp;newPath)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::File</type>
      <name>getDefaultLoadSaveDirectory</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a08154fa6098ec129bef35a4a56c303cd</anchor>
      <arglist>(ProjectItem::Category)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getUserName</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a6f6c6708187e800faa49a61aa6250a15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getApplicationName</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a5ba98c4f901fece612369de755ed5f19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getApplicationVersion</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>ac86a2334d9985e7167ce9a40f9be0a2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::PropertiesFile &amp;</type>
      <name>getPropertiesFile</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>aafec1a02509fd01a4646abcd6ab12241</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringRef</type>
      <name>settingToString</name>
      <anchorfile>classtracktion_1_1engine_1_1PropertyStorage.html</anchorfile>
      <anchor>a44deeb74191f55838a9518be650d7ea2</anchor>
      <arglist>(SettingID)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AudioClipBase::ProxyRenderingInfo</name>
    <filename>structtracktion_1_1engine_1_1AudioClipBase_1_1ProxyRenderingInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>ProxyRenderingInfo</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioClipBase_1_1ProxyRenderingInfo.html</anchorfile>
      <anchor>ab92e387f9123c2366633b245abb9fac3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProxyRenderingInfo</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioClipBase_1_1ProxyRenderingInfo.html</anchorfile>
      <anchor>a4764b62c479b8efba62e3da3d39f03fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>render</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioClipBase_1_1ProxyRenderingInfo.html</anchorfile>
      <anchor>a2eaa70a6769189e36b9bb3d91310e718</anchor>
      <arglist>(Engine &amp;, const AudioFile &amp;, AudioFileWriter &amp;, juce::ThreadPoolJob *const &amp;, std::atomic&lt; float &gt; &amp;progress) const</arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; AudioSegmentList &gt;</type>
      <name>audioSegmentList</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioClipBase_1_1ProxyRenderingInfo.html</anchorfile>
      <anchor>a9ebca03d5112d11d94c81e36dc8994d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeRange</type>
      <name>clipTime</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioClipBase_1_1ProxyRenderingInfo.html</anchorfile>
      <anchor>a3055a04bc7579cebad9d426bc2e89eac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>speedRatio</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioClipBase_1_1ProxyRenderingInfo.html</anchorfile>
      <anchor>aa1a540a790ba0ec5e9c8a3ddb26ad148</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeStretcher::Mode</type>
      <name>mode</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioClipBase_1_1ProxyRenderingInfo.html</anchorfile>
      <anchor>acaee6ee7705bd2149fcbaed067373056</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeStretcher::ElastiqueProOptions</type>
      <name>options</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioClipBase_1_1ProxyRenderingInfo.html</anchorfile>
      <anchor>a344b72fd956ca6dd22f1d320375ed58c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::QuantisationType</name>
    <filename>classtracktion_1_1engine_1_1QuantisationType.html</filename>
    <member kind="function">
      <type></type>
      <name>QuantisationType</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a39cea508fc5564f09449c67e969e32df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QuantisationType</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a6eaf49691e1874a0c9b995d09c7ea48d</anchor>
      <arglist>(const juce::ValueTree &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~QuantisationType</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a6ef42b2761453bb058efb468254cb5b4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QuantisationType</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a82c84e2d883017db1e57e89ae15b3edf</anchor>
      <arglist>(const QuantisationType &amp;)</arglist>
    </member>
    <member kind="function">
      <type>QuantisationType &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a49cab5d5bb22a445d51b90cafff5ebb5</anchor>
      <arglist>(const QuantisationType &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a31bab996f0d87def6fd7dfe4a11ee7ac</anchor>
      <arglist>(const QuantisationType &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyQuantisationToSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a7fb54149a4895fa99e7847bc6161c570</anchor>
      <arglist>(juce::MidiMessageSequence &amp;, Edit &amp;, TimePosition sequenceStartOffset)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a47e79e063fb39b47926c18a74fa6031e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a7fe62e53e9f1fc7aba06a2bb57791e15</anchor>
      <arglist>(const juce::String &amp;newTypeName)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getType</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a728294ed18ff573f0f75ca45ac859c41</anchor>
      <arglist>(bool translated) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTimecodeSnapTypeLevel</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a718d76a1c9cf8f3d493c5b8b5eb43b00</anchor>
      <arglist>(bool &amp;isTriplet) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getProportion</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a5bff647f10e4d22f1830f538f068f18f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProportion</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>afab64b0c5d7c20ef23eb879ee2a79e4d</anchor>
      <arglist>(float prop)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isQuantisingNoteOffs</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>abcd0b2efe9e789239e7c3dc6b3db6d4d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsQuantisingNoteOffs</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a5caf7408b15c7794201b40b51bfee78a</anchor>
      <arglist>(bool isQuantising)</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>roundBeatToNearest</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a21ee026d2e9934bc2be07775ea93aae5</anchor>
      <arglist>(BeatPosition beatNumber) const</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>roundBeatUp</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a0bff96767f3e3aa8303cd4cea2398112</anchor>
      <arglist>(BeatPosition beatNumber) const</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>roundBeatToNearestNonZero</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>aaa752b1120d2123343f3465345cfd9e8</anchor>
      <arglist>(BeatPosition beatNumber) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>roundToNearest</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a72d02dbc6ade334418a7724afbca7d38</anchor>
      <arglist>(TimePosition, const Edit &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>roundUp</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a57bb024b9d15437ca82072c1e9d1a0f4</anchor>
      <arglist>(TimePosition, const Edit &amp;) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getAvailableQuantiseTypes</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a3415479d13a6d31f524b25ef2cb1b6e7</anchor>
      <arglist>(bool translated)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getDefaultType</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a59112b8447c2964ef11a18a9a9662004</anchor>
      <arglist>(bool translated)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a6bf67a407ac7b56d05fdf80c10942319</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>typeName</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>af4238e3fd14493afaceadca11480485f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>proportion</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a0a6d10206c311d6efc04f95ee8dc59d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>quantiseNoteOffs</name>
      <anchorfile>classtracktion_1_1engine_1_1QuantisationType.html</anchorfile>
      <anchor>a22ed89d6261be4cfbb17439cc1804db8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::RackConnection</name>
    <filename>structtracktion_1_1engine_1_1RackConnection.html</filename>
    <member kind="function">
      <type></type>
      <name>RackConnection</name>
      <anchorfile>structtracktion_1_1engine_1_1RackConnection.html</anchorfile>
      <anchor>a17ab622e5c0ed26ff3441c84cdd9130b</anchor>
      <arglist>(const juce::ValueTree &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1RackConnection.html</anchorfile>
      <anchor>a979123e4f97e68f32d7d53a80bdfd0b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; EditItemID &gt;</type>
      <name>sourceID</name>
      <anchorfile>structtracktion_1_1engine_1_1RackConnection.html</anchorfile>
      <anchor>aa612da71dafe0e314c80fae28919ff34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; EditItemID &gt;</type>
      <name>destID</name>
      <anchorfile>structtracktion_1_1engine_1_1RackConnection.html</anchorfile>
      <anchor>a3fa4b83ca5e722195e9474210b1eec38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>sourcePin</name>
      <anchorfile>structtracktion_1_1engine_1_1RackConnection.html</anchorfile>
      <anchor>a0e5ac85b406e813d82f722b417c90417</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>destPin</name>
      <anchorfile>structtracktion_1_1engine_1_1RackConnection.html</anchorfile>
      <anchor>a0d612dfcd85725fff73f4fdb2f2292e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::RackInstance</name>
    <filename>classtracktion_1_1engine_1_1RackInstance.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="enumeration">
      <type></type>
      <name>Channel</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a7933458ffdc09160dee8ae5e678c3073</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>left</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a7933458ffdc09160dee8ae5e678c3073ad8e7658ff24601c28f302d87c2864264</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>right</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a7933458ffdc09160dee8ae5e678c3073a7a5bd1cc4c110e8c699879efcc559b5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>left</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a7933458ffdc09160dee8ae5e678c3073ad8e7658ff24601c28f302d87c2864264</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>right</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a7933458ffdc09160dee8ae5e678c3073a7a5bd1cc4c110e8c699879efcc559b5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RackInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a09134eed503e65e7751a9d0dbf0d0a60</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RackInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>ad80a1f4f681d28e01f3ceecd354ea554</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>acbf0b42973991a2d9c61194bf3420c44</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>add38b1a8f51ad57f25d126616a7e61e4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTooltip</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a26c96d87da61997fc580c25498996da4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>acd0e6d91880b5e74ed9bae681a835650</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>ad8456d9f6f9629bb63bd2a478e6287e8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a2bbeea816f6eaa72796dbe282e1115c0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesMidiInput</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a7a54e5becf9c3e2d8b483be5fd09efbb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a3e5db1f49ca6098a6808538d223ca333</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSynth</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>aee89dccb41bd527e0ea64a032efa52ac</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a6cf53c1347ad2d3412d24226626aa83f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>af783f952ae67a4e68847fd148d89e83a</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a27b2205101a721f0d275aec82ed25232</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsConstantBufferSize</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a17393ee9e060b5c8408b02f666dbc9c7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForNextBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a410bfb395b4d1ab1923bf750d22592ee</anchor>
      <arglist>(TimePosition) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a14115a7f6c8957b06909213120a52740</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateAutomatableParamPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>adc3e4134dd2dfbc57fb7d83d4990e43d</anchor>
      <arglist>(TimePosition) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a0c8c4558a298826f3cd40d7612ea6454</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceRackWithPluginSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a372174e9519b24aa1a2d3358f1a01541</anchor>
      <arglist>(SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getInputChoices</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a8267cc323e24e4a5eda8b1a58a4adc01</anchor>
      <arglist>(bool includeNumberPrefix)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getOutputChoices</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>afd4c7fc20a19b525ededce8c6e9bb79e</anchor>
      <arglist>(bool includeNumberPrefix)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getNoPinName</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a41b481ebd77563dc81dfa504fada117f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInputName</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>ad371446076a2ba4723dd62afdbcf5f0a</anchor>
      <arglist>(Channel, const juce::String &amp;inputName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputName</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a9a38154a843945fbc883a3cd3b47b1ce</anchor>
      <arglist>(Channel, const juce::String &amp;outputName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInputLevel</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a4da4bde8add58dccc62cf48648b8cebb</anchor>
      <arglist>(Channel, float)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputLevel</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>af2fdc718aebfe8454b9d7ea31138a597</anchor>
      <arglist>(Channel, float)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getInputName</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a2528176f3f8dcf9c089baf3fc88c1bd0</anchor>
      <arglist>(Channel)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getOutputName</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>afc431a3e6c3b875aa5169572890a0064</anchor>
      <arglist>(Channel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a605fe590d24d57d62f9d458b64d4f916</anchor>
      <arglist>(RackType &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>rackTypeID</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>ab02c890c9ec12c9affd0321d092f0249</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const RackType::Ptr</type>
      <name>type</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a72394a68d606d0426e8f6dc67ae22dc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>linkInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a9ce55661da335e707e0849a7610019e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>linkOutputs</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>afbd1b6acd2b1e82057e8676d8539a8cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>leftInputGoesTo</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>ac45977b1917ecb0ab078a5cb750494cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>rightInputGoesTo</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a6b7a16ea76a1c12306e9c12004bc874a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>leftOutputComesFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>afa368848ce6d018c798fdd3208c4f6d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>rightOutputComesFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a29a45e4fcd8fcee5e4c7071bc8583186</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>dryValue</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a63573df62579d5e3e3d22d549e6a6912</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>wetValue</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a00a315dfbe7b1b335a96e8deb82d776d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>leftInValue</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a8e8623bd64949fa12736bc73a7c3be0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rightInValue</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a6eb7f4aff4527413509df054b299c5cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>leftOutValue</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a1f67b36566e83f320437a8d1a6857f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rightOutValue</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>af40748bbbeb14d4e363ee7fec8264c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>dryGain</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>ac10b2c8b25d9fc7d05ebaaff11bb2e1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>wetGain</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a1cb384b355401682d43f97e89d386e93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>leftInDb</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>acacedcac5ca2af11a29082072b2b680b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rightInDb</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>ac056767687c1313fe93a428ce2751889</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>leftOutDb</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>aac7e631ad8ba9be1ac483b0c5550a4ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rightOutDb</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a8dd77d6e4cbb26e258f621d5d5c5488d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>af9bcb721ad8a097584b73c84ab19fb55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>rackMinDb</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a50b5ff167344a0461362ac231c754012</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>rackMaxDb</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstance.html</anchorfile>
      <anchor>a2c1681d7f031dfe17d19c992cce5eec0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::RackInstanceNode</name>
    <filename>classtracktion_1_1engine_1_1RackInstanceNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="typedef">
      <type>std::array&lt; std::tuple&lt; int, int, AutomatableParameter::Ptr &gt;, 2 &gt;</type>
      <name>ChannelMap</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstanceNode.html</anchorfile>
      <anchor>a2e3bfdc449355c234790a89bbcf140cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RackInstanceNode</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstanceNode.html</anchorfile>
      <anchor>a88e5c40d85915be2e8408fbaf7c0789f</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt;, ChannelMap channelMap)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstanceNode.html</anchorfile>
      <anchor>a358208eee953b86aea072a98f926098d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstanceNode.html</anchorfile>
      <anchor>a9b09435f5ba1ee06a50dff8fd1c6632d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstanceNode.html</anchorfile>
      <anchor>a772ab8d2067407a4459d221c85b72e9d</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstanceNode.html</anchorfile>
      <anchor>ac0b94591fc96ce23d94043c28272ea36</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstanceNode.html</anchorfile>
      <anchor>abc86cf58df3a09d174bc27454879a44a</anchor>
      <arglist>(choc::buffer::FrameCount, juce::Range&lt; int64_t &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1RackInstanceNode.html</anchorfile>
      <anchor>a24b182e18932275be19d7c2f46582356</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::RackNodePlayer</name>
    <filename>classtracktion_1_1engine_1_1RackNodePlayer.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>RackNodePlayer</name>
      <anchorfile>classtracktion_1_1engine_1_1RackNodePlayer.html</anchorfile>
      <anchor>af79a53b17baa3cdb610ebccb247775e9</anchor>
      <arglist>(std::unique_ptr&lt; tracktion::graph::Node &gt; nodeToProcess)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RackNodePlayer</name>
      <anchorfile>classtracktion_1_1engine_1_1RackNodePlayer.html</anchorfile>
      <anchor>a884bec01b940a5d95206e9432b54ec21</anchor>
      <arglist>(std::unique_ptr&lt; tracktion::graph::Node &gt; nodeToProcess, double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1RackNodePlayer.html</anchorfile>
      <anchor>a730c548b7412e350ef0fdc2ddee6ad99</anchor>
      <arglist>(double sampleRate, int blockSize)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLatencySamples</name>
      <anchorfile>classtracktion_1_1engine_1_1RackNodePlayer.html</anchorfile>
      <anchor>a481d517aeb24abbd5e61cc4527fad2a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1RackNodePlayer.html</anchorfile>
      <anchor>af24cb649b89471b8d163b2a91e1594dd</anchor>
      <arglist>(const tracktion::graph::Node::ProcessContext &amp;pc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1RackNodePlayer.html</anchorfile>
      <anchor>a8b7bfdb3dfef1d858a922c7bbc3d62aa</anchor>
      <arglist>(const tracktion::graph::Node::ProcessContext &amp;pc, TimeRange editTime, bool isPlaying, bool isScrubbing, bool isRendering)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::RackReturnNode</name>
    <filename>classtracktion_1_1engine_1_1RackReturnNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>RackReturnNode</name>
      <anchorfile>classtracktion_1_1engine_1_1RackReturnNode.html</anchorfile>
      <anchor>ab083e15d8aa545187f9994644d0e936d</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; wetNode, std::function&lt; float()&gt; wetGainFunc, Node *dryNode, std::function&lt; float()&gt; dryGainFunc)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1RackReturnNode.html</anchorfile>
      <anchor>a958d02929764686b9659da93f7079580</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1RackReturnNode.html</anchorfile>
      <anchor>a1452080f98c415629c6ea169a4841ad4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>TransformResult</type>
      <name>transform</name>
      <anchorfile>classtracktion_1_1engine_1_1RackReturnNode.html</anchorfile>
      <anchor>af74e5e9be0aa3c38f8467a9c2fd432a9</anchor>
      <arglist>(Node &amp;, const std::vector&lt; Node * &gt; &amp;, TransformCache &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1RackReturnNode.html</anchorfile>
      <anchor>af180e4bdc908ea695047c8aaefa8cfc5</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1RackReturnNode.html</anchorfile>
      <anchor>a5c144bdf183dbe27e90bc169b292bd05</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1RackReturnNode.html</anchorfile>
      <anchor>a590eeabf1630a2f4f82d7ec675434885</anchor>
      <arglist>(choc::buffer::FrameCount, juce::Range&lt; int64_t &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1RackReturnNode.html</anchorfile>
      <anchor>aa3b5ed42cdcc162bf3915e0cf2699837</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::RackType</name>
    <filename>classtracktion_1_1engine_1_1RackType.html</filename>
    <base>tracktion::engine::EditItem</base>
    <base>tracktion::engine::Selectable</base>
    <base>tracktion::engine::MacroParameterElement</base>
    <class kind="struct">tracktion::engine::RackType::WindowState</class>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; RackType &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>acc04a3d9fd9d11814f018f98dd109765</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RackType</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a4576ca1940392c92b69cf54a7de2fac2</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RackType</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a5756ae004715a2cf5e2796654af2d9df</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>createStateCopy</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a3793f69649b66041e448bb3359717d53</anchor>
      <arglist>(bool includeAutomation)</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>restoreStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a47fc241307e743fd421fffa22d6e3913</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a35e0930ad35e8427bc826b92745dc15a</anchor>
      <arglist>(RackInstance *, const PluginInitialisationInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialisePluginsIfNeeded</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a1a3edb47c70e8345c647faf9000b687b</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deregisterInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>afa990757d02cd8cdabc8360acd79e584</anchor>
      <arglist>(RackInstance *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateAutomatableParamPositions</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a2e3795c32d0669648549f262469c93c7</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLatencySeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a89bf0ba60ce017f81d62712ff19814b1</anchor>
      <arglist>(double sampleRate, int blockSize)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Plugin * &gt;</type>
      <name>getPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a176ef932a0daf9953cf718b285cded64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>ab8792c0f326812a49ab2ae3cdbd899b5</anchor>
      <arglist>(const Plugin::Ptr &amp;, juce::Point&lt; float &gt; pos, bool canAutoConnect)</arglist>
    </member>
    <member kind="function">
      <type>Plugin *</type>
      <name>getPluginForID</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>aa21a43d8ba827481b6cf50dc9847bd83</anchor>
      <arglist>(EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::Point&lt; float &gt;</type>
      <name>getPluginPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a68028e909b85e586660ed324d0966af8</anchor>
      <arglist>(const Plugin::Ptr &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Point&lt; float &gt;</type>
      <name>getPluginPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a614f948342aa36eb548053104dd6e6c7</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPluginPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>af79a6aeefa865ad9e5e365897ab829dc</anchor>
      <arglist>(int index, juce::Point&lt; float &gt; pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>aaac92bc21d19bbe1babef11f413ab06d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; const RackConnection * &gt;</type>
      <name>getConnections</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a2fa1010e696cff8bd77ffb34dd69c059</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addConnection</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a61e5f36ef97ac220b224f91848e12a63</anchor>
      <arglist>(EditItemID source, int sourcePin, EditItemID dest, int destPin)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeConnection</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a977ea75f169fa8912217c511940d508d</anchor>
      <arglist>(EditItemID source, int sourcePin, EditItemID dest, int destPin)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnectionLegal</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a7bc4d616b8b69db43c87e96faebe2db8</anchor>
      <arglist>(EditItemID source, int sourcePin, EditItemID dest, int destPin) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; EditItemID &gt;</type>
      <name>getPluginsWhichTakeInputFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a7cd26e77f6017d068935372c300c5088</anchor>
      <arglist>(EditItemID) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkConnections</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>aa6eb8aa1964f525d31c6f9b2063f3c62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createInstanceForSideChain</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a336b1c0d59f00c63bd31b50e05ff6aed</anchor>
      <arglist>(Track &amp;, const juce::BigInteger &amp;channelMask, EditItemID pluginID, int pinIndex)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>ac9e12f82a0165f6eef41f14934a6a954</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getInputNames</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a8ef3b1cf127323ba81d66a5fb25d802f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getOutputNames</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>af94b4378e9f1b289979e1b05bafe76f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addInput</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a5834a81fd13b3fc6bb2106a745d5702d</anchor>
      <arglist>(int index, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addOutput</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>adfb2bcdaadf46113999fa32b81a7699f</anchor>
      <arglist>(int index, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeInput</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>aae88799af2eee7f617909ab44b98227f</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeOutput</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>ab82c3c696a5da22920a85a37e119739c</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renameInput</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a4dcc0554c31bf99a11562198fcea826f</anchor>
      <arglist>(int index, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renameOutput</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a9e7f026c0ac35b989da1244580874220</anchor>
      <arglist>(int index, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteClipboard</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a677681f2e6e2a122947f08f041768563</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ModifierList &amp;</type>
      <name>getModifierList</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>aef3fbd914c343ad82947e30ca876991d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::UndoManager *</type>
      <name>getUndoManager</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>ad2fbefe8741ce279910b4c247c385fcc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a2b4770989e9ca0a17692b217d213e466</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getAudioInputNamesWithChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a3dd937ad93e8cbb630fb2774209bd775</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getAudioOutputNamesWithChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a4d91391f1a82158fc36dc69b48e948df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; WindowState * &gt;</type>
      <name>getWindowStates</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a748966f40c0fe38ef708cae2bc870108</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadWindowPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>ae17a58844e67512cc6024f5f1031a459</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveWindowPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>aa1c8b9af188921274c551823529ac9a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideWindowForShutdown</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a55ea1439c4ecf02b41233fb6b56c05d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr</type>
      <name>createTypeToWrapPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a6df505c1a6b33e9e5aae3b49a1013a1b</anchor>
      <arglist>(const Plugin::Array &amp;, Edit &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isPluginAllowed</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a31ac7df821b65fe2880968d1fedac79b</anchor>
      <arglist>(const Plugin::Ptr &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removeBrokenConnections</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a4c9da2321cbf2f0f5dc159056a551d45</anchor>
      <arglist>(juce::ValueTree &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RackType::Ptr</type>
      <name>findRackTypeContaining</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>ae7de0b24fab85cf318139a1d153b5ac0</anchor>
      <arglist>(const Plugin &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getRackPresetPrefix</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a499a134692e729f0f515dbb6c01263ee</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>ac4fd1d9a9170c10472c138778ba76fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>rackName</name>
      <anchorfile>classtracktion_1_1engine_1_1RackType.html</anchorfile>
      <anchor>a83a61e480592339d4faf399e025af517</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::RackTypeList</name>
    <filename>classtracktion_1_1engine_1_1RackTypeList.html</filename>
    <member kind="function">
      <type></type>
      <name>RackTypeList</name>
      <anchorfile>classtracktion_1_1engine_1_1RackTypeList.html</anchorfile>
      <anchor>a491180c1d49c083528bbeeca3718c783</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RackTypeList</name>
      <anchorfile>classtracktion_1_1engine_1_1RackTypeList.html</anchorfile>
      <anchor>a8e5a8c929ffee0c58677e113e41d9791</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1RackTypeList.html</anchorfile>
      <anchor>a96c901db2085549ba00bd0ff9c521aeb</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1RackTypeList.html</anchorfile>
      <anchor>a7531f26586f5f33795dff951b6da9acf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RackType::Ptr</type>
      <name>getRackType</name>
      <anchorfile>classtracktion_1_1engine_1_1RackTypeList.html</anchorfile>
      <anchor>a1ac5f345d8119111f1d39a4491e6f6b0</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>RackType::Ptr</type>
      <name>getRackTypeForID</name>
      <anchorfile>classtracktion_1_1engine_1_1RackTypeList.html</anchorfile>
      <anchor>a27e65313b8ed88c30a22fc3b0e8fef9d</anchor>
      <arglist>(EditItemID) const</arglist>
    </member>
    <member kind="function">
      <type>RackType::Ptr</type>
      <name>findRackContaining</name>
      <anchorfile>classtracktion_1_1engine_1_1RackTypeList.html</anchorfile>
      <anchor>af727d08a8d09dae03f32e31a1b22f90f</anchor>
      <arglist>(Plugin &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>RackType::Ptr</type>
      <name>addRackTypeFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1RackTypeList.html</anchorfile>
      <anchor>ad41cd4262e7593d12e7697c039dbaad8</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>RackType::Ptr</type>
      <name>addNewRack</name>
      <anchorfile>classtracktion_1_1engine_1_1RackTypeList.html</anchorfile>
      <anchor>ae46213fe870e22e8d592c1c4a19f37fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RackType::Ptr</type>
      <name>duplicateRack</name>
      <anchorfile>classtracktion_1_1engine_1_1RackTypeList.html</anchorfile>
      <anchor>a03ac81cf73cb9126f8ef8417ede1476a</anchor>
      <arglist>(EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>RackType::Ptr</type>
      <name>duplicateRack</name>
      <anchorfile>classtracktion_1_1engine_1_1RackTypeList.html</anchorfile>
      <anchor>ae6353c4c24710a98f2f076a2d533c70d</anchor>
      <arglist>(RackType &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeRackType</name>
      <anchorfile>classtracktion_1_1engine_1_1RackTypeList.html</anchorfile>
      <anchor>ad8a1beeebed011b2b3273128994e5379</anchor>
      <arglist>(const RackType::Ptr &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>importRackFiles</name>
      <anchorfile>classtracktion_1_1engine_1_1RackTypeList.html</anchorfile>
      <anchor>acf6001630eff8848a55eb544b1e90678</anchor>
      <arglist>(const juce::Array&lt; juce::File &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; RackType * &gt; &amp;</type>
      <name>getTypes</name>
      <anchorfile>classtracktion_1_1engine_1_1RackTypeList.html</anchorfile>
      <anchor>abe4482c6f71394f1cee078e1c7a274e5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Ramp</name>
    <filename>structtracktion_1_1engine_1_1Ramp.html</filename>
    <member kind="function">
      <type></type>
      <name>Ramp</name>
      <anchorfile>structtracktion_1_1engine_1_1Ramp.html</anchorfile>
      <anchor>aaaea5fdb9add2219a7b2cd63317599f5</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDuration</name>
      <anchorfile>structtracktion_1_1engine_1_1Ramp.html</anchorfile>
      <anchor>a2de96270a5cacbbc44a8fac2ef67794e</anchor>
      <arglist>(float newDuration) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>structtracktion_1_1engine_1_1Ramp.html</anchorfile>
      <anchor>ac1b932fb4934585f1acfc4146c064473</anchor>
      <arglist>(float newPosition) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>structtracktion_1_1engine_1_1Ramp.html</anchorfile>
      <anchor>a25b748c944e04c58b79339fbfbc744b4</anchor>
      <arglist>(float duration) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getPosition</name>
      <anchorfile>structtracktion_1_1engine_1_1Ramp.html</anchorfile>
      <anchor>a776d57ed6592c1f05b501313b344cf28</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getProportion</name>
      <anchorfile>structtracktion_1_1engine_1_1Ramp.html</anchorfile>
      <anchor>a53ad6bee38adedd8bfedf98f6052a15f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::RandomModifier</name>
    <filename>classtracktion_1_1engine_1_1RandomModifier.html</filename>
    <base>tracktion::engine::Modifier</base>
    <base protection="private">tracktion::engine::ValueTreeAllEventListener</base>
    <class kind="struct">tracktion::engine::RandomModifier::Assignment</class>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a0c0b9e2eaa77cc8ceba5cb1e4e15a3a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>random</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a0c0b9e2eaa77cc8ceba5cb1e4e15a3a2af999c8e5fba3f42ab2c6a2ee4bb63916</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noise</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a0c0b9e2eaa77cc8ceba5cb1e4e15a3a2ac0b4b822eb002bd53ba479fc252cfd00</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; RandomModifier &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>adfec0e1cd16f494f235b5061682e637f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; RandomModifier &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a265a1f0ad5c488053c6e430d3e312855</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>random</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a0c0b9e2eaa77cc8ceba5cb1e4e15a3a2af999c8e5fba3f42ab2c6a2ee4bb63916</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>noise</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a0c0b9e2eaa77cc8ceba5cb1e4e15a3a2ac0b4b822eb002bd53ba479fc252cfd00</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RandomModifier</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a0f357862e16509c3c9dd29b492b9052d</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RandomModifier</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a16a4553b78dfcaf8738c7b542ed9433d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>acda7e2eed050e973d22a9629a3e723b6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a35d4aec2caa92d29cd011ed6ec8794e1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a17c6550cb4e293f094c455aba680f1a9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentPhase</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a84329a5bee57713b10f47a4aa5fa555b</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::ModifierAssignment *</type>
      <name>createAssignment</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>afe3e0174eafda98ef0ccf40bdbe6e1d9</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>ProcessingPosition</type>
      <name>getProcessingPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>afb915b1aca2f88f7aee2b891476e82db</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a1e0f59dab9616b7249ca54a2d8b1e385</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a595dc7482886bd8ee207c204ba15719d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a7910b344c687168c108702bc3ddd2323</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a08b0ce6145809240435352b1112fc5fe</anchor>
      <arglist>(double, int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getTypeNames</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>abfbbf51084f639336ed6e559577040b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>type</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>aa55a7df7b0c9f66906d806539efc6b84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>shape</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a8a69a9b8b163dc371bcd7927f8812481</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>syncType</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a31338daa9023fe22533b61cc308858aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rate</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>ad1367ca42005448a8e8473e87a4b8e7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rateType</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a51915324378565f77a63ca1729873513</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>depth</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a7b44643d9b09bcee9f8f45778c62880e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>stepDepth</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a01e2e86e34dafb16e481109a2385c645</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>smooth</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a399114efddef6c1a765193e207fda19c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>bipolar</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>aad6a71fab45c08aa5906d436502c9ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>typeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>aca41268b39543e06b40c60dcdd621fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>shapeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>add037d1130d84b2749ca11a19d891178</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>syncTypeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a50c4ca0625e81d3c9fbe3e6e01482d81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rateParam</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>af957556677c98bf3534a7841593851e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rateTypeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a52c2a909458e6419b7b80cc96a7b05cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>depthParam</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a03cb61c062f5c876d0914a2de0c5cbc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>stepDepthParam</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>abd1dcf83f48c9c6f2c66591153d8af22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>smoothParam</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>ae965fb52b7ea06aa04953a163125f09e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>bipolarParam</name>
      <anchorfile>classtracktion_1_1engine_1_1RandomModifier.html</anchorfile>
      <anchor>a5e3f95ab8f8f35e6841b81e96c156b26</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::VSTXML::Range</name>
    <filename>structtracktion_1_1engine_1_1VSTXML_1_1Range.html</filename>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Range.html</anchorfile>
      <anchor>a50b64512575cab1fcc5d36474eef9b05</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Range.html</anchorfile>
      <anchor>a6b465f0aa7966079cb78bc0d8c15c449</anchor>
      <arglist>(const juce::String &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Range.html</anchorfile>
      <anchor>acf21f6fbf913b142544dbbf9d6713327</anchor>
      <arglist>(const juce::String &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Range.html</anchorfile>
      <anchor>a65c1fa3c357c37ce00a7cb6408c92cca</anchor>
      <arglist>(float f) const noexcept</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>low</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Range.html</anchorfile>
      <anchor>a94d90555daca9ed92b37bf2288cbea72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>high</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Range.html</anchorfile>
      <anchor>a4682b682f1eaa1aaa2d8113e33549d4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inclusiveLow</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Range.html</anchorfile>
      <anchor>a43b5a0c00fe4bde0d5275515f1921bb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inclusiveHigh</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Range.html</anchorfile>
      <anchor>ab2e342b973296e60451374afc7402b28</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>engine::ReadAheadTimeStretcher</name>
    <filename>classengine_1_1ReadAheadTimeStretcher.html</filename>
    <member kind="function">
      <type></type>
      <name>ReadAheadTimeStretcher</name>
      <anchorfile>classengine_1_1ReadAheadTimeStretcher.html</anchorfile>
      <anchor>a545ff57c9f5de9fe8f3f383738623fdc</anchor>
      <arglist>(int numBlocksToReadAhead)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ReadAheadTimeStretcher</name>
      <anchorfile>classengine_1_1ReadAheadTimeStretcher.html</anchorfile>
      <anchor>aa691c0f424e37fdd3e9e44257cb23301</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classengine_1_1ReadAheadTimeStretcher.html</anchorfile>
      <anchor>a9e8d9215d83f322c5bdf4533f35af136</anchor>
      <arglist>(double sourceSampleRate, int samplesPerBlock, int numChannels, TimeStretcher::Mode, TimeStretcher::ElastiqueProOptions, bool realtime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialised</name>
      <anchorfile>classengine_1_1ReadAheadTimeStretcher.html</anchorfile>
      <anchor>a86b35f944f760e8cbd2e6022d7e02c19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classengine_1_1ReadAheadTimeStretcher.html</anchorfile>
      <anchor>a48416824a860392d8cc8fea750262a90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setSpeedAndPitch</name>
      <anchorfile>classengine_1_1ReadAheadTimeStretcher.html</anchorfile>
      <anchor>adbb84f0ebfc88abe4e19bc6572755f72</anchor>
      <arglist>(float speedRatio, float semitones)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxFramesNeeded</name>
      <anchorfile>classengine_1_1ReadAheadTimeStretcher.html</anchorfile>
      <anchor>a0bd87ac6f9548b96d9192845d4ca9738</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFramesNeeded</name>
      <anchorfile>classengine_1_1ReadAheadTimeStretcher.html</anchorfile>
      <anchor>a939427c9dd4895cb15bbbd04fabd9802</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFramesRecomended</name>
      <anchorfile>classengine_1_1ReadAheadTimeStretcher.html</anchorfile>
      <anchor>afedc5e92cafa9fe1db4e316563ecd823</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requiresMoreFrames</name>
      <anchorfile>classengine_1_1ReadAheadTimeStretcher.html</anchorfile>
      <anchor>af2c791ed882870e38caa1dccdc13e672</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFreeSpace</name>
      <anchorfile>classengine_1_1ReadAheadTimeStretcher.html</anchorfile>
      <anchor>aa038c24be120f1bf67e436e0daf648a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pushData</name>
      <anchorfile>classengine_1_1ReadAheadTimeStretcher.html</anchorfile>
      <anchor>af09d09c238c87db99a02f6765ce26be5</anchor>
      <arglist>(const float *const *inChannels, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumReady</name>
      <anchorfile>classengine_1_1ReadAheadTimeStretcher.html</anchorfile>
      <anchor>af0856c827268047933e3aafa92c93ad7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>popData</name>
      <anchorfile>classengine_1_1ReadAheadTimeStretcher.html</anchorfile>
      <anchor>aad91a9f61555e895a83747118b832337</anchor>
      <arglist>(float *const *outChannels, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>flush</name>
      <anchorfile>classengine_1_1ReadAheadTimeStretcher.html</anchorfile>
      <anchor>ad47fc84f20d249c7e0984d24db47fd43</anchor>
      <arglist>(float *const *outChannels)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::AudioFileCache::Reader</name>
    <filename>classtracktion_1_1engine_1_1AudioFileCache_1_1Reader.html</filename>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; Reader &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>ad9753eb9723339a1d702f721f63a47c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Reader</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>ab81ea987ceb7659c4199e7e863279b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>ac2aae434faa81f14f88d299f15288bf6</anchor>
      <arglist>(SampleCount) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SampleCount</type>
      <name>getReadPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>ad0d5e0f6feb2c8fdf61afd2ad12bb99c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readSamples</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>a075ae43183bdb3ebb264681689a41d34</anchor>
      <arglist>(int numSamples, juce::AudioBuffer&lt; float &gt; &amp;destBuffer, const juce::AudioChannelSet &amp;destBufferChannels, int startOffsetInDestBuffer, const juce::AudioChannelSet &amp;sourceBufferChannels, int timeoutMs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readSamples</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>a74395cfd933242e3defb8563e7a47227</anchor>
      <arglist>(int *const *destSamples, int numDestChannels, int startOffsetInDestBuffer, int numSamples, int timeoutMs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getRange</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>ae3898550678f95b75ce7d00242bb6381</anchor>
      <arglist>(int numSamples, float &amp;lmax, float &amp;lmin, float &amp;rmax, float &amp;rmin, int timeoutMs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopRange</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>ad60fbb542d4badbfd2b77ac0529513f6</anchor>
      <arglist>(SampleRange)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>a42d66770204280035f2611f29f097833</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>a4148bc4200c9bfa5ebbc8ca1148baab2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AudioFileCache</name>
      <anchorfile>classtracktion_1_1engine_1_1AudioFileCache_1_1Reader.html</anchorfile>
      <anchor>a2221afd3b38485316dcccb68d23d524c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::TransportControl::ReallocationInhibitor</name>
    <filename>structtracktion_1_1engine_1_1TransportControl_1_1ReallocationInhibitor.html</filename>
    <member kind="function">
      <type></type>
      <name>ReallocationInhibitor</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1ReallocationInhibitor.html</anchorfile>
      <anchor>aeaa978fd776eb3c96e8abec5cfef202a</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ReallocationInhibitor</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1ReallocationInhibitor.html</anchorfile>
      <anchor>a80da4b900eeed98a863e6d0ec7a4072f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::EditPlaybackContext::RealtimePriorityDisabler</name>
    <filename>structtracktion_1_1engine_1_1EditPlaybackContext_1_1RealtimePriorityDisabler.html</filename>
    <member kind="function">
      <type></type>
      <name>RealtimePriorityDisabler</name>
      <anchorfile>structtracktion_1_1engine_1_1EditPlaybackContext_1_1RealtimePriorityDisabler.html</anchorfile>
      <anchor>a186d855fc250bb013bafdab865d0c0bb</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RealtimePriorityDisabler</name>
      <anchorfile>structtracktion_1_1engine_1_1EditPlaybackContext_1_1RealtimePriorityDisabler.html</anchorfile>
      <anchor>acc727a372d5a5c1702677b8745409b34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>structtracktion_1_1engine_1_1EditPlaybackContext_1_1RealtimePriorityDisabler.html</anchorfile>
      <anchor>a7a3a79f7c9b1080223d50ec01a7a9617</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::RealTimeSpinLock</name>
    <filename>classtracktion_1_1graph_1_1RealTimeSpinLock.html</filename>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>classtracktion_1_1graph_1_1RealTimeSpinLock.html</anchorfile>
      <anchor>af944a860e5f56ec8798f121f4d3c7b3b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>classtracktion_1_1graph_1_1RealTimeSpinLock.html</anchorfile>
      <anchor>a20efdf03f668a5e72144a7ab04f53d07</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_lock</name>
      <anchorfile>classtracktion_1_1graph_1_1RealTimeSpinLock.html</anchorfile>
      <anchor>ad2d6ec79cd5c0163fc983d1716b0b4a5</anchor>
      <arglist>() noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::InputDeviceInstance::RecordingContext</name>
    <filename>classtracktion_1_1engine_1_1InputDeviceInstance_1_1RecordingContext.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RecordingContext</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance_1_1RecordingContext.html</anchorfile>
      <anchor>a8c80c27b1cea5c4c88fce18afd8e8cdd</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="variable">
      <type>const EditItemID</type>
      <name>targetID</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance_1_1RecordingContext.html</anchorfile>
      <anchor>ae830e4ef934b130974e86a5b09f37d06</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RecordingContext</name>
      <anchorfile>classtracktion_1_1engine_1_1InputDeviceInstance_1_1RecordingContext.html</anchorfile>
      <anchor>ac4d5eb25694447287c5d1f95f5ec7231</anchor>
      <arglist>(EditItemID targetID_)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::InputDeviceInstance::RecordingParameters</name>
    <filename>structtracktion_1_1engine_1_1InputDeviceInstance_1_1RecordingParameters.html</filename>
    <member kind="variable">
      <type>TimeRange</type>
      <name>punchRange</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1RecordingParameters.html</anchorfile>
      <anchor>aa98d7194fe2f1ae97db537e12d610305</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; EditItemID &gt;</type>
      <name>targets</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1RecordingParameters.html</anchorfile>
      <anchor>a637bb79c282c4c3bf25c449087ecb0f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::RecordingThumbnailManager</name>
    <filename>classtracktion_1_1engine_1_1RecordingThumbnailManager.html</filename>
    <class kind="struct">tracktion::engine::RecordingThumbnailManager::Thumbnail</class>
    <member kind="function">
      <type></type>
      <name>RecordingThumbnailManager</name>
      <anchorfile>classtracktion_1_1engine_1_1RecordingThumbnailManager.html</anchorfile>
      <anchor>a857a6802c0e67433774f9ca6e8502f2d</anchor>
      <arglist>(Engine &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>Thumbnail::Ptr</type>
      <name>getThumbnailFor</name>
      <anchorfile>classtracktion_1_1engine_1_1RecordingThumbnailManager.html</anchorfile>
      <anchor>a471b53c1cb92b6421c19d1509427342e</anchor>
      <arglist>(const juce::File &amp;f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ReferenceCountedValueTree</name>
    <filename>classtracktion_1_1engine_1_1ReferenceCountedValueTree.html</filename>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; ReferenceCountedValueTree &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1ReferenceCountedValueTree.html</anchorfile>
      <anchor>a0d391e45e9c6402ec9a4635fa5b001a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReferenceCountedValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ReferenceCountedValueTree.html</anchorfile>
      <anchor>a77297a78a70d34e48e1ae8cc24fa6b05</anchor>
      <arglist>(const juce::ValueTree &amp;treeToReference) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ReferenceCountedValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ReferenceCountedValueTree.html</anchorfile>
      <anchor>ab6b2c9618c094c5b4022330fd1926014</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ReferenceCountedValueTree.html</anchorfile>
      <anchor>aff12d4e37fa02b74aae40762df081f86</anchor>
      <arglist>(juce::ValueTree newTree)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ReferenceCountedValueTree.html</anchorfile>
      <anchor>a2c9f1a49369526a3814dfbb446798774</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>getTreeFromObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ReferenceCountedValueTree.html</anchorfile>
      <anchor>a57f794b14a91fa200b635f3f9ba24c5f</anchor>
      <arglist>(const juce::var &amp;treeObject) noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Exportable::ReferencedItem</name>
    <filename>structtracktion_1_1engine_1_1Exportable_1_1ReferencedItem.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion_1_1engine_1_1Exportable_1_1ReferencedItem.html</anchorfile>
      <anchor>a6e2f2ba6c5e5c48e1c97eb21ed1e51c1</anchor>
      <arglist>(const ReferencedItem &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion_1_1engine_1_1Exportable_1_1ReferencedItem.html</anchorfile>
      <anchor>aaca681bbb606422b4f876b7e5cda3ec1</anchor>
      <arglist>(const ReferencedItem &amp;other) const</arglist>
    </member>
    <member kind="variable">
      <type>ProjectItemID</type>
      <name>itemID</name>
      <anchorfile>structtracktion_1_1engine_1_1Exportable_1_1ReferencedItem.html</anchorfile>
      <anchor>ab59717fe7b2977c000d0a3d39955c059</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>firstTimeUsed</name>
      <anchorfile>structtracktion_1_1engine_1_1Exportable_1_1ReferencedItem.html</anchorfile>
      <anchor>a4d1caabc79b396a365a0a07f9d71c065</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lengthUsed</name>
      <anchorfile>structtracktion_1_1engine_1_1Exportable_1_1ReferencedItem.html</anchorfile>
      <anchor>a364887174315974f32cc9420cdfd6c07</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ReferencedMaterialList</name>
    <filename>classtracktion_1_1engine_1_1ReferencedMaterialList.html</filename>
    <class kind="struct">tracktion::engine::ReferencedMaterialList::IntervalList</class>
    <member kind="function">
      <type></type>
      <name>ReferencedMaterialList</name>
      <anchorfile>classtracktion_1_1engine_1_1ReferencedMaterialList.html</anchorfile>
      <anchor>aad6a4d9615779c5a2f0c3cf1036a4857</anchor>
      <arglist>(ProjectManager &amp;pm, double handleSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classtracktion_1_1engine_1_1ReferencedMaterialList.html</anchorfile>
      <anchor>a1edc23105f1e73db2c381d5ed84ba2ac</anchor>
      <arglist>(ProjectItemID id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classtracktion_1_1engine_1_1ReferencedMaterialList.html</anchorfile>
      <anchor>ac1403616ee84f8abb5029e0062382bbc</anchor>
      <arglist>(ProjectItemID id, double startTime, double length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classtracktion_1_1engine_1_1ReferencedMaterialList.html</anchorfile>
      <anchor>add3ae6eb0fabafe81f9f607631f1493d</anchor>
      <arglist>(const Exportable::ReferencedItem &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classtracktion_1_1engine_1_1ReferencedMaterialList.html</anchorfile>
      <anchor>a9335701cbf959c65efc24a61634e5c11</anchor>
      <arglist>(const ProjectItem::Ptr &amp;mop, double start, double length)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getReassignedFileName</name>
      <anchorfile>classtracktion_1_1engine_1_1ReferencedMaterialList.html</anchorfile>
      <anchor>af01902ce74f73713997e89145cf6affa</anchor>
      <arglist>(ProjectItemID id, double requiredTime, double &amp;newStartTime, double &amp;newLength) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalNumThingsToExport</name>
      <anchorfile>classtracktion_1_1engine_1_1ReferencedMaterialList.html</anchorfile>
      <anchor>ae776690383823f5946ce6f2c08115b45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ProjectManager &amp;</type>
      <name>projectManager</name>
      <anchorfile>classtracktion_1_1engine_1_1ReferencedMaterialList.html</anchorfile>
      <anchor>aa0969e9719961bf0130c628e2420e8b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; ProjectItemID &gt;</type>
      <name>ids</name>
      <anchorfile>classtracktion_1_1engine_1_1ReferencedMaterialList.html</anchorfile>
      <anchor>a41988e1d374e103071c32cd876e51cfe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RegionSequenceWrapper</name>
    <filename>classRegionSequenceWrapper.html</filename>
    <member kind="function">
      <type></type>
      <name>RegionSequenceWrapper</name>
      <anchorfile>classRegionSequenceWrapper.html</anchorfile>
      <anchor>ab82b337ae0559639ce842d7fc6f9a9c9</anchor>
      <arglist>(ARADocument &amp;d, Track *t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RegionSequenceWrapper</name>
      <anchorfile>classRegionSequenceWrapper.html</anchorfile>
      <anchor>a4a62eeb79b8690c543c258630c7f2603</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SizedStruct&lt; ARA_STRUCT_MEMBER(ARARegionSequenceProperties, color)&gt;</type>
      <name>getRegionSequenceProperties</name>
      <anchorfile>classRegionSequenceWrapper.html</anchorfile>
      <anchor>a6382250db38ef2fb0cfa1fc035f1df6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ARARegionSequenceRef</type>
      <name>regionSequenceRef</name>
      <anchorfile>classRegionSequenceWrapper.html</anchorfile>
      <anchor>a79e8872799fb0c64f5b21928ea9e4164</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ARADocument &amp;</type>
      <name>doc</name>
      <anchorfile>classRegionSequenceWrapper.html</anchorfile>
      <anchor>acd77ddbb5444d4564859dc7c03331ecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Track *</type>
      <name>track</name>
      <anchorfile>classRegionSequenceWrapper.html</anchorfile>
      <anchor>a47c8d9c383fe28b15c8dc0c753eb7c7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::RemoteSLCompact</name>
    <filename>classtracktion_1_1engine_1_1RemoteSLCompact.html</filename>
    <base>tracktion::engine::NovationRemoteSl</base>
    <member kind="function">
      <type></type>
      <name>RemoteSLCompact</name>
      <anchorfile>classtracktion_1_1engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>a7f5fd1516617a11b870c9fef407dd755</anchor>
      <arglist>(ExternalControllerManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RemoteSLCompact</name>
      <anchorfile>classtracktion_1_1engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>a46854da6face5e9621cfc95be3b338a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wantsMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>a759c6f83b0e8034becd0653789b6b2bb</anchor>
      <arglist>(int, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eatsAllMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>a2cc3d8eb926f60a6edf3db28e5a3ba28</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canSetEatsAllMessages</name>
      <anchorfile>classtracktion_1_1engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>a5ea034345a1cd873559f6c3a3dee5d02</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canChangeSelectedPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>a4ce27737f044d2bcc3c78dd6fe08cd25</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingPluginParams</name>
      <anchorfile>classtracktion_1_1engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>a2ecb519623952d31fccc909f487aa186</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingMarkers</name>
      <anchorfile>classtracktion_1_1engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>a8375dc1d531c937def7a51bd671007fd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showingTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>ae3dbebd17edf9bf75450fddb6b309ad2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPluginSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1RemoteSLCompact.html</anchorfile>
      <anchor>a0dd8d04482d8ec502431d537e38248d4</anchor>
      <arglist>(Plugin *) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>engine::Renderer</name>
    <filename>classengine_1_1Renderer.html</filename>
    <class kind="struct">engine::Renderer::Parameters</class>
    <class kind="struct">engine::Renderer::RenderResult</class>
    <class kind="class">engine::Renderer::RenderTask</class>
    <class kind="struct">engine::Renderer::ScopedClipSlotDisabler</class>
    <class kind="struct">engine::Renderer::Statistics</class>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkTargetFile</name>
      <anchorfile>classengine_1_1Renderer.html</anchorfile>
      <anchor>aed910048d085f19c67ecb189f80fe189</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>turnOffAllPlugins</name>
      <anchorfile>classengine_1_1Renderer.html</anchorfile>
      <anchor>a4e67a3ebfcf969ff477c83191297ee6b</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ProjectItem::Ptr</type>
      <name>renderToProjectItem</name>
      <anchorfile>classengine_1_1Renderer.html</anchorfile>
      <anchor>af99d0958ea14851a74d656e39ce28e2b</anchor>
      <arglist>(const juce::String &amp;taskDescription, const Parameters &amp;, ProjectItem::Category)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::File</type>
      <name>renderToFile</name>
      <anchorfile>classengine_1_1Renderer.html</anchorfile>
      <anchor>a03b1dea92a78e6b22d97e56965aca4e2</anchor>
      <arglist>(const juce::String &amp;taskDescription, const Parameters &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>renderToFile</name>
      <anchorfile>classengine_1_1Renderer.html</anchorfile>
      <anchor>adadabf0f009b285ee0733b98e4fea520</anchor>
      <arglist>(const juce::String &amp;taskDescription, const juce::File &amp;outputFile, Edit &amp;edit, TimeRange range, const juce::BigInteger &amp;tracksToDo, bool usePlugins=true, bool useACID=true, juce::Array&lt; Clip * &gt; clips={}, bool useThread=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>renderToFile</name>
      <anchorfile>classengine_1_1Renderer.html</anchorfile>
      <anchor>a5136a591ae8e7e53a32fafce54a421c9</anchor>
      <arglist>(Edit &amp;, const juce::File &amp;, bool useThread=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Statistics</type>
      <name>measureStatistics</name>
      <anchorfile>classengine_1_1Renderer.html</anchorfile>
      <anchor>a2c2ae2a3a17b6e28367aa4be497f29f0</anchor>
      <arglist>(const juce::String &amp;taskDescription, Edit &amp;edit, TimeRange range, const juce::BigInteger &amp;tracksToDo, int blockSizeForAudio, double sampleRateForAudio=44100.0)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ClipEffects::RenderInhibitor</name>
    <filename>structtracktion_1_1engine_1_1ClipEffects_1_1RenderInhibitor.html</filename>
    <member kind="function">
      <type></type>
      <name>RenderInhibitor</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipEffects_1_1RenderInhibitor.html</anchorfile>
      <anchor>af93f13a7d736d1f99d20c233d588cbff</anchor>
      <arglist>(ClipEffects &amp;o)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RenderInhibitor</name>
      <anchorfile>structtracktion_1_1engine_1_1ClipEffects_1_1RenderInhibitor.html</anchorfile>
      <anchor>a9eb794c18436df757030a7f7b59dabc9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::RenderManager</name>
    <filename>classtracktion_1_1engine_1_1RenderManager.html</filename>
    <class kind="class">tracktion::engine::RenderManager::Job</class>
    <member kind="function">
      <type></type>
      <name>RenderManager</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager.html</anchorfile>
      <anchor>a15b97f58d7c340d76cdc1f692f64841a</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RenderManager</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager.html</anchorfile>
      <anchor>a74a760cbbfa6da71223bdd3c3c4d42f7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanUp</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager.html</anchorfile>
      <anchor>a2fcb3cec9f0c769041737b5fbbbcd220</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Job::Ptr</type>
      <name>getRenderJobWithoutCreating</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager.html</anchorfile>
      <anchor>ad58bfb5f53b0ab48eacb50d22ec2fc41</anchor>
      <arglist>(const AudioFile &amp;audioFile)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; Job &gt;</type>
      <name>getRenderJobsWithoutCreating</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager.html</anchorfile>
      <anchor>a69acc860ab3f3f8995c0aa7b20f35ab3</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumJobs</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager.html</anchorfile>
      <anchor>ae09bacf54764f32426bf8f67b140590a</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isProxyBeingGenerated</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager.html</anchorfile>
      <anchor>af76c2e7721b7c0faa442540a05009469</anchor>
      <arglist>(const AudioFile &amp;proxyFile) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getProportionComplete</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager.html</anchorfile>
      <anchor>afd7d576e4d9789d20542bbf7981ebc11</anchor>
      <arglist>(const AudioFile &amp;proxyFile, float defaultVal) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AudioFile</type>
      <name>getAudioFileForHash</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager.html</anchorfile>
      <anchor>a5ec2c013b9fcd3b8d7772e3ac150f5e7</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;directory, HashCode hash)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringRef</type>
      <name>getFileRenderPrefix</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager.html</anchorfile>
      <anchor>a3c1d8f51eee1940502ab46896d0d8aac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderManager.html</anchorfile>
      <anchor>a7a1aabbb971c7e87d965a44b82e2cdc4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::RenderOptions</name>
    <filename>classtracktion_1_1engine_1_1RenderOptions.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>TargetFileFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad6d5a75dec65fce82ab44309d512c399</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>wav</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad6d5a75dec65fce82ab44309d512c399ab2f3d3c15cc5bfe546e4af8da7f366ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>aiff</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad6d5a75dec65fce82ab44309d512c399aae94050042111accd7fdd93cac050bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>flac</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad6d5a75dec65fce82ab44309d512c399aab11af616cca200801b85d84e3c413bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ogg</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad6d5a75dec65fce82ab44309d512c399a0aa60866b8a15ce058a029eb312fdf0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mp3</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad6d5a75dec65fce82ab44309d512c399abfe7dcb8fdb48ffae161dad5fc055daa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midi</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad6d5a75dec65fce82ab44309d512c399a9ba9673cf9abb7a8e17dd0ba611ef92d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>numFormats</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad6d5a75dec65fce82ab44309d512c399a3df4e7cf8eafce32ef0aacef051f7251</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AddRenderOptions</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a5ed169799828b58c73a471a6b7026a78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>addTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a5ed169799828b58c73a471a6b7026a78a647bfef82caa760ea52ac6f34d5ebb4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>replaceTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a5ed169799828b58c73a471a6b7026a78a50bfcfa936c2098a832fc3a862c1a580</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nextTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a5ed169799828b58c73a471a6b7026a78a91f618a1c08f74b6880a821f4061acd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>thisTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a5ed169799828b58c73a471a6b7026a78adb7be32ef59cf2efad9d32aa1815074a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>replaceClips</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a5ed169799828b58c73a471a6b7026a78a1f3f42ec8afc668c30726a2f1bb9ff25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a5ed169799828b58c73a471a6b7026a78a035c03ff874617f82723a76ab6b3fde4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>RenderType</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a746fb0730e47bc8ccd5bb16b5ef39c1c</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1RenderOptions.html" anchor="a746fb0730e47bc8ccd5bb16b5ef39c1cae51779bb4944e35c733f0d34f237c90e">editClip</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1RenderOptions.html" anchor="a746fb0730e47bc8ccd5bb16b5ef39c1caf6d8b886335927d46fad323c60335d09">clip</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1RenderOptions.html" anchor="a746fb0730e47bc8ccd5bb16b5ef39c1ca368cc7b17925cc0f9c4b5a90db1e68c1">track</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1RenderOptions.html" anchor="a746fb0730e47bc8ccd5bb16b5ef39c1caa5f4ed7e858bf18cc1f2c0e35e7301e7">midi</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1RenderOptions.html" anchor="a746fb0730e47bc8ccd5bb16b5ef39c1caa55ca07edaf02d9bd51201307650e1a7">allExport</enumvalue>
    </member>
    <member kind="enumvalue">
      <name>wav</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad6d5a75dec65fce82ab44309d512c399ab2f3d3c15cc5bfe546e4af8da7f366ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>aiff</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad6d5a75dec65fce82ab44309d512c399aae94050042111accd7fdd93cac050bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>flac</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad6d5a75dec65fce82ab44309d512c399aab11af616cca200801b85d84e3c413bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ogg</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad6d5a75dec65fce82ab44309d512c399a0aa60866b8a15ce058a029eb312fdf0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mp3</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad6d5a75dec65fce82ab44309d512c399abfe7dcb8fdb48ffae161dad5fc055daa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>midi</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad6d5a75dec65fce82ab44309d512c399a9ba9673cf9abb7a8e17dd0ba611ef92d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>numFormats</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad6d5a75dec65fce82ab44309d512c399a3df4e7cf8eafce32ef0aacef051f7251</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>addTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a5ed169799828b58c73a471a6b7026a78a647bfef82caa760ea52ac6f34d5ebb4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>replaceTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a5ed169799828b58c73a471a6b7026a78a50bfcfa936c2098a832fc3a862c1a580</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>nextTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a5ed169799828b58c73a471a6b7026a78a91f618a1c08f74b6880a821f4061acd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>thisTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a5ed169799828b58c73a471a6b7026a78adb7be32ef59cf2efad9d32aa1815074a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>replaceClips</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a5ed169799828b58c73a471a6b7026a78a1f3f42ec8afc668c30726a2f1bb9ff25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a5ed169799828b58c73a471a6b7026a78a035c03ff874617f82723a76ab6b3fde4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderOptions</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a8a8b4ce883b5eedeb08422cc57eaf7d4</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderOptions</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>aa4159f4a7e797f6b8ab6f4034005224c</anchor>
      <arglist>(const RenderOptions &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderOptions</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ae77714d43029becba92800f7299f4a2e</anchor>
      <arglist>(Engine &amp;, const juce::ValueTree &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RenderOptions</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a71ee618ccf78e554351b2e95539288cd</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderOptions</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a4d4bbaa75d1f40acd01f906cbbb27f60</anchor>
      <arglist>()=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderOptions</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a62ec55a93402f2fa5d8fe2451e2dc666</anchor>
      <arglist>(const RenderOptions &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderOptions</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a9a1d468be46afbc01012bfd48ee5e2bf</anchor>
      <arglist>(RenderOptions &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>RenderOptions</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ab61f353b6425209a04b3de172cb69159</anchor>
      <arglist>(const RenderOptions &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>RenderOptions</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a7746646f3632bb557c6f7a4bafd3a66f</anchor>
      <arglist>(RenderOptions &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadFromUserSettings</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad6956cbb4d851cc975b0987abb512086</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveToUserSettings</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ab8cc6634ffdbd8fc58a11e1b71807451</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>affc61446fbb35917526ecdb7d4f96c57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RenderManager::Job::Ptr</type>
      <name>performBackgroundRender</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ace12a52c7278329cc0aa809d86aaa16e</anchor>
      <arglist>(Edit &amp;, SelectionManager *, TimeRange timeRangeToRender)</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ab0f79dcd341111779f2f5a64b7c1826a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Renderer::Parameters</type>
      <name>getRenderParameters</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ade753fd8dd2018ddd40318234039e66b</anchor>
      <arglist>(Edit &amp;, SelectionManager *, TimeRange markedRegion)</arglist>
    </member>
    <member kind="function">
      <type>Renderer::Parameters</type>
      <name>getRenderParameters</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>aaaf9d556cb2c3aa3e98dfecd791545b5</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Renderer::Parameters</type>
      <name>getRenderParameters</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a5ab4c5a88b593743c3bffc2259ce04e0</anchor>
      <arglist>(EditClip &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Renderer::Parameters</type>
      <name>getRenderParameters</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a40ecdbf71d61f8dc7191c48427156127</anchor>
      <arglist>(MidiClip &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioFormat *</type>
      <name>getAudioFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>acdb8f12a48f257c2dcd89c809298afad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Clip::Ptr</type>
      <name>applyRenderToEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>adef4cebab9caae3157d38009778a864d</anchor>
      <arglist>(Edit &amp;, ProjectItem::Ptr, TimeRange time, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUINeedsRefresh</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ac24b03178171e9ba469ac6c4ff86ff7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUINeedsRefresh</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a2701ae28c5555679c9ab08dcde706893</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEditClipRender</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>af49bac12b0691bd00cffd80253d936da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isClipRender</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ab0c4c6b10963181d1f9ad1f15d3e3df7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTrackRender</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ad7ba9a807ad19b62459b791289ba2876</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidiRender</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>abcd282bda7cf7656b23d2dafabcce2e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isExportAll</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a4c73b693942fdf4c5544b8a480d83a88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRender</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>aeaea55f8ac6dd18175ff3a7e2a53690b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TargetFileFormat</type>
      <name>setFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>af00857c727fc3c696a9bf47a987cd703</anchor>
      <arglist>(TargetFileFormat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFormatType</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a0be1b14a7ebf82dacfe09d25d6e5972e</anchor>
      <arglist>(const juce::String &amp;typeString)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getFormatTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a3ee1b8c233d53080a6c7c5d69fcd4795</anchor>
      <arglist>(TargetFileFormat)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; EditItemID &gt;</type>
      <name>getTrackIDs</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a1175ccb2602fe4ab7369f45299280115</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTrackIDs</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>af90a505a7a714aa28828dc90200c8390</anchor>
      <arglist>(const juce::Array&lt; EditItemID &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getTracksHash</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a48d6e94439ac3c2ba8f0dbea4d670f35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a83f1133262c0fdaee12124c6eb270a93</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBitDepth</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a87f8f142d2c2338d95a4dc8fb9f0b76f</anchor>
      <arglist>(int depth)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getQualitiesList</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a8e6ea4b6b02b5952e369ce9afc368703</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getQualityIndex</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a9f24d3949a1a54781645e6c6d1cec720</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQualityIndex</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ab54fb92b98b7252c2e10dad39b42fc98</anchor>
      <arglist>(int q)</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getDestFile</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a7d72b9f326943bc8ff6755b1affff968</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getFileExtension</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a043b54c74b729849462806f581c27e4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TargetFileFormat</type>
      <name>getFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>aa674dbe4bd81906938466d1553466ef0</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBitDepth</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a08318a9fef767704e55b0c5152937ce7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getStereo</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>aefa7802a584733327fabfd68599bb580</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>aa631bf883609fee9f3f7a23410c81212</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldAddMetadata</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a46cb5a54d5f0a1856089945d82ea40d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldAddAcidMetadata</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a34f18e0d96dc6bded844e335ebd7accf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::BigInteger</type>
      <name>getTrackIndexes</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>adf6abb20fe5e7361071453dfe2dfac7d</anchor>
      <arglist>(const Edit &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getRemoveSilence</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>aef8762baded4e8b8073fcd20d5c2d5b5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getMarkedRegion</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ab89c01d7fa9c1e3a87e21b92b1aa12cc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a967555539e0fe55a1ec8bc14db379134</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a0cc69425159d5bc5c174a2771999434f</anchor>
      <arglist>(bool onlySelectedTrackAndClips)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMarkedRegion</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>addaabcc0591f13f9a42d58591e426a25</anchor>
      <arglist>(bool onlyMarked)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIncludePlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>ade1ea98294f168abf07677835c81600f</anchor>
      <arglist>(bool includePlugins)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAddRenderOption</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>aa4007d6a6a0b30b5bf58df96e28c64c7</anchor>
      <arglist>(AddRenderOptions options)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEndAllowance</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a2190edb910516dc37d3e132b3614a927</anchor>
      <arglist>(TimeDuration time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilename</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a148673fa90a31d91f1ec1a84444bd7be</anchor>
      <arglist>(juce::String, bool canPromptToOverwriteExisting)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateHash</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a3fe0d423565f082eaf3877ca7d88efb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getFormatTypes</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a7a583d138627a8ad0a330f4c8a5a22f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getAddRenderOptionText</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a3bec728510e1130ed8e1341da77909a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; RenderOptions &gt;</type>
      <name>forGeneralExporter</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a5565f0b37df220fece710bd64b11cef5</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; RenderOptions &gt;</type>
      <name>forTrackRender</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a14a1342b5d392893ee4fb372c95555e7</anchor>
      <arglist>(juce::Array&lt; Track * &gt; tracks, AddRenderOptions addOption)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; RenderOptions &gt;</type>
      <name>forClipRender</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a6aa388dd5f0f7023dfc477c3ddb9ae02</anchor>
      <arglist>(juce::Array&lt; Clip * &gt; clips, bool midiNotes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::unique_ptr&lt; RenderOptions &gt;</type>
      <name>forEditClip</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>af29cdc75cd306a0e367c798a7aeddb8d</anchor>
      <arglist>(Clip &amp;editClip)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeDuration</type>
      <name>findEndAllowance</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a1b4b7fbc4a76f24ebb78f0aa7d52291a</anchor>
      <arglist>(Edit &amp;, juce::Array&lt; EditItemID &gt; *tracks, juce::Array&lt; Clip * &gt; *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isMarkedRegionBigEnough</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a8bada8dd4904301054f4dcde243dde5d</anchor>
      <arglist>(TimeRange)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>afc3f45a687e14121f67252ca13d9e0fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; RenderType &gt;</type>
      <name>type</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a4c6a6c0af858ec0552517c0583433c2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>tracksProperty</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a3f8eb0ffa36878aa417bfb943b5be143</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>createMidiFile</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>aa0e8bcc05be4c7b7313d7d4e479c4fcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; TargetFileFormat &gt;</type>
      <name>format</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a31729be6ca37844f308f13ce812d1844</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>stereo</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a21425ba8da656d43ddc8dbc9205b8567</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>sampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>af01a164402c7a1a5fbbf465a103fad1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>bitDepth</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a769db14fb52072c5936756a9da96282a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>qualityIndex</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a7b648a7f431f5f5808ab421130d0b5fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>rmsLevelDb</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a89f1e0ea83d8b1e8ee1fad836547a1e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>peakLevelDb</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a197fe9f837785f1a687ecc02a0038337</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>removeSilence</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>adc1c1b8968ccbc4ae5dfc1f95ca9de3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>normalise</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a22d192b5d38e50e04d349a34f8821c51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>dither</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a66e37d7e46981b0b2f2c2ec7aaabe94e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>adjustBasedOnRMS</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a8425569aa7f18b6708487f77b31422a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>markedRegion</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>af840da68a72be0a7af1c09cd7f0dc62d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>selectedTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a6b58671be4c982517f9f0d568a6babe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>selectedClips</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a9af9f1405c382bd5786f9b0ccd5a4c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>tracksToSeparateFiles</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a724d8df3bd4eaecf75d8191bf52f480c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>realTime</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a6f06ee0a4d7a4bdd27f60a8ea992c491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>usePlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a6c9421d60281de374f19a28299e8e509</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; AddRenderOptions &gt;</type>
      <name>addRenderOptions</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a3c021fef7aa7cebab9a5258269dfbe01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>addRenderToLibrary</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>aa86cfe8590c38eb3c174d5fcacc3d5fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>reverseRender</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>abb57c2912761ef2f4be5161afcbabfa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>addMetadata</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a1acacfbb79a92d6484769bf8f3b1e85f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>addAcidMetadata</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a6abf2242e2120b862e289c5c5f315e96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(AudioClipBase &amp;)&gt;</type>
      <name>offerToAddClipToLibrary</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>aabc7564a9bcfb3b674930d9132dc5de3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(const juce::File &amp;)&gt;</type>
      <name>offerToAddFileToLibrary</name>
      <anchorfile>classtracktion_1_1engine_1_1RenderOptions.html</anchorfile>
      <anchor>a912a5794fafe6363ccfd4041eb2a7947</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>engine::Renderer::RenderResult</name>
    <filename>structengine_1_1Renderer_1_1RenderResult.html</filename>
    <member kind="function">
      <type></type>
      <name>RenderResult</name>
      <anchorfile>structengine_1_1Renderer_1_1RenderResult.html</anchorfile>
      <anchor>a144e22cc703549ab36252c98b67cb00f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderResult</name>
      <anchorfile>structengine_1_1Renderer_1_1RenderResult.html</anchorfile>
      <anchor>a6d070f7bf3bb2dead1d63d3358c1c9f7</anchor>
      <arglist>(const juce::Result &amp;r, ProjectItem::Ptr mo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderResult</name>
      <anchorfile>structengine_1_1Renderer_1_1RenderResult.html</anchorfile>
      <anchor>a2311f3cf14d2399707fd295f9699049b</anchor>
      <arglist>(const RenderResult &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>RenderResult &amp;</type>
      <name>operator=</name>
      <anchorfile>structengine_1_1Renderer_1_1RenderResult.html</anchorfile>
      <anchor>a347029c1b00de03d3081d620d9c5b8e3</anchor>
      <arglist>(const RenderResult &amp;other)</arglist>
    </member>
    <member kind="variable">
      <type>juce::Result</type>
      <name>result</name>
      <anchorfile>structengine_1_1Renderer_1_1RenderResult.html</anchorfile>
      <anchor>a00613602b546ca2fab095018ec9080f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ReferenceCountedArray&lt; ProjectItem &gt;</type>
      <name>items</name>
      <anchorfile>structengine_1_1Renderer_1_1RenderResult.html</anchorfile>
      <anchor>af2e5e3b28e5d6e935ef5202f28d5b59a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>engine::Renderer::RenderTask</name>
    <filename>classengine_1_1Renderer_1_1RenderTask.html</filename>
    <member kind="function">
      <type></type>
      <name>RenderTask</name>
      <anchorfile>classengine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>ab3d19ab633a9b15aa248e4806f974f97</anchor>
      <arglist>(const juce::String &amp;taskDescription, const Renderer::Parameters &amp;, std::atomic&lt; float &gt; *progressToUpdate, juce::AudioFormatWriter::ThreadedWriter::IncomingDataReceiver *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RenderTask</name>
      <anchorfile>classengine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>ad274724b5d2fb05c0e29325194fd882b</anchor>
      <arglist>(const juce::String &amp;taskDescription, const Renderer::Parameters &amp;, std::unique_ptr&lt; tracktion::graph::Node &gt;, std::unique_ptr&lt; tracktion::graph::PlayHead &gt;, std::unique_ptr&lt; tracktion::graph::PlayHeadState &gt;, std::unique_ptr&lt; ProcessState &gt;, std::atomic&lt; float &gt; *progressToUpdate, juce::AudioFormatWriter::ThreadedWriter::IncomingDataReceiver *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RenderTask</name>
      <anchorfile>classengine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>afce56d290f8c58c70e8690aa41ad0fd5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>JobStatus</type>
      <name>runJob</name>
      <anchorfile>classengine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>a10080a9dde4041e559c5b37784f45a65</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentTaskProgress</name>
      <anchorfile>classengine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>abdbd9a89029ee7adf9be419dc4239459</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>performNormalisingAndTrimming</name>
      <anchorfile>classengine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>acff5d1e14c61bf03466d3d1c310fe458</anchor>
      <arglist>(const Renderer::Parameters &amp;target, const Renderer::Parameters &amp;intermediate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>flushAllPlugins</name>
      <anchorfile>classengine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>a616e3f882aceae605148126c00916dc9</anchor>
      <arglist>(const Plugin::Array &amp;, double sampleRate, int samplesPerBlock)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setAllPluginsRealtime</name>
      <anchorfile>classengine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>a752477112ba80588db520f1560861d4c</anchor>
      <arglist>(const Plugin::Array &amp;, bool realtime)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>addMidiMetaDataAndWriteToFile</name>
      <anchorfile>classengine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>a0e789d2382a8cbc9ac569ef3a2e2db7d</anchor>
      <arglist>(juce::File, juce::MidiMessageSequence, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>Renderer::Parameters</type>
      <name>params</name>
      <anchorfile>classengine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>ac62c604ab68f2f7733e949f6de0602a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>errorMessage</name>
      <anchorfile>classengine_1_1Renderer_1_1RenderTask.html</anchorfile>
      <anchor>a1499fc0d339d544e75224e6b7829d3c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::ReturnNode</name>
    <filename>classtracktion_1_1graph_1_1ReturnNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>ReturnNode</name>
      <anchorfile>classtracktion_1_1graph_1_1ReturnNode.html</anchorfile>
      <anchor>a1707cef98379e7f86ae4c2f5a7900fc2</anchor>
      <arglist>(int busIDToUse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReturnNode</name>
      <anchorfile>classtracktion_1_1graph_1_1ReturnNode.html</anchorfile>
      <anchor>aa07b23d48867c3eb26ab6c6efab9dc02</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; inputNode, int busIDToUse)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1graph_1_1ReturnNode.html</anchorfile>
      <anchor>a700f5ac3d1a92b9e3f140860e359c909</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1graph_1_1ReturnNode.html</anchorfile>
      <anchor>a6ff6c8a3519a3520d81f54f561e1bd63</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>TransformResult</type>
      <name>transform</name>
      <anchorfile>classtracktion_1_1graph_1_1ReturnNode.html</anchorfile>
      <anchor>a0cbaf65c784d043fbdd84539db9a3dea</anchor>
      <arglist>(Node &amp;rootNode, const std::vector&lt; Node * &gt; &amp;postOrderedNodes, TransformCache &amp;cache) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1graph_1_1ReturnNode.html</anchorfile>
      <anchor>af3dc0f890463048ae00760586c110d5d</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1graph_1_1ReturnNode.html</anchorfile>
      <anchor>a7a805bd8cd1e8e3c9e670f395fced7f8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preProcess</name>
      <anchorfile>classtracktion_1_1graph_1_1ReturnNode.html</anchorfile>
      <anchor>a9e7d0958b82c49ed096061be1c8a9af8</anchor>
      <arglist>(choc::buffer::FrameCount, juce::Range&lt; int64_t &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1ReturnNode.html</anchorfile>
      <anchor>ab6033ef9134f1d9733aeae8c6254f94f</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ReverbPlugin</name>
    <filename>classtracktion_1_1engine_1_1ReverbPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>ReverbPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a6d2ce6fa02f407385b89017223ffb920</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ReverbPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>aaebe671bd9ed9a3912deb3f4a5322ff5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a90be9b07c3a9e475502c1f60558e9f93</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a16f10991e4c895098a48a0be3c311f70</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a6acf587e27cd62a8ea173de6b0563996</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>aec5ae448858be539079778e1517a601c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a6a531bcfd917ece29679b084332f0b50</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a90284f8a54ba54c117e2d7002dcb9fff</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a3fbd8513ee473ed631d0f66a38f09f95</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>ac1a19de1dede918ee544e8761c1e2106</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a3bf789cc41bbc0646e5c9e749ee6d659</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRoomSize</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>af8833f648542e7ec88148bbf7ca235fa</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getRoomSize</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>ae0cbae3142f5b7967094799f33b46a74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDamp</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>acceb81736a5cbd607a5963a40d0c8427</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getDamp</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>ad3539bd71331dbd01744b14e04e5bd66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWet</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a96e3f548df094839261ccb2f8b1c623b</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getWet</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>ab01e3435112739b9ad66ca3c7cefb12b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDry</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a43224099503bb42c235b60a538088bfc</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getDry</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>aafed61ca64d3dd4a177e76d161b84d78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a7fdcf0ec7fd76f8d02588bd5eaa19030</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getWidth</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>aae7f9da71c91dbb1ea2514dc8baac021</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMode</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>aa9c119cfc3e29f84d272daf1463e8003</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getMode</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>aaaaab4e91f381e24992c25bb99124e72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a4dfd5fc305f0f37cfb9e4e1d2bfa0daa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>roomSizeValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a8051de4c22b326c6de1ef7bcc1d73ff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>dampValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a6e03a557c7de3875a12919189a4f6d08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>wetValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>af52f0cf971338e6446738f366ef7ea03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>dryValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>ac46f2bda5116740e23a7d81a0851f22d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>widthValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>aec4911e783aa965de5a7f71d6a1c63fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>modeValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>acb0df02f9b3d789df445d49c8893c408</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>roomSizeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>acef06648b60e109456649537c43ad8e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>dampParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>ad2308eab825f8b5e78dcbbfaf0420cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>wetParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a46d4fd725507e9683f2e9a603f03a679</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>dryParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a4852739982caf09851e3eca1a06074ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>widthParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a2b66ccbfa47d037b4a1f76b4a8ea5a17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>modeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a0e5b2ab93b8f50c74e8919102ba89c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverbPlugin.html</anchorfile>
      <anchor>a34d77d48a4a8a97e137d2ffdde481282</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ReverseEffect</name>
    <filename>structtracktion_1_1engine_1_1ReverseEffect.html</filename>
    <base>tracktion::engine::ClipEffect</base>
    <member kind="function">
      <type></type>
      <name>ReverseEffect</name>
      <anchorfile>structtracktion_1_1engine_1_1ReverseEffect.html</anchorfile>
      <anchor>a557be39f66c104b4b7777312290205a8</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion_1_1engine_1_1ReverseEffect.html</anchorfile>
      <anchor>aeaff09e5fdc5a3ab7af2919032fc0875</anchor>
      <arglist>(const AudioFile &amp;, double sourceLength) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ReverseRenderJob</name>
    <filename>classtracktion_1_1engine_1_1ReverseRenderJob.html</filename>
    <base>tracktion::engine::RenderManager::Job</base>
    <member kind="function" static="yes">
      <type>static Ptr</type>
      <name>getOrCreateRenderJob</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverseRenderJob.html</anchorfile>
      <anchor>ae8b690d40b139854ce64aacd341c23cc</anchor>
      <arglist>(Engine &amp;e, const juce::File &amp;source, const juce::File &amp;destination)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>setUpRender</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverseRenderJob.html</anchorfile>
      <anchor>a0b27e86347ea82d1fb595108a27d0dcc</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>renderNextBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverseRenderJob.html</anchorfile>
      <anchor>a44cbd7a3388b11f9d42ed8a683f1f3db</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>completeRender</name>
      <anchorfile>classtracktion_1_1engine_1_1ReverseRenderJob.html</anchorfile>
      <anchor>a97eca73a85ccf47877cbbb1c063f5b3e</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SafeScopedListener</name>
    <filename>classtracktion_1_1engine_1_1SafeScopedListener.html</filename>
    <member kind="function">
      <type></type>
      <name>SafeScopedListener</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeScopedListener.html</anchorfile>
      <anchor>a36a6bf4a95697003ef685f9ddfdc5bae</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeScopedListener</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeScopedListener.html</anchorfile>
      <anchor>a124f66e5470963b4ae04e06bbe94ec80</anchor>
      <arglist>(SafeScopedListener &amp;&amp;o)</arglist>
    </member>
    <member kind="function">
      <type>SafeScopedListener &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeScopedListener.html</anchorfile>
      <anchor>ad200cd7cdaa8fa733db2473dc0fa0cf9</anchor>
      <arglist>(SafeScopedListener &amp;&amp;o)</arglist>
    </member>
    <member kind="function">
      <type>requires WeakReferenceable&lt; BroadcasterType &gt;</type>
      <name>SafeScopedListener</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeScopedListener.html</anchorfile>
      <anchor>a53e661493ffc4d997485f6f70e168f1b</anchor>
      <arglist>(BroadcasterType b, ListenerType &amp;l)</arglist>
    </member>
    <member kind="function">
      <type>requires WeakReferenceable&lt; BroadcasterType &gt; void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeScopedListener.html</anchorfile>
      <anchor>ab000eedddd78073ef779e866cedda02b</anchor>
      <arglist>(BroadcasterType b, ListenerType &amp;l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeScopedListener.html</anchorfile>
      <anchor>a030451e1585c239e9e6014c907b6e687</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeScopedListener</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeScopedListener.html</anchorfile>
      <anchor>aad0cad5f445c54afafdc202bb8999e6b</anchor>
      <arglist>(const SafeScopedListener &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>SafeScopedListener &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeScopedListener.html</anchorfile>
      <anchor>abb19719b9f6f5b2ef0ea549d044c30be</anchor>
      <arglist>(const SafeScopedListener &amp;)=delete</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SafeSelectable</name>
    <filename>classtracktion_1_1engine_1_1SafeSelectable.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a912fabb133e60d48b4b11d07bc8fff81</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>af77ae72ca047d0a9c5a9fc3252a7da45</anchor>
      <arglist>(SelectableType &amp;selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8d8049b1e01fd5259ffd3bb3c1d0fc37</anchor>
      <arglist>(SelectableType *selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9520e90edffa8ba60a5795fcedc2b0af</anchor>
      <arglist>(const SafeSelectable &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a0111aff32e2362b734272111b997fbd0</anchor>
      <arglist>(const SafeSelectable &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a2d138f6f080c57e899bff2d88548173a</anchor>
      <arglist>(SelectableType *newSelectable)</arglist>
    </member>
    <member kind="function">
      <type>SelectableType *</type>
      <name>get</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9ee8b1fc1cfd8bdf10af508ee26d62df</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator SelectableType *</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a00c166f3ad6d24436a4c08035ea08cf6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>SelectableType *</type>
      <name>operator-&gt;</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a67fe2cb007bbf621b5d16a4239ef71e9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8363a45c60a9e82ea0f7b6a53274c21a</anchor>
      <arglist>(SelectableType *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3670f41a1525ab558461b3a924b5f8f8</anchor>
      <arglist>(SelectableType *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ac9aa01992133d77cc6d628ee4b08f129</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a03f5f4598999be1d3efacba4d6de05df</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3dcac85aa6b5f04d869e57f373a0d15b</anchor>
      <arglist>(const SelectableType &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9bde72434054d8f3306fc364de38c289</anchor>
      <arglist>(const SelectableType &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a05a80c277f9e43ba9c01214132bc84b2</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ab93058b532f5d4088ab7ff330e87d23c</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SafeSelectable&lt; tracktion::engine::Clip &gt;</name>
    <filename>classtracktion_1_1engine_1_1SafeSelectable.html</filename>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a912fabb133e60d48b4b11d07bc8fff81</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>af77ae72ca047d0a9c5a9fc3252a7da45</anchor>
      <arglist>(tracktion::engine::Clip &amp;selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8d8049b1e01fd5259ffd3bb3c1d0fc37</anchor>
      <arglist>(tracktion::engine::Clip *selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9520e90edffa8ba60a5795fcedc2b0af</anchor>
      <arglist>(const SafeSelectable &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a0111aff32e2362b734272111b997fbd0</anchor>
      <arglist>(const SafeSelectable &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a2d138f6f080c57e899bff2d88548173a</anchor>
      <arglist>(tracktion::engine::Clip *newSelectable)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Clip *</type>
      <name>get</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9ee8b1fc1cfd8bdf10af508ee26d62df</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator tracktion::engine::Clip *</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a00c166f3ad6d24436a4c08035ea08cf6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Clip *</type>
      <name>operator-&gt;</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a67fe2cb007bbf621b5d16a4239ef71e9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8363a45c60a9e82ea0f7b6a53274c21a</anchor>
      <arglist>(tracktion::engine::Clip *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ac9aa01992133d77cc6d628ee4b08f129</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3dcac85aa6b5f04d869e57f373a0d15b</anchor>
      <arglist>(const tracktion::engine::Clip &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a05a80c277f9e43ba9c01214132bc84b2</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3670f41a1525ab558461b3a924b5f8f8</anchor>
      <arglist>(tracktion::engine::Clip *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a03f5f4598999be1d3efacba4d6de05df</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9bde72434054d8f3306fc364de38c289</anchor>
      <arglist>(const tracktion::engine::Clip &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ab93058b532f5d4088ab7ff330e87d23c</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a912fabb133e60d48b4b11d07bc8fff81</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>af77ae72ca047d0a9c5a9fc3252a7da45</anchor>
      <arglist>(tracktion::engine::Clip &amp;selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8d8049b1e01fd5259ffd3bb3c1d0fc37</anchor>
      <arglist>(tracktion::engine::Clip *selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9520e90edffa8ba60a5795fcedc2b0af</anchor>
      <arglist>(const SafeSelectable &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a0111aff32e2362b734272111b997fbd0</anchor>
      <arglist>(const SafeSelectable &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a2d138f6f080c57e899bff2d88548173a</anchor>
      <arglist>(tracktion::engine::Clip *newSelectable)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Clip *</type>
      <name>get</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9ee8b1fc1cfd8bdf10af508ee26d62df</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator tracktion::engine::Clip *</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a00c166f3ad6d24436a4c08035ea08cf6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Clip *</type>
      <name>operator-&gt;</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a67fe2cb007bbf621b5d16a4239ef71e9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8363a45c60a9e82ea0f7b6a53274c21a</anchor>
      <arglist>(tracktion::engine::Clip *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ac9aa01992133d77cc6d628ee4b08f129</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3dcac85aa6b5f04d869e57f373a0d15b</anchor>
      <arglist>(const tracktion::engine::Clip &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a05a80c277f9e43ba9c01214132bc84b2</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3670f41a1525ab558461b3a924b5f8f8</anchor>
      <arglist>(tracktion::engine::Clip *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a03f5f4598999be1d3efacba4d6de05df</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9bde72434054d8f3306fc364de38c289</anchor>
      <arglist>(const tracktion::engine::Clip &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ab93058b532f5d4088ab7ff330e87d23c</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SafeSelectable&lt; tracktion::engine::Edit &gt;</name>
    <filename>classtracktion_1_1engine_1_1SafeSelectable.html</filename>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a912fabb133e60d48b4b11d07bc8fff81</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>af77ae72ca047d0a9c5a9fc3252a7da45</anchor>
      <arglist>(tracktion::engine::Edit &amp;selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8d8049b1e01fd5259ffd3bb3c1d0fc37</anchor>
      <arglist>(tracktion::engine::Edit *selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9520e90edffa8ba60a5795fcedc2b0af</anchor>
      <arglist>(const SafeSelectable &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a0111aff32e2362b734272111b997fbd0</anchor>
      <arglist>(const SafeSelectable &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a2d138f6f080c57e899bff2d88548173a</anchor>
      <arglist>(tracktion::engine::Edit *newSelectable)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Edit *</type>
      <name>get</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9ee8b1fc1cfd8bdf10af508ee26d62df</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator tracktion::engine::Edit *</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a00c166f3ad6d24436a4c08035ea08cf6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Edit *</type>
      <name>operator-&gt;</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a67fe2cb007bbf621b5d16a4239ef71e9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8363a45c60a9e82ea0f7b6a53274c21a</anchor>
      <arglist>(tracktion::engine::Edit *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ac9aa01992133d77cc6d628ee4b08f129</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3dcac85aa6b5f04d869e57f373a0d15b</anchor>
      <arglist>(const tracktion::engine::Edit &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a05a80c277f9e43ba9c01214132bc84b2</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3670f41a1525ab558461b3a924b5f8f8</anchor>
      <arglist>(tracktion::engine::Edit *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a03f5f4598999be1d3efacba4d6de05df</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9bde72434054d8f3306fc364de38c289</anchor>
      <arglist>(const tracktion::engine::Edit &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ab93058b532f5d4088ab7ff330e87d23c</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a912fabb133e60d48b4b11d07bc8fff81</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>af77ae72ca047d0a9c5a9fc3252a7da45</anchor>
      <arglist>(tracktion::engine::Edit &amp;selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8d8049b1e01fd5259ffd3bb3c1d0fc37</anchor>
      <arglist>(tracktion::engine::Edit *selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9520e90edffa8ba60a5795fcedc2b0af</anchor>
      <arglist>(const SafeSelectable &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a0111aff32e2362b734272111b997fbd0</anchor>
      <arglist>(const SafeSelectable &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a2d138f6f080c57e899bff2d88548173a</anchor>
      <arglist>(tracktion::engine::Edit *newSelectable)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Edit *</type>
      <name>get</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9ee8b1fc1cfd8bdf10af508ee26d62df</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator tracktion::engine::Edit *</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a00c166f3ad6d24436a4c08035ea08cf6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Edit *</type>
      <name>operator-&gt;</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a67fe2cb007bbf621b5d16a4239ef71e9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8363a45c60a9e82ea0f7b6a53274c21a</anchor>
      <arglist>(tracktion::engine::Edit *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ac9aa01992133d77cc6d628ee4b08f129</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3dcac85aa6b5f04d869e57f373a0d15b</anchor>
      <arglist>(const tracktion::engine::Edit &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a05a80c277f9e43ba9c01214132bc84b2</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3670f41a1525ab558461b3a924b5f8f8</anchor>
      <arglist>(tracktion::engine::Edit *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a03f5f4598999be1d3efacba4d6de05df</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9bde72434054d8f3306fc364de38c289</anchor>
      <arglist>(const tracktion::engine::Edit &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ab93058b532f5d4088ab7ff330e87d23c</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SafeSelectable&lt; tracktion::engine::FolderTrack &gt;</name>
    <filename>classtracktion_1_1engine_1_1SafeSelectable.html</filename>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a912fabb133e60d48b4b11d07bc8fff81</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>af77ae72ca047d0a9c5a9fc3252a7da45</anchor>
      <arglist>(tracktion::engine::FolderTrack &amp;selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8d8049b1e01fd5259ffd3bb3c1d0fc37</anchor>
      <arglist>(tracktion::engine::FolderTrack *selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9520e90edffa8ba60a5795fcedc2b0af</anchor>
      <arglist>(const SafeSelectable &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a0111aff32e2362b734272111b997fbd0</anchor>
      <arglist>(const SafeSelectable &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a2d138f6f080c57e899bff2d88548173a</anchor>
      <arglist>(tracktion::engine::FolderTrack *newSelectable)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::FolderTrack *</type>
      <name>get</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9ee8b1fc1cfd8bdf10af508ee26d62df</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator tracktion::engine::FolderTrack *</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a00c166f3ad6d24436a4c08035ea08cf6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::FolderTrack *</type>
      <name>operator-&gt;</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a67fe2cb007bbf621b5d16a4239ef71e9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8363a45c60a9e82ea0f7b6a53274c21a</anchor>
      <arglist>(tracktion::engine::FolderTrack *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ac9aa01992133d77cc6d628ee4b08f129</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3dcac85aa6b5f04d869e57f373a0d15b</anchor>
      <arglist>(const tracktion::engine::FolderTrack &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a05a80c277f9e43ba9c01214132bc84b2</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3670f41a1525ab558461b3a924b5f8f8</anchor>
      <arglist>(tracktion::engine::FolderTrack *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a03f5f4598999be1d3efacba4d6de05df</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9bde72434054d8f3306fc364de38c289</anchor>
      <arglist>(const tracktion::engine::FolderTrack &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ab93058b532f5d4088ab7ff330e87d23c</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a912fabb133e60d48b4b11d07bc8fff81</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>af77ae72ca047d0a9c5a9fc3252a7da45</anchor>
      <arglist>(tracktion::engine::FolderTrack &amp;selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8d8049b1e01fd5259ffd3bb3c1d0fc37</anchor>
      <arglist>(tracktion::engine::FolderTrack *selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9520e90edffa8ba60a5795fcedc2b0af</anchor>
      <arglist>(const SafeSelectable &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a0111aff32e2362b734272111b997fbd0</anchor>
      <arglist>(const SafeSelectable &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a2d138f6f080c57e899bff2d88548173a</anchor>
      <arglist>(tracktion::engine::FolderTrack *newSelectable)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::FolderTrack *</type>
      <name>get</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9ee8b1fc1cfd8bdf10af508ee26d62df</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator tracktion::engine::FolderTrack *</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a00c166f3ad6d24436a4c08035ea08cf6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::FolderTrack *</type>
      <name>operator-&gt;</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a67fe2cb007bbf621b5d16a4239ef71e9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8363a45c60a9e82ea0f7b6a53274c21a</anchor>
      <arglist>(tracktion::engine::FolderTrack *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ac9aa01992133d77cc6d628ee4b08f129</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3dcac85aa6b5f04d869e57f373a0d15b</anchor>
      <arglist>(const tracktion::engine::FolderTrack &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a05a80c277f9e43ba9c01214132bc84b2</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3670f41a1525ab558461b3a924b5f8f8</anchor>
      <arglist>(tracktion::engine::FolderTrack *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a03f5f4598999be1d3efacba4d6de05df</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9bde72434054d8f3306fc364de38c289</anchor>
      <arglist>(const tracktion::engine::FolderTrack &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ab93058b532f5d4088ab7ff330e87d23c</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SafeSelectable&lt; tracktion::engine::Plugin &gt;</name>
    <filename>classtracktion_1_1engine_1_1SafeSelectable.html</filename>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a912fabb133e60d48b4b11d07bc8fff81</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>af77ae72ca047d0a9c5a9fc3252a7da45</anchor>
      <arglist>(tracktion::engine::Plugin &amp;selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8d8049b1e01fd5259ffd3bb3c1d0fc37</anchor>
      <arglist>(tracktion::engine::Plugin *selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9520e90edffa8ba60a5795fcedc2b0af</anchor>
      <arglist>(const SafeSelectable &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a0111aff32e2362b734272111b997fbd0</anchor>
      <arglist>(const SafeSelectable &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a2d138f6f080c57e899bff2d88548173a</anchor>
      <arglist>(tracktion::engine::Plugin *newSelectable)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Plugin *</type>
      <name>get</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9ee8b1fc1cfd8bdf10af508ee26d62df</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator tracktion::engine::Plugin *</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a00c166f3ad6d24436a4c08035ea08cf6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Plugin *</type>
      <name>operator-&gt;</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a67fe2cb007bbf621b5d16a4239ef71e9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8363a45c60a9e82ea0f7b6a53274c21a</anchor>
      <arglist>(tracktion::engine::Plugin *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ac9aa01992133d77cc6d628ee4b08f129</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3dcac85aa6b5f04d869e57f373a0d15b</anchor>
      <arglist>(const tracktion::engine::Plugin &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a05a80c277f9e43ba9c01214132bc84b2</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3670f41a1525ab558461b3a924b5f8f8</anchor>
      <arglist>(tracktion::engine::Plugin *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a03f5f4598999be1d3efacba4d6de05df</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9bde72434054d8f3306fc364de38c289</anchor>
      <arglist>(const tracktion::engine::Plugin &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ab93058b532f5d4088ab7ff330e87d23c</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a912fabb133e60d48b4b11d07bc8fff81</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>af77ae72ca047d0a9c5a9fc3252a7da45</anchor>
      <arglist>(tracktion::engine::Plugin &amp;selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8d8049b1e01fd5259ffd3bb3c1d0fc37</anchor>
      <arglist>(tracktion::engine::Plugin *selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9520e90edffa8ba60a5795fcedc2b0af</anchor>
      <arglist>(const SafeSelectable &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a0111aff32e2362b734272111b997fbd0</anchor>
      <arglist>(const SafeSelectable &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a2d138f6f080c57e899bff2d88548173a</anchor>
      <arglist>(tracktion::engine::Plugin *newSelectable)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Plugin *</type>
      <name>get</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9ee8b1fc1cfd8bdf10af508ee26d62df</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator tracktion::engine::Plugin *</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a00c166f3ad6d24436a4c08035ea08cf6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Plugin *</type>
      <name>operator-&gt;</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a67fe2cb007bbf621b5d16a4239ef71e9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8363a45c60a9e82ea0f7b6a53274c21a</anchor>
      <arglist>(tracktion::engine::Plugin *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ac9aa01992133d77cc6d628ee4b08f129</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3dcac85aa6b5f04d869e57f373a0d15b</anchor>
      <arglist>(const tracktion::engine::Plugin &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a05a80c277f9e43ba9c01214132bc84b2</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3670f41a1525ab558461b3a924b5f8f8</anchor>
      <arglist>(tracktion::engine::Plugin *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a03f5f4598999be1d3efacba4d6de05df</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9bde72434054d8f3306fc364de38c289</anchor>
      <arglist>(const tracktion::engine::Plugin &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ab93058b532f5d4088ab7ff330e87d23c</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SafeSelectable&lt; tracktion::engine::Selectable &gt;</name>
    <filename>classtracktion_1_1engine_1_1SafeSelectable.html</filename>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a912fabb133e60d48b4b11d07bc8fff81</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>af77ae72ca047d0a9c5a9fc3252a7da45</anchor>
      <arglist>(tracktion::engine::Selectable &amp;selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8d8049b1e01fd5259ffd3bb3c1d0fc37</anchor>
      <arglist>(tracktion::engine::Selectable *selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9520e90edffa8ba60a5795fcedc2b0af</anchor>
      <arglist>(const SafeSelectable &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a0111aff32e2362b734272111b997fbd0</anchor>
      <arglist>(const SafeSelectable &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a2d138f6f080c57e899bff2d88548173a</anchor>
      <arglist>(tracktion::engine::Selectable *newSelectable)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Selectable *</type>
      <name>get</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9ee8b1fc1cfd8bdf10af508ee26d62df</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator tracktion::engine::Selectable *</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a00c166f3ad6d24436a4c08035ea08cf6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Selectable *</type>
      <name>operator-&gt;</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a67fe2cb007bbf621b5d16a4239ef71e9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8363a45c60a9e82ea0f7b6a53274c21a</anchor>
      <arglist>(tracktion::engine::Selectable *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ac9aa01992133d77cc6d628ee4b08f129</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3dcac85aa6b5f04d869e57f373a0d15b</anchor>
      <arglist>(const tracktion::engine::Selectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a05a80c277f9e43ba9c01214132bc84b2</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3670f41a1525ab558461b3a924b5f8f8</anchor>
      <arglist>(tracktion::engine::Selectable *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a03f5f4598999be1d3efacba4d6de05df</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9bde72434054d8f3306fc364de38c289</anchor>
      <arglist>(const tracktion::engine::Selectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ab93058b532f5d4088ab7ff330e87d23c</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a912fabb133e60d48b4b11d07bc8fff81</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>af77ae72ca047d0a9c5a9fc3252a7da45</anchor>
      <arglist>(tracktion::engine::Selectable &amp;selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8d8049b1e01fd5259ffd3bb3c1d0fc37</anchor>
      <arglist>(tracktion::engine::Selectable *selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9520e90edffa8ba60a5795fcedc2b0af</anchor>
      <arglist>(const SafeSelectable &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a0111aff32e2362b734272111b997fbd0</anchor>
      <arglist>(const SafeSelectable &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a2d138f6f080c57e899bff2d88548173a</anchor>
      <arglist>(tracktion::engine::Selectable *newSelectable)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Selectable *</type>
      <name>get</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9ee8b1fc1cfd8bdf10af508ee26d62df</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator tracktion::engine::Selectable *</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a00c166f3ad6d24436a4c08035ea08cf6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Selectable *</type>
      <name>operator-&gt;</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a67fe2cb007bbf621b5d16a4239ef71e9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8363a45c60a9e82ea0f7b6a53274c21a</anchor>
      <arglist>(tracktion::engine::Selectable *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ac9aa01992133d77cc6d628ee4b08f129</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3dcac85aa6b5f04d869e57f373a0d15b</anchor>
      <arglist>(const tracktion::engine::Selectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a05a80c277f9e43ba9c01214132bc84b2</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3670f41a1525ab558461b3a924b5f8f8</anchor>
      <arglist>(tracktion::engine::Selectable *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a03f5f4598999be1d3efacba4d6de05df</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9bde72434054d8f3306fc364de38c289</anchor>
      <arglist>(const tracktion::engine::Selectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ab93058b532f5d4088ab7ff330e87d23c</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SafeSelectable&lt; tracktion::engine::Track &gt;</name>
    <filename>classtracktion_1_1engine_1_1SafeSelectable.html</filename>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a912fabb133e60d48b4b11d07bc8fff81</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>af77ae72ca047d0a9c5a9fc3252a7da45</anchor>
      <arglist>(tracktion::engine::Track &amp;selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8d8049b1e01fd5259ffd3bb3c1d0fc37</anchor>
      <arglist>(tracktion::engine::Track *selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9520e90edffa8ba60a5795fcedc2b0af</anchor>
      <arglist>(const SafeSelectable &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a0111aff32e2362b734272111b997fbd0</anchor>
      <arglist>(const SafeSelectable &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a2d138f6f080c57e899bff2d88548173a</anchor>
      <arglist>(tracktion::engine::Track *newSelectable)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Track *</type>
      <name>get</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9ee8b1fc1cfd8bdf10af508ee26d62df</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator tracktion::engine::Track *</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a00c166f3ad6d24436a4c08035ea08cf6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Track *</type>
      <name>operator-&gt;</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a67fe2cb007bbf621b5d16a4239ef71e9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8363a45c60a9e82ea0f7b6a53274c21a</anchor>
      <arglist>(tracktion::engine::Track *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ac9aa01992133d77cc6d628ee4b08f129</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3dcac85aa6b5f04d869e57f373a0d15b</anchor>
      <arglist>(const tracktion::engine::Track &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a05a80c277f9e43ba9c01214132bc84b2</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3670f41a1525ab558461b3a924b5f8f8</anchor>
      <arglist>(tracktion::engine::Track *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a03f5f4598999be1d3efacba4d6de05df</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9bde72434054d8f3306fc364de38c289</anchor>
      <arglist>(const tracktion::engine::Track &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ab93058b532f5d4088ab7ff330e87d23c</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a912fabb133e60d48b4b11d07bc8fff81</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>af77ae72ca047d0a9c5a9fc3252a7da45</anchor>
      <arglist>(tracktion::engine::Track &amp;selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8d8049b1e01fd5259ffd3bb3c1d0fc37</anchor>
      <arglist>(tracktion::engine::Track *selectable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SafeSelectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9520e90edffa8ba60a5795fcedc2b0af</anchor>
      <arglist>(const SafeSelectable &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a0111aff32e2362b734272111b997fbd0</anchor>
      <arglist>(const SafeSelectable &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a2d138f6f080c57e899bff2d88548173a</anchor>
      <arglist>(tracktion::engine::Track *newSelectable)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Track *</type>
      <name>get</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9ee8b1fc1cfd8bdf10af508ee26d62df</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator tracktion::engine::Track *</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a00c166f3ad6d24436a4c08035ea08cf6</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>tracktion::engine::Track *</type>
      <name>operator-&gt;</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a67fe2cb007bbf621b5d16a4239ef71e9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a8363a45c60a9e82ea0f7b6a53274c21a</anchor>
      <arglist>(tracktion::engine::Track *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ac9aa01992133d77cc6d628ee4b08f129</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3dcac85aa6b5f04d869e57f373a0d15b</anchor>
      <arglist>(const tracktion::engine::Track &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a05a80c277f9e43ba9c01214132bc84b2</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a3670f41a1525ab558461b3a924b5f8f8</anchor>
      <arglist>(tracktion::engine::Track *other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a03f5f4598999be1d3efacba4d6de05df</anchor>
      <arglist>(const SafeSelectable &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>a9bde72434054d8f3306fc364de38c289</anchor>
      <arglist>(const tracktion::engine::Track &amp;other) const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1SafeSelectable.html</anchorfile>
      <anchor>ab93058b532f5d4088ab7ff330e87d23c</anchor>
      <arglist>(decltype(nullptr)) const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SampleFader</name>
    <filename>classtracktion_1_1engine_1_1SampleFader.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>FadeType</name>
      <anchorfile>classtracktion_1_1engine_1_1SampleFader.html</anchorfile>
      <anchor>a07d0884570cd7515396db84d411430fa</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1SampleFader.html" anchor="a07d0884570cd7515396db84d411430faaab160174126d98e7f290560def4c13d9">fadeOut</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1SampleFader.html" anchor="a07d0884570cd7515396db84d411430faa3b366da25504f8b1b6a09e13f6df8bbd">crossfade</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleFader</name>
      <anchorfile>classtracktion_1_1engine_1_1SampleFader.html</anchorfile>
      <anchor>addde9a4591e642c9c04e2dac37bf9f56</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SampleFader</name>
      <anchorfile>classtracktion_1_1engine_1_1SampleFader.html</anchorfile>
      <anchor>a6ac0aacd9b365d8c0e2c0e4338f17276</anchor>
      <arglist>(size_t numChannels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1SampleFader.html</anchorfile>
      <anchor>a3f3e28b063df83733f3e8e157e5dece4</anchor>
      <arglist>(size_t numChannels)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1SampleFader.html</anchorfile>
      <anchor>ade53c9d77e284bf158fe46c8ff8d54ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push</name>
      <anchorfile>classtracktion_1_1engine_1_1SampleFader.html</anchorfile>
      <anchor>af3e501d766f1d979143fa23fabd1abf6</anchor>
      <arglist>(const Buffer &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trigger</name>
      <anchorfile>classtracktion_1_1engine_1_1SampleFader.html</anchorfile>
      <anchor>a13221b3531ba0d5bfeb5057153e21004</anchor>
      <arglist>(size_t numFramesToFade_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classtracktion_1_1engine_1_1SampleFader.html</anchorfile>
      <anchor>a8b82087b397e9a5a222bd82ec177d966</anchor>
      <arglist>(Buffer &amp;&amp;buffer, FadeType fadeType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyAt</name>
      <anchorfile>classtracktion_1_1engine_1_1SampleFader.html</anchorfile>
      <anchor>a40cee42011929a64c1123263b798ae3d</anchor>
      <arglist>(Buffer &amp;buffer, choc::buffer::FrameCount frameNum, FadeType fadeType)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SamplerPlugin</name>
    <filename>classtracktion_1_1engine_1_1SamplerPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <class kind="struct">tracktion::engine::SamplerPlugin::SamplerSound</class>
    <member kind="function">
      <type></type>
      <name>SamplerPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a31cc3e1033af0714f77ab9ead7e43bf3</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SamplerPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>abebf04bd00eb00738ecc51f5443bea98</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSounds</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>ac9057ae7f6edd08c8f4023714a26e86f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSoundName</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a8b176c973f12370daf3916eb150e5f49</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoundName</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a7914b574aebaccc7c597d64e14c4d2b2</anchor>
      <arglist>(int index, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>AudioFile</type>
      <name>getSoundFile</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a75b4d9e5e44b96ba0e49eff196ed0087</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSoundMedia</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a7822a9b099a9f8f8999a944989f906a4</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getKeyNote</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>ae63250b443b643297d0da3b8e1d39d25</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMinKey</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a11035abd3bb2ba4816faa4587e5918ff</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxKey</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>af7fddf13b9bf65f600ec3e4e31907303</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getSoundGainDb</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a8c0a7491207ee85cb74cc9704f0dfd52</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getSoundPan</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a88073050c5660f4264d92b8ee9b56752</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSoundOpenEnded</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a5f1d3e95500932b88e148fce3a04510b</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSoundStartTime</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>afeeb4f6efc30fff302fea137b01f5c1f</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSoundLength</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a828ba891181302004063191692919aa9</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoundExcerpt</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>abe27fb8aefcfe390665b995cd0c2eb60</anchor>
      <arglist>(int index, double start, double length)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>addSound</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>aa415fd9568f9e506bbf605c5f9673d28</anchor>
      <arglist>(const juce::String &amp;sourcePathOrProjectID, const juce::String &amp;name, double startTime, double length, float gainDb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSound</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>ac1758e1121635612badfd6d875f17866</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoundParams</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a602e6492b97516622126a7957cb415b0</anchor>
      <arglist>(int index, int keyNote, int minNote, int maxNote)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoundGains</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a7fb197c8333564224bed707b52980c69</anchor>
      <arglist>(int index, float gainDb, float pan)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoundOpenEnded</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a2001a028bf47c043877fef14597cab4e</anchor>
      <arglist>(int index, bool isOpenEnded)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSoundMedia</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a1f6a6f6ad4d02c6144bef2aed0a4f147</anchor>
      <arglist>(int index, const juce::String &amp;sourcePathOrProjectID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a92390ff93b2707fe8a7701663ce4e792</anchor>
      <arglist>(const juce::BigInteger &amp;keysDown)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allNotesOff</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>ab95075cb8f8f930310cdb65d50da77cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>ae4be46565b1fb2e0d1c35d92b2fda048</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>abeddaf88efaa0421145a360b9db4290a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a5ade3ba0d00318a3ee1344e744775f2e</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>ad693cce1aa34465fe4c2f45693c2b217</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSynth</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>adbe3c6723b0981687e56d50c79ce8ea5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>ae2085a94ca06365981f8c32deeeba4c0</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>acee1b49565ebd0e7ffbe11a238a97138</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a95cd3f6aaea6fff74b161b8cc106a71e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a14ee215f5d392cd596231f8bf430f546</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesMidiInput</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a143fde1ed62f1e2eb972ee561694f7e6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>takesAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>aa394e3218dab9f21c659a3f6e36c7059</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a076cdc1225d40b3534db50c873074427</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNameForMidiNoteNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a6da9dacabf268a1c3be932e3ea7ec944</anchor>
      <arglist>(int note, int midiChannel, juce::String &amp;name) override</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ReferencedItem &gt;</type>
      <name>getReferencedItems</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a753c3ab7c3ec1477aad1d4cd84b2e7ab</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reassignReferencedItem</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>aaf7f882ee374aa7e09411ca42a497745</anchor>
      <arglist>(const ReferencedItem &amp;, ProjectItemID newID, double newStartTime) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sourceMediaChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a7d75011d28253eca89de831cb561b41f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>af41a224cf5a8f82599fd3041e0ecc46c</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a27b87f3442fbdf09c27688262545529f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1SamplerPlugin.html</anchorfile>
      <anchor>a24df8142d50aecb517e65b13ccab22f7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::SamplerPlugin::SamplerSound</name>
    <filename>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</filename>
    <member kind="function">
      <type></type>
      <name>SamplerSound</name>
      <anchorfile>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>aad0a57271ea1090d4ac08cac4d48cecd</anchor>
      <arglist>(SamplerPlugin &amp;, const juce::String &amp;sourcePathOrProjectID, const juce::String &amp;name, double startTime, double length, float gainDb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExcerpt</name>
      <anchorfile>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>af4f719f07f53a26ee290081a39f03c79</anchor>
      <arglist>(double startTime, double length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshFile</name>
      <anchorfile>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>adda3b5c25924a665d64ac7bcc7369e27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>SamplerPlugin &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a90e4ed5c5ac73132154911c5ecc532a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>source</name>
      <anchorfile>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>ae20d16d6b4765a8cce44bee668c7f425</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>ae89ee7a702c101d2bb4f821b6d7779e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>keyNote</name>
      <anchorfile>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a0cefd8c3e4932109997f6d4412c3a68a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>minNote</name>
      <anchorfile>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a946ccfa59bf0bbf0935e057c2039c5c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxNote</name>
      <anchorfile>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a329ba0bb2ef2f56f12ed0deab7be1bb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fileStartSample</name>
      <anchorfile>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a51d89e38ce1dd8aabae79995d1d8ce9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fileLengthSamples</name>
      <anchorfile>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a1c566dc1cfd7db3d88aaefe829d38fd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>openEnded</name>
      <anchorfile>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a3866dd90c6e5779310c9c9483c0d3b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>gainDb</name>
      <anchorfile>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>abf948b37023eefc3c4cacb828854639f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>pan</name>
      <anchorfile>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>aa413ef5fdd4d83192e07d7cdd23e8cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>startTime</name>
      <anchorfile>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>ac7ce8a48d665c6cf929903bc1dab337b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>length</name>
      <anchorfile>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>afdd2affbb827162e6987c40fb72e65a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioFile</type>
      <name>audioFile</name>
      <anchorfile>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>abfd14ca59965c6f18865307fd066ace4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioBuffer&lt; float &gt;</type>
      <name>audioData</name>
      <anchorfile>structtracktion_1_1engine_1_1SamplerPlugin_1_1SamplerSound.html</anchorfile>
      <anchor>a51a93e88c4e4d307a62c0fd481f3d196</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::Scale</name>
    <filename>classtracktion_1_1engine_1_1Scale.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ScaleType</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>major</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0ea0f9639541f306f2bbc6d3467e6eb92f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minor</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0eaa117bac9fdbaf01dc4cd6a6fbc74433b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ionian</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0ea92ae76318945fc87f5b9589454b09780</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dorian</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0eac0ac7f874f263373a050c6cd3448126b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>phrygian</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0ea1bd6c3a0827a02253b9c7762bdb65410</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lydian</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0ea660064bab632f4bf6b76c1fa3ad200cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mixolydian</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0eadcce28e6cf2f5cb1600fc83e2a269741</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>aeolian</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0ea94d968c9dcf0cf04d93aa2ae62cd0b51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>locrian</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0ea4baf8b6ee70f096364e7076fe5aa4d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>melodicMinor</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0eaced080a9b5a056a62c74d3ae12535a90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>harmonicMinor</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0eae1f3202e520fb709e7250e2cc963c686</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Steps</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a440c2752d50115f83ba28784b4e317e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Whole</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a440c2752d50115f83ba28784b4e317e5af9a47b2a3d4adcf17e56753ca6ba1348</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Half</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a440c2752d50115f83ba28784b4e317e5a6c5f4a61b0b9c79dbee903bae3ede58c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WholeHalf</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a440c2752d50115f83ba28784b4e317e5a15ecea2f0ccd3bc4f4fc19e56afd4a45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Intervals</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>aa84f44f74d8de0baa054ca6fda7d2178</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1Scale.html" anchor="aa84f44f74d8de0baa054ca6fda7d2178a865c0c0b4ab0e063e5caa3387c1a8741">i</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1Scale.html" anchor="aa84f44f74d8de0baa054ca6fda7d2178a7e98b8a17c0aad30ba64d47b74e2a6c1">ii</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1Scale.html" anchor="aa84f44f74d8de0baa054ca6fda7d2178a36347412c7d30ae6fde3742bbc4f21b9">iii</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1Scale.html" anchor="aa84f44f74d8de0baa054ca6fda7d2178af0b53b2da041fca49ef0b9839060b345">iv</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1Scale.html" anchor="aa84f44f74d8de0baa054ca6fda7d2178a9e3669d19b675bd57058fd4664205d2a">v</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1Scale.html" anchor="aa84f44f74d8de0baa054ca6fda7d2178a35b36b28916d38b34abddf832e286126">vi</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1Scale.html" anchor="aa84f44f74d8de0baa054ca6fda7d2178a44b7ed6c8297b6f269c8b872b0fd6266">vii</enumvalue>
    </member>
    <member kind="enumvalue">
      <name>major</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0ea0f9639541f306f2bbc6d3467e6eb92f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minor</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0eaa117bac9fdbaf01dc4cd6a6fbc74433b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ionian</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0ea92ae76318945fc87f5b9589454b09780</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>dorian</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0eac0ac7f874f263373a050c6cd3448126b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>phrygian</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0ea1bd6c3a0827a02253b9c7762bdb65410</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>lydian</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0ea660064bab632f4bf6b76c1fa3ad200cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>mixolydian</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0eadcce28e6cf2f5cb1600fc83e2a269741</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>aeolian</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0ea94d968c9dcf0cf04d93aa2ae62cd0b51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>locrian</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0ea4baf8b6ee70f096364e7076fe5aa4d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>melodicMinor</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0eaced080a9b5a056a62c74d3ae12535a90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>harmonicMinor</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a52437d60f63fb74c47254de4751aec0eae1f3202e520fb709e7250e2cc963c686</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Whole</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a440c2752d50115f83ba28784b4e317e5af9a47b2a3d4adcf17e56753ca6ba1348</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Half</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a440c2752d50115f83ba28784b4e317e5a6c5f4a61b0b9c79dbee903bae3ede58c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WholeHalf</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a440c2752d50115f83ba28784b4e317e5a15ecea2f0ccd3bc4f4fc19e56afd4a45</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scale</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>aa72d2fe7ab50f1bb605dbc0c4e210218</anchor>
      <arglist>(ScaleType type=major)</arglist>
    </member>
    <member kind="function">
      <type>ScaleType</type>
      <name>getType</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>af5cf96e902013ef27b159f920b73a820</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a39644dda44b98c19a1e8c9ddb4bfef4e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a58a60bdfb4e8be4344abe16d47efd618</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; int &gt;</type>
      <name>getSteps</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>af44a21692ae705aa4d1f5af92cc4766a</anchor>
      <arglist>(int octaves=1) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getIntervalName</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>ac5b5b557b8b19d0f2f41a5a8139de601</anchor>
      <arglist>(Intervals interval) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Chord &gt;</type>
      <name>getTriads</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a852a4be9783e6ad9433d45098e481774</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Chord &gt;</type>
      <name>getSixths</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a24291836666964b6e251c8a451aec19e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Chord &gt;</type>
      <name>getSevenths</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>ad385a976f45de8174f08cccee868bd8c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getIntervalNames</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a9cff1625b35dca1ee44bc099cd9cd643</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; ScaleType &gt;</type>
      <name>getAllScaleTypes</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a59e319746a33cddd4b8d0ba5b45ae8dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getScaleStrings</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a130abed2298d922a660186ef477b5041</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getNameForType</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a2ded576543a1799d71e7be7f616460ad</anchor>
      <arglist>(ScaleType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getShortNameForType</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>ac3871dc5b7f5d119c2dfc80a23bfe436</anchor>
      <arglist>(ScaleType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScaleType</type>
      <name>getTypeFromName</name>
      <anchorfile>classtracktion_1_1engine_1_1Scale.html</anchorfile>
      <anchor>a107f79e04fc94526e17b8b5871c430e4</anchor>
      <arglist>(juce::String name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::Scene</name>
    <filename>classtracktion_1_1engine_1_1Scene.html</filename>
    <base>tracktion::engine::Selectable</base>
    <member kind="function">
      <type></type>
      <name>Scene</name>
      <anchorfile>classtracktion_1_1engine_1_1Scene.html</anchorfile>
      <anchor>a848de108b1bcc98fe9d89aef51154da0</anchor>
      <arglist>(const juce::ValueTree &amp;, SceneList &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Scene</name>
      <anchorfile>classtracktion_1_1engine_1_1Scene.html</anchorfile>
      <anchor>a59c4093b0ab97de4e0fc7290a2502c42</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndex</name>
      <anchorfile>classtracktion_1_1engine_1_1Scene.html</anchorfile>
      <anchor>a0a740b7f1cda9cee712ce83e1312cdb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1Scene.html</anchorfile>
      <anchor>aa782035b34fadc3c89483d443d55dd5d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1Scene.html</anchorfile>
      <anchor>a1f6577cdcd6f5fa3126f1fb3fcbe7107</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion_1_1engine_1_1Scene.html</anchorfile>
      <anchor>a073fed9c7aaa098179fff4c438ee5344</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>name</name>
      <anchorfile>classtracktion_1_1engine_1_1Scene.html</anchorfile>
      <anchor>a04c39abd8d5adac1020245b36eaadf62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::Colour &gt;</type>
      <name>colour</name>
      <anchorfile>classtracktion_1_1engine_1_1Scene.html</anchorfile>
      <anchor>a5bbbd367390809f8ad3418b43a62c6b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceneList &amp;</type>
      <name>sceneList</name>
      <anchorfile>classtracktion_1_1engine_1_1Scene.html</anchorfile>
      <anchor>a5a598eab85e47a5279b46f5c59834bf0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::Scenes::SceneInfo</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1Scenes_1_1SceneInfo.html</filename>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Scenes_1_1SceneInfo.html</anchorfile>
      <anchor>a55e140fa365cb3ca6e8613ffdf4a0e05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; juce::ValueTree &gt;</type>
      <name>clips</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Scenes_1_1SceneInfo.html</anchorfile>
      <anchor>a7045c1bdd532380e63186841cd241c81</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SceneList</name>
    <filename>classtracktion_1_1engine_1_1SceneList.html</filename>
    <base protection="private">ValueTreeObjectList&lt; Scene &gt;</base>
    <member kind="function">
      <type></type>
      <name>SceneList</name>
      <anchorfile>classtracktion_1_1engine_1_1SceneList.html</anchorfile>
      <anchor>af957213c49d36ef54dae0aab880643b1</anchor>
      <arglist>(const juce::ValueTree &amp;, Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SceneList</name>
      <anchorfile>classtracktion_1_1engine_1_1SceneList.html</anchorfile>
      <anchor>a80f463c81713cacded02011285967fff</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumScenes</name>
      <anchorfile>classtracktion_1_1engine_1_1SceneList.html</anchorfile>
      <anchor>ae8ee8fb39cd6a81d1705f6e8d851b023</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Scene * &gt;</type>
      <name>getScenes</name>
      <anchorfile>classtracktion_1_1engine_1_1SceneList.html</anchorfile>
      <anchor>aaf142d6160bb9089adf70da63032ff45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureNumberOfScenes</name>
      <anchorfile>classtracktion_1_1engine_1_1SceneList.html</anchorfile>
      <anchor>a4969f402ced09e748297f04f4537c6b2</anchor>
      <arglist>(int numScenes)</arglist>
    </member>
    <member kind="function">
      <type>Scene *</type>
      <name>insertScene</name>
      <anchorfile>classtracktion_1_1engine_1_1SceneList.html</anchorfile>
      <anchor>ae9969ce662eb8e7174a6859e27b3dfb7</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteScene</name>
      <anchorfile>classtracktion_1_1engine_1_1SceneList.html</anchorfile>
      <anchor>a0b0c0caabfc772b5e0d1f632419981f4</anchor>
      <arglist>(Scene &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1SceneList.html</anchorfile>
      <anchor>aa2316af68118ef0c623e95d3adb6750d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion_1_1engine_1_1SceneList.html</anchorfile>
      <anchor>a719a90598e9010942abcc122eae84e6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SceneWatcher</type>
      <name>sceneWatcher</name>
      <anchorfile>classtracktion_1_1engine_1_1SceneList.html</anchorfile>
      <anchor>a4d0e38e3f81e01c4c91a71c49a975252</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::Scenes</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1Scenes.html</filename>
    <base>tracktion::engine::Clipboard::ContentType</base>
    <class kind="struct">tracktion::engine::Clipboard::Scenes::SceneInfo</class>
    <member kind="function">
      <type></type>
      <name>Scenes</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Scenes.html</anchorfile>
      <anchor>ac93ca229de81c694e3001e7dd046fb0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Scenes</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Scenes.html</anchorfile>
      <anchor>a8899b1244219a6456d0779279d2ffa4a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Scenes.html</anchorfile>
      <anchor>a6a6873bd985f7c46aa95d080211914c6</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Scenes.html</anchorfile>
      <anchor>ae3179b071e4302d9007657da52f29b5a</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Scenes.html</anchorfile>
      <anchor>a2b8ac2e249e6721e16dd1ca7831b15da</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; SceneInfo &gt;</type>
      <name>scenes</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Scenes.html</anchorfile>
      <anchor>a98428c6d802a6cb463dda9e45d4a5b90</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SceneWatcher</name>
    <filename>classtracktion_1_1engine_1_1SceneWatcher.html</filename>
    <class kind="struct">tracktion::engine::SceneWatcher::Listener</class>
    <member kind="function">
      <type></type>
      <name>SceneWatcher</name>
      <anchorfile>classtracktion_1_1engine_1_1SceneWatcher.html</anchorfile>
      <anchor>aa6053277aa4e99f9cb4ee61431b07994</anchor>
      <arglist>(const juce::ValueTree &amp;scenesState, Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion_1_1engine_1_1SceneWatcher.html</anchorfile>
      <anchor>aa64e8c26266b299cb6557f39eeefea5a</anchor>
      <arglist>(Listener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion_1_1engine_1_1SceneWatcher.html</anchorfile>
      <anchor>a94a0045cd5da995ec18dbed82e29a056</anchor>
      <arglist>(Listener *)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::detail::ScopedActiveRecordingDevice</name>
    <filename>structtracktion_1_1engine_1_1detail_1_1ScopedActiveRecordingDevice.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedActiveRecordingDevice</name>
      <anchorfile>structtracktion_1_1engine_1_1detail_1_1ScopedActiveRecordingDevice.html</anchorfile>
      <anchor>a5446a9ae90497c051ed45f153fd522a6</anchor>
      <arglist>(EditPlaybackContext &amp;e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedActiveRecordingDevice</name>
      <anchorfile>structtracktion_1_1engine_1_1detail_1_1ScopedActiveRecordingDevice.html</anchorfile>
      <anchor>ad2cd89681e1d84215bc3b0a29df4a01d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>EditPlaybackContext &amp;</type>
      <name>epc</name>
      <anchorfile>structtracktion_1_1engine_1_1detail_1_1ScopedActiveRecordingDevice.html</anchorfile>
      <anchor>aec59109ad74b9f6925169515b376cc4c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MidiLearnState::ScopedChangeCaller</name>
    <filename>structtracktion_1_1engine_1_1MidiLearnState_1_1ScopedChangeCaller.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedChangeCaller</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiLearnState_1_1ScopedChangeCaller.html</anchorfile>
      <anchor>ad6cdf882ac292068bbad296d26f34e86</anchor>
      <arglist>(MidiLearnState &amp;, ChangeType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedChangeCaller</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiLearnState_1_1ScopedChangeCaller.html</anchorfile>
      <anchor>a34fc3b270db47b7c0239c5e447454619</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>MidiLearnState &amp;</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiLearnState_1_1ScopedChangeCaller.html</anchorfile>
      <anchor>a7c33b4c25b59bb4dbf4df04243112c36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ChangeType</type>
      <name>type</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiLearnState_1_1ScopedChangeCaller.html</anchorfile>
      <anchor>aa9922c718012ea85430bae5f09530560</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>engine::Renderer::ScopedClipSlotDisabler</name>
    <filename>structengine_1_1Renderer_1_1ScopedClipSlotDisabler.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedClipSlotDisabler</name>
      <anchorfile>structengine_1_1Renderer_1_1ScopedClipSlotDisabler.html</anchorfile>
      <anchor>a202680f1d7dc7d43f9ac775ba9c9bf9e</anchor>
      <arglist>(Edit &amp;e, Track::Array &amp;ta)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedClipSlotDisabler</name>
      <anchorfile>structengine_1_1Renderer_1_1ScopedClipSlotDisabler.html</anchorfile>
      <anchor>ab5487dd09f4c81cc8a5da962108d0c58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structengine_1_1Renderer_1_1ScopedClipSlotDisabler.html</anchorfile>
      <anchor>a1854c8f8f55c20c275ebc918a4341950</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Track::Array</type>
      <name>tracks</name>
      <anchorfile>structengine_1_1Renderer_1_1ScopedClipSlotDisabler.html</anchorfile>
      <anchor>a369fb322bdd726c97be37dd8337f940e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; bool &gt;</type>
      <name>playSlotClips</name>
      <anchorfile>structengine_1_1Renderer_1_1ScopedClipSlotDisabler.html</anchorfile>
      <anchor>a0aafa9ecb9b63b9b8e4a82311a02b887</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::TransportControl::ScopedContextAllocator</name>
    <filename>structtracktion_1_1engine_1_1TransportControl_1_1ScopedContextAllocator.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedContextAllocator</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1ScopedContextAllocator.html</anchorfile>
      <anchor>a5dd39d3dcd1b1df512c200ca33f54693</anchor>
      <arglist>(TransportControl &amp;o)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedContextAllocator</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1ScopedContextAllocator.html</anchorfile>
      <anchor>a1344e65798fb955a4864f25187e04979</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>TransportControl &amp;</type>
      <name>tc</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1ScopedContextAllocator.html</anchorfile>
      <anchor>ac7c6d6d1f995cf6c8f9c1ba83963a26d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>wasAllocated</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1ScopedContextAllocator.html</anchorfile>
      <anchor>a3fababc6cbc69d639340d22718691aa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScopedPlaybackRestarter</type>
      <name>playbackRestarter</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1ScopedContextAllocator.html</anchorfile>
      <anchor>a5f77af9323a87ad69bf38096f38ad018</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ScopedCpuMeter</name>
    <filename>structtracktion_1_1engine_1_1ScopedCpuMeter.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedCpuMeter</name>
      <anchorfile>structtracktion_1_1engine_1_1ScopedCpuMeter.html</anchorfile>
      <anchor>abfa202071a8899bffd064b666a52af98</anchor>
      <arglist>(std::atomic&lt; double &gt; &amp;valueToUpdate_, double filterAmount_) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedCpuMeter</name>
      <anchorfile>structtracktion_1_1engine_1_1ScopedCpuMeter.html</anchorfile>
      <anchor>a54be0e4fba661a922d1cf6e448073016</anchor>
      <arglist>() noexcept</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::EditPlaybackContext::ScopedDeviceListReleaser</name>
    <filename>structtracktion_1_1engine_1_1EditPlaybackContext_1_1ScopedDeviceListReleaser.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedDeviceListReleaser</name>
      <anchorfile>structtracktion_1_1engine_1_1EditPlaybackContext_1_1ScopedDeviceListReleaser.html</anchorfile>
      <anchor>a9a4b478dfba51be4597b2f2a9f70279b</anchor>
      <arglist>(EditPlaybackContext &amp;, bool reallocate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedDeviceListReleaser</name>
      <anchorfile>structtracktion_1_1engine_1_1EditPlaybackContext_1_1ScopedDeviceListReleaser.html</anchorfile>
      <anchor>aa9f73969079a474bc7fb45980da0fbba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>EditPlaybackContext &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion_1_1engine_1_1EditPlaybackContext_1_1ScopedDeviceListReleaser.html</anchorfile>
      <anchor>a57ae0a3d7a6fcc5d39706e3edb40587b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const bool</type>
      <name>shouldReallocate</name>
      <anchorfile>structtracktion_1_1engine_1_1EditPlaybackContext_1_1ScopedDeviceListReleaser.html</anchorfile>
      <anchor>ae3539588829dbb8110866dc9977e2d43</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ScopedDirectoryDeleter</name>
    <filename>structtracktion_1_1engine_1_1ScopedDirectoryDeleter.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedDirectoryDeleter</name>
      <anchorfile>structtracktion_1_1engine_1_1ScopedDirectoryDeleter.html</anchorfile>
      <anchor>ab3e4501455f0eb1ba313a8c92c4b59e4</anchor>
      <arglist>(const juce::File &amp;dir)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedDirectoryDeleter</name>
      <anchorfile>structtracktion_1_1engine_1_1ScopedDirectoryDeleter.html</anchorfile>
      <anchor>a36be07697980b7035301e54fd97326a1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::MidiClip::ScopedEventsList</name>
    <filename>structtracktion_1_1engine_1_1MidiClip_1_1ScopedEventsList.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedEventsList</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiClip_1_1ScopedEventsList.html</anchorfile>
      <anchor>a49d896d996ad70093bb4253998988670</anchor>
      <arglist>(MidiClip &amp;, SelectedMidiEvents *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedEventsList</name>
      <anchorfile>structtracktion_1_1engine_1_1MidiClip_1_1ScopedEventsList.html</anchorfile>
      <anchor>a76fd6ad989908a4521d513fa08228079</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::WaveInputRecordingThread::ScopedInitialiser</name>
    <filename>structtracktion_1_1engine_1_1WaveInputRecordingThread_1_1ScopedInitialiser.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedInitialiser</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveInputRecordingThread_1_1ScopedInitialiser.html</anchorfile>
      <anchor>a6136c9c794376602e16d99b37c791b3d</anchor>
      <arglist>(WaveInputRecordingThread &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedInitialiser</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveInputRecordingThread_1_1ScopedInitialiser.html</anchorfile>
      <anchor>abb5f34784e7db81ef811b08b4fe7f3c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>WaveInputRecordingThread &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveInputRecordingThread_1_1ScopedInitialiser.html</anchorfile>
      <anchor>a96f05b135967076b1cf70a98554ebe14</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ScopedListener</name>
    <filename>classtracktion_1_1engine_1_1ScopedListener.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedListener</name>
      <anchorfile>classtracktion_1_1engine_1_1ScopedListener.html</anchorfile>
      <anchor>a0af514e07dfc6821d228a0fdd0d52e40</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScopedListener</name>
      <anchorfile>classtracktion_1_1engine_1_1ScopedListener.html</anchorfile>
      <anchor>abf843f3dfa488e5ff2b530a75d855436</anchor>
      <arglist>(BroadcasterType &amp;b, ListenerType &amp;l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1ScopedListener.html</anchorfile>
      <anchor>a41c993d0860d9f9dbabd44b18a5c89fb</anchor>
      <arglist>(BroadcasterType &amp;b, ListenerType &amp;l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1ScopedListener.html</anchorfile>
      <anchor>a77a1d7718f9dbe2569ad443f93aad9e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScopedListener</name>
      <anchorfile>classtracktion_1_1engine_1_1ScopedListener.html</anchorfile>
      <anchor>ac406831065435ccc568f8af099b27e0d</anchor>
      <arglist>(const ScopedListener &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ScopedListener &amp;</type>
      <name>operator=</name>
      <anchorfile>classtracktion_1_1engine_1_1ScopedListener.html</anchorfile>
      <anchor>ad92f78a6e94b0fd746b8620a2a0d08a2</anchor>
      <arglist>(const ScopedListener &amp;)=delete</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::ScopedPerformanceMeasurement</name>
    <filename>classtracktion_1_1graph_1_1ScopedPerformanceMeasurement.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedPerformanceMeasurement</name>
      <anchorfile>classtracktion_1_1graph_1_1ScopedPerformanceMeasurement.html</anchorfile>
      <anchor>acaf0ac5b49460f06bba2d67c5ca8b4d7</anchor>
      <arglist>(PerformanceMeasurement &amp;pm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedPerformanceMeasurement</name>
      <anchorfile>classtracktion_1_1graph_1_1ScopedPerformanceMeasurement.html</anchorfile>
      <anchor>aa13d0f19620555a96f8a9317d749867f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>PerformanceMeasurement &amp;</type>
      <name>performanceMeasurement</name>
      <anchorfile>classtracktion_1_1graph_1_1ScopedPerformanceMeasurement.html</anchorfile>
      <anchor>ab4dcb11803e8813107639a5f36366e3e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::TransportControl::ScopedPlaybackRestarter</name>
    <filename>structtracktion_1_1engine_1_1TransportControl_1_1ScopedPlaybackRestarter.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedPlaybackRestarter</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1ScopedPlaybackRestarter.html</anchorfile>
      <anchor>aaf2a7545f2437071b2b2113a4ea19d23</anchor>
      <arglist>(TransportControl &amp;o)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedPlaybackRestarter</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1ScopedPlaybackRestarter.html</anchorfile>
      <anchor>afea59476dfefc7beb7588820fe8510b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>TransportControl &amp;</type>
      <name>tc</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1ScopedPlaybackRestarter.html</anchorfile>
      <anchor>adc74db362b50e3eaa32d50bc60d4f28a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>wasPlaying</name>
      <anchorfile>structtracktion_1_1engine_1_1TransportControl_1_1ScopedPlaybackRestarter.html</anchorfile>
      <anchor>aa030d8951539d84435346ea147daa79b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::FreezePointPlugin::ScopedPluginDisabler</name>
    <filename>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedPluginDisabler.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedPluginDisabler</name>
      <anchorfile>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedPluginDisabler.html</anchorfile>
      <anchor>a114ffd3c8dfc45437b4a6e6cf5b248bf</anchor>
      <arglist>(Track &amp;track, juce::Range&lt; int &gt; pluginsToDisable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedPluginDisabler</name>
      <anchorfile>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedPluginDisabler.html</anchorfile>
      <anchor>a7277dbbbb31fc6e3e44383941e71d641</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ScopedPluginUnloadInhibitor</name>
    <filename>structtracktion_1_1engine_1_1ScopedPluginUnloadInhibitor.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedPluginUnloadInhibitor</name>
      <anchorfile>structtracktion_1_1engine_1_1ScopedPluginUnloadInhibitor.html</anchorfile>
      <anchor>aae29528272b0304f3e6e4d66125f0b10</anchor>
      <arglist>(PluginUnloadInhibitor &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedPluginUnloadInhibitor</name>
      <anchorfile>structtracktion_1_1engine_1_1ScopedPluginUnloadInhibitor.html</anchorfile>
      <anchor>a29ab0c5b72cc1273ce6c91cef7d5ca65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>PluginUnloadInhibitor &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion_1_1engine_1_1ScopedPluginUnloadInhibitor.html</anchorfile>
      <anchor>a17fee4082c5124ef2a008837e226a15f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::LockFreeObject::ScopedRealTimeAccess</name>
    <filename>classtracktion_1_1graph_1_1LockFreeObject_1_1ScopedRealTimeAccess.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedRealTimeAccess</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject_1_1ScopedRealTimeAccess.html</anchorfile>
      <anchor>ac956b70283ce80a81e7993afea67b5c2</anchor>
      <arglist>(LockFreeObject &amp;lfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedRealTimeAccess</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject_1_1ScopedRealTimeAccess.html</anchorfile>
      <anchor>a08f57d30b6cd27f3d0def350f4ab414e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ObjectType *</type>
      <name>get</name>
      <anchorfile>classtracktion_1_1graph_1_1LockFreeObject_1_1ScopedRealTimeAccess.html</anchorfile>
      <anchor>a475c758bc1fde945d6ea5b9fb34fd962</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Edit::ScopedRenderStatus</name>
    <filename>structtracktion_1_1engine_1_1Edit_1_1ScopedRenderStatus.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedRenderStatus</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1ScopedRenderStatus.html</anchorfile>
      <anchor>a2202826fb2d5922203d150099eb88508</anchor>
      <arglist>(Edit &amp;, bool shouldReallocateOnDestruction)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedRenderStatus</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1ScopedRenderStatus.html</anchorfile>
      <anchor>ad48a649ce8bb5ae0174f0ad974508ccf</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::SelectionManager::ScopedSelectionState</name>
    <filename>structtracktion_1_1engine_1_1SelectionManager_1_1ScopedSelectionState.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedSelectionState</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectionManager_1_1ScopedSelectionState.html</anchorfile>
      <anchor>ae96a6caa73ffb6d6aa459112c8d393b9</anchor>
      <arglist>(SelectionManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedSelectionState</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectionManager_1_1ScopedSelectionState.html</anchorfile>
      <anchor>aed8125a7ddd36612ab00c405c2b6971b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::ScopedSignpost</name>
    <filename>structtracktion_1_1graph_1_1ScopedSignpost.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedSignpost</name>
      <anchorfile>structtracktion_1_1graph_1_1ScopedSignpost.html</anchorfile>
      <anchor>a254c3591f14336b078cec4de19a3bb31</anchor>
      <arglist>(uint32_t signpostIndex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedSignpost</name>
      <anchorfile>structtracktion_1_1graph_1_1ScopedSignpost.html</anchorfile>
      <anchor>ad7b61e104eb43254e84e960ed34f2ca6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ScopedSteadyLoad</name>
    <filename>classtracktion_1_1engine_1_1ScopedSteadyLoad.html</filename>
    <class kind="struct">tracktion::engine::ScopedSteadyLoad::Context</class>
    <member kind="function">
      <type></type>
      <name>ScopedSteadyLoad</name>
      <anchorfile>classtracktion_1_1engine_1_1ScopedSteadyLoad.html</anchorfile>
      <anchor>a86e2ffd4c8125b14f1e3dcc2f3a30cf6</anchor>
      <arglist>(Context &amp;contextToUse, int bufferSize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedSteadyLoad</name>
      <anchorfile>classtracktion_1_1engine_1_1ScopedSteadyLoad.html</anchorfile>
      <anchor>a3b26c2671bbb736e7a329aa8415bb737</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>engine::ScopedThreadExitStatusEnabler</name>
    <filename>structengine_1_1ScopedThreadExitStatusEnabler.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedThreadExitStatusEnabler</name>
      <anchorfile>structengine_1_1ScopedThreadExitStatusEnabler.html</anchorfile>
      <anchor>a53a3401f52b8d3c6719cdfc7bd2823c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedThreadExitStatusEnabler</name>
      <anchorfile>structengine_1_1ScopedThreadExitStatusEnabler.html</anchorfile>
      <anchor>acff547a683cfb1fc38542d6c427af766</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::thread::id</type>
      <name>getID</name>
      <anchorfile>structengine_1_1ScopedThreadExitStatusEnabler.html</anchorfile>
      <anchor>a49e14d8e1d2b78ac97cab3c93494ad5f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::FreezePointPlugin::ScopedTrackFreezer</name>
    <filename>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackFreezer.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedTrackFreezer</name>
      <anchorfile>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackFreezer.html</anchorfile>
      <anchor>a700c9494a302fc1548deb482eac43f87</anchor>
      <arglist>(FreezePointPlugin &amp;o)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedTrackFreezer</name>
      <anchorfile>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackFreezer.html</anchorfile>
      <anchor>a25714db484280d8f56621fda209a0b39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>EditItemID</type>
      <name>trackID</name>
      <anchorfile>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackFreezer.html</anchorfile>
      <anchor>a26e438c83fe4661eb6b1efe003f5d821</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FreezePointPlugin &amp;</type>
      <name>owner</name>
      <anchorfile>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackFreezer.html</anchorfile>
      <anchor>a93b08cd3dee3916c07d948f5b52ea58a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>wasFrozen</name>
      <anchorfile>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackFreezer.html</anchorfile>
      <anchor>a83893d275e30d6fce93814762ccf43ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::FreezePointPlugin::ScopedTrackSoloIsolator</name>
    <filename>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackSoloIsolator.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedTrackSoloIsolator</name>
      <anchorfile>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackSoloIsolator.html</anchorfile>
      <anchor>a8ae37d254de71fbd76b479ac76a2f58b</anchor>
      <arglist>(Edit &amp;e, Track::Array &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedTrackSoloIsolator</name>
      <anchorfile>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackSoloIsolator.html</anchorfile>
      <anchor>a7173cd71949956bcd6b2e8f35befb6d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackSoloIsolator.html</anchorfile>
      <anchor>ae25c8735b1e799a1e9b9f6e0c8d40701</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Track::Array</type>
      <name>tracks</name>
      <anchorfile>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackSoloIsolator.html</anchorfile>
      <anchor>a29c4b6758d76423b51762469915fdc7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::BigInteger</type>
      <name>muted</name>
      <anchorfile>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackSoloIsolator.html</anchorfile>
      <anchor>a4c7e57beae83e5d87353e624218bd6da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::BigInteger</type>
      <name>notSoloIsolated</name>
      <anchorfile>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackSoloIsolator.html</anchorfile>
      <anchor>ac49e7c731b0f93041af22dd2b6c3aa65</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::FreezePointPlugin::ScopedTrackUnsoloer</name>
    <filename>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackUnsoloer.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedTrackUnsoloer</name>
      <anchorfile>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackUnsoloer.html</anchorfile>
      <anchor>a0a08303518ab28cd268c0ff238ae006f</anchor>
      <arglist>(Edit &amp;e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedTrackUnsoloer</name>
      <anchorfile>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackUnsoloer.html</anchorfile>
      <anchor>afdaf1a3f5dfec17c295124be6313d45d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackUnsoloer.html</anchorfile>
      <anchor>acc4566f3a75dbe6cdfec439f030cd9fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::BigInteger</type>
      <name>soloed</name>
      <anchorfile>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackUnsoloer.html</anchorfile>
      <anchor>aeb675c12c22e23619c5f20fd69d9e3ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::BigInteger</type>
      <name>soloIsolated</name>
      <anchorfile>structtracktion_1_1engine_1_1FreezePointPlugin_1_1ScopedTrackUnsoloer.html</anchorfile>
      <anchor>a361b84bb9779b7d9d5f9fa1366db4fc7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ScopedWaitCursor</name>
    <filename>classtracktion_1_1engine_1_1ScopedWaitCursor.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopedWaitCursor</name>
      <anchorfile>classtracktion_1_1engine_1_1ScopedWaitCursor.html</anchorfile>
      <anchor>ac8957a6bc38e57c4c76e41fcc49194be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedWaitCursor</name>
      <anchorfile>classtracktion_1_1engine_1_1ScopedWaitCursor.html</anchorfile>
      <anchor>a135abcddbe47c241a2ba588dfea54e77</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AudioFadeCurve::SCurve</name>
    <filename>structtracktion_1_1engine_1_1AudioFadeCurve_1_1SCurve.html</filename>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>preadjust</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve_1_1SCurve.html</anchorfile>
      <anchor>a7eca6aa6a1530e6e88aaf42ed18e61fa</anchor>
      <arglist>(double alpha) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>get</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioFadeCurve_1_1SCurve.html</anchorfile>
      <anchor>a7b3417389116e0d8dad1bd18a53f0d87</anchor>
      <arglist>(float alpha) noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SearchOperation</name>
    <filename>classtracktion_1_1engine_1_1SearchOperation.html</filename>
    <member kind="function">
      <type></type>
      <name>SearchOperation</name>
      <anchorfile>classtracktion_1_1engine_1_1SearchOperation.html</anchorfile>
      <anchor>ade10c698c257bfb9bcdbae89cdbb6208</anchor>
      <arglist>(SearchOperation *in1=nullptr, SearchOperation *in2=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SearchOperation</name>
      <anchorfile>classtracktion_1_1engine_1_1SearchOperation.html</anchorfile>
      <anchor>a2292aeb616aa69128ce8972b6543e72e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::Array&lt; int &gt;</type>
      <name>getMatches</name>
      <anchorfile>classtracktion_1_1engine_1_1SearchOperation.html</anchorfile>
      <anchor>a523bfd553e6f9943821e94a45af5aa26</anchor>
      <arglist>(ProjectSearchIndex &amp;)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const std::unique_ptr&lt; SearchOperation &gt;</type>
      <name>in1</name>
      <anchorfile>classtracktion_1_1engine_1_1SearchOperation.html</anchorfile>
      <anchor>a63a31f58ef23ef78ef139bfba959642a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const std::unique_ptr&lt; SearchOperation &gt;</type>
      <name>in2</name>
      <anchorfile>classtracktion_1_1engine_1_1SearchOperation.html</anchorfile>
      <anchor>a04086a859c79e6efd912a1dea5c8f900</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::TrackCompManager::TrackComp::Section</name>
    <filename>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp_1_1Section.html</filename>
    <member kind="variable">
      <type>CompSection *</type>
      <name>compSection</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp_1_1Section.html</anchorfile>
      <anchor>a865ffd9ca02d9740b8ca5c4cb771c29e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Range&lt; double &gt;</type>
      <name>timeRange</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp_1_1Section.html</anchorfile>
      <anchor>a565b7ccbd1a14e51f519d9e0ad994bc3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AudioSegmentList::Segment</name>
    <filename>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</filename>
    <member kind="function">
      <type></type>
      <name>Segment</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a2c1e27ce0883fad28f74154d195bebfe</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>getRange</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>ae0918d698ce74d31cf888c28aef0eb38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SampleRange</type>
      <name>getSampleRange</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a238dde0d4e4167ef83cecb7732e50372</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getStretchRatio</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a7aec070490875090a2e5a231477afde1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getTranspose</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>aff5a5f0a97ccb44fa463c9dd55d05217</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFadeIn</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>ab02e4b0089fc5826dda8272e4123b381</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFadeOut</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>aa2ac9add1a05e04be554e6c2a16f801e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFollowedBySilence</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a6ce75f302020ae02dad557f0062df559</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHashCode</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a8d99c736a0d035b805be095bfee545f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>adcf01662f765bd6870fa1af17fa9f7cd</anchor>
      <arglist>(const Segment &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a3c1653745bb71c1b7ec841edacb0749f</anchor>
      <arglist>(const Segment &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>TimePosition</type>
      <name>start</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a1be5f72cc609238ebdb84c24e98a5553</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeDuration</type>
      <name>length</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a5a878da98841c042699a9630092afddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SampleCount</type>
      <name>startSample</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a34592ab5d471caf60eb3537e584edd00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SampleCount</type>
      <name>lengthSample</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>ad7cee7884f9f60801702ce4d20fb6200</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>stretchRatio</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a52815376e48d80358bacfefeb6ffbed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>transpose</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>adcfc0cf61b725c29468dd361d6d77eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fadeIn</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>adca1bb8f931dfe3d1b980e3f40f00522</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fadeOut</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a1fc7ab22ce423472f29d2ad840a915d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>followedBySilence</name>
      <anchorfile>structtracktion_1_1engine_1_1AudioSegmentList_1_1Segment.html</anchorfile>
      <anchor>a7de5006083d481dead0acda2e959d745</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::Selectable</name>
    <filename>classtracktion_1_1engine_1_1Selectable.html</filename>
    <class kind="class">tracktion::engine::Selectable::Listener</class>
    <member kind="typedef">
      <type>juce::WeakReference&lt; Selectable &gt;</type>
      <name>WeakRef</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>a8e3066afe6d51968a989e0bf802cc3e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Selectable</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>a0f19e52c11e58207cb93d78353223ebe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Selectable</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>a00b992d162022cfa15c8f6a055dc0749</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>ad70a5dbab32c6f9ceec471c59854e6ba</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectionStatusChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>a7d88ffa4f786c1ece02ca8028ef7ac1c</anchor>
      <arglist>(bool isNowSelected)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>changed</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>a384f95e74f64ddb73d57e97aa77d83d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectableAboutToBeDeleted</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>a3181dd86e8a8ab1916b7f14aeb4dacf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>aa2f32a79ef1047f187e8de7f698edc98</anchor>
      <arglist>(SelectableListener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>a6b48e1edceb420aad5092b2456762b5a</anchor>
      <arglist>(SelectableListener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSelectableListener</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>a85c66869547a4c296dbbaf6235da3868</anchor>
      <arglist>(SelectableListener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSelectableListener</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>add3864216a42878add1d89b7c6238a13</anchor>
      <arglist>(SelectableListener *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cancelAnyPendingUpdates</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>a4143a28e79cb00a2ac894179bc94227a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deselect</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>a722f2376b9558ee3626175ca52618027</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>propertiesChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>a30066b44ca3e672649a13f73010ad411</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyListenersOfDeletion</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>a6b5bd60f9d8b2374f0049a0ff8fb4ecb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WeakRef</type>
      <name>getWeakRef</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>a46574158f600ae6e96d1154637cb7d99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>a4d21b76276d91d8514f5b28a953a3a2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isSelectableValid</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>a32f0907f0ea28337a2512b8d4623e1ae</anchor>
      <arglist>(const Selectable *) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>WeakRef::Master</type>
      <name>masterReference</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>ad81a2da6e4b00b35d4e49464bde81745</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend struct</type>
      <name>SelectableUpdateTimer</name>
      <anchorfile>classtracktion_1_1engine_1_1Selectable.html</anchorfile>
      <anchor>a51cda80856015bb27c8bea46370e6e22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SelectableClass</name>
    <filename>classtracktion_1_1engine_1_1SelectableClass.html</filename>
    <class kind="struct">tracktion::engine::SelectableClass::AddClipboardEntryParams</class>
    <class kind="struct">tracktion::engine::SelectableClass::ClassInstance</class>
    <class kind="struct">tracktion::engine::SelectableClass::ClassInstanceBase</class>
    <class kind="struct">tracktion::engine::SelectableClass::DeleteSelectedParams</class>
    <class kind="struct">tracktion::engine::SelectableClass::SelectOtherObjectsParams</class>
    <member kind="enumeration">
      <type></type>
      <name>Relationship</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClass.html</anchorfile>
      <anchor>a200aab7124e35fb928b511a41b71c18a</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1SelectableClass.html" anchor="a200aab7124e35fb928b511a41b71c18aa3e6d42b1a85f907c84a3441ac16530d4">moveUp</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1SelectableClass.html" anchor="a200aab7124e35fb928b511a41b71c18aaeb49ef73b67efad2244f381785cbbe5f">moveDown</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1SelectableClass.html" anchor="a200aab7124e35fb928b511a41b71c18aab88578f049997f95e33ec4dbdc0d4bcc">moveLeft</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1SelectableClass.html" anchor="a200aab7124e35fb928b511a41b71c18aa0ad4a1c5f4904c3e8a6ffac98fb4fad3">moveRight</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1SelectableClass.html" anchor="a200aab7124e35fb928b511a41b71c18aa44aeb6a4fdd9248f6e796dcf9ea54626">moveToHome</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1SelectableClass.html" anchor="a200aab7124e35fb928b511a41b71c18aaeba59aa9190c26d6ce287a7864071d7b">moveToEnd</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1SelectableClass.html" anchor="a200aab7124e35fb928b511a41b71c18aad40dca8f15a41825a96e2d6969673297">selectAll</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectableClass</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClass.html</anchorfile>
      <anchor>a3244239a843be33d9a72022cdad7de10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SelectableClass</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClass.html</anchorfile>
      <anchor>a4b641d22e6bbf668b4ea2d4374134efb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::String</type>
      <name>getDescriptionOfSelectedGroup</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClass.html</anchorfile>
      <anchor>aa2d6a1cd2e5014bdd7281212225bedb6</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canBeSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClass.html</anchorfile>
      <anchor>a619a375534cf2a15f51be51bd731d18c</anchor>
      <arglist>(const Selectable &amp;object)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canClassesBeSelectedAtTheSameTime</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClass.html</anchorfile>
      <anchor>ad255f3b65f61a6f5ae0b821bd9022ee6</anchor>
      <arglist>(SelectableClass *otherClass)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canObjectsBeSelectedAtTheSameTime</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClass.html</anchorfile>
      <anchor>aeaa6d17a4f31153536d11349a6b37808</anchor>
      <arglist>(Selectable &amp;object1, Selectable &amp;object2)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addClipboardEntriesFor</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClass.html</anchorfile>
      <anchor>aebf2df167acdc2700f1faa8d27bd8e23</anchor>
      <arglist>(AddClipboardEntryParams &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deleteSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClass.html</anchorfile>
      <anchor>a905a0cbadabe2ee1f70ca297f0abe098</anchor>
      <arglist>(const DeleteSelectedParams &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>pasteClipboard</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClass.html</anchorfile>
      <anchor>ab4dd2718387aabbb1bbcfb4700e74657</anchor>
      <arglist>(const SelectableList &amp;currentlySelectedItems, int editViewID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canCutSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClass.html</anchorfile>
      <anchor>ac2317bff41f0d8e19789cee842ff071c</anchor>
      <arglist>(const SelectableList &amp;selectedObjects)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectOtherObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClass.html</anchorfile>
      <anchor>a4af1ccc8e91ba7e4735e7ea7d55e303a</anchor>
      <arglist>(const SelectOtherObjectsParams &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>keepSelectedObjectOnScreen</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClass.html</anchorfile>
      <anchor>a6bf14010cc025e56a2b9cbfb3d6545d3</anchor>
      <arglist>(const SelectableList &amp;currentlySelectedObjects)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SelectableClass *</type>
      <name>findClassFor</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClass.html</anchorfile>
      <anchor>abb994b0445e75acf04e76ddb548825bb</anchor>
      <arglist>(const Selectable &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SelectableClass *</type>
      <name>findClassFor</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClass.html</anchorfile>
      <anchor>ae96b4a2a5c68f8a59555ba8bffaf1d73</anchor>
      <arglist>(const Selectable *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SelectableClass *</type>
      <name>findClassFor</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClass.html</anchorfile>
      <anchor>a76f7d41bf3a392c086dabcb55e752176</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>areAllObjectsOfUniformType</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClass.html</anchorfile>
      <anchor>a7b7097fca4cf01114b12dc127c156af7</anchor>
      <arglist>(const SelectableList &amp;selectedObjects)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SelectableClassWithPan</name>
    <filename>classtracktion_1_1engine_1_1SelectableClassWithPan.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SelectableClassWithPan</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClassWithPan.html</anchorfile>
      <anchor>a55ef09a59d33e041b3c764ea95c1893c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPan</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClassWithPan.html</anchorfile>
      <anchor>a7700588b86097a1c8b4ecee225b03fb8</anchor>
      <arglist>(const SelectableList &amp;, float pan, SelectionManager *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>getPan</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClassWithPan.html</anchorfile>
      <anchor>ae0ec4591286956eba4d9b1e2778405fe</anchor>
      <arglist>(const SelectableList &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetPan</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClassWithPan.html</anchorfile>
      <anchor>a53124427801d116f117bf8fbccdc2a51</anchor>
      <arglist>(const SelectableList &amp;)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SelectableClassWithVolume</name>
    <filename>classtracktion_1_1engine_1_1SelectableClassWithVolume.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SelectableClassWithVolume</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClassWithVolume.html</anchorfile>
      <anchor>ab06f950a5eabc324f80c7082cfdf3b8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVolumeDB</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClassWithVolume.html</anchorfile>
      <anchor>a032635771abb2720ef0ae03beafe1fa4</anchor>
      <arglist>(const SelectableList &amp;, float dB, SelectionManager *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>getVolumeDB</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClassWithVolume.html</anchorfile>
      <anchor>a1243d8fffed8ae7be72076562a0cdeff</anchor>
      <arglist>(const SelectableList &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetVolume</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableClassWithVolume.html</anchorfile>
      <anchor>a4a32674bc34148c99fc1145d10e9bbab</anchor>
      <arglist>(const SelectableList &amp;)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::SelectableList</name>
    <filename>structtracktion_1_1engine_1_1SelectableList.html</filename>
    <member kind="typedef">
      <type>juce::Array&lt; Selectable * &gt;::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>aa0e5fa7a2aa62bd2db3d6103e2234a38</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectableList</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>adf686add09047ec2cf28ffc5f0123524</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectableList</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>adef26967cebee430a854251d35b96622</anchor>
      <arglist>(const std::initializer_list&lt; Selectable * &gt; &amp;initialItems)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectableList</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a08a010e9a22961ae214de5d2b4a18979</anchor>
      <arglist>(const juce::Array&lt; SelectableType * &gt; &amp;initialItems)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectableList</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a14ca22063cb3a24c7a5036808d00fc39</anchor>
      <arglist>(const juce::ReferenceCountedArray&lt; SelectableType &gt; &amp;initialItems)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectableList</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>adc4887ce2a102ddf87cc0245b92aaba7</anchor>
      <arglist>(const std::vector&lt; SelectableType * &gt; &amp;initialItems)</arglist>
    </member>
    <member kind="function">
      <type>SelectableClass *</type>
      <name>getSelectableClass</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a54b7a3e0d87fd291f0a40b0dcb1bd74d</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Selectable *, SelectableClass * &gt;</type>
      <name>getSelectableAndClass</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a8a4a89267a725892380b3abbd2306eac</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; SubclassType * &gt;</type>
      <name>getItemsOfType</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a7ae83a3d81a4cd54e97d8db59780bc10</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SubclassType *</type>
      <name>getFirstOfType</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a519b877f976248e5d929cc6d6b84d29a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsType</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a9c3d68047bad5df21b450327cad686c1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>aa8dae0fd8e5f7db2b32e55dde5ffd529</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a1ade5b3dc9fce0acedcab912375042aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNotEmpty</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a247c57ad6b1709abb8689f5201264b7a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Selectable **</type>
      <name>begin</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a37c4b6948d81acd38ddd79940fa32ed9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Selectable *const  *</type>
      <name>begin</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a59ea1f47679b3b563031940573eca151</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Selectable **</type>
      <name>end</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a9db24c49c834fbaa94fb4ef876507668</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Selectable *const  *</type>
      <name>end</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a70ee2312ebf3a25d1bb8cd67070c3de1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Selectable **</type>
      <name>data</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a9ec1ab50f14d0525ce8f47d211af7f6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Selectable *const  *</type>
      <name>data</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a27ecba5910203ff875ad05e5e4f64108</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Selectable *</type>
      <name>operator[]</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a4f776695bcfd920313a3939bef959b46</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>Selectable *</type>
      <name>getUnchecked</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a2a4e5f69531737a31f28332dffffc7a2</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>Selectable *</type>
      <name>getFirst</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a5bf38e14e6eb1ab38047e3d3473bad95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Selectable *</type>
      <name>getLast</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a8a15857fcdc0fec53eb45f65bd571d79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addArray</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>ae3362a942efd36c222380bba14a07843</anchor>
      <arglist>(const OtherArrayType &amp;arrayToAddFrom, int startIndex=0, int numElementsToAdd=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeArray</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a56faea2a2c9b1d0ae89ddaa6b1c69c20</anchor>
      <arglist>(const OtherArrayType &amp;arrayToMergeFrom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a9d21ca72ad49b70c92f611118a077b3b</anchor>
      <arglist>(Selectable *newElement)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addIfNotAlreadyThere</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a7ad91ac904e5c1b2a5b0b5647182aa58</anchor>
      <arglist>(Selectable *newElement)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a9eaccb07b03e0c495643f2591f891ff3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a8bf334577ffc624385b77b8b20ab2def</anchor>
      <arglist>(int indexToRemove)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>removeAllInstancesOf</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>aa7a3724a9244cb68f4b3898b05448863</anchor>
      <arglist>(Selectable *s)</arglist>
    </member>
    <member kind="function">
      <type>Selectable *</type>
      <name>removeAndReturn</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>accee6d56a67261f426ba1445fe30a57a</anchor>
      <arglist>(int indexToRemove)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a1e8b41da3c8fed2314e8d7701f3d84b4</anchor>
      <arglist>(Selectable *elementToLookFor) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a3bb2cbb819f038a1c90dfed351da694c</anchor>
      <arglist>(Selectable *elementToLookFor) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a25e9354cb6d867600087f7a9d61f810c</anchor>
      <arglist>(const OtherArrayType &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a0e48fbaf511ae4bb3821421bf3fcc781</anchor>
      <arglist>(const OtherArrayType &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a2b3b32015a36fc711db5205e125b848d</anchor>
      <arglist>(const SelectableList &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>abe80c2c03fbf3a3e166d79152c01cab1</anchor>
      <arglist>(const SelectableList &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>const juce::DummyCriticalSection &amp;</type>
      <name>getLock</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableList.html</anchorfile>
      <anchor>a13a77b68090df2437bebfc10a3f96a85</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SelectableListener</name>
    <filename>classtracktion_1_1engine_1_1SelectableListener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SelectableListener</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableListener.html</anchorfile>
      <anchor>a7de53a2e57d93b3464c498b977f796f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>selectableObjectChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableListener.html</anchorfile>
      <anchor>a09d35da7355ecdba0960b4bcc99b555b</anchor>
      <arglist>(Selectable *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>selectableObjectAboutToBeDeleted</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectableListener.html</anchorfile>
      <anchor>a7afaf317f193a872fb3f15676397fa2b</anchor>
      <arglist>(Selectable *)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SelectedMidiEvents</name>
    <filename>classtracktion_1_1engine_1_1SelectedMidiEvents.html</filename>
    <base>tracktion::engine::Selectable</base>
    <member kind="function">
      <type></type>
      <name>SelectedMidiEvents</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a8ccda86cbb86e58d0d2bd233355351f9</anchor>
      <arglist>(MidiClip &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SelectedMidiEvents</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a9f5f13996ffde14166d3c5e2796a773c</anchor>
      <arglist>(juce::Array&lt; MidiClip * &gt;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SelectedMidiEvents</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a87a89c1d77b3a22ca5220df11ca2dec2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Edit &amp;</type>
      <name>getEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>afc8a6bb67933983e0680ae57f0edc02f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MidiClip *</type>
      <name>clipForEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>aaed8a2bf896b75653f8288650b74fdf1</anchor>
      <arglist>(MidiNote *) const</arglist>
    </member>
    <member kind="function">
      <type>MidiClip *</type>
      <name>clipForEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a3f1db1b2b1cf50f161175c04f02f408f</anchor>
      <arglist>(MidiSysexEvent *) const</arglist>
    </member>
    <member kind="function">
      <type>MidiClip *</type>
      <name>clipForEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a90150f7ba60256fc74b55d1be5c982f1</anchor>
      <arglist>(MidiControllerEvent *) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSelectedEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a2bd6d49099e6dc863ae6780d1e45ef4a</anchor>
      <arglist>(MidiNote *, bool addToCurrent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSelectedEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a9ea8d3eff035cf6322b0409bcc440b0c</anchor>
      <arglist>(MidiSysexEvent *, bool addToCurrent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSelectedEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a0b0d9d9d5e86b45f75f6c04ae633159d</anchor>
      <arglist>(MidiControllerEvent *, bool addToCurrent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSelectedEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a9de425f948531b5d9a668c2f3832f5d5</anchor>
      <arglist>(MidiNote *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSelectedEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>aca415f3d8252a23e0b243b3415e39740</anchor>
      <arglist>(MidiSysexEvent *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSelectedEvent</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>afa948518a219d0ddfb8f912eb37c8c6c</anchor>
      <arglist>(MidiControllerEvent *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>af6c53ce5bbfbd1ce844d70a1923c98af</anchor>
      <arglist>(SelectionManager &amp;, const juce::Array&lt; MidiNote * &gt; &amp;, bool addToSelection, bool allowMixedSelection=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>ad78be3d308631c1dbf5683562dc5b66f</anchor>
      <arglist>(SelectionManager &amp;, const juce::Array&lt; MidiSysexEvent * &gt; &amp;, bool addToSelection, bool allowMixedSelection=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a7158d2c3d4e65b670a3972bcf020d15a</anchor>
      <arglist>(SelectionManager &amp;, const juce::Array&lt; MidiControllerEvent * &gt; &amp;, bool addToSelection, bool allowMixedSelection=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>aea5211fa8b2c1207013081e6b9ed9bde</anchor>
      <arglist>(const MidiNote *) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a5e56ce45dc56ac801ef447d9311249f1</anchor>
      <arglist>(const MidiSysexEvent *) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a22cdf31018d3fb53ff5ad67c9bbbc06f</anchor>
      <arglist>(const MidiControllerEvent *) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>ab213d29d831cb25c36b8d766a263a7fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>anythingSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a5bb90bbbee3f3d0da513766fb5afdfb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; MidiNote * &gt; &amp;</type>
      <name>getSelectedNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>ad6beece40996695a84e697737006de52</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; MidiSysexEvent * &gt; &amp;</type>
      <name>getSelectedSysexes</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>acdec519ae5ac039f9c3beb1c430d36e2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; MidiControllerEvent * &gt; &amp;</type>
      <name>getSelectedControllers</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a3065937f545e987a6bdb1af1978507a0</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveEvents</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a134da54cce84941fdc75e8e6fae8ccc9</anchor>
      <arglist>(TimeDuration deltaStart, TimeDuration deltaLength, int deltaNote)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoteLengths</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a0d229d69dd9247e714d4f31dc767f8da</anchor>
      <arglist>(BeatDuration newLength)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVelocities</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a4b6af723af48a3eefdcb3147470e629b</anchor>
      <arglist>(int newVelocity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeColour</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>ab2d10238205c67800ecf780ec57172b8</anchor>
      <arglist>(uint8_t newColour)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudge</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a75b38df5e4e464fe1a8530c282b0d864</anchor>
      <arglist>(TimecodeSnapType, int leftRight, int upDown)</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>getSelectedRange</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a613509790865c3b9b09a671db6c357ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a11afc91ca9e5847479b37f32cfa8d686</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectionStatusChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a935c591c5adf48e38b5601d79e24e8dd</anchor>
      <arglist>(bool isNowSelected) override</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; MidiClip * &gt; &amp;</type>
      <name>getClips</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a7fddede17130bd4e7aebd9c6c4cc9a7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClips</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>aa2a46ad6dd0653b3bd996b85c78123b1</anchor>
      <arglist>(juce::Array&lt; MidiClip * &gt; clips)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>moveControllerData</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a1c797b3d0032bb7982ae6ad0fc094f7f</anchor>
      <arglist>(const juce::Array&lt; MidiClip * &gt; &amp;clips, const juce::Array&lt; MidiControllerEvent * &gt; *onlyTheseEvents, BeatDuration deltaBeats, TimePosition startTime, TimePosition endTime, bool makeCopy)</arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; bool()&gt;</type>
      <name>shouldLockControllerToNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectedMidiEvents.html</anchorfile>
      <anchor>a693a84f080b75a3a39657aef701fa9e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SelectionManager</name>
    <filename>classtracktion_1_1engine_1_1SelectionManager.html</filename>
    <base protection="private">tracktion::engine::SelectableListener</base>
    <class kind="struct">tracktion::engine::SelectionManager::ChangedSelectionDetector</class>
    <class kind="struct">tracktion::engine::SelectionManager::ComponentWithSelectionManager</class>
    <class kind="struct">tracktion::engine::SelectionManager::Iterator</class>
    <class kind="struct">tracktion::engine::SelectionManager::ScopedSelectionState</class>
    <member kind="function">
      <type></type>
      <name>SelectionManager</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>ac822af99af65ac32cc90f36b794a32d0</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SelectionManager</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>ad3606f411dca02a5eb3857db12fdbdc4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumObjectsSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a40d4af38b84310a7318b2b1214365753</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Selectable *</type>
      <name>getSelectedObject</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a75e7125f109d442de0b80a04d75f16d4</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>aac25fc437d176b8d3485f83c13ddb78f</anchor>
      <arglist>(const Selectable *) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a7a3e073388d630aef75b297f43099ffd</anchor>
      <arglist>(const Selectable &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>const SelectableList &amp;</type>
      <name>getSelectedObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>ad93518a67198f5ed87f47ceb2b46cb8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SelectableClass *</type>
      <name>getFirstSelectableClass</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a24b6393925100ec6bab0c3867549cd72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectOnly</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a0c0c287ae298ef1e630284adfd20c383</anchor>
      <arglist>(Selectable *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectOnly</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>acc4620f044d64a22959f9a13d6bd39cd</anchor>
      <arglist>(Selectable &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToSelection</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a776a5e09277c2a8d33915e968f05e92b</anchor>
      <arglist>(Selectable *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToSelection</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a83354b273637db8958f5c09b87c201ff</anchor>
      <arglist>(Selectable &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>ac324a5bb1abb5c652677fdf143728ff3</anchor>
      <arglist>(Selectable *, bool addToCurrentSelection)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>af5e86a865c27a21f70fe308a3dee851f</anchor>
      <arglist>(Selectable &amp;, bool addToCurrentSelection)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>select</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a05a0259534434fe5307f276fd1d36da5</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deselectAll</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>aad39b8b5aca649827dfc4e53a9b1898a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deselect</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>ad48d91105dfd4f299ac85c469b332ef4</anchor>
      <arglist>(Selectable *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectOtherObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a9d4af7c91da14c1fb0b9ed705331b6fe</anchor>
      <arglist>(SelectableClass::Relationship, bool keepOldItemsSelected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsType</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a488e6c1dfffdf9bf53b47d194ab67c69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumObjectsSelectedOfType</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a104e41b96126e1a1c2674f1d6b720359</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; SelectableClass * &gt;</type>
      <name>getItemsOfType</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a1981990c3ba3eccd66592a559cff9edf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SelectableClass *</type>
      <name>getFirstItemOfType</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a890b7bad02214107158f3e0036ebb189</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a5c008f170f4f3b6ef5f2da07f7930ba7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copySelected</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>aa9f37fa662c0171f18612b7f9751e3d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cutSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>abd928093a400c71397b882df37b08b8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>aea7affcc6d700ddf63028abd1a33cca1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>keepSelectedObjectsOnScreen</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>afa17a98cf4a815d5702c372ac8f1303c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshPropertyPanel</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a73895e62651b9c71d2322474252bcb87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableObjectChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a4b50b17f2e778ddc61c5981cb4f757c1</anchor>
      <arglist>(Selectable *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>selectableObjectAboutToBeDeleted</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>abd07be29e1460fdba790f3ded4af3527</anchor>
      <arglist>(Selectable *) override</arglist>
    </member>
    <member kind="function">
      <type>Edit *</type>
      <name>getEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a1b1d0136522feadf8a3e9d09971d9696</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>refreshAllPropertyPanels</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a7e72b0f358d05bb3c37b350a960732fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>refreshAllPropertyPanelsShowing</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>addbbc1a6ff0db3e3d70e4b0d26feddbe</anchor>
      <arglist>(Selectable &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deselectAllFromAllWindows</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>ae95258eaffe330c30c14457e8c47ad01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SelectionManager *</type>
      <name>findSelectionManager</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a20824bf3d64632efb74e07f4c578ef8b</anchor>
      <arglist>(const juce::Component *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SelectionManager *</type>
      <name>findSelectionManager</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a58e8116409818174f92bea1e2731580a</anchor>
      <arglist>(const juce::Component &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SelectionManager *</type>
      <name>findSelectionManagerContaining</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a9471a86459d1ef6b4ee118c58710ee55</anchor>
      <arglist>(const Selectable *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SelectionManager *</type>
      <name>findSelectionManagerContaining</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>afd068c8b11a13ccf6249c73b05ff6d50</anchor>
      <arglist>(const Selectable &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>selectionChangeCount</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>ae2b1ee516d3e897dff301b8c2bb5d3b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SafeSelectable&lt; Edit &gt;</type>
      <name>edit</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a8c03b7da432f6a33343e2699931f0210</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>editViewID</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>aebbda53c338bed55330fece606b82230</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditInsertPoint *</type>
      <name>insertPoint</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>af50d664a5bdad0db5bdc8bfb238f1be5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>aa6c93d742befbf5725292a0d5d8a2979</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Selectable</name>
      <anchorfile>classtracktion_1_1engine_1_1SelectionManager.html</anchorfile>
      <anchor>a7c249580575f05f752871a291926d328</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::SelectableClass::SelectOtherObjectsParams</name>
    <filename>structtracktion_1_1engine_1_1SelectableClass_1_1SelectOtherObjectsParams.html</filename>
    <member kind="variable">
      <type>SelectionManager &amp;</type>
      <name>selectionManager</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableClass_1_1SelectOtherObjectsParams.html</anchorfile>
      <anchor>a6c03a4c16c7ca0c770c4661c8edf309c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SelectableList</type>
      <name>currentlySelectedItems</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableClass_1_1SelectOtherObjectsParams.html</anchorfile>
      <anchor>a61ce2c1beafd44e6abc8aef8477faac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Relationship</type>
      <name>relationship</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableClass_1_1SelectOtherObjectsParams.html</anchorfile>
      <anchor>af4b124ae9186230057eab2e1082b48e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>keepExistingItemsSelected</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableClass_1_1SelectOtherObjectsParams.html</anchorfile>
      <anchor>a583fba5006e57819f0f1b7798f84c398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>editViewID</name>
      <anchorfile>structtracktion_1_1engine_1_1SelectableClass_1_1SelectOtherObjectsParams.html</anchorfile>
      <anchor>a957d56e06ded32f186530b4e138ccc56</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::Semaphore</name>
    <filename>classtracktion_1_1graph_1_1Semaphore.html</filename>
    <member kind="function">
      <type></type>
      <name>Semaphore</name>
      <anchorfile>classtracktion_1_1graph_1_1Semaphore.html</anchorfile>
      <anchor>aa94e1d08b996535c4b98097cbae1d772</anchor>
      <arglist>(int initialCount=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Semaphore</name>
      <anchorfile>classtracktion_1_1graph_1_1Semaphore.html</anchorfile>
      <anchor>a8fc31c4283f1c0288ca73bcd58d7bb7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wait</name>
      <anchorfile>classtracktion_1_1graph_1_1Semaphore.html</anchorfile>
      <anchor>acafcace9e7036ebf46a5efb9afeb1476</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_wait</name>
      <anchorfile>classtracktion_1_1graph_1_1Semaphore.html</anchorfile>
      <anchor>a093a5e3777504fbc085d98bfe0b7a87c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>timed_wait</name>
      <anchorfile>classtracktion_1_1graph_1_1Semaphore.html</anchorfile>
      <anchor>a19ab231b256a66f5f7655d3514d4ea81</anchor>
      <arglist>(std::uint64_t usecs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>signal</name>
      <anchorfile>classtracktion_1_1graph_1_1Semaphore.html</anchorfile>
      <anchor>a1588fe4f64ff1f071ce798114ab1fa28</anchor>
      <arglist>(int count=1)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::SendNode</name>
    <filename>classtracktion_1_1graph_1_1SendNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>SendNode</name>
      <anchorfile>classtracktion_1_1graph_1_1SendNode.html</anchorfile>
      <anchor>ac9ef4834a1c09d475cb9f2592eb97d5b</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; inputNode, int busIDToUse, std::function&lt; float()&gt; getGainFunc=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBusID</name>
      <anchorfile>classtracktion_1_1graph_1_1SendNode.html</anchorfile>
      <anchor>aafb2fe8683abcb2642a9f73eb29993dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::function&lt; float()&gt;</type>
      <name>getGainFunction</name>
      <anchorfile>classtracktion_1_1graph_1_1SendNode.html</anchorfile>
      <anchor>a3e31e69974ced98e1615d5b4be9e1f75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1graph_1_1SendNode.html</anchorfile>
      <anchor>acb5bcf2b3d584f75d6648c69f796a331</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1graph_1_1SendNode.html</anchorfile>
      <anchor>a8dc02730a87aabe34be93f236bb9d0b9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1graph_1_1SendNode.html</anchorfile>
      <anchor>abd63d6cd951a030cb45b2ddeb209afa4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1SendNode.html</anchorfile>
      <anchor>a617f53b7d47a949d28802de00b3c2fa2</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SharedLevelMeasurer</name>
    <filename>classtracktion_1_1engine_1_1SharedLevelMeasurer.html</filename>
    <base>tracktion::engine::LevelMeasurer</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; SharedLevelMeasurer &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedLevelMeasurer.html</anchorfile>
      <anchor>a7f5c7dc9e06a5e28f24678b0cce1827a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startNextBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedLevelMeasurer.html</anchorfile>
      <anchor>a2613ea993fdbd50560aa70bf94401398</anchor>
      <arglist>(double streamTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSize</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedLevelMeasurer.html</anchorfile>
      <anchor>ab43f5b1b3ef7964678f98a5024900dee</anchor>
      <arglist>(int channels, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedLevelMeasurer.html</anchorfile>
      <anchor>aa3b7f10dab2e148e424bcb0d2313c637</anchor>
      <arglist>(const juce::AudioBuffer&lt; float &gt; &amp;inBuffer, int startSample, int numSamples)</arglist>
    </member>
    <member kind="variable">
      <type>juce::SpinLock</type>
      <name>spinLock</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedLevelMeasurer.html</anchorfile>
      <anchor>abd5240826e3f9f24a84cb0e5619da74e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lastStreamTime</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedLevelMeasurer.html</anchorfile>
      <anchor>a2051285a1d0dee1e03b18dfef92e1565</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::AudioBuffer&lt; float &gt;</type>
      <name>sumBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedLevelMeasurer.html</anchorfile>
      <anchor>afffca1fc976a92d3dad3039cb6d760d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SharedLevelMeasuringNode</name>
    <filename>classtracktion_1_1engine_1_1SharedLevelMeasuringNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>SharedLevelMeasuringNode</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedLevelMeasuringNode.html</anchorfile>
      <anchor>a72507d269e0e343002f83f0d405b3c21</anchor>
      <arglist>(SharedLevelMeasurer::Ptr, std::unique_ptr&lt; Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedLevelMeasuringNode.html</anchorfile>
      <anchor>af864783b7174d005f435636b71ac8f54</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedLevelMeasuringNode.html</anchorfile>
      <anchor>adcbf9a7a6d2d4742ecc92a899605224f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedLevelMeasuringNode.html</anchorfile>
      <anchor>ac11b165a510186205d0a7194a4d13f02</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedLevelMeasuringNode.html</anchorfile>
      <anchor>abeedd64346e8b4284e11f6713fc8c150</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prefetchBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedLevelMeasuringNode.html</anchorfile>
      <anchor>ac486fd313d4806b99b1ccd57fbfdd986</anchor>
      <arglist>(juce::Range&lt; int64_t &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedLevelMeasuringNode.html</anchorfile>
      <anchor>a73590ff893423c5fd3f487573733c32e</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SharedTimer</name>
    <filename>classtracktion_1_1engine_1_1SharedTimer.html</filename>
    <class kind="struct">tracktion::engine::SharedTimer::Listener</class>
    <member kind="function">
      <type></type>
      <name>SharedTimer</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedTimer.html</anchorfile>
      <anchor>ab616751734081eec7b0c1d219cccf174</anchor>
      <arglist>(std::chrono::duration&lt; Type &gt; interval)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SharedTimer</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedTimer.html</anchorfile>
      <anchor>abf761611326432a81fca30dd3cbb1b57</anchor>
      <arglist>(HertzTag, int frequencyInHz)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedTimer.html</anchorfile>
      <anchor>a05dd2ad98abfa6c824dc31d94bea58d6</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedTimer.html</anchorfile>
      <anchor>a824fcc3a3eb85415760ce6448b15e227</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SharedTimer</type>
      <name>fromFrequency</name>
      <anchorfile>classtracktion_1_1engine_1_1SharedTimer.html</anchorfile>
      <anchor>afe6ea9bdcb6d4e52b1f3ad36c197213a</anchor>
      <arglist>(int frequencyInHz)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::SilentNode</name>
    <filename>classtracktion_1_1graph_1_1SilentNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>SilentNode</name>
      <anchorfile>classtracktion_1_1graph_1_1SilentNode.html</anchorfile>
      <anchor>af67792d7bcd85f618bec1d7edf0f160a</anchor>
      <arglist>(int numChannelsToUse=1)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1graph_1_1SilentNode.html</anchorfile>
      <anchor>af636b9c277d4a6fa9e81ac4f24d9bb7c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1graph_1_1SilentNode.html</anchorfile>
      <anchor>a5d09a23b1e848c50fe4d1fa39391246b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1graph_1_1SilentNode.html</anchorfile>
      <anchor>aac58d5a4d6d4716bcc4b1ab5d40ee087</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1SilentNode.html</anchorfile>
      <anchor>a3aae9bf02618ee794983691f4c7b3087</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SimpleLFO</name>
    <filename>classtracktion_1_1engine_1_1SimpleLFO.html</filename>
    <class kind="struct">tracktion::engine::SimpleLFO::Parameters</class>
    <member kind="enumeration">
      <type></type>
      <name>WaveShape</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>ad65ef55cc6b333f872b86d56e8c4f71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>ad65ef55cc6b333f872b86d56e8c4f71bafa5f86167f83bcdfcfe25b9f43179910</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sine</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>ad65ef55cc6b333f872b86d56e8c4f71ba65df9f96ed2cedbab9cbe640fd587b69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>triangle</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>ad65ef55cc6b333f872b86d56e8c4f71ba06b95e192143222de1f6d0f90c36ae28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sawUp</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>ad65ef55cc6b333f872b86d56e8c4f71ba21e0abf0057429273fa5ff94a4c16158</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sawDown</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>ad65ef55cc6b333f872b86d56e8c4f71ba17dd03dbf02c18f2e97cebe59d333d90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>square</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>ad65ef55cc6b333f872b86d56e8c4f71ba7fce98360a9982c6d1dcef64083872f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>random</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>ad65ef55cc6b333f872b86d56e8c4f71ba2cc0357bb6b4ef82a4b06b56ed892d55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>none</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>ad65ef55cc6b333f872b86d56e8c4f71bafa5f86167f83bcdfcfe25b9f43179910</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sine</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>ad65ef55cc6b333f872b86d56e8c4f71ba65df9f96ed2cedbab9cbe640fd587b69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>triangle</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>ad65ef55cc6b333f872b86d56e8c4f71ba06b95e192143222de1f6d0f90c36ae28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sawUp</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>ad65ef55cc6b333f872b86d56e8c4f71ba21e0abf0057429273fa5ff94a4c16158</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sawDown</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>ad65ef55cc6b333f872b86d56e8c4f71ba17dd03dbf02c18f2e97cebe59d333d90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>square</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>ad65ef55cc6b333f872b86d56e8c4f71ba7fce98360a9982c6d1dcef64083872f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>random</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>ad65ef55cc6b333f872b86d56e8c4f71ba2cc0357bb6b4ef82a4b06b56ed892d55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>a2eb63ff17ba338d7ec2b28a1de50dcb6</anchor>
      <arglist>(double newSampleRate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>a3a28ef7bf3764d641aac69d8900c5078</anchor>
      <arglist>(Parameters newParameters)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>a0df8bb5d8677c370798fff85b82c8be7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>aaa3003b779e49b36bdd394a9fb2bdd97</anchor>
      <arglist>(int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion_1_1engine_1_1SimpleLFO.html</anchorfile>
      <anchor>ae07431ba4eece7107ff3efb87e7108aa</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::SimpleNodePlayer</name>
    <filename>classtracktion_1_1graph_1_1SimpleNodePlayer.html</filename>
    <member kind="function">
      <type></type>
      <name>SimpleNodePlayer</name>
      <anchorfile>classtracktion_1_1graph_1_1SimpleNodePlayer.html</anchorfile>
      <anchor>a21fd35def986ca78bec9fea2e0ebe183</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; nodeToPlay, double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1SimpleNodePlayer.html</anchorfile>
      <anchor>a3015701850a5d4a9eda74945962586ac</anchor>
      <arglist>(const Node::ProcessContext &amp;pc)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::test_utilities::SineOscillator</name>
    <filename>structtracktion_1_1graph_1_1test__utilities_1_1SineOscillator.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1SineOscillator.html</anchorfile>
      <anchor>aafd8eb9ed3cccedd815fb69dc36214ae</anchor>
      <arglist>(float frequency, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getNext</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1SineOscillator.html</anchorfile>
      <anchor>a104c17e44f3b13109879140c2e21aab1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>phase</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1SineOscillator.html</anchorfile>
      <anchor>ac0c37b236ac884b02e0fd279a5c8f104</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>phaseIncrement</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1SineOscillator.html</anchorfile>
      <anchor>ac3e3724dde6bb94920e84e35c48cd0bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SingleInputAudioNode</name>
    <filename>classtracktion_1_1engine_1_1SingleInputAudioNode.html</filename>
    <base>tracktion::engine::AudioNode</base>
    <member kind="function">
      <type></type>
      <name>SingleInputAudioNode</name>
      <anchorfile>classtracktion_1_1engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>abd919b0ad86953c94eac609938b75876</anchor>
      <arglist>(AudioNode *input)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAudioNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>a1551fc624b29b1c12a9197da89efe123</anchor>
      <arglist>(AudioNodeProperties &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>a08b328930e55b4f3b859bbd82cb00ebb</anchor>
      <arglist>(const VisitorFn &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareAudioNodeToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>a8b938e8a295a0f19c02a7a552d81e325</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; Plugin &gt;</type>
      <name>getPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>aa01ebe6581c051c707be8018fb391635</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToRender</name>
      <anchorfile>classtracktion_1_1engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>ab39c87c3c10ac33afbe5e075c5b9374d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>purgeSubNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>afe16ace5db1ebb919ea51993d1794fe0</anchor>
      <arglist>(bool keepAudio, bool keepMidi) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseAudioNodeResources</name>
      <anchorfile>classtracktion_1_1engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>ae03587b3d09a5d75935374273182ca3b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForNextBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>adf0f7f04f9af9b69cd86203b5bcf861a</anchor>
      <arglist>(const AudioRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderOver</name>
      <anchorfile>classtracktion_1_1engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>af3cf7a391311da52d91075371535620e</anchor>
      <arglist>(const AudioRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderAdding</name>
      <anchorfile>classtracktion_1_1engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>a497d7fe29489170cc03f1b9f231ceecd</anchor>
      <arglist>(const AudioRenderContext &amp;) override</arglist>
    </member>
    <member kind="variable">
      <type>const std::unique_ptr&lt; AudioNode &gt;</type>
      <name>input</name>
      <anchorfile>classtracktion_1_1engine_1_1SingleInputAudioNode.html</anchorfile>
      <anchor>a778a058d4644bfcc61d39252705af76b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::SinkNode</name>
    <filename>classtracktion_1_1graph_1_1SinkNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>SinkNode</name>
      <anchorfile>classtracktion_1_1graph_1_1SinkNode.html</anchorfile>
      <anchor>ac630d61e09fed5ecf9943b058b194943</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; inputNode)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1graph_1_1SinkNode.html</anchorfile>
      <anchor>a0842205e099181f203bc687a1e3ec437</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1graph_1_1SinkNode.html</anchorfile>
      <anchor>a590c2dfba0f5e5d657c211a9bc879fb9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1graph_1_1SinkNode.html</anchorfile>
      <anchor>a1a7cf5cea71ece8e9206fcc96fcafe0d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1SinkNode.html</anchorfile>
      <anchor>a386645b4b47f668a914936f048712c1b</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::SinNode</name>
    <filename>classtracktion_1_1graph_1_1SinNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>SinNode</name>
      <anchorfile>classtracktion_1_1graph_1_1SinNode.html</anchorfile>
      <anchor>a29858ca170c41d8ced45d2c699b9c113</anchor>
      <arglist>(float frequencyToUse, int numChannelsToUse=1, size_t nodeIDToUse=0)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1graph_1_1SinNode.html</anchorfile>
      <anchor>a1121df0247f915fa36e010f8bc1d38d9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1graph_1_1SinNode.html</anchorfile>
      <anchor>a17d87624e05604548b037aed1420808c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1graph_1_1SinNode.html</anchorfile>
      <anchor>a785c59fb136c4ec73c751ea49f029e14</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1SinNode.html</anchorfile>
      <anchor>aa83aaaff6bf2b8a33b8f3b0be0f72cfa</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SlotControlNode</name>
    <filename>classtracktion_1_1engine_1_1SlotControlNode.html</filename>
    <base>tracktion::graph::Node</base>
    <base>tracktion::engine::TracktionEngineNode</base>
    <member kind="function">
      <type></type>
      <name>SlotControlNode</name>
      <anchorfile>classtracktion_1_1engine_1_1SlotControlNode.html</anchorfile>
      <anchor>ae9ae869070ec57b244ea6ed0d1bd909d</anchor>
      <arglist>(ProcessState &amp;editProcessState, std::shared_ptr&lt; LaunchHandle &gt;, std::optional&lt; BeatDuration &gt; stopDuration, std::function&lt; void(MonotonicBeat)&gt; stopFunction, EditItemID slotID, std::unique_ptr&lt; Node &gt; input)</arglist>
    </member>
    <member kind="function">
      <type>const LaunchHandle &amp;</type>
      <name>getLaunchHandle</name>
      <anchorfile>classtracktion_1_1engine_1_1SlotControlNode.html</anchorfile>
      <anchor>a87261b997ee1db26dd3a254b1aaca83a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const LaunchHandle *</type>
      <name>getLaunchHandleIfNotUnique</name>
      <anchorfile>classtracktion_1_1engine_1_1SlotControlNode.html</anchorfile>
      <anchor>a9ae1d5eab4b014ca19cbdad19fe17044</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1SlotControlNode.html</anchorfile>
      <anchor>add4406aaa51c27144df0fa091fb0777c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1SlotControlNode.html</anchorfile>
      <anchor>ab5892582cae8c2ad5eaa2a64f37cbd40</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1SlotControlNode.html</anchorfile>
      <anchor>a017425653411ce8b8219b8d38793e620</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1SlotControlNode.html</anchorfile>
      <anchor>a46a730ecd64679d617339848bc1680e1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prefetchBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1SlotControlNode.html</anchorfile>
      <anchor>a32404704cb26493a31d851c718d94208</anchor>
      <arglist>(juce::Range&lt; int64_t &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1SlotControlNode.html</anchorfile>
      <anchor>a48ba212b5bfd1ae96da7fba7ddc9b6e2</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SmartThumbnail</name>
    <filename>classtracktion_1_1engine_1_1SmartThumbnail.html</filename>
    <member kind="function">
      <type></type>
      <name>SmartThumbnail</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>af00770572db138daf58c7fdab7dac83f</anchor>
      <arglist>(Engine &amp;, const AudioFile &amp;, juce::Component &amp;componentToRepaint, Edit *)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SmartThumbnail</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>ad393daab1099deb152368465e679fe86</anchor>
      <arglist>(Engine &amp;, const AudioFile &amp;, juce::Component &amp;componentToRepaint, Edit *, std::unique_ptr&lt; juce::AudioThumbnailBase &gt; thumbnailToUse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SmartThumbnail</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>aa6bf543c2ddab6852a0334fbfcaf21c6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNewFile</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>adf88918e57d69a9d4d169c01025d1bee</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGeneratingProxy</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a55aaf2c4a6847fa079b4f03a9488bd77</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getProxyProgress</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a98fc1ae48fd88c35a5e9660195950a7e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOutOfDate</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>af3804d2b1056b6c59136d5170ef8bf1c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawChannel</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a8d35b3d40f1c5ee4b27dcd8b9e2064d4</anchor>
      <arglist>(juce::Graphics &amp;, juce::Rectangle&lt; int &gt;, TimeRange, int channelNum, float verticalZoomFactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>drawChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a727bec1058147aa81853c7bf187b6e2f</anchor>
      <arglist>(juce::Graphics &amp;, juce::Rectangle&lt; int &gt;, TimeRange, float verticalZoomFactor)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getProportionComplete</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a040100da9115a070bfbb7ff15b71a40c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a57268c02016d0a5b215bef8939f03226</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setSource</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a7435251efbf5c42b3cbc421348cb08d9</anchor>
      <arglist>(juce::InputSource *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReader</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a45c14eaaa93fdf6d78e3b567463f02a7</anchor>
      <arglist>(juce::AudioFormatReader *, juce::int64 hashCode) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>ab35fbb3df6c7d1f9c472f5c1410e46c6</anchor>
      <arglist>(juce::InputStream &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveTo</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a4d67a8e21ade89f6390e8a9a8053668b</anchor>
      <arglist>(juce::OutputStream &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a9c34068f92ef9c123a33e6882b733467</anchor>
      <arglist>() const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTotalLength</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>af60737654d09f6f7a71558246e52777e</anchor>
      <arglist>() const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFullyLoaded</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a10bc47b287b4063870a06e44308ee843</anchor>
      <arglist>() const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>juce::int64</type>
      <name>getNumSamplesFinished</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a7322d73efebb80f65605cd6978767df9</anchor>
      <arglist>() const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getApproximatePeak</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a20893b6f6a0e06b4b9ce3dd705402cfe</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getApproximateMinMax</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a5821a75dcc52b7ea8a303493ca29af96</anchor>
      <arglist>(double startTime, double endTime, int channelIndex, float &amp;minValue, float &amp;maxValue) const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>juce::int64</type>
      <name>getHashCode</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a8dad67885cac1d1cc0437b31bbfdbc28</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>af25035d08afd2b193f10f8a8cffec49f</anchor>
      <arglist>(int numChannels, double sampleRate, juce::int64 totalSamplesInSource) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a441312ad8b985c147bb36bd32a69832a</anchor>
      <arglist>(juce::int64 sampleNumberInSource, const juce::AudioBuffer&lt; float &gt; &amp;, int startOffsetInBuffer, int numSamples) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>audioFileChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>aefacbea5f3f35bef480f9b67a318051c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseFile</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>ae35a6791b4c6ea2f1465c8431d7de948</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a4d5d53b216d2b78b2e91e14007d068bc</anchor>
      <arglist>(bool e)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>areThumbnailsFullyLoaded</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a107e2c4bd1fca7dc6b6c3a69ee77e131</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>AudioFile</type>
      <name>file</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a364c814337aa0e656da575538aeb44a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a27eb82958515698214f2dd9f3180de22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit *const</type>
      <name>edit</name>
      <anchorfile>classtracktion_1_1engine_1_1SmartThumbnail.html</anchorfile>
      <anchor>a547873a65523e34cc1a5ef78829e0341</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SoftwareMidiOutputDevice</name>
    <filename>classtracktion_1_1engine_1_1SoftwareMidiOutputDevice.html</filename>
    <base>tracktion::engine::MidiOutputDevice</base>
    <member kind="function">
      <type></type>
      <name>SoftwareMidiOutputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1SoftwareMidiOutputDevice.html</anchorfile>
      <anchor>a2f895d8dd8e66a7a76dabc5fc3c7c6f4</anchor>
      <arglist>(Engine &amp;e, const juce::String &amp;deviceName)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::SortedValueTreeObjectList</name>
    <filename>structtracktion_1_1engine_1_1SortedValueTreeObjectList.html</filename>
    <templarg></templarg>
    <base protection="protected">tracktion::engine::ValueTreeObjectList</base>
    <member kind="function">
      <type></type>
      <name>SortedValueTreeObjectList</name>
      <anchorfile>structtracktion_1_1engine_1_1SortedValueTreeObjectList.html</anchorfile>
      <anchor>a590072dc1276467b26b97a007295a854</anchor>
      <arglist>(const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sortObjects</name>
      <anchorfile>structtracktion_1_1engine_1_1SortedValueTreeObjectList.html</anchorfile>
      <anchor>ac2fbe5f767928898d91aa088a7961fda</anchor>
      <arglist>(juce::Array&lt; ObjectType * &gt; &amp;objectsToBeSorted) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSortableProperty</name>
      <anchorfile>structtracktion_1_1engine_1_1SortedValueTreeObjectList.html</anchorfile>
      <anchor>a7661ebd4f6f9d110ec50e04b772f7dc3</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>objectsAreSorted</name>
      <anchorfile>structtracktion_1_1engine_1_1SortedValueTreeObjectList.html</anchorfile>
      <anchor>ac5bf8987276648092e988e6a3e35d7cb</anchor>
      <arglist>(const ObjectType &amp;first, const ObjectType &amp;second)=0</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; ObjectType * &gt; &amp;</type>
      <name>getSortedObjects</name>
      <anchorfile>structtracktion_1_1engine_1_1SortedValueTreeObjectList.html</anchorfile>
      <anchor>ad5929522c2c7df9d649c407ba3dc2541</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newObjectAdded</name>
      <anchorfile>structtracktion_1_1engine_1_1SortedValueTreeObjectList.html</anchorfile>
      <anchor>a306b764622bd2fb531f34a1da91ecbc1</anchor>
      <arglist>(ObjectType *o) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectOrderChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1SortedValueTreeObjectList.html</anchorfile>
      <anchor>ae875f35123c41ffcc4e7b6d2afbfc056</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1SortedValueTreeObjectList.html</anchorfile>
      <anchor>a3cf0bedfb20d1474d052142dcc070122</anchor>
      <arglist>(juce::ValueTree &amp;v, const juce::Identifier &amp;id) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SourceFileReference</name>
    <filename>classtracktion_1_1engine_1_1SourceFileReference.html</filename>
    <member kind="function">
      <type></type>
      <name>SourceFileReference</name>
      <anchorfile>classtracktion_1_1engine_1_1SourceFileReference.html</anchorfile>
      <anchor>acb9675729803ec84dd09e7886c84f6c0</anchor>
      <arglist>(Edit &amp;, juce::ValueTree &amp;, const juce::Identifier &amp;prop)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SourceFileReference</name>
      <anchorfile>classtracktion_1_1engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a85810732ec9cac276abf8ea4bb2d2729</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getFile</name>
      <anchorfile>classtracktion_1_1engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a7a3d82e9bf9d09b89eb3b912634d0bea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingProjectReference</name>
      <anchorfile>classtracktion_1_1engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a204972158eb71a39a8f83e0bf2ad3c7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ProjectItemID</type>
      <name>getSourceProjectItemID</name>
      <anchorfile>classtracktion_1_1engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a67eed1e0dc214ea7ee2893e434efb917</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>getSourceProjectItem</name>
      <anchorfile>classtracktion_1_1engine_1_1SourceFileReference.html</anchorfile>
      <anchor>ab26d20967a35292c594f0fa03ccef011</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToDirectFileReference</name>
      <anchorfile>classtracktion_1_1engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a48626504e1c6e0b8616546ead5e332a8</anchor>
      <arglist>(const juce::File &amp;, bool useRelativePath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToProjectFileReference</name>
      <anchorfile>classtracktion_1_1engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a8901e5abbc4d32bbb330b33eaa71dc3c</anchor>
      <arglist>(const juce::File &amp;, bool updateProjectItem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToProjectFileReference</name>
      <anchorfile>classtracktion_1_1engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a9ba09cadd7099aadc29fb7e8862d4dcb</anchor>
      <arglist>(ProjectItemID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>findPathFromFile</name>
      <anchorfile>classtracktion_1_1engine_1_1SourceFileReference.html</anchorfile>
      <anchor>aebf6f03551a64c7322cde9fdaafdf988</anchor>
      <arglist>(Edit &amp;, const juce::File &amp;, bool useRelativePath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::File</type>
      <name>findFileFromString</name>
      <anchorfile>classtracktion_1_1engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a95d78c291cd4a81390671067a813f99c</anchor>
      <arglist>(Edit &amp;, const juce::String &amp;source)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion_1_1engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a257e065ca58d61c81b245db643aa2884</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>source</name>
      <anchorfile>classtracktion_1_1engine_1_1SourceFileReference.html</anchorfile>
      <anchor>a05b4329a7b27e8e0a1a15fe1a3789d6f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::SpeedFadeDescription</name>
    <filename>structtracktion_1_1engine_1_1SpeedFadeDescription.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>structtracktion_1_1engine_1_1SpeedFadeDescription.html</anchorfile>
      <anchor>a4e851f4aa1c5492b80c428d20578b6b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>TimeRange</type>
      <name>inTimeRange</name>
      <anchorfile>structtracktion_1_1engine_1_1SpeedFadeDescription.html</anchorfile>
      <anchor>a533a21d3cdbeb30dab6c016a935fc75d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeRange</type>
      <name>outTimeRange</name>
      <anchorfile>structtracktion_1_1engine_1_1SpeedFadeDescription.html</anchorfile>
      <anchor>adaec6a3f6affcb239c966176b0822933</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioFadeCurve::Type</type>
      <name>fadeInType</name>
      <anchorfile>structtracktion_1_1engine_1_1SpeedFadeDescription.html</anchorfile>
      <anchor>a7835ca16dc63a00d30f5e3cae9bd8b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AudioFadeCurve::Type</type>
      <name>fadeOutType</name>
      <anchorfile>structtracktion_1_1engine_1_1SpeedFadeDescription.html</anchorfile>
      <anchor>a276c8eea0169772c11a97573f73bd9fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SpeedRampAudioNode</name>
    <filename>classtracktion_1_1engine_1_1SpeedRampAudioNode.html</filename>
    <base>tracktion::engine::SingleInputAudioNode</base>
    <member kind="function">
      <type></type>
      <name>SpeedRampAudioNode</name>
      <anchorfile>classtracktion_1_1engine_1_1SpeedRampAudioNode.html</anchorfile>
      <anchor>a184154df8783003b8ec10c8016b42387</anchor>
      <arglist>(AudioNode *source, legacy::EditTimeRange in, legacy::EditTimeRange out, AudioFadeCurve::Type fadeInType_, AudioFadeCurve::Type fadeOutType_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderOver</name>
      <anchorfile>classtracktion_1_1engine_1_1SpeedRampAudioNode.html</anchorfile>
      <anchor>a8626d3c2457de4484b94d682acea8658</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderAdding</name>
      <anchorfile>classtracktion_1_1engine_1_1SpeedRampAudioNode.html</anchorfile>
      <anchor>a30565c9aa72fb64cb141334bf8110d1b</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderSection</name>
      <anchorfile>classtracktion_1_1engine_1_1SpeedRampAudioNode.html</anchorfile>
      <anchor>a52144396f95fe2623c558a4ec3f8170a</anchor>
      <arglist>(const AudioRenderContext &amp;rc, legacy::EditTimeRange editTime)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SpeedRampWaveNode</name>
    <filename>classtracktion_1_1engine_1_1SpeedRampWaveNode.html</filename>
    <base>tracktion::graph::Node</base>
    <base>tracktion::engine::TracktionEngineNode</base>
    <member kind="function">
      <type></type>
      <name>SpeedRampWaveNode</name>
      <anchorfile>classtracktion_1_1engine_1_1SpeedRampWaveNode.html</anchorfile>
      <anchor>a8ba4b2aad7e27147f983ea60de2b8031</anchor>
      <arglist>(const AudioFile &amp;, TimeRange editTime, TimeDuration offset, TimeRange loopSection, LiveClipLevel, double speedRatio, const juce::AudioChannelSet &amp;sourceChannelsToUse, const juce::AudioChannelSet &amp;destChannelsToFill, ProcessState &amp;, EditItemID, bool isOfflineRender, SpeedFadeDescription)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1SpeedRampWaveNode.html</anchorfile>
      <anchor>a0031f996f7a1882734395dcd1cd57e92</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1SpeedRampWaveNode.html</anchorfile>
      <anchor>ae9b822b2544015d76e1c7f84edd84d9e</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1SpeedRampWaveNode.html</anchorfile>
      <anchor>a659a52d176fedc66199ad2ea4befb18c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1SpeedRampWaveNode.html</anchorfile>
      <anchor>ade6339ca390bf47ac580c476a2050eea</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Spline</name>
    <filename>structtracktion_1_1engine_1_1Spline.html</filename>
    <member kind="function">
      <type>int</type>
      <name>getNumPoints</name>
      <anchorfile>structtracktion_1_1engine_1_1Spline.html</anchorfile>
      <anchor>ae8f735e5c1894524785b295056fec572</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::Point&lt; float &gt;</type>
      <name>getPoint</name>
      <anchorfile>structtracktion_1_1engine_1_1Spline.html</anchorfile>
      <anchor>a6ac39ffafc2e4f51165b84a4e50c4c01</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getY</name>
      <anchorfile>structtracktion_1_1engine_1_1Spline.html</anchorfile>
      <anchor>a3495bc5d7feb072808ecec82cb29cebe</anchor>
      <arglist>(float x) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>structtracktion_1_1engine_1_1Spline.html</anchorfile>
      <anchor>a4e9dc557d7ac278fbb53eaf3fe5f2e15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePoint</name>
      <anchorfile>structtracktion_1_1engine_1_1Spline.html</anchorfile>
      <anchor>a1fdeef470e1783bf301117b0b043767f</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPoint</name>
      <anchorfile>structtracktion_1_1engine_1_1Spline.html</anchorfile>
      <anchor>a9ab40865d393c58f6238bf395272b0ec</anchor>
      <arglist>(float x, float y)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::LauncherClipPlaybackHandle::SplitBeatRange</name>
    <filename>structtracktion_1_1engine_1_1LauncherClipPlaybackHandle_1_1SplitBeatRange.html</filename>
    <member kind="variable">
      <type>BeatRange</type>
      <name>range1</name>
      <anchorfile>structtracktion_1_1engine_1_1LauncherClipPlaybackHandle_1_1SplitBeatRange.html</anchorfile>
      <anchor>aa22958df18ea0d53811d2e7d77648d56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BeatRange</type>
      <name>range2</name>
      <anchorfile>structtracktion_1_1engine_1_1LauncherClipPlaybackHandle_1_1SplitBeatRange.html</anchorfile>
      <anchor>a4f765e9eb311542bec561ca61d7e49c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>playing1</name>
      <anchorfile>structtracktion_1_1engine_1_1LauncherClipPlaybackHandle_1_1SplitBeatRange.html</anchorfile>
      <anchor>ace14b69356664a47eb8900f79cbba94f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>playing2</name>
      <anchorfile>structtracktion_1_1engine_1_1LauncherClipPlaybackHandle_1_1SplitBeatRange.html</anchorfile>
      <anchor>af0fb96af6814bbbd58e124b16d24b51d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>engine::LaunchHandle::SplitStatus</name>
    <filename>structengine_1_1LaunchHandle_1_1SplitStatus.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>playing1</name>
      <anchorfile>structengine_1_1LaunchHandle_1_1SplitStatus.html</anchorfile>
      <anchor>a1537cc2dd5099310c21a38169c291ea2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>playing2</name>
      <anchorfile>structengine_1_1LaunchHandle_1_1SplitStatus.html</anchorfile>
      <anchor>ad38f6eb6d365909cb1b72551b45ca1fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BeatRange</type>
      <name>range1</name>
      <anchorfile>structengine_1_1LaunchHandle_1_1SplitStatus.html</anchorfile>
      <anchor>aa9fb4fa9e2d814b2c64e447e715008a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BeatRange</type>
      <name>range2</name>
      <anchorfile>structengine_1_1LaunchHandle_1_1SplitStatus.html</anchorfile>
      <anchor>a6dc1d6123856268bd17a8b86df16ba5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isSplit</name>
      <anchorfile>structengine_1_1LaunchHandle_1_1SplitStatus.html</anchorfile>
      <anchor>a5391c99f2cb96e157a3c7c6cb330b832</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; BeatPosition &gt;</type>
      <name>playStartTime1</name>
      <anchorfile>structengine_1_1LaunchHandle_1_1SplitStatus.html</anchorfile>
      <anchor>a7574842b2cba8797e3c9791598e29f1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; BeatPosition &gt;</type>
      <name>playStartTime2</name>
      <anchorfile>structengine_1_1LaunchHandle_1_1SplitStatus.html</anchorfile>
      <anchor>a7226637c201dc731de4a0807003b6528</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::SplitTimelineRange</name>
    <filename>structtracktion_1_1graph_1_1SplitTimelineRange.html</filename>
    <member kind="function">
      <type></type>
      <name>SplitTimelineRange</name>
      <anchorfile>structtracktion_1_1graph_1_1SplitTimelineRange.html</anchorfile>
      <anchor>ac3a03e330af7c7db3fbabfad558ecbab</anchor>
      <arglist>(juce::Range&lt; int64_t &gt; range1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SplitTimelineRange</name>
      <anchorfile>structtracktion_1_1graph_1_1SplitTimelineRange.html</anchorfile>
      <anchor>aec7a8c342477964e409c71ba1b47e439</anchor>
      <arglist>(juce::Range&lt; int64_t &gt; range1, juce::Range&lt; int64_t &gt; range2)</arglist>
    </member>
    <member kind="variable">
      <type>const juce::Range&lt; int64_t &gt;</type>
      <name>timelineRange1</name>
      <anchorfile>structtracktion_1_1graph_1_1SplitTimelineRange.html</anchorfile>
      <anchor>af918fa6f7c0a1fe39840e97562b526d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const juce::Range&lt; int64_t &gt;</type>
      <name>timelineRange2</name>
      <anchorfile>structtracktion_1_1graph_1_1SplitTimelineRange.html</anchorfile>
      <anchor>afd3b25fb3552ec036c13cdd9beb36577</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const bool</type>
      <name>isSplit</name>
      <anchorfile>structtracktion_1_1graph_1_1SplitTimelineRange.html</anchorfile>
      <anchor>aafd08054a4dc51ee48cd722c57add9c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::BreakpointOscillatorModifier::Stage</name>
    <filename>structtracktion_1_1engine_1_1BreakpointOscillatorModifier_1_1Stage.html</filename>
    <member kind="variable">
      <type>AutomatableParameter *</type>
      <name>valueParam</name>
      <anchorfile>structtracktion_1_1engine_1_1BreakpointOscillatorModifier_1_1Stage.html</anchorfile>
      <anchor>a9fcea558794438310ab61e6a78b14874</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter *</type>
      <name>timeParam</name>
      <anchorfile>structtracktion_1_1engine_1_1BreakpointOscillatorModifier_1_1Stage.html</anchorfile>
      <anchor>a7585e55c24b224f9e7814aa017d6f530</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter *</type>
      <name>curveParam</name>
      <anchorfile>structtracktion_1_1engine_1_1BreakpointOscillatorModifier_1_1Stage.html</anchorfile>
      <anchor>a80ede28d4879202b02190705efcda4f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>engine::Renderer::Statistics</name>
    <filename>structengine_1_1Renderer_1_1Statistics.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>peak</name>
      <anchorfile>structengine_1_1Renderer_1_1Statistics.html</anchorfile>
      <anchor>ae1594c2ee65d07206c0dafedb9135c7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>average</name>
      <anchorfile>structengine_1_1Renderer_1_1Statistics.html</anchorfile>
      <anchor>a74d156f2023430dc690b8a1329549ccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>audioDuration</name>
      <anchorfile>structengine_1_1Renderer_1_1Statistics.html</anchorfile>
      <anchor>a2ef9690ade7bebc915a7228810c8e078</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::PerformanceMeasurement::Statistics</name>
    <filename>structtracktion_1_1graph_1_1PerformanceMeasurement_1_1Statistics.html</filename>
    <member kind="function">
      <type></type>
      <name>Statistics</name>
      <anchorfile>structtracktion_1_1graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>aeab93bc12b2d0ecfb827250f48ac03d7</anchor>
      <arglist>() noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>structtracktion_1_1graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>af4aa6f3590790c75f2948eed61f1cc2d</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVarianceSeconds</name>
      <anchorfile>structtracktion_1_1graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>ac781adc5d06b1a274de28d8e75812431</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getVarianceCycles</name>
      <anchorfile>structtracktion_1_1graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>a936587d2aed775f42b3c45a1fc1644fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>structtracktion_1_1graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>aa9bb9517fb596f0d402c1e1a2bc1ffd7</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addResult</name>
      <anchorfile>structtracktion_1_1graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>a6c263057b69a7baa7ece4a0f1e88b467</anchor>
      <arglist>(double secondsElapsed, uint64_t cyclesElapsed) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>meanSeconds</name>
      <anchorfile>structtracktion_1_1graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>a7f8fcfa4fa644fa9144b80fc782ae381</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m2Seconds</name>
      <anchorfile>structtracktion_1_1graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>a4eb7918e235dd1656f2e3cb706107950</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>maximumSeconds</name>
      <anchorfile>structtracktion_1_1graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>a61e684553bd5714fad9bea0f6dfbc376</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>minimumSeconds</name>
      <anchorfile>structtracktion_1_1graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>a43bbc0bf34966e9446aeaa5e11e96bca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>totalSeconds</name>
      <anchorfile>structtracktion_1_1graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>aa9339545c2bda203956cef74775d0998</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>meanCycles</name>
      <anchorfile>structtracktion_1_1graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>a4b47f4bfa45474ffe694d0fe2e3b1d38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>m2Cycles</name>
      <anchorfile>structtracktion_1_1graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>aa0ca8628524bf6a867f03aeb1bcb4ec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>maximumCycles</name>
      <anchorfile>structtracktion_1_1graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>a32afd62b874492803897b93a88fe232a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>minimumCycles</name>
      <anchorfile>structtracktion_1_1graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>a999072e8894232e956ce4735bb54b01d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalCycles</name>
      <anchorfile>structtracktion_1_1graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>ad4ef6129ae7e5466dd8716637261f821</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>numRuns</name>
      <anchorfile>structtracktion_1_1graph_1_1PerformanceMeasurement_1_1Statistics.html</anchorfile>
      <anchor>a650d60f8b45be65687713b3115a0f996</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::StepClip</name>
    <filename>classtracktion_1_1engine_1_1StepClip.html</filename>
    <base>tracktion::engine::Clip</base>
    <class kind="struct">tracktion::engine::StepClip::Channel</class>
    <class kind="struct">tracktion::engine::StepClip::Pattern</class>
    <class kind="struct">tracktion::engine::StepClip::PatternInstance</class>
    <member kind="enumeration">
      <type></type>
      <name>Defaults</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultNumNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1aae5569a5bae415e4824b6c40eb4fab508</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultNumChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1aa3585a68dafe1ebc4d4ae4aef9fa440d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultMidiChannel</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1aab19909ab9fe7f3f016e27e262a2e0919</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultNoteNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1aabb6e7a8120b1e2c94f001c6d1e9dc28a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultNoteValue</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1aa1b6612e2d36b9af028fd81efe00ef496</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minNumNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1aa751f70f2bf844a565384112e08b34676</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxNumNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1aafcdf55adad58b5879ba815526e7b4419</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minNumChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1aa71bbb6321202fe9d6abc552da6f3e63e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxNumChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1aaad2f62b13abac49e911a3a273430b502</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; StepClip &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a0a05e7eca4dab2e2ca0c3cb1dbd3e4ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; PatternInstance &gt;</type>
      <name>PatternArray</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>aee1d0ecf15b1b75338a16266ba4d79b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultNumNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1aae5569a5bae415e4824b6c40eb4fab508</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultNumChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1aa3585a68dafe1ebc4d4ae4aef9fa440d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultMidiChannel</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1aab19909ab9fe7f3f016e27e262a2e0919</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultNoteNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1aabb6e7a8120b1e2c94f001c6d1e9dc28a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultNoteValue</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1aa1b6612e2d36b9af028fd81efe00ef496</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minNumNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1aa751f70f2bf844a565384112e08b34676</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxNumNotes</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1aafcdf55adad58b5879ba815526e7b4419</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>minNumChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1aa71bbb6321202fe9d6abc552da6f3e63e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxNumChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a68c9bd0cbec768984073ace53bdefa1aaad2f62b13abac49e911a3a273430b502</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StepClip</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a4947d0589817b54a7d95d6fa91ddb69c</anchor>
      <arglist>(const juce::ValueTree &amp;, EditItemID, ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StepClip</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a7f0f5367a28a96904d0eea4b03d37c95</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cloneFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a6f4270db77ed8f5ea52a51e26c80a754</anchor>
      <arglist>(Clip *) override</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; Channel * &gt; &amp;</type>
      <name>getChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>aee1ef8eaff6453c1e4dd095c90b44183</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeChannel</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a544e52a11712599a4520004705fec1ef</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertNewChannel</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>ae5d2a9d4268c7a00ad3f52d023e2c9e6</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesProbability</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>ad096c0e3386f3ac5eeb5e1fa0ff0ad7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PatternArray</type>
      <name>getPatternSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>ac2b047a6567d714ae90c7cb9b41d82bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatternSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>abcfd836a73a4e70c6c2619ff7b80316d</anchor>
      <arglist>(const PatternArray &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertVariation</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>ac3ca936fdf2804c33ecee75640745ec6</anchor>
      <arglist>(int patternIndex, int insertIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeVariation</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a89048e4dacb0b641974253c22511dd89</anchor>
      <arglist>(int variationIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllVariations</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a8de7dad59fa6bebdf4f8b2b6765b9a33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createDefaultPatternIfEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a9943bccc1b026d761c8293d890d2f469</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatternForVariation</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a4d3545d600f9b7d538c43094afdce321</anchor>
      <arglist>(int variationIndex, int newPatternIndex)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insertPattern</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>ae3935bb95a14bcef423a421dc63889df</anchor>
      <arglist>(const Pattern &amp;, int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insertNewPattern</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a999a49475c7c652caa09fbcaf831df13</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePattern</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a9ef340706bb1801f89dd28f20c468476</anchor>
      <arglist>(int patternIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeUnusedPatterns</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>af9683712ab6dfb44b2306bce46156614</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getCell</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>aa10d03d37db10dbe6af9994b2c445196</anchor>
      <arglist>(int patternIndex, int channelIndex, int noteIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCell</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>abde02e715bd1ca0b04bd8adde1e6b9aa</anchor>
      <arglist>(int patternIndex, int channelIndex, int noteIndex, bool value)</arglist>
    </member>
    <member kind="function">
      <type>Pattern</type>
      <name>getPattern</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a5f72d780f03656d5ec8d0e7078547594</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumPatterns</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>aee0a5e06e5d1b71b260e52ecaeb3ff47</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Pattern &gt;</type>
      <name>getPatterns</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>ac352aa114fc2e79b6ef3b9db05854da1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getVolumeDb</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a845b75de7a0850a1852a5d45770885c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVolumeDb</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a90616893303da5aad66853c08c03fe2f</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateMidiSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a2b6e4faa75f98e237d86f7370e56c503</anchor>
      <arglist>(juce::MidiMessageSequence &amp;result, bool convertToSeconds=true, PatternInstance *instance=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>juce::MidiMessageSequence</type>
      <name>generateMidiSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>ae43cc509491c0ddaebb8447a01c288d0</anchor>
      <arglist>(MidiList::TimeBase, PatternInstance *instance=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; BeatPosition &gt;</type>
      <name>getBeatTimesOfPatternStarts</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a670d51663df40422a544d69476b4f43c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getStartBeatOf</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a1038e7e5e6f5fa02198ce5393deb803a</anchor>
      <arglist>(PatternInstance *)</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getEndBeatOf</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>af1e54cb5ab809aeba9e26e387c257e36</anchor>
      <arglist>(PatternInstance *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBeatsPerBar</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a446c5aa59adc79c0fa95de673242411f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resizeClipForPatternInstances</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>aff7fec1ef24729e68b7627964da5817d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedTo</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a098c917056f9ff20e64fb3495476f3eb</anchor>
      <arglist>(ClipOwner &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a0292aca8cce28c75f1bb76688172419a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getDefaultColour</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a9296a29100eae5fcebbb0988f05e1ca3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a144e0d22bdc6833b8e394872324b87f3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beatBasedLooping</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>aa62336ce260a4250936e37ad5738f74c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a5277846023cfb047c8637d240ed063f3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a43f0363490471f3807645aba1461e50b</anchor>
      <arglist>(bool m) override</arglist>
    </member>
    <member kind="function">
      <type>LiveClipLevel</type>
      <name>getLiveClipLevel</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a95d96bca948c7323e0dc6b7625d54a11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canLoop</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>ac2136e162c3a3a496d593883f77ace0e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>ClipPosition</type>
      <name>getPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>af5615cbb42a109e1bc88c2564916d1fb</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLooping</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a700f8b78ba730a677d953b45dc379551</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumberOfLoops</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a8e74fa6e89517ff8b6b80d88f07ae257</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableLooping</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a78609f64b40e765b9f40febde46bac4f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopRange</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a261b4dbfcadd47b9aaf74542a41f2bd4</anchor>
      <arglist>(TimeRange) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopRangeBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>ad6469bd3797870dea7e559dc1f7d206c</anchor>
      <arglist>(BeatRange) override</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getLoopStartBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a3aead6aad6bb52d04583fd525cbe1c67</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>BeatDuration</type>
      <name>getLoopLengthBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a5f8d48a0acd70ec6be433fe2ce8b1320</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getLoopStart</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a7a37eab9a3a841fed579be8e2e8a6650</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getLoopLength</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>ae38af44804ddbe9ece318d76d6b04938</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; LaunchHandle &gt;</type>
      <name>getLaunchHandle</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>af44e71932a0f506b1a47a3fcd8026101</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUsesGlobalLaunchQuatisation</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a1ee6f9db0e87706fb0aac5fe5733d787</anchor>
      <arglist>(bool useGlobal) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesGlobalLaunchQuatisation</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>ae95f1d10c55f18e39ac18acf8534ecdf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>LaunchQuantisation *</type>
      <name>getLaunchQuantisation</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a86e6102199e4b5a112bc37e6d5b61b3c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>FollowActions *</type>
      <name>getFollowActions</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>ae3865b615228e78df5bf036050a2f321</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>repeatSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1StepClip.html</anchorfile>
      <anchor>a3bbf6decb0570b5466c0c15570505830</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::StepModifier</name>
    <filename>classtracktion_1_1engine_1_1StepModifier.html</filename>
    <base>tracktion::engine::Modifier</base>
    <base protection="private">tracktion::engine::ValueTreeAllEventListener</base>
    <class kind="struct">tracktion::engine::StepModifier::Assignment</class>
    <member kind="enumvalue">
      <name>maxNumSteps</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a6287c94e72284bd38402c12cf762368baddc3ea45513b7f549a1c872457f02272</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; StepModifier &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a19828d141988ec45cf1fc5252c0bf0ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; StepModifier &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a1196515687456ba919f28c4921fd7cf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>maxNumSteps</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a6287c94e72284bd38402c12cf762368baddc3ea45513b7f549a1c872457f02272</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StepModifier</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a1508bbaff35ed8efe7cf09edf7769fb3</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StepModifier</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a5fb18ebd6314c86ef02e6f213dc87518</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a344450e3f392d72c4e22834050038007</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>ab6d2cb303e6768e814974c92a905462c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a766d40d37fc09c2377f2c7d3b71e227e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getStep</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>ae55aaf06378e339b5a657a4eba664af0</anchor>
      <arglist>(int step) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStep</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a1380ec98f8157aecbe4fce10f3590fe0</anchor>
      <arglist>(int step, float value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCurrentStep</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a7025ab6c9924bd1002ccf7f57c036e5c</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::ModifierAssignment *</type>
      <name>createAssignment</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>afe3b98193df42e45d90094514f3d7826</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>ProcessingPosition</type>
      <name>getProcessingPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>aff38e07c149addf2ba4a5d50c86d4fa1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a9e5067eb6fc2ce4d587798b37745d663</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>aef29ae316293653fcf4dddc0d6c529c3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a7910b344c687168c108702bc3ddd2323</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a08b0ce6145809240435352b1112fc5fe</anchor>
      <arglist>(double, int)</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>syncType</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>afa8ce888fa1144eb7852c1f5555e7d5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>numSteps</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>aa48ac97647b5d93a4cf84e7f4d1d449e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rate</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a8691de0867b78799ea3eae34c1e21bd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>rateType</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a335f8cf038c64bbed9b943106e22d886</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>depth</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>ac8d634d4f3a4dd430f016f2f66a404ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>syncTypeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a5f7e3956b1fb35cdb1d53d33e895b0f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>numStepsParam</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a3d3ce96c0bd9013ad59f9532ca39efed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rateParam</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a8819e198527ab19a1e4ab397f6f23c38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>rateTypeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>a3699119ec11c1159b795bd012aa4c106</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>depthParam</name>
      <anchorfile>classtracktion_1_1engine_1_1StepModifier.html</anchorfile>
      <anchor>ab74caf41376833a49042f13e53fa29ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::StepVolumeEffect</name>
    <filename>structtracktion_1_1engine_1_1StepVolumeEffect.html</filename>
    <base>tracktion::engine::ClipEffect</base>
    <base>tracktion::engine::Selectable</base>
    <class kind="struct">tracktion::engine::StepVolumeEffect::Pattern</class>
    <member kind="function">
      <type></type>
      <name>StepVolumeEffect</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>a9dd6b18b873f31cdf55eed451d47162a</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StepVolumeEffect</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>afff468bf17e815999de7da1e28f82006</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNumNotes</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>aefe42ec22ab539ba38958d131e52e1ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>a08dfa0f74e7b367e6af6a96c125ee1ae</anchor>
      <arglist>(const AudioFile &amp;sourceFile, double sourceLength) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProperties</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>ae38849fc1d05d690c8481328b66ca513</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>propertiesButtonPressed</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>a97ad00ccfc389b95cdc5008d29f97ab3</anchor>
      <arglist>(SelectionManager &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>a8e3d0c277e22eb392ed5d28a8100580f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; BeatDuration &gt;</type>
      <name>noteLength</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>a904a1d998239493a0fbf381ce657109e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>crossfade</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>a4eec8e548656a294e2183ce10470a02b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>pattern</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>afe0744fa82d12aa34d282a30737bf5e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>HashCode</type>
      <name>getIndividualHash</name>
      <anchorfile>structtracktion_1_1engine_1_1StepVolumeEffect.html</anchorfile>
      <anchor>a61589f7824d27d4c341a1da27929f6da</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::InputDeviceInstance::StopRecordingParameters</name>
    <filename>structtracktion_1_1engine_1_1InputDeviceInstance_1_1StopRecordingParameters.html</filename>
    <member kind="variable">
      <type>std::vector&lt; EditItemID &gt;</type>
      <name>targetsToStop</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1StopRecordingParameters.html</anchorfile>
      <anchor>a1a4308281d7134c09c5c357a783f1601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimePosition</type>
      <name>unloopedTimeToEndRecording</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1StopRecordingParameters.html</anchorfile>
      <anchor>ad67495740f19c2ff38032f83a239e25d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isLooping</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1StopRecordingParameters.html</anchorfile>
      <anchor>a95bac9850fe8fbea9151f44d887294d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeRange</type>
      <name>markedRange</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1StopRecordingParameters.html</anchorfile>
      <anchor>ac19b2804f93c3767b806e44415da41cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>discardRecordings</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1StopRecordingParameters.html</anchorfile>
      <anchor>a187af087d03dc31896be225f04d4d88a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::StopwatchTimer</name>
    <filename>structtracktion_1_1engine_1_1StopwatchTimer.html</filename>
    <member kind="function">
      <type></type>
      <name>StopwatchTimer</name>
      <anchorfile>structtracktion_1_1engine_1_1StopwatchTimer.html</anchorfile>
      <anchor>a3385bf0afc2a50aaa407ff1db3a2b687</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::RelativeTime</type>
      <name>getTime</name>
      <anchorfile>structtracktion_1_1engine_1_1StopwatchTimer.html</anchorfile>
      <anchor>ace7cf86045b95a54fedda99a841c21d1</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDescription</name>
      <anchorfile>structtracktion_1_1engine_1_1StopwatchTimer.html</anchorfile>
      <anchor>a79c210c5d96f34cda11c526148258589</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSeconds</name>
      <anchorfile>structtracktion_1_1engine_1_1StopwatchTimer.html</anchorfile>
      <anchor>a422da223b72a0bf884b024638f40a6ad</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::SubSampleWaveAudioNode</name>
    <filename>classtracktion_1_1engine_1_1SubSampleWaveAudioNode.html</filename>
    <base>tracktion::engine::AudioNode</base>
    <member kind="function">
      <type></type>
      <name>SubSampleWaveAudioNode</name>
      <anchorfile>classtracktion_1_1engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>acb7b20149565724f1f34065537c14849</anchor>
      <arglist>(Engine &amp;e, const AudioFile &amp;af, legacy::EditTimeRange editTime, double off, legacy::EditTimeRange loop, LiveClipLevel level, double speed, const juce::AudioChannelSet &amp;channels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAudioNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>a9b576c9697480aaca5a78a7c0c092971</anchor>
      <arglist>(AudioNodeProperties &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>a124c01df98e1c5b556b121f9e600aefd</anchor>
      <arglist>(const VisitorFn &amp;v) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>purgeSubNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>a8dc24da54b1bd4e73a74a02663a2b7c0</anchor>
      <arglist>(bool keepAudio, bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareAudioNodeToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>a9ccdc3e559a72b1b5aa917cb22489243</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToRender</name>
      <anchorfile>classtracktion_1_1engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>a268926cdbe3c0b15503599ac327fe275</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseAudioNodeResources</name>
      <anchorfile>classtracktion_1_1engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>ae4a613745937b9f6bcbf01a8e59ab7d5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderOver</name>
      <anchorfile>classtracktion_1_1engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>a4062791c47aee33d69c8a4856d8c559b</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderAdding</name>
      <anchorfile>classtracktion_1_1engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>afc1125db41cc3aebce84b0edaaacb4aa</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForNextBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>a60d0925415f270b3a01bc58c38723404</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderSection</name>
      <anchorfile>classtracktion_1_1engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>a091e3e332450114131ce04f2f634a704</anchor>
      <arglist>(const AudioRenderContext &amp;rc, legacy::EditTimeRange editTime)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1SubSampleWaveAudioNode.html</anchorfile>
      <anchor>a9ce15e5cb6e7d3ae9f09da339144e95e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>engine::SuffixedParameter</name>
    <filename>structengine_1_1SuffixedParameter.html</filename>
    <member kind="function">
      <type></type>
      <name>SuffixedParameter</name>
      <anchorfile>structengine_1_1SuffixedParameter.html</anchorfile>
      <anchor>a7d280da9d05582a2690f71224312dbf0</anchor>
      <arglist>(const juce::String &amp;xmlTag, const juce::String &amp;name, AutomatableEditItem &amp;owner, juce::NormalisableRange&lt; float &gt; valueRangeToUse, juce::String suffixToUse={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SuffixedParameter</name>
      <anchorfile>structengine_1_1SuffixedParameter.html</anchorfile>
      <anchor>a7a2ad0c517d319441d906ef7213b397e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>valueToString</name>
      <anchorfile>structengine_1_1SuffixedParameter.html</anchorfile>
      <anchor>a433cbff07c26d31601ed484f464daaec</anchor>
      <arglist>(float value) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getLabel</name>
      <anchorfile>structengine_1_1SuffixedParameter.html</anchorfile>
      <anchor>a37e0511cb3bac1c76a91812abbbcb17d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>const juce::String</type>
      <name>suffix</name>
      <anchorfile>structengine_1_1SuffixedParameter.html</anchorfile>
      <anchor>aa906ddb33bbec91736007acef73f50d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::SummingNode</name>
    <filename>classtracktion_1_1graph_1_1SummingNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>SummingNode</name>
      <anchorfile>classtracktion_1_1graph_1_1SummingNode.html</anchorfile>
      <anchor>a513327bd775500b30fea722e7fd87d2b</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SummingNode</name>
      <anchorfile>classtracktion_1_1graph_1_1SummingNode.html</anchorfile>
      <anchor>a9fccec46b46b762d7ac51de555cdea92</anchor>
      <arglist>(std::vector&lt; std::unique_ptr&lt; Node &gt;&gt; inputs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SummingNode</name>
      <anchorfile>classtracktion_1_1graph_1_1SummingNode.html</anchorfile>
      <anchor>a137424e2d7f58abd05eb8e26af6f52d4</anchor>
      <arglist>(std::vector&lt; Node * &gt; inputs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SummingNode</name>
      <anchorfile>classtracktion_1_1graph_1_1SummingNode.html</anchorfile>
      <anchor>a42f6b1d499fdb10f87437a9768feefee</anchor>
      <arglist>(std::vector&lt; std::unique_ptr&lt; Node &gt;&gt; ownedInputs, std::vector&lt; Node * &gt; referencedInputs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInput</name>
      <anchorfile>classtracktion_1_1graph_1_1SummingNode.html</anchorfile>
      <anchor>a75ffb5d7562ce3d9b8a14b56c6c4b903</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; newInput)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDoubleProcessingPrecision</name>
      <anchorfile>classtracktion_1_1graph_1_1SummingNode.html</anchorfile>
      <anchor>ab0ec85250a84dc755d0af99d6c719dd7</anchor>
      <arglist>(bool shouldSumInDoublePrecision)</arglist>
    </member>
    <member kind="function">
      <type>NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1graph_1_1SummingNode.html</anchorfile>
      <anchor>a90abfb42674b01d544500f56022043ca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1graph_1_1SummingNode.html</anchorfile>
      <anchor>af7165114b5f53c0d9ce9b56dcd84c785</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>TransformResult</type>
      <name>transform</name>
      <anchorfile>classtracktion_1_1graph_1_1SummingNode.html</anchorfile>
      <anchor>af400d80a6dc87bbd88d5c114725015d8</anchor>
      <arglist>(Node &amp;, const std::vector&lt; Node * &gt; &amp;, TransformCache &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1graph_1_1SummingNode.html</anchorfile>
      <anchor>a2122b21f371f99e20571e38fe01e834e</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;info) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1graph_1_1SummingNode.html</anchorfile>
      <anchor>aa1d9ec6c94fcf6f17bcd9cd72a28ea96</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1graph_1_1SummingNode.html</anchorfile>
      <anchor>a17ceb8ab33a413782df872c01401b011</anchor>
      <arglist>(ProcessContext &amp;pc) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::SyncPoint</name>
    <filename>structtracktion_1_1engine_1_1SyncPoint.html</filename>
    <member kind="variable">
      <type>int64_t</type>
      <name>referenceSamplePosition</name>
      <anchorfile>structtracktion_1_1engine_1_1SyncPoint.html</anchorfile>
      <anchor>a6ca6328a05a319385c3c24fbec8a8166</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MonotonicBeat</type>
      <name>monotonicBeat</name>
      <anchorfile>structtracktion_1_1engine_1_1SyncPoint.html</anchorfile>
      <anchor>a2876e8e257dbcb35d6003062ca8f992f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimePosition</type>
      <name>unloopedTime</name>
      <anchorfile>structtracktion_1_1engine_1_1SyncPoint.html</anchorfile>
      <anchor>a09eb79c6b6d992af465187e79c73ecec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimePosition</type>
      <name>time</name>
      <anchorfile>structtracktion_1_1engine_1_1SyncPoint.html</anchorfile>
      <anchor>ab7acc9d9f17693badb885a9f382434da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BeatPosition</type>
      <name>beat</name>
      <anchorfile>structtracktion_1_1engine_1_1SyncPoint.html</anchorfile>
      <anchor>a52e438fd373267c53511a9e64fbcdde2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::SyncRange</name>
    <filename>structtracktion_1_1engine_1_1SyncRange.html</filename>
    <member kind="variable">
      <type>SyncPoint</type>
      <name>start</name>
      <anchorfile>structtracktion_1_1engine_1_1SyncRange.html</anchorfile>
      <anchor>ae30660020bac5fcd7ee35a30f0c689b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SyncPoint</type>
      <name>end</name>
      <anchorfile>structtracktion_1_1engine_1_1SyncRange.html</anchorfile>
      <anchor>af188351bc6bedef984a349b28e6eae03</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::Takes</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1Takes.html</filename>
    <base>tracktion::engine::Clipboard::ContentType</base>
    <member kind="function">
      <type></type>
      <name>Takes</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Takes.html</anchorfile>
      <anchor>abcadd57c2e397fcce3a4a397409eeb3d</anchor>
      <arglist>(const WaveCompManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Takes</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Takes.html</anchorfile>
      <anchor>a1bb8b3c8212ad11c6bcf263af1326e43</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoClip</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Takes.html</anchorfile>
      <anchor>a9a2cda531bef6ea9a32b59270fb660f1</anchor>
      <arglist>(WaveAudioClip &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>items</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Takes.html</anchorfile>
      <anchor>acba5e22cf2df1ca5709a31402cbd4da9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::VSTXML::Template</name>
    <filename>structtracktion_1_1engine_1_1VSTXML_1_1Template.html</filename>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Template.html</anchorfile>
      <anchor>aa6ad782cc23bc7485d0ff0e73b85bb77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; Param &gt;</type>
      <name>params</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1Template.html</anchorfile>
      <anchor>aecf36f12114bc890db77d2587c033421</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::TempoChanges::TempoChange</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1TempoChanges_1_1TempoChange.html</filename>
    <member kind="variable">
      <type>BeatPosition</type>
      <name>beat</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1TempoChanges_1_1TempoChange.html</anchorfile>
      <anchor>a3b94fb832b601610c3d2af2d9185377c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>bpm</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1TempoChanges_1_1TempoChange.html</anchorfile>
      <anchor>ab06c500479e0c0e4200df7efd7d7a09a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>curve</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1TempoChanges_1_1TempoChange.html</anchorfile>
      <anchor>a31b406b72de55421c61098671cb0d583</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::TempoChanges</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1TempoChanges.html</filename>
    <base>tracktion::engine::Clipboard::ContentType</base>
    <class kind="struct">tracktion::engine::Clipboard::TempoChanges::TempoChange</class>
    <member kind="function">
      <type></type>
      <name>TempoChanges</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1TempoChanges.html</anchorfile>
      <anchor>a27e78de905a66d7531a4270053baa081</anchor>
      <arglist>(const TempoSequence &amp;, TimeRange)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TempoChanges</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1TempoChanges.html</anchorfile>
      <anchor>a4cb8a2344dfda03106c3e243b5580969</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1TempoChanges.html</anchorfile>
      <anchor>a840e99a53f5b5485e8287d1062598a4d</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteTempoSequence</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1TempoChanges.html</anchorfile>
      <anchor>a15725e9b0e0b97cc643281fd7ceed075</anchor>
      <arglist>(TempoSequence &amp;, TimeRange targetRange) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1TempoChanges.html</anchorfile>
      <anchor>ae3179b071e4302d9007657da52f29b5a</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1TempoChanges.html</anchorfile>
      <anchor>a2b8ac2e249e6721e16dd1ca7831b15da</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; TempoChange &gt;</type>
      <name>changes</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1TempoChanges.html</anchorfile>
      <anchor>a0cfd0b85b665fa87bc4612a942907478</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TempoDetect</name>
    <filename>classtracktion_1_1engine_1_1TempoDetect.html</filename>
    <member kind="function">
      <type></type>
      <name>TempoDetect</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoDetect.html</anchorfile>
      <anchor>a1a7cf24f1ea1b4bebc5767cda2bc8392</anchor>
      <arglist>(int numChannels_, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>processReader</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoDetect.html</anchorfile>
      <anchor>a043b67a15bce05054eb75f74b03154a0</anchor>
      <arglist>(juce::AudioFormatReader &amp;reader)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>processAndDetect</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoDetect.html</anchorfile>
      <anchor>a8651769cf2d3944216a92cf2fedbaf46</anchor>
      <arglist>(const float **const inputSamples, int numSamples)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getBpm</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoDetect.html</anchorfile>
      <anchor>a255974f79505aa44dd905b8234885b88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBpmSensible</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoDetect.html</anchorfile>
      <anchor>af1affc29c2656e6865e3195101cf272a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processSection</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoDetect.html</anchorfile>
      <anchor>a8ef2c9b773629aa6d1c6c5c43ab41c9b</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;buffer, int numSamplesToProcess)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>finishAndDetect</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoDetect.html</anchorfile>
      <anchor>a293e5b991935b2cb832459c1c1d3963c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processSection</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoDetect.html</anchorfile>
      <anchor>a03ffac151b27b1443699578ef4f78f50</anchor>
      <arglist>(const float *const *inputSamples, int numSamples)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Range&lt; float &gt;</type>
      <name>getSensibleRange</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoDetect.html</anchorfile>
      <anchor>a3b058c497e53711bcc984748b2b84fc7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TemporaryFileManager</name>
    <filename>classtracktion_1_1engine_1_1TemporaryFileManager.html</filename>
    <member kind="function">
      <type></type>
      <name>TemporaryFileManager</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a8ded52f836bca89f482d7e3b40afd32e</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TemporaryFileManager</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>aafaa3ef0c40e4a114e160aac6e625de8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wasTempFolderSuccessfullyCreated</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>ae416bf245331bf7d22dd9361b10f2b7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDiskSpaceDangerouslyLow</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a21a0964fd406ce29aa37564dadbea147</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getMaxSpaceAllowedForTempFiles</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>aeae20fa105ebf39f72099faf90c20bd5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNumTempFiles</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>ae8d16e6b19b51dc546916c7b65a4a562</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanUp</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a73c126957f0709924456bd12194ea80e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const juce::File &amp;</type>
      <name>getTempDirectory</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a85d263c78f405fa9267792b95ba545e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setTempDirectory</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>ad7379bf4bdb063c8ae5e2b6362e785fb</anchor>
      <arglist>(const juce::File &amp;newFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ressetToDefaultLocation</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a876615a8cd3d79139a390d7361c64988</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getThumbnailsFolder</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>ac0821d51130f0da3b8a27ac6aa3bfdcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getTempFile</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a945d7e383c17db729404ea7f0db5cf1e</anchor>
      <arglist>(const juce::String &amp;filename) const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getUniqueTempFile</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>ace07cb4acc33cd046cf73ad1a140d8cc</anchor>
      <arglist>(const juce::String &amp;prefix, const juce::String &amp;ext) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>purgeOrphanEditTempFolders</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>ad60bc9f0aac7d36481dd6bb90e6dad99</anchor>
      <arglist>(ProjectManager &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AudioFile</type>
      <name>getFileForCachedClipRender</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a4f4a5a3b503ffaf6345926d710e4f314</anchor>
      <arglist>(const AudioClipBase &amp;, HashCode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AudioFile</type>
      <name>getFileForCachedCompRender</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>aa6e08258366ca38aa3609b768157d443</anchor>
      <arglist>(const AudioClipBase &amp;, HashCode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AudioFile</type>
      <name>getFileForCachedFileRender</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a5d788fe152f32bf565ae54391ed2f25b</anchor>
      <arglist>(Edit &amp;, HashCode hash)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::File</type>
      <name>getFreezeFileForDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a38c33e88cf5f30fad9ca5089ff90cb10</anchor>
      <arglist>(Edit &amp;, OutputDevice &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getDeviceIDFromFreezeFile</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a7a6a766d3768eff9e03c309ca85f773a</anchor>
      <arglist>(Edit &amp;, const juce::File &amp;deviceFreezeFile)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::File</type>
      <name>getFreezeFileForTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>af2decc11a6a20e9cc5a0da16bcfeebf3</anchor>
      <arglist>(const AudioTrack &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; juce::File &gt;</type>
      <name>getFrozenTrackFiles</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a11d81fbd1464a67335b9556a71d31312</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>purgeOrphanFreezeAndProxyFiles</name>
      <anchorfile>classtracktion_1_1engine_1_1TemporaryFileManager.html</anchorfile>
      <anchor>a6c8cd135108bf9b628d20fe494105287</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TempoSequence</name>
    <filename>classtracktion_1_1engine_1_1TempoSequence.html</filename>
    <base>tracktion::engine::Selectable</base>
    <member kind="function">
      <type></type>
      <name>TempoSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>ad24ed336f9a7536758b5e94befeac909</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TempoSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a6a4d5fee7f45a8534e6053e363956466</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Edit &amp;</type>
      <name>getEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>ab5153fe19b73a49bcee124fb2d1b14a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::ValueTree &amp;</type>
      <name>getState</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a321f304834608402f35af509c9d1decd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setState</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>acde9d388e7b75172da784e84acbb1c4f</anchor>
      <arglist>(const juce::ValueTree &amp;, bool remapEdit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createEmptyState</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a30ae9f8958a59832b9bab4f96aed625b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a8d097fa2c95c2378307b5b6a986efd55</anchor>
      <arglist>(const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; TimeSigSetting * &gt; &amp;</type>
      <name>getTimeSigs</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>acd063885aa684c298f2a32f2d3811cfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTimeSigs</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a686f97d91c8a41b6ef721fd8cd60df1f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeSigSetting *</type>
      <name>getTimeSig</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a81225627c38a6cffe33788bb518ea4fc</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>TimeSigSetting &amp;</type>
      <name>getTimeSigAt</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>af1c23874aef5b1af5e46d177d159896d</anchor>
      <arglist>(TimePosition) const</arglist>
    </member>
    <member kind="function">
      <type>TimeSigSetting &amp;</type>
      <name>getTimeSigAt</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a07ff0501d1a6b340483eee3947514011</anchor>
      <arglist>(BeatPosition) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfTimeSigAt</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>ab52f5e9510de6d62da94479842609f0d</anchor>
      <arglist>(TimePosition) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfTimeSig</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a6d94ea6410d13521d11935b9d61c95de</anchor>
      <arglist>(const TimeSigSetting *) const</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; TempoSetting * &gt; &amp;</type>
      <name>getTempos</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>ad85ae4d2b3dd192ccd52a2ce1f541a83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTempos</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a72a80884726e9b5e3f18b1af700949cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TempoSetting *</type>
      <name>getTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a7c3bb4a9b69340f36e5915f602f124e5</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>TempoSetting &amp;</type>
      <name>getTempoAt</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a67bc0ee0253472b29f95ad662e26eeb0</anchor>
      <arglist>(TimePosition) const</arglist>
    </member>
    <member kind="function">
      <type>TempoSetting &amp;</type>
      <name>getTempoAt</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>aa545ce9fc0553fb9ac76adbd4f3ed44f</anchor>
      <arglist>(BeatPosition) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBpmAt</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>aefe1e770d396c8db067b55545e440259</anchor>
      <arglist>(TimePosition) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBeatsPerSecondAt</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>ac9817681dffa2cedc2b2580e0bd086b7</anchor>
      <arglist>(TimePosition, bool lengthOfOneBeatDependsOnTimeSignature=false) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTripletsAtTime</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a6a675ee8b11be1abe5a53ec63a8232d2</anchor>
      <arglist>(TimePosition) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfTempoAt</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>ad1afb6f93dbb864e97f84d13171bb16b</anchor>
      <arglist>(TimePosition) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfNextTempoAt</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>ad13ac6d290ce75a4764f2bc1bbaf5ac0</anchor>
      <arglist>(TimePosition) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a57200e0e35bad16bd628873a77fc198a</anchor>
      <arglist>(const TempoSetting *) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>countTemposInRegion</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a4c826dc6550388da0413755b0960c0e4</anchor>
      <arglist>(TimeRange) const</arglist>
    </member>
    <member kind="function">
      <type>TempoSetting::Ptr</type>
      <name>insertTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a3e68782eaaa7d4b6cf800aa6a30d4f88</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>TempoSetting::Ptr</type>
      <name>insertTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>ae6ec2f265e0f35cde4dc57f8806839bb</anchor>
      <arglist>(BeatPosition, double bpm, float curve)</arglist>
    </member>
    <member kind="function">
      <type>TimeSigSetting::Ptr</type>
      <name>insertTimeSig</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>afbdf498dec0fdb71247e1176f04b10b7</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>TimeSigSetting::Ptr</type>
      <name>insertTimeSig</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>aae4ae33842748870f541c43b4ac386d3</anchor>
      <arglist>(BeatPosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>aa73f1f37d51f94826c53b1b60491c442</anchor>
      <arglist>(int index, bool remapEdit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTemposBetween</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a9a7c954f1a5fcb30c52aa015e5978a17</anchor>
      <arglist>(TimeRange, bool remapEdit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTimeSig</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a0c8df37ac5e3978c3ade354cb4aeb0d1</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeTimeSigsBetween</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a3cdbcec933fa28ce5eae55dca9b9fff8</anchor>
      <arglist>(TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveTempoStart</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a0a53c4df5d9df55f2a77456c60068d5a</anchor>
      <arglist>(int index, BeatDuration deltaBeats, bool snapToBeat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveTimeSigStart</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a2fd107663172f00ec99b646231df829f</anchor>
      <arglist>(int index, BeatDuration deltaBeats, bool snapToBeat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpaceIntoSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a1f0943abdaa613930016741e7dd5d203</anchor>
      <arglist>(TimePosition time, TimeDuration amountOfSpaceInSeconds, bool snapToBeat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegion</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a2fb25dd957112b6092b34d24f36639f1</anchor>
      <arglist>(TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>toBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a6e2b3ed78b5d75dc7ebaba528f8ff43f</anchor>
      <arglist>(TimePosition) const</arglist>
    </member>
    <member kind="function">
      <type>BeatRange</type>
      <name>toBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a7486af13907e853192a3c68d497b8454</anchor>
      <arglist>(TimeRange) const</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>toBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a2a6082673724323d0e92284a802c6eb3</anchor>
      <arglist>(tempo::BarsAndBeats) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>toTime</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a02772c45c38f44b9e02ffc725e4fab0b</anchor>
      <arglist>(BeatPosition) const</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>toTime</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>aaf93107c40af9eef7c5f1328e9ae0477</anchor>
      <arglist>(BeatRange) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>toTime</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a3d1b733368af3b9dc3c63bf0e3bf966c</anchor>
      <arglist>(tempo::BarsAndBeats) const</arglist>
    </member>
    <member kind="function">
      <type>tempo::BarsAndBeats</type>
      <name>toBarsAndBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a9083cf62bb2fc6434fc6e98adbce8fd8</anchor>
      <arglist>(TimePosition) const</arglist>
    </member>
    <member kind="function">
      <type>const tempo::Sequence &amp;</type>
      <name>getInternalSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a77d8f4407859cbc26a89134070cfbd31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tempo::BarsAndBeats</type>
      <name>timeToBarsBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a36d17306959baecb16d7979f8773c36e</anchor>
      <arglist>(TimePosition) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>barsBeatsToTime</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a1cdbf5b2703619ac112e8085cacdb9a6</anchor>
      <arglist>(tempo::BarsAndBeats) const</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>barsBeatsToBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a653e5460103665c75e17e38496f97d60</anchor>
      <arglist>(tempo::BarsAndBeats) const</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>timeToBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>aa98cb2d50f18b6ea0e592a9a0a2e74a7</anchor>
      <arglist>(TimePosition time) const</arglist>
    </member>
    <member kind="function">
      <type>BeatRange</type>
      <name>timeToBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a3d0287dcb4c3bbf8b8ec3202e824635f</anchor>
      <arglist>(TimeRange range) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>beatsToTime</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a890acb1ef3d17c4a47841cedfc842f56</anchor>
      <arglist>(BeatPosition beats) const</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>beatsToTime</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>af97adf0d737e6f4a190b8b321eb8b4c4</anchor>
      <arglist>(BeatRange range) const</arglist>
    </member>
    <member kind="function">
      <type>TimeSigSetting &amp;</type>
      <name>getTimeSigAtBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a562dd2534d6b3199e7c5d7ddf203016f</anchor>
      <arglist>(BeatPosition) const</arglist>
    </member>
    <member kind="function">
      <type>TempoSetting &amp;</type>
      <name>getTempoAtBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a8e7bc7cc581a93f0fb5a54651fa882fc</anchor>
      <arglist>(BeatPosition) const</arglist>
    </member>
    <member kind="function">
      <type>juce::UndoManager *</type>
      <name>getUndoManager</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a3f534c38b9c4485ad7b12b27bdecf04f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a6df9dbd790ac655ec215d3149e10fb3e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeResources</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a6cc96c6ebb6db1b0188526d0ba70087e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateTempoData</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>abf27fd8442bdb3aa69efa5ed1a5607d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>acfb2a75ffe220baa81e0bb0376435c43</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>TempoSetting</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>a372401f34f590890c7d14fae675792eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>TimeSigSetting</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSequence.html</anchorfile>
      <anchor>af7ebf8c0c0c73e2d559175daf5a73e96</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TempoSetting</name>
    <filename>classtracktion_1_1engine_1_1TempoSetting.html</filename>
    <base>tracktion::engine::CurveEditorPoint</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; TempoSetting &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a258fc19b949dbcfb91299a59814a5b64</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TempoSetting</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a9718b0ae3932965fee1861b1641d775d</anchor>
      <arglist>(TempoSequence &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TempoSetting</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a1979169a6002f7795f236c3f066b3065</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Edit &amp;</type>
      <name>getEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a3e1c360ea063aacc03003cdd7c2667c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a2b694895b83e25be9cdf473ce3470b52</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getStartBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a112ef3708d0b34cdd28dfb76fc321ae5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBpm</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a6635d021ad92921c41c4e12648819057</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>aecbab1dbffee0d6ee2161f1b2f30acab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getStartTime</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a4f60027f05090daa442b636b26fd86b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a0d0e567467c96e7de8d0b5c008863243</anchor>
      <arglist>(BeatPosition, double newBpm, float newCurve, bool remapEditPositions)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBpm</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a0e2535341872f8edb0676836e85ba22d</anchor>
      <arglist>(double newBpm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurve</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a63469dcbd81c0586e8c1b17f884d7917</anchor>
      <arglist>(float curve)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStartBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a506a28bb3c737b910c57a3d8f21bc005</anchor>
      <arglist>(BeatPosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFromEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>abac5237206abae38c9aa81a9a9f433db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getApproxBeatLength</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a85509d5a711815482d552d5b27dbad77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TempoSetting *</type>
      <name>getPreviousTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a848c3f0849b757a29dfccca7f7fdfc70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeSigSetting &amp;</type>
      <name>getMatchingTimeSig</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>ab76db055006f7e51209e9c48d651bdb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a3c4052ee5816f2c6c6fa486ebcc88238</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>ac7e7535bdde741e5a58d296df068649e</anchor>
      <arglist>(BeatPosition startBeat, double bpm, float curve)</arglist>
    </member>
    <member kind="variable">
      <type>TempoSequence &amp;</type>
      <name>ownerSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>ad3c7191215805137cbfbbeeecb0b7644</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>acc111d6aafd782b8110804cccb3e8e3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; BeatPosition &gt;</type>
      <name>startBeatNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a36d94fa87db44c935c4945a16cf73903</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; double &gt;</type>
      <name>bpm</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>ab7cc50d5b9740a51ed643990ce35ccba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>curve</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>aba230cd19da09fddac3f7cd8264dfbbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimePosition</type>
      <name>startTime</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a770b9e23163959f0f4dbbeca0472f6d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>minBPM</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a17b3892340b44c9b0cc29cd55973dd05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr double</type>
      <name>maxBPM</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoSetting.html</anchorfile>
      <anchor>a9a3bbebc65075473f7e1d5dfd6a757b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TempoTrack</name>
    <filename>classtracktion_1_1engine_1_1TempoTrack.html</filename>
    <base>tracktion::engine::Track</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; TempoTrack &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoTrack.html</anchorfile>
      <anchor>a2703b889ea2eb6fe0525c609dd19abed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TempoTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoTrack.html</anchorfile>
      <anchor>af9657cfed186090557d271499de75abe</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TempoTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoTrack.html</anchorfile>
      <anchor>ac2690a1603f14783d325b79b749462cb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTempoTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoTrack.html</anchorfile>
      <anchor>a4e6d71497a5a0fc5f7779a682b249c55</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoTrack.html</anchorfile>
      <anchor>a714a48ad68afd57b3a1e1cec1b208c50</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoTrack.html</anchorfile>
      <anchor>ac1abf135c4bd963e0de7d5a88a9b1fa8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTrackItems</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoTrack.html</anchorfile>
      <anchor>a4d3c124079b3ab400733dddabe76626e</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>TrackItem *</type>
      <name>getTrackItem</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoTrack.html</anchorfile>
      <anchor>a58d48a2db47da2f446a293dc727c0c86</anchor>
      <arglist>(int idx) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfTrackItem</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoTrack.html</anchorfile>
      <anchor>ac155cca7895576b62e9530ec3a7d5501</anchor>
      <arglist>(TrackItem *) const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndexOfNextTrackItemAt</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoTrack.html</anchorfile>
      <anchor>af87cb1f77c14acbb2a3efd59342c2ead</anchor>
      <arglist>(TimePosition) override</arglist>
    </member>
    <member kind="function">
      <type>TrackItem *</type>
      <name>getNextTrackItemAt</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoTrack.html</anchorfile>
      <anchor>aec12d079749c5c87e51e3e9021f87622</anchor>
      <arglist>(TimePosition) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoTrack.html</anchorfile>
      <anchor>acb9cb1437c064b35f05a67b58849334c</anchor>
      <arglist>(Plugin *) const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpaceIntoTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1TempoTrack.html</anchorfile>
      <anchor>a8c6d402c83a8b150fc32bb5033c4d60b</anchor>
      <arglist>(TimePosition, TimeDuration) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ProjectManager::TempProject</name>
    <filename>structtracktion_1_1engine_1_1ProjectManager_1_1TempProject.html</filename>
    <member kind="function">
      <type></type>
      <name>TempProject</name>
      <anchorfile>structtracktion_1_1engine_1_1ProjectManager_1_1TempProject.html</anchorfile>
      <anchor>a8dc21f0505452d89f5fbe37c8e9f8332</anchor>
      <arglist>(ProjectManager &amp;pm, const juce::File &amp;f, bool createNewProjectID)</arglist>
    </member>
    <member kind="variable">
      <type>Project::Ptr</type>
      <name>project</name>
      <anchorfile>structtracktion_1_1engine_1_1ProjectManager_1_1TempProject.html</anchorfile>
      <anchor>a77d2e33ad83be178779992f429bb6652</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::test_utilities::TestContext</name>
    <filename>structtracktion_1_1graph_1_1test__utilities_1_1TestContext.html</filename>
    <member kind="variable">
      <type>juce::AudioBuffer&lt; float &gt;</type>
      <name>buffer</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestContext.html</anchorfile>
      <anchor>a19f532ac7b798e9dc6caba7dbeacf3cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::MidiBuffer</type>
      <name>midi</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestContext.html</anchorfile>
      <anchor>abec3701df505ed07f3b7572fc4e7a679</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numProcessMisses</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestContext.html</anchorfile>
      <anchor>a09f67c85a7e2e662442ec65174aac343</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::test_utilities::TestProcess</name>
    <filename>structtracktion_1_1graph_1_1test__utilities_1_1TestProcess.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>TestProcess</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>a3089c6e060bfc66bc98dbf8c8ffcb684</anchor>
      <arglist>(std::unique_ptr&lt; NodePlayerType &gt; playerToUse, TestSetup ts, const int numChannelsToUse, const double duration, bool writeToBuffer)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getDescription</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>ae8a95acd3d592f0b5f349430baf8d438</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PerformanceMeasurement &amp;</type>
      <name>getPerformanceMeasurement</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>a3c8fac7ddc465e08353d50b2c38397bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PerformanceMeasurement::Statistics</type>
      <name>getStatisticsAndReset</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>a5c7c7212e9f8bd834d76f4f5875e6e25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Node &amp;</type>
      <name>getNode</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>aaa244e455ae795c4fd8d76b0bb0cd462</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NodePlayerType &amp;</type>
      <name>getNodePlayer</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>aaed060dddfb52f0d0b6ba41d4ee593a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>a4cbc4541016754881b9c24e4932ec972</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt; newNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlayer</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>a7b04a1b0bbe8a242584dab3e81a4b398</anchor>
      <arglist>(std::unique_ptr&lt; NodePlayerType &gt; newPlayerToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPlayHead</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>aa2d48f0f4e7b5c9b2fd1f39afa6eb8d1</anchor>
      <arglist>(tracktion::graph::PlayHead *newPlayHead)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>process</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>a3482f1f6f85b1bf38087f3c2aca1c4d1</anchor>
      <arglist>(int maxNumSamples)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; TestContext &gt;</type>
      <name>processAll</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>ab1d7b8f8377342ed1eeb084e7f1f4ab5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; TestContext &gt;</type>
      <name>getTestResult</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestProcess.html</anchorfile>
      <anchor>acddc555d99a596944d966c762ee46bc2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::test_utilities::TestSetup</name>
    <filename>structtracktion_1_1graph_1_1test__utilities_1_1TestSetup.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestSetup.html</anchorfile>
      <anchor>afd9b51fa95d74b5256b8c2da7149879e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>blockSize</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestSetup.html</anchorfile>
      <anchor>ae1d2fb290551f10f0111f469af7da474</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>randomiseBlockSizes</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestSetup.html</anchorfile>
      <anchor>aef776d361eb024166b18e3d0ab4362da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Random</type>
      <name>random</name>
      <anchorfile>structtracktion_1_1graph_1_1test__utilities_1_1TestSetup.html</anchorfile>
      <anchor>a3047183ca1b8ef9cd128c801af08bca9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TextPlugin</name>
    <filename>classtracktion_1_1engine_1_1TextPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>TextPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1TextPlugin.html</anchorfile>
      <anchor>afe8eade498b15d2c55bca209b01fd8dc</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TextPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1TextPlugin.html</anchorfile>
      <anchor>a59bf2ded31258b81ebf3c53ae41ce0fe</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToFolderTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1TextPlugin.html</anchorfile>
      <anchor>a0b234110040d40390439432006377357</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1TextPlugin.html</anchorfile>
      <anchor>ad0d36d8a17585c5cb586185d5a76383c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1TextPlugin.html</anchorfile>
      <anchor>ad1e2a51106aa15b05703d712edf8c528</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1TextPlugin.html</anchorfile>
      <anchor>a6572d353bddb9b617dfce1b83a2faebd</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1TextPlugin.html</anchorfile>
      <anchor>a4994fe03b28193c86e4e68af3533f4d6</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1TextPlugin.html</anchorfile>
      <anchor>a36979a82574a8262254c55aa8b5b9dcc</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1TextPlugin.html</anchorfile>
      <anchor>a8f5c66f8cd5f2880802ff2a77bed8684</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1TextPlugin.html</anchorfile>
      <anchor>a00b40a136d2a4a26b83e2561f8547bca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1TextPlugin.html</anchorfile>
      <anchor>af35242a711dadda9d50e6ab607266326</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1TextPlugin.html</anchorfile>
      <anchor>a60139f00f76c729a6a3a0ef0141589c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1TextPlugin.html</anchorfile>
      <anchor>a2f44a4ce383871999b3f6b487d80f793</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>textTitle</name>
      <anchorfile>classtracktion_1_1engine_1_1TextPlugin.html</anchorfile>
      <anchor>ae822f5ba59c5dddb3dd79f3ece015f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>textBody</name>
      <anchorfile>classtracktion_1_1engine_1_1TextPlugin.html</anchorfile>
      <anchor>a851b2663c45d328ac9932e4b8039fa8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1TextPlugin.html</anchorfile>
      <anchor>addaea004b83878a50cef8a8d1bca7d34</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::LockFreeMultiThreadedNodePlayer::ThreadPool</name>
    <filename>structtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</filename>
    <member kind="function">
      <type></type>
      <name>ThreadPool</name>
      <anchorfile>structtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>abca31b9783040cc6365d0d32e0b8b2d7</anchor>
      <arglist>(LockFreeMultiThreadedNodePlayer &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ThreadPool</name>
      <anchorfile>structtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a158e14835d235f9242bf9f23b44dabd4</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>createThreads</name>
      <anchorfile>structtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a1ff176d536a641c595ebe5fe5db9c74a</anchor>
      <arglist>(size_t numThreads, juce::AudioWorkgroup)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>clearThreads</name>
      <anchorfile>structtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a30e66ac5ac4b52c9a26e95c1ed39a157</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>signalOne</name>
      <anchorfile>structtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a4546a45948d2e79ace1c598bdb38a739</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>signal</name>
      <anchorfile>structtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a2e09f162a7605da25afe4144a2866052</anchor>
      <arglist>(int numToSignal)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>signalAll</name>
      <anchorfile>structtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>afb6c350d31df0e0d886bc92a815ecaae</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>waitForFinalNode</name>
      <anchorfile>structtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>ada259f1a28c713d5c9adf27e4582a92d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>signalShouldExit</name>
      <anchorfile>structtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a3790a8843437a055945d1cd40add018f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetExitSignal</name>
      <anchorfile>structtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a79323740d7b0639a0842685611b7c542</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldExit</name>
      <anchorfile>structtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>adc933e4a09862d0102921118c979868a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldWait</name>
      <anchorfile>structtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a286e85f50a4c869f9f481b5cdb1edbb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFinalNodeReady</name>
      <anchorfile>structtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a54807d93daa8673b8def8441d036d16d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>process</name>
      <anchorfile>structtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a71e542763d8f39c41e01483597494162</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentNode</name>
      <anchorfile>structtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a52152ca98087999f5fad25900775450d</anchor>
      <arglist>(LockFreeMultiThreadedNodePlayer::PreparedNode *nodeInUse)</arglist>
    </member>
    <member kind="variable">
      <type>LockFreeMultiThreadedNodePlayer &amp;</type>
      <name>player</name>
      <anchorfile>structtracktion_1_1graph_1_1LockFreeMultiThreadedNodePlayer_1_1ThreadPool.html</anchorfile>
      <anchor>a152916427161a28af7b766ee9faf9f24</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ThreadPoolJobWithProgress</name>
    <filename>classtracktion_1_1engine_1_1ThreadPoolJobWithProgress.html</filename>
    <member kind="function">
      <type></type>
      <name>ThreadPoolJobWithProgress</name>
      <anchorfile>classtracktion_1_1engine_1_1ThreadPoolJobWithProgress.html</anchorfile>
      <anchor>a1410f4584ff499d58d63a56854bc2d05</anchor>
      <arglist>(const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ThreadPoolJobWithProgress</name>
      <anchorfile>classtracktion_1_1engine_1_1ThreadPoolJobWithProgress.html</anchorfile>
      <anchor>aedd8cfd19e6dc8a8f31c6b2cd79f4f1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual float</type>
      <name>getCurrentTaskProgress</name>
      <anchorfile>classtracktion_1_1engine_1_1ThreadPoolJobWithProgress.html</anchorfile>
      <anchor>af3b14a035897c50cca90d37985cea536</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canCancel</name>
      <anchorfile>classtracktion_1_1engine_1_1ThreadPoolJobWithProgress.html</anchorfile>
      <anchor>a115fe08acabab6a5528e383b2aa9e7da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setManager</name>
      <anchorfile>classtracktion_1_1engine_1_1ThreadPoolJobWithProgress.html</anchorfile>
      <anchor>ace0471d1acb61c443ac08b26231f0b14</anchor>
      <arglist>(BackgroundJobManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classtracktion_1_1engine_1_1ThreadPoolJobWithProgress.html</anchorfile>
      <anchor>a816d72f3578b4dcaafc21155908d6737</anchor>
      <arglist>(const juce::String &amp;newName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForJobDeletion</name>
      <anchorfile>classtracktion_1_1engine_1_1ThreadPoolJobWithProgress.html</anchorfile>
      <anchor>aa9218889362b12ab06b54d4614bb98da</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::RecordingThumbnailManager::Thumbnail</name>
    <filename>structtracktion_1_1engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</filename>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; Thumbnail &gt;</type>
      <name>Ptr</name>
      <anchorfile>structtracktion_1_1engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>a2f202eefa8c6f733d05e7998073f1bb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Thumbnail</name>
      <anchorfile>structtracktion_1_1engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>a49b76172585cbbe476f4e5f4ebe80071</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>structtracktion_1_1engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>a0eec9145871130d8579b9a032a44a929</anchor>
      <arglist>(int numChannels, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBlock</name>
      <anchorfile>structtracktion_1_1engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>aa79b813b75594b7ad29fdf1d19790ad6</anchor>
      <arglist>(const juce::AudioBuffer&lt; float &gt; &amp;incoming, int startOffsetInBuffer, int numSamples)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>structtracktion_1_1engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>a1cc2356943f7e3892558453af7154659</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::unique_ptr&lt; juce::AudioThumbnailBase &gt;</type>
      <name>thumb</name>
      <anchorfile>structtracktion_1_1engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>a9e859e9d129ef65b468cb3337ac78ca4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::File</type>
      <name>file</name>
      <anchorfile>structtracktion_1_1engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>abafbb6d4d7c88eba2307bbf13b1f4c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const HashCode</type>
      <name>hash</name>
      <anchorfile>structtracktion_1_1engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>a2a4e9ae35617519f3e23070850f00823</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimePosition</type>
      <name>punchInTime</name>
      <anchorfile>structtracktion_1_1engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>a20e63ce4716869381075334dfbe9e0f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>RecordingThumbnailManager</name>
      <anchorfile>structtracktion_1_1engine_1_1RecordingThumbnailManager_1_1Thumbnail.html</anchorfile>
      <anchor>a458b3d015342d331bc5cf5022a1536d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::TimecodeDisplayFormat</name>
    <filename>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</filename>
    <member kind="function">
      <type></type>
      <name>TimecodeDisplayFormat</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a794e7df1321afaea5d312ac64eaa311b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimecodeDisplayFormat</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a1d0665acdcf9dd19eedcde98be21daa3</anchor>
      <arglist>(TimecodeType t) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a1f16fb23b12771bd570638385d9803cc</anchor>
      <arglist>(const TimecodeDisplayFormat &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a4efa2afc1c7041519b88002358faf1f0</anchor>
      <arglist>(const TimecodeDisplayFormat &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBarsBeats</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>ac6f4670cdecb0bda7d9d805f0975c1f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMilliseconds</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a067e3d480256787e529697169b131bcb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSMPTE</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a86030fc854fd44a617c79a5f57c08dbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFPS</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>af7f6fc1804e2e868bce0a571b9ad9e71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getRoundingDescription</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>aedf45f4b255e47943b895b3869f7a10b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getString</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>abaf27d67dbe4198f0a1e45036e1a9a48</anchor>
      <arglist>(const TempoSequence &amp;, TimePosition, bool isRelative) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getStartLabel</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a8b39a058c506e2caa8f3e7c5fad70f05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumParts</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a2f78528395642f4f3c7bcbef9d26311d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSeparator</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a07a2fd129c96bf6124d52f4bbdca4a15</anchor>
      <arglist>(int part) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxCharsInPart</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a9ccc552d031114e860a9796818044b17</anchor>
      <arglist>(int part, bool canBeNegative) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxValueOfPart</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a0862e4b822639b29d9a04fb54e5773a9</anchor>
      <arglist>(const TempoSequence &amp;, TimecodeDuration currentTime, int part, bool isRelative) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMinValueOfPart</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a93c02791375a4e4332a71b6e22242db7</anchor>
      <arglist>(int part, bool isRelative) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getPartStrings</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>aed2f345ff788c3fe1ba88705e3247ed9</anchor>
      <arglist>(TimecodeDuration duration, const TempoSequence &amp;, bool isRelative, juce::String results[4]) const</arglist>
    </member>
    <member kind="function">
      <type>TimecodeDuration</type>
      <name>getNewTimeWithPartValue</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>ae6d8f6b6e40d063b95fc058f821d7151</anchor>
      <arglist>(TimecodeDuration oldTime, const TempoSequence &amp;, int part, int newValue, bool isRelative) const</arglist>
    </member>
    <member kind="function">
      <type>TimecodeSnapType</type>
      <name>getBestSnapType</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a199e2e953795d02d08c86efb12e11782</anchor>
      <arglist>(const TempoSetting &amp;, TimeDuration onScreenTimePerPixel, bool isTripletOverride) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSnapTypes</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>acb28d5c25e6f0d4082da3fc27841303d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimecodeSnapType</type>
      <name>getSnapType</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>aed84fbd2a5828b59995c847a8d361bd4</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSubSecondDivisions</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a2f3832a2286792ea20d19b264d7ade1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>toFullTimecode</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a2cb130d21c1fcee2921bd696bf6fbdbf</anchor>
      <arglist>(TimePosition, const int subSecondDivisions=1000, bool showHours=false)</arglist>
    </member>
    <member kind="variable">
      <type>TimecodeType</type>
      <name>type</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayFormat.html</anchorfile>
      <anchor>a6f007a0802edcb5fe7f67d5ce3292e57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::TimecodeDisplayIterator</name>
    <filename>structtracktion_1_1engine_1_1TimecodeDisplayIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>TimecodeDisplayIterator</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayIterator.html</anchorfile>
      <anchor>af3eaa6a32ff271e385581e166b0f4822</anchor>
      <arglist>(const Edit &amp;, TimePosition, TimecodeSnapType minSnapTypeToUse, bool isTripletOverride)</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>next</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayIterator.html</anchorfile>
      <anchor>aa429e82fefdc3bdda8ef69802267ae8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTimecodeAsString</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayIterator.html</anchorfile>
      <anchor>abaa7f63b68c9a714db26c2439cf8d08f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCurrentResolutionLevel</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayIterator.html</anchorfile>
      <anchor>a424d4ac273384e70b3aeca82b856a211</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMinimumResolutionLevel</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayIterator.html</anchorfile>
      <anchor>a69a796d67d577000f12472c479657f53</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOneBarOrGreater</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeDisplayIterator.html</anchorfile>
      <anchor>ad719dce19efdc0462935a3d99d74ef38</anchor>
      <arglist>() const noexcept</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TimecodeDuration</name>
    <filename>classtracktion_1_1engine_1_1TimecodeDuration.html</filename>
    <member kind="function">
      <type></type>
      <name>TimecodeDuration</name>
      <anchorfile>classtracktion_1_1engine_1_1TimecodeDuration.html</anchorfile>
      <anchor>a018a26ce9e8255c526693ce205d619d5</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classtracktion_1_1engine_1_1TimecodeDuration.html</anchorfile>
      <anchor>a1dfde5a79208fa513b73898046ad0f4e</anchor>
      <arglist>(const TimecodeDuration &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classtracktion_1_1engine_1_1TimecodeDuration.html</anchorfile>
      <anchor>a72409d642bd656d68456718a92735ade</anchor>
      <arglist>(const TimecodeDuration &amp;) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimecodeDuration</type>
      <name>fromSeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1TimecodeDuration.html</anchorfile>
      <anchor>ab385474b6c2f0c3138a7ad1f1dd2e96c</anchor>
      <arglist>(Edit &amp;, TimePosition start, TimePosition end)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimecodeDuration</type>
      <name>fromBeatsOnly</name>
      <anchorfile>classtracktion_1_1engine_1_1TimecodeDuration.html</anchorfile>
      <anchor>a0c0daf3a7654aa4c4d18d49af16c7281</anchor>
      <arglist>(BeatDuration beats, int beatsPerBar)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimecodeDuration</type>
      <name>fromSecondsOnly</name>
      <anchorfile>classtracktion_1_1engine_1_1TimecodeDuration.html</anchorfile>
      <anchor>a994b4ad869c8398da44d91bb72997cb9</anchor>
      <arglist>(TimeDuration seconds)</arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; TimeDuration &gt;</type>
      <name>seconds</name>
      <anchorfile>classtracktion_1_1engine_1_1TimecodeDuration.html</anchorfile>
      <anchor>a5f95bf2617dd3e6630469d86f99c654a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::optional&lt; BeatDuration &gt;</type>
      <name>beats</name>
      <anchorfile>classtracktion_1_1engine_1_1TimecodeDuration.html</anchorfile>
      <anchor>a59170ecd670ebfdf6a30f344d87aa2ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>beatsPerBar</name>
      <anchorfile>classtracktion_1_1engine_1_1TimecodeDuration.html</anchorfile>
      <anchor>ae851fe1f48dbade11f7a0219f4e2ec50</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::TimecodeSnapType</name>
    <filename>structtracktion_1_1engine_1_1TimecodeSnapType.html</filename>
    <member kind="function">
      <type></type>
      <name>TimecodeSnapType</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a64224f4f19b38754e10c9f1374c1fb21</anchor>
      <arglist>() noexcept=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimecodeSnapType</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>aad478ca91d394c54305b6b252b40994e</anchor>
      <arglist>(TimecodeType t, int lev) noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDescription</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a68bf07312812a2318e967003236a35bd</anchor>
      <arglist>(const TempoSetting &amp;, bool isTripletOverride) const</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getApproxIntervalTime</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>ae418d49e945b15081c1c226f0320c7dc</anchor>
      <arglist>(const TempoSetting &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getApproxIntervalTime</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a985b74379e3dc70f44ae215ce1311284</anchor>
      <arglist>(const TempoSetting &amp;, bool isTripletsOverride) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTimecodeString</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a467cbacdcad947873777abfcff1335f8</anchor>
      <arglist>(TimePosition time, const TempoSequence &amp;, bool useStartLabelIfZero) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>roundTimeDown</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a5eec51dc85575f3dc6b74f5660712d7d</anchor>
      <arglist>(TimePosition, const TempoSequence &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>roundTimeDown</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>ab83f0fcf9dddc64b9719e048b3520186</anchor>
      <arglist>(TimePosition, const TempoSequence &amp;, bool isTripletsOverride) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>roundTimeNearest</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a3becf4cfc625eab14b467e077bd7579c</anchor>
      <arglist>(TimePosition, const TempoSequence &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>roundTimeNearest</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a7de01990a35095e0b471a33314587534</anchor>
      <arglist>(TimePosition, const TempoSequence &amp;, bool isTripletsOverride) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>roundTimeUp</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>ae4a07d9936f3afc7515300684d0c4195</anchor>
      <arglist>(TimePosition, const TempoSequence &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>roundTimeUp</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>abcc83de99dcfced923ce47cdb663cb56</anchor>
      <arglist>(TimePosition, const TempoSequence &amp;, bool tripletsOverride) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLevel</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>ac1b9f457c1d17e151be06fd576a13ab7</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOneBarLevel</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>acf9547fa38767d2b27d5dc5c810d53f5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>TimecodeSnapType</type>
      <name>getSnapTypeForMaximumSnapLevelOf</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a89bfbfdcba9465927634874d6087be0c</anchor>
      <arglist>(TimePosition, const TempoSequence &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>TimecodeSnapType</type>
      <name>getSnapTypeForMaximumSnapLevelOf</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a69120e2768dea732d93986af79b585e9</anchor>
      <arglist>(TimePosition, const TempoSequence &amp;, bool isTripletsOverride) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimecodeSnapType</type>
      <name>get1BeatSnapType</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a32bb3f564cf39c36d520cba2a07cee81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>TimecodeType</type>
      <name>type</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a5a5362a2e38b93fdfb679da7b61ae568</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>level</name>
      <anchorfile>structtracktion_1_1engine_1_1TimecodeSnapType.html</anchorfile>
      <anchor>a12175e6b5b5b966d46ea3a3d340856bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TimedMutingAudioNode</name>
    <filename>classtracktion_1_1engine_1_1TimedMutingAudioNode.html</filename>
    <base>tracktion::engine::SingleInputAudioNode</base>
    <member kind="function">
      <type></type>
      <name>TimedMutingAudioNode</name>
      <anchorfile>classtracktion_1_1engine_1_1TimedMutingAudioNode.html</anchorfile>
      <anchor>ae834cfca48794e44161e3bb7a3f40cec</anchor>
      <arglist>(AudioNode *inp, const juce::Array&lt; legacy::EditTimeRange &gt; &amp;muteTimes_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderSection</name>
      <anchorfile>classtracktion_1_1engine_1_1TimedMutingAudioNode.html</anchorfile>
      <anchor>ad87a8382ca268f85e27073fee40297a9</anchor>
      <arglist>(const AudioRenderContext &amp;rc, legacy::EditTimeRange editTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderOver</name>
      <anchorfile>classtracktion_1_1engine_1_1TimedMutingAudioNode.html</anchorfile>
      <anchor>a7e83698e4735def050a29d599c214949</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderAdding</name>
      <anchorfile>classtracktion_1_1engine_1_1TimedMutingAudioNode.html</anchorfile>
      <anchor>ac92748a0ceb5a50bc0c84ad477ebd2c2</anchor>
      <arglist>(const AudioRenderContext &amp;rc) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TimedMutingNode</name>
    <filename>classtracktion_1_1engine_1_1TimedMutingNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>TimedMutingNode</name>
      <anchorfile>classtracktion_1_1engine_1_1TimedMutingNode.html</anchorfile>
      <anchor>a1c68c2981b5140a8faa9f4497e28cf7c</anchor>
      <arglist>(std::unique_ptr&lt; tracktion::graph::Node &gt;, juce::Array&lt; TimeRange &gt; muteTimes, tracktion::graph::PlayHeadState &amp;)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1TimedMutingNode.html</anchorfile>
      <anchor>aab8a277d09e7345d7b7aa1592dd2fd27</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1TimedMutingNode.html</anchorfile>
      <anchor>a14f094412f45f8dd9f99b713164ff26b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1TimedMutingNode.html</anchorfile>
      <anchor>a7becacaa85884d7904b2c0db090eb008</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1TimedMutingNode.html</anchorfile>
      <anchor>ab7a91d7afbe4a7965cb9c9f3d91eb003</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1TimedMutingNode.html</anchorfile>
      <anchor>aa83ff70ae6df8785d1966873037b53fd</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::TimeSigs</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1TimeSigs.html</filename>
    <base>tracktion::engine::Clipboard::ContentType</base>
    <member kind="function">
      <type></type>
      <name>TimeSigs</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1TimeSigs.html</anchorfile>
      <anchor>adc31a729ac1cd6fb38f824b9d2419395</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TimeSigs</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1TimeSigs.html</anchorfile>
      <anchor>a0d86dee196b5fa471c7834f39f409e43</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1TimeSigs.html</anchorfile>
      <anchor>a3f66b5d9a69c2132ba55c013aca3236a</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1TimeSigs.html</anchorfile>
      <anchor>ae3179b071e4302d9007657da52f29b5a</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1TimeSigs.html</anchorfile>
      <anchor>a2b8ac2e249e6721e16dd1ca7831b15da</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; juce::ValueTree &gt;</type>
      <name>timeSigs</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1TimeSigs.html</anchorfile>
      <anchor>a12afa9c9ea653f95bc83fdeab79b781f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TimeSigSetting</name>
    <filename>classtracktion_1_1engine_1_1TimeSigSetting.html</filename>
    <base>tracktion::engine::TrackItem</base>
    <base protection="private">tracktion::engine::ValueTreeAllEventListener</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; TimeSigSetting &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a7e3acf99b8488e44531c39a4985e0932</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; TimeSigSetting &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>ab728fb6d55c830b23ddc55a195bdadab</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeSigSetting</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>aa2cb5a19f3078145bb26b3ca5069937b</anchor>
      <arglist>(TempoSequence &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TimeSigSetting</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a09cebaffa2cbae8028dd3724243da302</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>ClipPosition</type>
      <name>getPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>aaf956e18c614af7df0c8a2cd6d5a89d5</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getStartBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a3b075879f5313fc0ef166571615bb5e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getStringTimeSig</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>abc8475218954a9782591383b8eefbdbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStringTimeSig</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>ad8a8a3336e9d46136e97434540a803b8</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFromEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a47ee62888cbf527cf9fbd64f7d608ccd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a7d249bf2dc0b6ad298002d3329c5de37</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>ad8a2e2e1218d2ce2dd78fffc81f9999b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a6733ca83930d7b2168e0a9831235026e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a954a044ff2e1566d4952ebd6f81f011b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TempoSequence &amp;</type>
      <name>ownerSequence</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>acc709e3f58ff1f9e841b8f5000072db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; BeatPosition &gt;</type>
      <name>startBeatNumber</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a3740704bf379dd235f729b675d85cd57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>numerator</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a7f5c2ec94f11b1d9bb01be74debcb673</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>denominator</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>ae395b4d688f3c285cbf5245874347985</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>triplets</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a89db1890442d1240a6cba8096da9c74e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimePosition</type>
      <name>startTime</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>a3e636985b5a6472f3ee165b5efcc8d38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimePosition</type>
      <name>endTime</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeSigSetting.html</anchorfile>
      <anchor>ab6bff358632986759c5d1c9d809d1c22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TimeStretcher</name>
    <filename>classtracktion_1_1engine_1_1TimeStretcher.html</filename>
    <class kind="struct">tracktion::engine::TimeStretcher::ElastiqueProOptions</class>
    <member kind="enumeration">
      <type></type>
      <name>Mode</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>disabled</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea8fda89dcd82ed632a2ec59a280d75509</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueTransient</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79eaf5d8a29d183499da6443efdb1d795297</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueTonal</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea1a807f5c0ecc64a522c3f5d176d21c6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soundtouchNormal</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea39ec44936b3981ca6e3529140f7f2cd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soundtouchBetter</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79eaffd4fc1d8ca6b1302f15869ff6d4d57e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>melodyne</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79eac2510c267da3bb584284990e15735488</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiquePro</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea4ea77c458ab79e7b704123479ef31891</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueEfficient</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79eac6c6660aff582197e99a836ffec85190</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueMobile</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79eafe9b098de5322acbbc7df315db5e52fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueMonophonic</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea91f1f50630ea1477f869dd40c3d30f7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rubberbandMelodic</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea33ff24a3267cb8fd0dfc8db855499a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rubberbandPercussive</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79eac12f97ef281ef96a9b44fa6f9449d926</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueDirectPro</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea27961f1cc634b4720774d66834e6cb85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueDirectEfficient</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea91f4e65141b02cc4c7e03b1e60fad36b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueDirectMobile</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea9e2712528443a907fd72d1f1fcaee303</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultMode</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea595e4aaf11d095318410438363dc328e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>disabled</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea8fda89dcd82ed632a2ec59a280d75509</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueTransient</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79eaf5d8a29d183499da6443efdb1d795297</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueTonal</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea1a807f5c0ecc64a522c3f5d176d21c6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soundtouchNormal</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea39ec44936b3981ca6e3529140f7f2cd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soundtouchBetter</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79eaffd4fc1d8ca6b1302f15869ff6d4d57e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>melodyne</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79eac2510c267da3bb584284990e15735488</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiquePro</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea4ea77c458ab79e7b704123479ef31891</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueEfficient</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79eac6c6660aff582197e99a836ffec85190</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueMobile</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79eafe9b098de5322acbbc7df315db5e52fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueMonophonic</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea91f1f50630ea1477f869dd40c3d30f7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rubberbandMelodic</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea33ff24a3267cb8fd0dfc8db855499a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>rubberbandPercussive</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79eac12f97ef281ef96a9b44fa6f9449d926</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueDirectPro</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea27961f1cc634b4720774d66834e6cb85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueDirectEfficient</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea91f4e65141b02cc4c7e03b1e60fad36b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>elastiqueDirectMobile</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea9e2712528443a907fd72d1f1fcaee303</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>defaultMode</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aef6990d119f230d6c5ffb78f4470c79ea595e4aaf11d095318410438363dc328e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeStretcher</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>aac46d75ff1a6dfe81c355f4fae1bd7d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TimeStretcher</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>ae1191fdecbbab6ad6bd9fb615037889d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a012750d34cd791f0fb3e4ca15342fce5</anchor>
      <arglist>(double sourceSampleRate, int samplesPerBlock, int numChannels, Mode, ElastiqueProOptions, bool realtime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialised</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a2c971dcea9a039225f9cd6526a8c9739</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a360a9ac49d86424daed3ad250300b245</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setSpeedAndPitch</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>adc07d1a676fb5fde92154f5569a7c133</anchor>
      <arglist>(float speedRatio, float semitones)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxFramesNeeded</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a6fe10daa48712dbf2c682e88d2f86f34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFramesNeeded</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a15b81ca1577c242cdb59f24de9677643</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>processData</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a914683bfca2c126c70fdbce6ede66dc2</anchor>
      <arglist>(const float *const *inChannels, int numSamples, float *const *outChannels)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>processData</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a9faaa3a3492004a512ac7555559ebb7e</anchor>
      <arglist>(AudioFifo &amp;inFifo, int numSamples, AudioFifo &amp;outFifo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>flush</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a9e405dca804c129a819de864f7660a3a</anchor>
      <arglist>(float *const *outChannels)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Mode</type>
      <name>checkModeIsAvailable</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a705053fbbe8dc1e9abbd2124e0ac6fd4</anchor>
      <arglist>(Mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getPossibleModes</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>ac63602d1fdafb98ccfd16253abdcb310</anchor>
      <arglist>(Engine &amp;, bool excludeMelodyne)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Mode</type>
      <name>getModeFromName</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a2ec0e031039b06c777b00d40ab2f379b</anchor>
      <arglist>(Engine &amp;, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getNameOfMode</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a62b46b2525e36f474a6af837dd99c4fb</anchor>
      <arglist>(Mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isMelodyne</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a23d4935753bb73c6d3b229c33995ef60</anchor>
      <arglist>(Mode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>canProcessFor</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretcher.html</anchorfile>
      <anchor>a2147870c0754b4512e5d5ee82557eab6</anchor>
      <arglist>(Mode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TimeStretchingWaveNode</name>
    <filename>classtracktion_1_1engine_1_1TimeStretchingWaveNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>TimeStretchingWaveNode</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretchingWaveNode.html</anchorfile>
      <anchor>a6cddc23092d29c65a4ad7f4859b9073a</anchor>
      <arglist>(AudioClipBase &amp;, tracktion::graph::PlayHeadState &amp;)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretchingWaveNode.html</anchorfile>
      <anchor>a63395cc775e42024b2752fca5e559e81</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretchingWaveNode.html</anchorfile>
      <anchor>aa5d6878435749423c2a20e97baed5b96</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretchingWaveNode.html</anchorfile>
      <anchor>ab19faf96c30ef0242bc5bcedcf64551a</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretchingWaveNode.html</anchorfile>
      <anchor>a3f61e48db46081bcad75030fc65c01f5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1TimeStretchingWaveNode.html</anchorfile>
      <anchor>a6b1bf302a1f64bba97ad429a106e0334</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ToneGeneratorPlugin</name>
    <filename>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="enumeration">
      <type></type>
      <name>OscType</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a7fbfcbed97976615c9a1aa400f9ef6a3</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1ToneGeneratorPlugin.html" anchor="a7fbfcbed97976615c9a1aa400f9ef6a3a7d27e4a7ca7533a3bef4fad10a0c19c7">sin</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ToneGeneratorPlugin.html" anchor="a7fbfcbed97976615c9a1aa400f9ef6a3acef44b46f16ae8ecf664df4266ffdbf9">triangle</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ToneGeneratorPlugin.html" anchor="a7fbfcbed97976615c9a1aa400f9ef6a3acf87f9eb2bfacc5a0362031eba539290">sawUp</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ToneGeneratorPlugin.html" anchor="a7fbfcbed97976615c9a1aa400f9ef6a3a3593df94728cd88f078bbc6c41df9876">sawDown</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ToneGeneratorPlugin.html" anchor="a7fbfcbed97976615c9a1aa400f9ef6a3a2fc01ec765ec0cb3dcc559126de20b30">square</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1ToneGeneratorPlugin.html" anchor="a7fbfcbed97976615c9a1aa400f9ef6a3aaaddc3454ccbefbb2d8d8461f8f7f481">noise</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>ToneGeneratorPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a3c139d8e3a157778fa9fe96efb6d055b</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ToneGeneratorPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>acfd99938944a9c6d204c27c38404aab9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a360f7a13cf9608ecadeb01e7bc72e4fa</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>aa074f5a98f3e44b6b7052ea56085a51a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a55ebbaec1f9b17d5876c20671195314a</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>producesAudioWhenNoAudioInput</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>aaa2566249a8c81de90de45d883dc4351</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSynth</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a9bd1656a8ac0de8341c50ab60bbc6db9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a2b8a7021b6ce03cd2ee96812dd00eee9</anchor>
      <arglist>(int numInputChannels) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a7e526585b9afde93bb4f7ab0130debbe</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a38fbc015f93376e4c061681cbd48ef05</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a2bd749054e3f419348801a134a695e40</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a4a2d20ec767ac21ab2118705b9cfefb1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>ade0e7f7994c6c48f8d0d879634efa920</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a737f34e92a3e9768188e9c4727010471</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getOscTypeNames</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>ab94860705cfb986b1aad51ac4bf92789</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>oscType</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a49b2df7991921408967ef04e130f5218</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>bandLimit</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a5d46c374eeca1acd9204c2cc95ed59bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>frequency</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a5796684e0c360756faa02aa391cc2c6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>level</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a0821209992a3b480de4b651d57c4d1d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>oscTypeParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>ac0964451909be8308aa5e8f02ecfdec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>bandLimitParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a25f08f0e1a506dd6ce65f6d3821e313c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>frequencyParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>a4bca9afdc6d25e5b2f0762d6e07d74d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>levelParam</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>af63867c76f12a0df959df711b57e40a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1ToneGeneratorPlugin.html</anchorfile>
      <anchor>aa9d025d0fd0e026f61573961af8befd5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::Track</name>
    <filename>classtracktion_1_1engine_1_1Track.html</filename>
    <base>tracktion::engine::EditItem</base>
    <base>tracktion::engine::Selectable</base>
    <member kind="enumeration">
      <type></type>
      <name>FreezeType</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a66a906a4bc31c0cd0233d75b6fb4bc91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>groupFreeze</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a66a906a4bc31c0cd0233d75b6fb4bc91a88d42ec012865602a3056590e370f70b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>individualFreeze</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a66a906a4bc31c0cd0233d75b6fb4bc91a490c2325bf58b49bc48d63428654f530</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>anyFreeze</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a66a906a4bc31c0cd0233d75b6fb4bc91ac9509b2dabc49210db0d1d29780dd575</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MuteAndSoloLightState</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af2bbaf1bca5f5d7f9102746c0e1dd686</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soloLit</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af2bbaf1bca5f5d7f9102746c0e1dd686a5e7fcbfe9ca9cfa46f520c19a8daf737</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soloFlashing</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af2bbaf1bca5f5d7f9102746c0e1dd686af4b9c3ef69d7897dc2116f7a3de4f709</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soloIsolate</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af2bbaf1bca5f5d7f9102746c0e1dd686a6a2ddf2b22c7ec44300a36c56bdd891e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>muteLit</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af2bbaf1bca5f5d7f9102746c0e1dd686a45816a7b6183b7afa38e1abf335b3a45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>muteFlashing</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af2bbaf1bca5f5d7f9102746c0e1dd686a400645409d93cffb18e6ce79c88b94e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; Track &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a8bbffe25d3ca263d831493bf4596c2ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedArray&lt; Track &gt;</type>
      <name>Array</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a1a2fe0db87e21c4c1da6d700b7aa423f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>groupFreeze</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a66a906a4bc31c0cd0233d75b6fb4bc91a88d42ec012865602a3056590e370f70b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>individualFreeze</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a66a906a4bc31c0cd0233d75b6fb4bc91a490c2325bf58b49bc48d63428654f530</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>anyFreeze</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a66a906a4bc31c0cd0233d75b6fb4bc91ac9509b2dabc49210db0d1d29780dd575</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soloLit</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af2bbaf1bca5f5d7f9102746c0e1dd686a5e7fcbfe9ca9cfa46f520c19a8daf737</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soloFlashing</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af2bbaf1bca5f5d7f9102746c0e1dd686af4b9c3ef69d7897dc2116f7a3de4f709</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>soloIsolate</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af2bbaf1bca5f5d7f9102746c0e1dd686a6a2ddf2b22c7ec44300a36c56bdd891e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>muteLit</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af2bbaf1bca5f5d7f9102746c0e1dd686a45816a7b6183b7afa38e1abf335b3a45</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>muteFlashing</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af2bbaf1bca5f5d7f9102746c0e1dd686a400645409d93cffb18e6ce79c88b94e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Track</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a62161e6dabbcaf3704d864813323456e</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;, bool hasModifierList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Track</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>ad996bc3142e6ceb4b7adb061ac0f0011</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>acffcbe0a5d6d5840645c0fb202f62b60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a892578c9c53d64d931d19b193a5b46c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refreshCurrentAutoParam</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af9221a8a31aadd2156c0ea20d741c6ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a9ca7e65e0974008ee0607083ebb8ceb2</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a28d33175031d85c5516a29e1e91c54af</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetName</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>ae3542f16cc537a39b057b7db870454d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sanityCheckName</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a2a63fa0174736121473af21e8a43fd46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isAudioTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>ad8dcf0c17a9537f5b6944721936db761</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isAutomationTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a080bd887037cc585cd67f9578c17eb71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isFolderTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a7466f0c10d51981f991f34217c89f390</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isMarkerTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a08b0be92fdcfaa99af6bdea50a964f15</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isTempoTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>aa5f9b6f0ec1c57874e39e3ce0378f41f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isChordTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a9ed23b6e1148914b57090395ba4aba51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isArrangerTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>aefc35fc1fef35fc34a25cb93efa3efc2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isMasterTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>ac3d9b219773d6923bc358a189d4402fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainMarkers</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a705dfdfa3e4150c06a0dbc625fdaeb64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainMIDI</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a206e0b0d8e1cef9f6baaabf7b3724c3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainAudio</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a033a7044f86a9b52a1ae579316dbb5c3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainEditClips</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a80f0d556bc72e44f652ca63f6603f6d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a9235add83fdff1b2870609aa5a9c663d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMovable</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a08f1c661fb30c591ca13873ff086b004</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>acceptsInput</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a4d159084b8c79c2bca18008af7180b7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createsOutput</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a09041c56c905d5cae2d9cdfb0f2be346</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wantsAutomation</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a4e0c17741e1cb89b1a49fbb8b9fefe32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>canContainPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>aa7b35d23d7eadf508b21df11765fa16a</anchor>
      <arglist>(Plugin *) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isFrozen</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a1aee52b9ff852c554c1cc768a5f804f9</anchor>
      <arglist>(FreezeType) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFrozen</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a09071e589b647404f8c7eccc5561ec97</anchor>
      <arglist>(bool, FreezeType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHidden</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af433fd9eb61a3c46b20096f9c721ea02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHidden</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a70d0ea336dd9ad65787765565c7b6b15</anchor>
      <arglist>(bool h)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isProcessing</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a1e12085416d0dd83546a5828bb67a9e1</anchor>
      <arglist>(bool includeParents) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProcessing</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a90265a162580d4ae5d9a9d1f5e0ee49b</anchor>
      <arglist>(bool p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>processAudioNodesWhileMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a8e1389f3e09226823faf0b2f3cdbe992</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::Array&lt; Track * &gt;</type>
      <name>getInputTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a7e8e29f706e6032961c3b2eeb88d575b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>getAllSubTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>aec88bb4f2113d524d85a97bf244f3d42</anchor>
      <arglist>(bool recursive) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AudioTrack * &gt;</type>
      <name>getAllAudioSubTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>acb5f56a2b5db7dc1fd2891348399ff1e</anchor>
      <arglist>(bool recursive) const</arglist>
    </member>
    <member kind="function">
      <type>TrackList *</type>
      <name>getSubTrackList</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af1cf27a67d215b3f7371e4aa86c6616b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSubTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a4f0ad4412e0ebe5bca013cf2ef3459c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Clip *</type>
      <name>findClipForID</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a4152ff33542542526bddfc9c8bffbfab</anchor>
      <arglist>(EditItemID) const</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getSiblingTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>ae51037cf8c8b101fb2efebe5ecf139b8</anchor>
      <arglist>(int delta, bool keepWithinSameParent) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumTrackItems</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a44b20da5faee037d01ea79b419217470</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TrackItem *</type>
      <name>getTrackItem</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a3f62c6d2379b86ef3ee9b6493e89d118</anchor>
      <arglist>(int) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>indexOfTrackItem</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a2624a3ac90a7bb52fe27deb4047a290d</anchor>
      <arglist>(TrackItem *) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getIndexOfNextTrackItemAt</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>acef9e556742256c0fb4157fb0b896e79</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TrackItem *</type>
      <name>getNextTrackItemAt</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af35fcd72e63da78615336874c9760f1e</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>insertSpaceIntoTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>ab4ddc09d40476810526aabd4a59fbe9c</anchor>
      <arglist>(TimePosition, TimeDuration)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>getParentTrackTree</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a0ef445f4ea1552b9e1a13b29abff60c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getParentTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a41b7e937fb1f1bfd5f4be4188f0c28ef</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>FolderTrack *</type>
      <name>getParentFolderTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a9d77de2dc53bf00b85890a875644804e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAChildOf</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a4634548a8ca9610276cd312d8711766a</anchor>
      <arglist>(const Track &amp;possibleParent) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPartOfSubmix</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>aa1e46e0bcb7bcb273167d2c09e3eafd2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndexInEditTrackList</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a8f4499a9f00c2bfab056b025c05309c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTrackDepth</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a07cd8710f501587d4a3a02fe1d392388</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>ad9a8dd0daabb0f9d0c5443238ad2d9c5</anchor>
      <arglist>(bool) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isSolo</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a5420d2de3e8dbfb1842349b7076d8b33</anchor>
      <arglist>(bool) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isSoloIsolate</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>aa8906fd4067368e596861c45ea6c8a5c</anchor>
      <arglist>(bool) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMute</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a7b9c4b357793bd548475ab264aac1052</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSolo</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a80f2484750d7f7e34d2dfd2df603bf84</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSoloIsolate</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>aaae6e1123730d9b45a08d5ecbf83034e</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>MuteAndSoloLightState</type>
      <name>getMuteAndSoloLightState</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a1b0a2b58bf7316906bb1b4ee5d14a98b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldBePlayed</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a4eb26041a0b9d9e4432556486e225e33</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateAudibility</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>aff80ac3520a485ba4a38a72bb75da7d5</anchor>
      <arglist>(bool areAnyTracksSolo)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomatableParameter * &gt;</type>
      <name>getAllAutomatableParams</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a6d7d6c8f533c88a089986d393986dd88</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitAllAutomatableParams</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>ae08252a9ea8d23115c4fe67db35ff6af</anchor>
      <arglist>(const std::function&lt; void(AutomatableParameter &amp;)&gt; &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter *</type>
      <name>getCurrentlyShownAutoParam</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a9c12b29b2c2a1be21d0fee148999e9e5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentlyShownAutoParam</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>aa4daeff7a00857705b86899ebcd5205f</anchor>
      <arglist>(const AutomatableParameter::Ptr &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hideAutomatableParametersForSource</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a16c033719d3ed68d75b1518a22fb2289</anchor>
      <arglist>(EditItemID pluginOrParameterID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>containsPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a1a543c5ff181e59b63475a18915dc94c</anchor>
      <arglist>(const Plugin *) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFreezePointPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>ace90fd00407f6f9c4b5b06931379f1e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomatableEditItem * &gt;</type>
      <name>getAllAutomatableEditItems</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a267eb3d351a3b24e8092b932528c8212</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Plugin::Array</type>
      <name>getAllPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a692d49b53a806fff790c5860127e5be6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sendMirrorUpdateToAllPlugins</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af882174a67af2fda8347fc1b2658369a</anchor>
      <arglist>(Plugin &amp;changedPlugin) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipAllPluginsEnablement</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>adc3474101474547d5cf3fbef5311d094</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ModifierList *</type>
      <name>getModifierList</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af06066c98356962e065f6c70ac7bd9ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColour</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>acc5857ab0d14b2c2be130eb856516477</anchor>
      <arglist>(juce::Colour newColour)</arglist>
    </member>
    <member kind="function">
      <type>juce::Colour</type>
      <name>getColour</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>ab7fdc8e450949c05acfb3de92579b7c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canShowImage</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a73d73e7f7475a291470f6cdb86867d57</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTrackImage</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a327c4bee88394d16026dedeb9fe00927</anchor>
      <arglist>(const juce::String &amp;idOrData)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTrackImage</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>ad706547a737fad06af45f5aa3d442376</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>imageHasChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>afd280b2b0ecd72b6ee7c9a7000f3eb42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTags</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a74de0134da9760051eff34835e8f491e</anchor>
      <arglist>(const juce::StringArray &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getTags</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a63e64f8b10dc74b8ce83826eb814984e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const juce::StringArray &amp;</type>
      <name>getTagsArray</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a740dda8bc98b1a69185ffcec6aebcd29</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>ab233197d64c059303ace3859763a86fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PluginList</type>
      <name>pluginList</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a1a3cda8870d74d0de49d8d8de071015c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>minTrackHeightForDetail</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>ac2172144306f7e5e90c6aeac2547fa79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>trackHeightForEditor</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a3e235283efd048e63413814540c878c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>frozenTrackHeight</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af0004dac98d8412c40677ece886bcd56</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>af9b5f81cb100c7f99ae43f7f65c3c755</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a8edd13314199387df15f8a22729d0f67</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>a4f2394f91351669dea06f046a350ed64</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>ab472650933e580abc620964248a759f1</anchor>
      <arglist>(juce::ValueTree &amp;, int, int) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>afa7ce8dd6239569c6db0e655a267ddb2</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleAsyncUpdate</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>ae6cd67d6d1c0965d3a3e007d61770328</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>isTrackAudible</name>
      <anchorfile>classtracktion_1_1engine_1_1Track.html</anchorfile>
      <anchor>ac985b50b043790d6fd7cef7ef0e6826f</anchor>
      <arglist>(bool areAnyTracksSolo) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::TrackAutomationSection</name>
    <filename>structtracktion_1_1engine_1_1TrackAutomationSection.html</filename>
    <class kind="struct">tracktion::engine::TrackAutomationSection::ActiveParameters</class>
    <member kind="function">
      <type></type>
      <name>TrackAutomationSection</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackAutomationSection.html</anchorfile>
      <anchor>a12fe136bdf48d9b199dd6e41bf054e20</anchor>
      <arglist>() noexcept=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackAutomationSection</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackAutomationSection.html</anchorfile>
      <anchor>a7d2dfa964a8c34039d3a5703ae61719a</anchor>
      <arglist>(TrackItem &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeIn</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackAutomationSection.html</anchorfile>
      <anchor>a423e37bd6da6299d9df55f477d9bfadc</anchor>
      <arglist>(const TrackAutomationSection &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>overlaps</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackAutomationSection.html</anchorfile>
      <anchor>af205bc839b2ba665af85d8bed93f4d60</anchor>
      <arglist>(const TrackAutomationSection &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsParameter</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackAutomationSection.html</anchorfile>
      <anchor>a14285f726c9aea8be814714900260506</anchor>
      <arglist>(AutomatableParameter *) const</arglist>
    </member>
    <member kind="variable">
      <type>TimeRange</type>
      <name>position</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackAutomationSection.html</anchorfile>
      <anchor>aecaf96f486878539980cd78199e9b85e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Track::Ptr</type>
      <name>src</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackAutomationSection.html</anchorfile>
      <anchor>a0bcc87c2eb1dd1d5218e9d50e7b1539e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Track::Ptr</type>
      <name>dst</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackAutomationSection.html</anchorfile>
      <anchor>acaf7b413c51eb0c5afef631605c447cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; ActiveParameters &gt;</type>
      <name>activeParameters</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackAutomationSection.html</anchorfile>
      <anchor>aea8d8370a3ccbbdf8c91c8e89226eda5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::TrackCompManager::TrackComp</name>
    <filename>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</filename>
    <base>tracktion::engine::Selectable</base>
    <base>ValueTreeObjectList&lt; CompSection &gt;</base>
    <class kind="struct">tracktion::engine::TrackCompManager::TrackComp::Section</class>
    <member kind="enumeration">
      <type></type>
      <name>TimeFormat</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a24a568ee55b4a58b14273344e1773c05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>seconds</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a24a568ee55b4a58b14273344e1773c05a4ad6b89896e85587a1c598df5a730be3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>beats</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a24a568ee55b4a58b14273344e1773c05a0347ae578ba0fb5a17c2b65c7b584dd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; TrackComp &gt;</type>
      <name>Ptr</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>afab20a039314a18ad244eb36905bc1db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>seconds</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a24a568ee55b4a58b14273344e1773c05a4ad6b89896e85587a1c598df5a730be3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>beats</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a24a568ee55b4a58b14273344e1773c05a0347ae578ba0fb5a17c2b65c7b584dd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackComp</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>afe2af3ed3ee9d1d8df7b7b54ba04d2f7</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TrackComp</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a35f0a950e914ad4a64ee67a49d1293f4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a0f851100bcf2fc773b787f148e47f499</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>TimeFormat</type>
      <name>getTimeFormat</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>ae7cf016f0e2ec0d6d0ba46cf87c39ca2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeFormat</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>af95e04ee6cfbb2b537f4fb9cd8448b83</anchor>
      <arglist>(TimeFormat)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; TimeRange &gt;</type>
      <name>getNonMuteTimes</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a4d077e45c5767f362a5c3734b6b2159c</anchor>
      <arglist>(Track &amp;, TimeDuration crossfadeTime) const</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>getTimeRange</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>ac8966a6455a0846615024a0d5391760b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a0affaff8a6eedeeceb07d8c6d05820e7</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSectionTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a7a87091197575eb562765140dd45f2ab</anchor>
      <arglist>(CompSection &amp;, const Track::Ptr &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeSection</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a5e32a3e0abaa6fb8f331c8b61d2f5034</anchor>
      <arglist>(CompSection &amp;)</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>moveSectionToEndAt</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a5771dabb15a88f56f9c13f90d357239b</anchor>
      <arglist>(CompSection *, double newEndTime)</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>moveSection</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a8f67cf7d840ca4474b505ea3aaf64dbf</anchor>
      <arglist>(CompSection *, double timeDelta)</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>moveSectionEndTime</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a1e62f7d5d985edd9d61eca07d79452c4</anchor>
      <arglist>(CompSection *, double newTime)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>removeSectionsWithinRange</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a0f7604e08f7bc3465e8cc0216f0b2142</anchor>
      <arglist>(juce::Range&lt; double &gt;, CompSection *sectionToKeep)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>addSection</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>ab7ce86d2cb29d8137f65f3ab593501ac</anchor>
      <arglist>(EditItemID trackID, double endTime, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>addSection</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>ab27ad7861a5c9703ff136d53f04972df</anchor>
      <arglist>(Track::Ptr, double endTime)</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>splitSectionAtTime</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a80359326a6946853bf6fbdc215c7e653</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>findSectionWithEdgeTimeWithin</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a12055b8237318a7aeed3a144c2365b2f</anchor>
      <arglist>(const Track::Ptr &amp;, juce::Range&lt; double &gt;, bool &amp;startEdge) const</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>findSectionAtTime</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a504b94213a2b829ffee22b6dd0704025</anchor>
      <arglist>(const Track::Ptr &amp;, double) const</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Section &gt;</type>
      <name>getSectionsForTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a700dcae318bcb0543b72f74e34c83386</anchor>
      <arglist>(const Track::Ptr &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSuitableType</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a5e2cdc6d3358eb9e72047e4bb8bb98ff</anchor>
      <arglist>(const juce::ValueTree &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>createNewObject</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a00dc4de52f101d6fe76891386463ca98</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteObject</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a4bf85169ff45da9c3eb95738f18a1f3a</anchor>
      <arglist>(CompSection *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newObjectAdded</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a4b9a2ee5757b9600ce6ebc6cd738f8fb</anchor>
      <arglist>(CompSection *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectRemoved</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a0d5059b2dad5c7d22e7cca8bab5e258a</anchor>
      <arglist>(CompSection *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectOrderChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a8274e90f3ae99223c5023d4d6ac6ba69</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a611f19cbc6afa1d87caee7a175617735</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TrackComp *</type>
      <name>createAndIncRefCount</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a4a2d57d53bafaec8ad36e959c1606a5b</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; TimeRange &gt;</type>
      <name>getMuteTimes</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a8072c0989a0d1d6585905c603fb9052d</anchor>
      <arglist>(const juce::Array&lt; TimeRange &gt; &amp;nonMuteTimes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EditItemID</type>
      <name>getSourceTrackID</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a8b0e84cf8765dcbb5c762aeb57d3f6ca</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setSourceTrackID</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a77265559c42cf430109b37811496198a</anchor>
      <arglist>(juce::ValueTree &amp;, EditItemID, juce::UndoManager *)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>ae374f97725d2f02e82144e97ff8bcbfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a75d5d6a4ca24455d7580109ad9973217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::String &gt;</type>
      <name>name</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>a43e01c4ca9b5ec5cdd9f6d8dc7ef25fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::Colour &gt;</type>
      <name>includedColour</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>ab6d68c52cb4a72d0fcc78b752cee0d9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; juce::Colour &gt;</type>
      <name>excludedColour</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackCompManager_1_1TrackComp.html</anchorfile>
      <anchor>adee8450500d9745cc0fcac9b90a8632d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TrackCompManager</name>
    <filename>classtracktion_1_1engine_1_1TrackCompManager.html</filename>
    <class kind="struct">tracktion::engine::TrackCompManager::CompSection</class>
    <class kind="struct">tracktion::engine::TrackCompManager::TrackComp</class>
    <member kind="function">
      <type></type>
      <name>TrackCompManager</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackCompManager.html</anchorfile>
      <anchor>a805d91d65f51e3656265869ba4116400</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TrackCompManager</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackCompManager.html</anchorfile>
      <anchor>a8625adf4d692ba297bf92aac16410b7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackCompManager.html</anchorfile>
      <anchor>a8f7c96fcafae85ce786fa9f231ab98a9</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumGroups</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackCompManager.html</anchorfile>
      <anchor>a0589620274129e89a77570d7743f0c36</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getCompNames</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackCompManager.html</anchorfile>
      <anchor>a6bf1fd01c9b613d9d2b3d3b9268b5592</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getCompName</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackCompManager.html</anchorfile>
      <anchor>a84d6f5a3b0049bac16a1bb4c7a595d94</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCompName</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackCompManager.html</anchorfile>
      <anchor>adc1a5bbf5bdf0519851b23d8f55beebd</anchor>
      <arglist>(int index, const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addGroup</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackCompManager.html</anchorfile>
      <anchor>a2fd00c09e3d23d6f864de91ae4748ad0</anchor>
      <arglist>(const juce::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeGroup</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackCompManager.html</anchorfile>
      <anchor>a2170b3aef12725a83aba9f0f73b78f22</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>getTracksInComp</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackCompManager.html</anchorfile>
      <anchor>ae43223651e020f21e2b5c50f0360a3b1</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>TrackComp::Ptr</type>
      <name>getTrackComp</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackCompManager.html</anchorfile>
      <anchor>a670a2a39660d70bb0f9137df88fbb849</anchor>
      <arglist>(AudioTrack *)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::TrackInsertPoint</name>
    <filename>structtracktion_1_1engine_1_1TrackInsertPoint.html</filename>
    <member kind="function">
      <type></type>
      <name>TrackInsertPoint</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackInsertPoint.html</anchorfile>
      <anchor>a2152aedc79f8ce22837680d8df663119</anchor>
      <arglist>(Track *parent, Track *preceding)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackInsertPoint</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackInsertPoint.html</anchorfile>
      <anchor>a0572d7b48ef10f1a86bb2649a2f05679</anchor>
      <arglist>(EditItemID parentTrackID, EditItemID precedingTrackID)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackInsertPoint</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackInsertPoint.html</anchorfile>
      <anchor>ac897c00edd4802f99fb614308f197e92</anchor>
      <arglist>(Track &amp;currentPos, bool insertBefore)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackInsertPoint</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackInsertPoint.html</anchorfile>
      <anchor>ac25295b01d2246c27f8682127bd91256</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TrackInsertPoint</type>
      <name>getEndOfTracks</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackInsertPoint.html</anchorfile>
      <anchor>a6148673bf904319bb7a70e15313367c7</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>EditItemID</type>
      <name>parentTrackID</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackInsertPoint.html</anchorfile>
      <anchor>aaa972e096a2e002b9534937809c4b10a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EditItemID</type>
      <name>precedingTrackID</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackInsertPoint.html</anchorfile>
      <anchor>a347a3b2ec78f43a7f33737e796736374</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TrackItem</name>
    <filename>classtracktion_1_1engine_1_1TrackItem.html</filename>
    <base>tracktion::engine::EditItem</base>
    <base>tracktion::engine::Selectable</base>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>a01da0e462b71b30657a62268ef090f24</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1TrackItem.html" anchor="a01da0e462b71b30657a62268ef090f24aad921d60486366258809553a3db49a4a">unknown</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1TrackItem.html" anchor="a01da0e462b71b30657a62268ef090f24ab2d7d7656eb4e5153688637c8fbf7b49">wave</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1TrackItem.html" anchor="a01da0e462b71b30657a62268ef090f24aa5f4ed7e858bf18cc1f2c0e35e7301e7">midi</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1TrackItem.html" anchor="a01da0e462b71b30657a62268ef090f24ade95b43bceeb4b998aed4aed5cef1ae7">edit</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1TrackItem.html" anchor="a01da0e462b71b30657a62268ef090f24a2764ca9d34e90313978d044f27ae433b">step</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1TrackItem.html" anchor="a01da0e462b71b30657a62268ef090f24ab272bda9bf0c1cdcba614b5ed99c4d62">marker</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1TrackItem.html" anchor="a01da0e462b71b30657a62268ef090f24a8ee0b79fb35b0efe85b44c0ee243f8d5">pitch</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1TrackItem.html" anchor="a01da0e462b71b30657a62268ef090f24a61bb438f543e9b31452d35841573a702">timeSig</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1TrackItem.html" anchor="a01da0e462b71b30657a62268ef090f24adb6d9b451b818ccc9a449383f2f0c450">collection</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1TrackItem.html" anchor="a01da0e462b71b30657a62268ef090f24a421b47ffd946ca083b65cd668c6b17e6">video</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1TrackItem.html" anchor="a01da0e462b71b30657a62268ef090f24afb89b9c2b78261ef2ab506e30d9c84f7">recording</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1TrackItem.html" anchor="a01da0e462b71b30657a62268ef090f24ad277c74c6c67461c562bdc2051681029">chord</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1TrackItem.html" anchor="a01da0e462b71b30657a62268ef090f24a6f86810cd8a76fcf25984c82cc40c219">arranger</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1TrackItem.html" anchor="a01da0e462b71b30657a62268ef090f24a5f0b6ebc4bea10285ba2b8a6ce78b863">container</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackItem</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>ad8c6ee37f5d50b617589468baaebf44f</anchor>
      <arglist>(Edit &amp;, EditItemID, Type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TrackItem</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>a359c0ab097db442b1acac5767e5a087e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Track *</type>
      <name>getTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>abbfaf3cb52066cee69a6050ecc333ff3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGrouped</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>ab782c5af34b7f818d2bed809cdf9e69f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TrackItem *</type>
      <name>getGroupParent</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>a2d5bbefb905273169b9da840d41cbdf1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ClipPosition</type>
      <name>getPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>a98fa37ac3f07ae102d7a3b643e49c064</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>getEditTimeRange</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>aec7cdceccbce57d16a2d0b24c4697ad2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BeatRange</type>
      <name>getEditBeatRange</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>ac55d4943eb8c0bd3e33802060ea8facb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getStartBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>a192fb9d348e648519bdcee21db6b26f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getContentStartBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>adced6ea0b2c9ddad579e9e753986eaaf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getEndBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>acbfd35b3d3d814121f1eda5b1449d4b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BeatDuration</type>
      <name>getLengthInBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>a7441b3d1616b8fbb43d94761a13efc38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getTimeOfRelativeBeat</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>a9690a56ab364c5b2836af081006a5106</anchor>
      <arglist>(BeatDuration) const</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getBeatOfRelativeTime</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>afbc88d2429a84bcd802b092b897d8bbb</anchor>
      <arglist>(TimeDuration) const</arglist>
    </member>
    <member kind="function">
      <type>BeatDuration</type>
      <name>getOffsetInBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>ad0529ed7b0d46e94d482d10a6832b8ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EditItemID</type>
      <name>getTrackID</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>ab34265afeb7c3d6c96b21d38c514233c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>typeToString</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>a67777899eeff214306ac8c81e54554cc</anchor>
      <arglist>(Type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Identifier</type>
      <name>clipTypeToXMLType</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>ae0c65297fef685be1093222765d9d4ed</anchor>
      <arglist>(Type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TrackItem::Type</type>
      <name>xmlTagToType</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>afb739f8f01ae7666f4a311a0b906d7b2</anchor>
      <arglist>(juce::StringRef)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TrackItem::Type</type>
      <name>stringToType</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>aad51d84cb7e3817e4fe212ed7aa08d9c</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getSuggestedNameForNewItem</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>a7aba87e740ca1e2524154af94d7977ac</anchor>
      <arglist>(Type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sortByTime</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>a58f2fdf64101def92b1d9d428cc977a0</anchor>
      <arglist>(ArrayType &amp;items)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>stableSortByTime</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>a2b0338efd6bd4c87d36b0103ff586522</anchor>
      <arglist>(ArrayType &amp;items)</arglist>
    </member>
    <member kind="variable">
      <type>const Type</type>
      <name>type</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackItem.html</anchorfile>
      <anchor>a0529e945112cfe0d4f0ffb5de4e280c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::TrackList</name>
    <filename>structtracktion_1_1engine_1_1TrackList.html</filename>
    <base>ValueTreeObjectList&lt; Track &gt;</base>
    <member kind="function">
      <type></type>
      <name>TrackList</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>a4efee3fe597bcb7fea16e8eb1dd4ff3f</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TrackList</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>aa797d7c8d44f8f127a31bbe607194907</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>ac1610fbde7864f1ba47f5027a9956b56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrackFor</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>a27759f49485c32c31050e37b48148503</anchor>
      <arglist>(const juce::ValueTree &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>visitAllRecursive</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>ae40b780fcd1e8886b8107954d14947c8</anchor>
      <arglist>(const std::function&lt; bool(Track &amp;)&gt; &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitAllTopLevel</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>abcc9786ab29ec3866fd6a0974881d625</anchor>
      <arglist>(const std::function&lt; bool(Track &amp;)&gt; &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitAllTracks</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>a9062be03a5f961fa7a4683884485ef40</anchor>
      <arglist>(const std::function&lt; bool(Track &amp;)&gt; &amp;, bool recursive) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSuitableType</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>ad903142bf42d4e0beb44f985fcb31182</anchor>
      <arglist>(const juce::ValueTree &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>createNewObject</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>a4d69735b8b098f84561d5b84432245fa</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteObject</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>af41341a1535526d87aa1c24650c84db6</anchor>
      <arglist>(Track *t) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newObjectAdded</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>ab60d690decfe1786e31712a5200681e1</anchor>
      <arglist>(Track *t) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectRemoved</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>a93b9f561c0952f7484e3a11d763ff9fd</anchor>
      <arglist>(Track *) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>objectOrderChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>a40137262a19025dd122e644834bb143c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isMovableTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>a2d86efe4895324c5632d3685f3738ab2</anchor>
      <arglist>(const juce::ValueTree &amp;) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isArrangerTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>a101bfa200b339339335f2c04713dfb33</anchor>
      <arglist>(const juce::ValueTree &amp;) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isChordTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>a9d3c905416b42529bf6cb9aa5d9e3906</anchor>
      <arglist>(const juce::ValueTree &amp;) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isMarkerTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>af01a2ede17a9584185f24d7a4eb15990</anchor>
      <arglist>(const juce::ValueTree &amp;) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isTempoTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>acc7ed13d6b9e02707f9b2a158ea922d6</anchor>
      <arglist>(const juce::ValueTree &amp;) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isMasterTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>a9f03f24cfb894eaa010a36ca0768251a</anchor>
      <arglist>(const juce::ValueTree &amp;) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isFixedTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>acaaa6808efc936be9cc2e21a79eba530</anchor>
      <arglist>(const juce::ValueTree &amp;) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>a2ba744f81d03f7006f5557974ff1d1e7</anchor>
      <arglist>(const juce::ValueTree &amp;) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isTrack</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>a6a4d4441ceebaa0304f59763404b76cf</anchor>
      <arglist>(const juce::Identifier &amp;) noexcept</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasAnySubTracks</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>ae3fdfa14b64056cf31014300984f48e7</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sortTracksByType</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>a328b7eded6439213d8dc6495e6e6e1ac</anchor>
      <arglist>(juce::ValueTree &amp;editState, juce::UndoManager *)</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>ad45ba3e471e01526a530a2b8ad355680</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>rebuilding</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackList.html</anchorfile>
      <anchor>a58e2e163ab1246f6400001e2d34981b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TrackMidiInputDeviceNode</name>
    <filename>classtracktion_1_1engine_1_1TrackMidiInputDeviceNode.html</filename>
    <base>tracktion::graph::Node</base>
    <base protection="private">tracktion::engine::TracktionEngineNode</base>
    <member kind="function">
      <type></type>
      <name>TrackMidiInputDeviceNode</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMidiInputDeviceNode.html</anchorfile>
      <anchor>a586f4723146dbfb8483604b93367905a</anchor>
      <arglist>(MidiInputDevice &amp;, std::unique_ptr&lt; Node &gt;, ProcessState &amp;, bool copyInputsToOutputs)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMidiInputDeviceNode.html</anchorfile>
      <anchor>abc5a40a6ef684e9ab0ce9b70f1c8fd0b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMidiInputDeviceNode.html</anchorfile>
      <anchor>aa9d4cf89103cf8e921d749404811566d</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMidiInputDeviceNode.html</anchorfile>
      <anchor>a5685d4581c48b25c2e3cfdc08dcdc1d0</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMidiInputDeviceNode.html</anchorfile>
      <anchor>a2319c1f79ed0d5bdb9bf0cb0a311db41</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMidiInputDeviceNode.html</anchorfile>
      <anchor>a91cbc8ad34ca4c710a2599fbffe6e8d5</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TrackMuteState</name>
    <filename>classtracktion_1_1engine_1_1TrackMuteState.html</filename>
    <member kind="function">
      <type></type>
      <name>TrackMuteState</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMuteState.html</anchorfile>
      <anchor>a41008cb7c16fedb84d10d9232a4b243b</anchor>
      <arglist>(Track &amp;, bool muteForInputsWhenRecording, bool processMidiWhenMuted)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrackMuteState</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMuteState.html</anchorfile>
      <anchor>aeb167b5bba9b5a374d7c22964231f00b</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMuteState.html</anchorfile>
      <anchor>a2202c17225a4c291a5f67226329b7962</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldTrackBeAudible</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMuteState.html</anchorfile>
      <anchor>a0788b3e3969805a343b749bd28482c0b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldTrackContentsBeProcessed</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMuteState.html</anchorfile>
      <anchor>a7e72d3e6e4be3ce68decfed101f290e5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldTrackMidiBeProcessed</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMuteState.html</anchorfile>
      <anchor>a3587a033b3b101c57facd0b8dd643a23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wasJustMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMuteState.html</anchorfile>
      <anchor>acbf7d619aa19a20dad08a5852ccfe8af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>wasJustUnMuted</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMuteState.html</anchorfile>
      <anchor>a2e593775033c8ebd2d42a9cbf26bb5c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getItemID</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMuteState.html</anchorfile>
      <anchor>a4d39ff2fdf345812ca84ab9ae3eb3b04</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TrackMutingNode</name>
    <filename>classtracktion_1_1engine_1_1TrackMutingNode.html</filename>
    <base>tracktion::graph::Node</base>
    <member kind="function">
      <type></type>
      <name>TrackMutingNode</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMutingNode.html</anchorfile>
      <anchor>a30b48f0e549b4abd2a63faa0d5e816a3</anchor>
      <arglist>(std::unique_ptr&lt; TrackMuteState &gt;, std::unique_ptr&lt; tracktion::graph::Node &gt; input, bool dontMuteIfTrackContentsShouldBeProcessed)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMutingNode.html</anchorfile>
      <anchor>adb5bb0344a7319a96727aef24e665c4b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMutingNode.html</anchorfile>
      <anchor>a71925029d037fbb0cc696121947b7689</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMutingNode.html</anchorfile>
      <anchor>a6d24e50b61c9bc102f25649a9af75ebb</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMutingNode.html</anchorfile>
      <anchor>a787ab2841669d2c436049fad64ace594</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prefetchBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMutingNode.html</anchorfile>
      <anchor>abb2221424a341dbaa0f49f9130125113</anchor>
      <arglist>(juce::Range&lt; int64_t &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMutingNode.html</anchorfile>
      <anchor>ac0c794c9e05a4a8ccadae31289b63d0c</anchor>
      <arglist>(choc::buffer::FrameCount, juce::Range&lt; int64_t &gt;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackMutingNode.html</anchorfile>
      <anchor>a1d76cae20255d1a3dfdad72f0ba6b3a1</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TrackOutput</name>
    <filename>classtracktion_1_1engine_1_1TrackOutput.html</filename>
    <member kind="function">
      <type></type>
      <name>TrackOutput</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>a68cc8d235efbcf170ce67435c9bc8d93</anchor>
      <arglist>(Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TrackOutput</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>aab3f7cd62e748b73207b06523b869e99</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>ac7d80ce14b2534046df264a74bf6776f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flushStateToValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>a7f0260735922085f3d2a9b887ea7ed81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateOutput</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>a7cb6ccfcb566dc0bad94cce60bfdb2a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>outputsToDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>a315f28dd015095c0621fc0677d8aa338</anchor>
      <arglist>(const juce::String &amp;deviceName, bool compareDefaultDevices) const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getOutputDeviceID</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>aa4b3bc0879f08147e43709e9af02a28b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getOutputName</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>a95a3c0416536222033607e61aba117f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDescriptiveOutputName</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>a9d2bd5e3cf32a9efffe2a1ed570573ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AudioTrack *</type>
      <name>getDestinationTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>a89639135afb5e64c2b094784ab6ea702</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>outputsToDestTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>acfeaa1855068a9f29bf936d8d259567a</anchor>
      <arglist>(AudioTrack &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>feedsInto</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>ae42fdf4c1d1aae5e2b100635e1d98c88</anchor>
      <arglist>(const Track *possibleDestTrack) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesDefaultAudioOut</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>a910810c5246f1de3eea3e31f31fe27bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesDefaultMIDIOut</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>af145d4fa4fc0c72007a1fd8a5a70e295</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>OutputDevice *</type>
      <name>getOutputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>af8358f925445fe3a305aea2c1eb0ba46</anchor>
      <arglist>(bool traceThroughDestTracks) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputToDeviceID</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>a890910e1d5832e59dc5da077a6d6ea23</anchor>
      <arglist>(const juce::String &amp;deviceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputToTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>a0392fa67739aa817b76a0181efb36008</anchor>
      <arglist>(AudioTrack *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputToDefaultDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>afbbf5c8ed571a483840d8fc150b40593</anchor>
      <arglist>(bool isMidi)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canPlayAudio</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>a41479d82e4711cd8595464d16e7e00e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canPlayMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>af24494c31a37a95e5e0b6f0c7b71990c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>injectLiveMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>ad065b6333873f381c99c75849dde905b</anchor>
      <arglist>(const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getPossibleOutputDeviceNames</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>a1885529286f3ab312b4adfafbfab14a3</anchor>
      <arglist>(const juce::Array&lt; AudioTrack * &gt; &amp;tracks, juce::StringArray &amp;s, juce::StringArray &amp;a, juce::BigInteger &amp;hasAudio, juce::BigInteger &amp;hasMidi)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackOutput.html</anchorfile>
      <anchor>a8bce6ea061109af0c37725d556c42b0e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Clipboard::Tracks</name>
    <filename>structtracktion_1_1engine_1_1Clipboard_1_1Tracks.html</filename>
    <base>tracktion::engine::Clipboard::ContentType</base>
    <member kind="function">
      <type></type>
      <name>Tracks</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Tracks.html</anchorfile>
      <anchor>ae171fee8d941dec4eceaaa62cf6124ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Tracks</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Tracks.html</anchorfile>
      <anchor>a8e9822a78d8bdf9837379355a49ad3c5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Tracks.html</anchorfile>
      <anchor>a6580cc61ef3b25eb3df7faf18c02e4b4</anchor>
      <arglist>(const EditPastingOptions &amp;) const override</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Tracks.html</anchorfile>
      <anchor>ae3179b071e4302d9007657da52f29b5a</anchor>
      <arglist>(Edit &amp;, EditInsertPoint &amp;, SelectionManager *) const</arglist>
    </member>
    <member kind="function">
      <type>virtual bool</type>
      <name>pasteIntoEdit</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Tracks.html</anchorfile>
      <anchor>a2b8ac2e249e6721e16dd1ca7831b15da</anchor>
      <arglist>(const EditPastingOptions &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; juce::ValueTree &gt;</type>
      <name>tracks</name>
      <anchorfile>structtracktion_1_1engine_1_1Clipboard_1_1Tracks.html</anchorfile>
      <anchor>af35ef91ade3f8de79713c2c391aaea43</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::TrackSection</name>
    <filename>structtracktion_1_1engine_1_1TrackSection.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>merge</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackSection.html</anchorfile>
      <anchor>a5edb642b6c53efa98982634b1350ffc3</anchor>
      <arglist>(const TrackItem &amp;c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; TrackSection &gt;</type>
      <name>findSections</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackSection.html</anchorfile>
      <anchor>afd99173658330354ba148ad248d336d9</anchor>
      <arglist>(const TrackItemArray &amp;trackItems)</arglist>
    </member>
    <member kind="variable">
      <type>Track *</type>
      <name>track</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackSection.html</anchorfile>
      <anchor>a7bdfcabc52ea3692f6213d6d463028bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeRange</type>
      <name>range</name>
      <anchorfile>structtracktion_1_1engine_1_1TrackSection.html</anchorfile>
      <anchor>a1017b26b74b72b36d44c23e02e34d619</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TracktionArchiveFile</name>
    <filename>classtracktion_1_1engine_1_1TracktionArchiveFile.html</filename>
    <class kind="struct">tracktion::engine::TracktionArchiveFile::IndexEntry</class>
    <member kind="enumeration">
      <type></type>
      <name>CompressionType</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>ac94769b3f8066dbb2a561521c2c0d67f</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1TracktionArchiveFile.html" anchor="ac94769b3f8066dbb2a561521c2c0d67fa334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1TracktionArchiveFile.html" anchor="ac94769b3f8066dbb2a561521c2c0d67faadcdbd79a8d84175c229b192aadc02f2">zip</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1TracktionArchiveFile.html" anchor="ac94769b3f8066dbb2a561521c2c0d67fa90ac1172c9ea271784a5efb8fa7aa101">lossless</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1TracktionArchiveFile.html" anchor="ac94769b3f8066dbb2a561521c2c0d67fade14355369d8036ad58bc2ecce5c5bc8">lossyGoodQuality</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1TracktionArchiveFile.html" anchor="ac94769b3f8066dbb2a561521c2c0d67fa7c5bc43bf45352a46d70187a91fde8a5">lossyMediumQuality</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1TracktionArchiveFile.html" anchor="ac94769b3f8066dbb2a561521c2c0d67fa995fa6c08d1dae45c695943215dc1a84">lossyLowQuality</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>TracktionArchiveFile</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>ab7cc49f05ca2c440a62c80d6f0276e7a</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;file)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TracktionArchiveFile</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a2a2628b8ed27afd21cbd2ba0238f47fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValidArchive</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>ad968bca42a64e4bc7cc52eb511f582fd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getFile</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>ab06fb81dbc3aecbbdf3129f0b7830f43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumFiles</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a3509388a8aadab67b323b96dc20aa837</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getOriginalFileName</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>acf16d434176c412d43be090329e32e9b</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indexOfFile</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a678447709e5905ce7105c701960f1b40</anchor>
      <arglist>(const juce::String &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; juce::InputStream &gt;</type>
      <name>createStoredInputStream</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a929cbeb0ee2442807662ef79fcc7797d</anchor>
      <arglist>(int index) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>extractFile</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a44b4e87f79a7343c3477b9e36b5cdf3a</anchor>
      <arglist>(int index, const juce::File &amp;destDirectory, juce::File &amp;fileCreated, bool askBeforeOverwriting)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>extractAll</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a3cd6d15c24d08dc8e13a742e1c8f4ecc</anchor>
      <arglist>(const juce::File &amp;destDirectory, juce::Array&lt; juce::File &gt; &amp;filesCreated)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>extractAllAsTask</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a00f783a604dee3b9d6d5033fba9ca0e8</anchor>
      <arglist>(const juce::File &amp;destDirectory, bool warnAboutOverwrite, juce::Array&lt; juce::File &gt; &amp;filesCreated, bool &amp;wasAborted)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addFile</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>aaa3b1d8a798e5c79fb176c1b5b58e429</anchor>
      <arglist>(const juce::File &amp;, const juce::File &amp;rootDirectory, CompressionType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addFile</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>afaedc5e34581bd5cbced5934c0512c14</anchor>
      <arglist>(const juce::File &amp;, const juce::String &amp;filenameToUse, CompressionType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFileInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a11a263f9a57bfdf3fad07469cfd411a5</anchor>
      <arglist>(const juce::String &amp;filename, const juce::String &amp;itemName, const juce::String &amp;itemValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionArchiveFile.html</anchorfile>
      <anchor>a1679d3762f442fa3f4672f48e05578d0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::DeviceManager::TracktionEngineAudioDeviceManager</name>
    <filename>structtracktion_1_1engine_1_1DeviceManager_1_1TracktionEngineAudioDeviceManager.html</filename>
    <member kind="function">
      <type></type>
      <name>TracktionEngineAudioDeviceManager</name>
      <anchorfile>structtracktion_1_1engine_1_1DeviceManager_1_1TracktionEngineAudioDeviceManager.html</anchorfile>
      <anchor>abc30fa145d8cb6f192f6763246430098</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createAudioDeviceTypes</name>
      <anchorfile>structtracktion_1_1engine_1_1DeviceManager_1_1TracktionEngineAudioDeviceManager.html</anchorfile>
      <anchor>a4410efb484daac34a39495900ed56e9b</anchor>
      <arglist>(juce::OwnedArray&lt; juce::AudioIODeviceType &gt; &amp;) override</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>structtracktion_1_1engine_1_1DeviceManager_1_1TracktionEngineAudioDeviceManager.html</anchorfile>
      <anchor>a55794071b7c994c8b6af57f81900bead</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TracktionEngineNode</name>
    <filename>classtracktion_1_1engine_1_1TracktionEngineNode.html</filename>
    <member kind="function">
      <type></type>
      <name>TracktionEngineNode</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a692e5dda1fc9e8c69d322db8be3b8956</anchor>
      <arglist>(ProcessState &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TracktionEngineNode</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a1a9eeb7c36fdfbab91824a5cdfa5caaf</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSamples</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a03d54cbe6989c9c004e9b3a0fb99d491</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>accc3a2a1fb2fe98065d48058647576e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; int64_t &gt;</type>
      <name>getTimelineSampleRange</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a5927b5556b2b8da646b5803e6d9d7ca2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>getEditTimeRange</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a5ec91b2076e41017d410ec56f58847b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BeatRange</type>
      <name>getEditBeatRange</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>aa36db78bfffabf8fb4616958ea9b408b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>juce::Range&lt; int64_t &gt;</type>
      <name>getReferenceSampleRange</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a1e50b7d04461fe25b02286b4784614cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tempo::Key</type>
      <name>getKey</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>aaa98c8ab68032515a5971f4f84d7d949</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPlaybackSpeedRatio</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a76005f935c8d2788e6d16aba74fc670c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; TimePosition &gt;</type>
      <name>getTimeOfNextChange</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a240da9c3ef9d1c19150e6c5d1703daaf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; BeatPosition &gt;</type>
      <name>getBeatOfNextChange</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a6f78c79b4e3a900a5ea9df39d4f91e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::PlayHeadState &amp;</type>
      <name>getPlayHeadState</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>abdf23f970d16748e6709624315602e9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::PlayHead &amp;</type>
      <name>getPlayHead</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a6da5b423bb5f734728a9967dea0f2dd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProcessState &amp;</type>
      <name>getProcessState</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a948adcf3f250e8e951ff7e773c87621c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProcessState</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionEngineNode.html</anchorfile>
      <anchor>a7535886e3f0a9d68e0db994db0fee32f</anchor>
      <arglist>(ProcessState &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TracktionNodePlayer</name>
    <filename>classtracktion_1_1engine_1_1TracktionNodePlayer.html</filename>
    <member kind="function">
      <type></type>
      <name>TracktionNodePlayer</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>a2e72ce651c0532936a1ec113c6639f17</anchor>
      <arglist>(ProcessState &amp;processStateToUse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TracktionNodePlayer</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>a8ba391d41896650362b68d5a47d0e07f</anchor>
      <arglist>(ProcessState &amp;processStateToUse, tracktion::graph::LockFreeMultiThreadedNodePlayer::ThreadPoolCreator poolCreator, juce::AudioWorkgroup audioWorkgroup={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TracktionNodePlayer</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>a998dc1b13afc1ecc1d52b13bb3f330d1</anchor>
      <arglist>(std::unique_ptr&lt; tracktion::graph::Node &gt; node, ProcessState &amp;processStateToUse, double sampleRate, int blockSize, tracktion::graph::LockFreeMultiThreadedNodePlayer::ThreadPoolCreator poolCreator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumThreads</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>a2083bfccad9e2f11fb9b4300a9ff9537</anchor>
      <arglist>(size_t numThreads)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::Node *</type>
      <name>getNode</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>a9190363bb3dbddf5e1e52c6d344089f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>af87b7f29f11f4ea7ec8b84fa01bee4b1</anchor>
      <arglist>(std::unique_ptr&lt; tracktion::graph::Node &gt; newNode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNode</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>a4affe1ce6ba6fd8698a2f776f48e7464</anchor>
      <arglist>(std::unique_ptr&lt; tracktion::graph::Node &gt; newNode, double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>a5600526ae7206d37bb022e8c998bfd07</anchor>
      <arglist>(double sampleRateToUse, int blockSizeToUse)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>ac3bf99982eee709f254ece1d56f8786f</anchor>
      <arglist>(const tracktion::graph::Node::ProcessContext &amp;pc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearNode</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>a78be00aef303a84fc9252dbe8d51a131</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>a9c1d0e6802b5731a7af5349221a7a9ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enablePooledMemoryAllocations</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>a08c507ab4fdf33f8fb00adb00b3fdc5c</anchor>
      <arglist>(bool enablePooledMemory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableNodeMemorySharing</name>
      <anchorfile>classtracktion_1_1engine_1_1TracktionNodePlayer.html</anchorfile>
      <anchor>a60763ed578adead13da7d1f414f0e9c1</anchor>
      <arglist>(bool enableNodeMemorySharing)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TrackWaveInputDeviceNode</name>
    <filename>classtracktion_1_1engine_1_1TrackWaveInputDeviceNode.html</filename>
    <base>tracktion::graph::Node</base>
    <base protection="private">tracktion::engine::TracktionEngineNode</base>
    <member kind="function">
      <type></type>
      <name>TrackWaveInputDeviceNode</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackWaveInputDeviceNode.html</anchorfile>
      <anchor>a08a9c0122b1cad97eaf4f04813108f1c</anchor>
      <arglist>(ProcessState &amp;, WaveInputDevice &amp;, std::unique_ptr&lt; Node &gt;, bool copyInputsToOutputs)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Node * &gt;</type>
      <name>getDirectInputNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackWaveInputDeviceNode.html</anchorfile>
      <anchor>aab24f670a308d77d304d0d0ac3cc31cb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackWaveInputDeviceNode.html</anchorfile>
      <anchor>aebf76e9c06db73e6960105207f173f3c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackWaveInputDeviceNode.html</anchorfile>
      <anchor>a0ccad1e61b7ed3e104aca78c8e4a80d2</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackWaveInputDeviceNode.html</anchorfile>
      <anchor>a402c2803c042491f31f3b09dbb74dc21</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1TrackWaveInputDeviceNode.html</anchorfile>
      <anchor>ade6b38382954cb52936b00d424957e54</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::graph::TransformCache</name>
    <filename>classtracktion_1_1graph_1_1TransformCache.html</filename>
    <member kind="function">
      <type></type>
      <name>TransformCache</name>
      <anchorfile>classtracktion_1_1graph_1_1TransformCache.html</anchorfile>
      <anchor>aabf10d5dec553f457e8a1bdba717ace4</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cacheProperty</name>
      <anchorfile>classtracktion_1_1graph_1_1TransformCache.html</anchorfile>
      <anchor>a352bb191462e26e376361e7194f44027</anchor>
      <arglist>(size_t key, T value)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getCachedProperty</name>
      <anchorfile>classtracktion_1_1graph_1_1TransformCache.html</anchorfile>
      <anchor>ac7e1ae902bcc7355da4363507cef84d3</anchor>
      <arglist>(size_t key)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::TransparentToMouseInTrackItemComp</name>
    <filename>structtracktion_1_1engine_1_1TransparentToMouseInTrackItemComp.html</filename>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TransportControl</name>
    <filename>classtracktion_1_1engine_1_1TransportControl.html</filename>
    <class kind="struct">tracktion::engine::TransportControl::Listener</class>
    <class kind="struct">tracktion::engine::TransportControl::ReallocationInhibitor</class>
    <class kind="struct">tracktion::engine::TransportControl::ScopedContextAllocator</class>
    <class kind="struct">tracktion::engine::TransportControl::ScopedPlaybackRestarter</class>
    <member kind="function">
      <type></type>
      <name>TransportControl</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>ab9a7444a24c889c2825885b6f57acacf</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TransportControl</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a6f4f5bed60b2f084d892e27e56e8c930</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>play</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a5b8522ed4bdb8c39018a7448429b07a3</anchor>
      <arglist>(bool justSendMMCIfEnabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playFromStart</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a691bdf7153346c38567a67999fb57681</anchor>
      <arglist>(bool justSendMMCIfEnabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>playSectionAndReset</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a05a45f577a13dd698ef1c10d9947089c</anchor>
      <arglist>(TimeRange rangeToPlay)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>record</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a8975f0c36c291247a49dc3d1d0d53a18</anchor>
      <arglist>(bool justSendMMCIfEnabled, bool allowRecordingIfNoInputsArmed=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a891ca2dc39a13d23ce17a5b414b3d6f4</anchor>
      <arglist>(bool discardRecordings, bool clearDevices, bool canSendMMCStop=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopIfRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>ae97ab6c0538780081010a804dd39d6a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a5d053668dc0bd0bbd12a7aad6aa884ad</anchor>
      <arglist>(bool discardRecordings=false)</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>applyRetrospectiveRecord</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a36a39c33b5cad18c0ad5a11cc5674f2c</anchor>
      <arglist>(bool armedOnly)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; juce::File &gt;</type>
      <name>getRetrospectiveRecordAsAudioFiles</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>adcac75e40e513d22109848a487eef861</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>syncToEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a2756e2d7a1d0042c2345ad52ca410721</anchor>
      <arglist>(Edit *editToSyncTo, bool syncToTargetLoopLength)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlaying</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>ad4e13eaaf85a84a01f8b20610d68d583</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a456c66fe552077cb6e71128168a67f67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSafeRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>ab8cb9efd4575d1cbd0ee1420daecd3a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStopping</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a804e8b9c6bff1c08fb7bbb93879075db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRecordingStopping</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a44c8856b09e17f4577d1210d359e564d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getTimeWhenStarted</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a75701a80bb94cbf6a4a623e81f030e37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a0f7a64db70b9ed480ea78725f551d2b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>aa61a4092e950e83d17460c487e741407</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>ab2ff73830b50863bbf22fad88c2d93ef</anchor>
      <arglist>(TimePosition timeToMoveTo, TimePosition timeToPerformJump)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUserDragging</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a60183ad1b66f9a41f5f8104e9989b5af</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUserDragging</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a5fab3abb22d08313245fba29454b7c18</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPositionUpdatingFromPlayhead</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a82289d86468737b59570724220ac469a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopIn</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a0b0fce182d7afb52f40ce26b25fbb583</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopOut</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>aa790086a73046681e98e32070c0a16b0</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopPoint1</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a5420249a39166a5f77a0b4b182b81de4</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopPoint2</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a158d27e4ee441b2675350c88b40825e0</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopRange</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a2cec118900b0193891d449545ea35e7e</anchor>
      <arglist>(TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>getLoopRange</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a96efa18a80232d68b826955d049376b3</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSnapType</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>ae29db719a915730663f1b843488c8408</anchor>
      <arglist>(TimecodeSnapType)</arglist>
    </member>
    <member kind="function">
      <type>TimecodeSnapType</type>
      <name>getSnapType</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a1b2889305faa1a3de377043f2eb60f4e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>EditPlaybackContext *</type>
      <name>getCurrentPlaybackContext</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a57bdb9b8c5ed159794aab5547b0b329c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPlayContextActive</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a25f011d67be85e30af83e61f25155a62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ensureContextAllocated</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a25b78e77c9cbd68f9a0699043db0e197</anchor>
      <arglist>(bool alwaysReallocate=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freePlaybackContext</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a42389a40097f42a597a53421c27dad58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>triggerClearDevicesOnStop</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>affc1f56ff791a68fa08654d061aaee25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forceOrphanFreezeAndProxyFilesPurge</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a61f7c3cf3c2b4a030820e99990d69755</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRewindButtonDown</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>ac50ba850a678ae2a15635a28266431a4</anchor>
      <arglist>(bool isDown)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFastForwardButtonDown</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a0e654f6af8bd8386c5b98ace656d9be6</anchor>
      <arglist>(bool isDown)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeLeft</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a6c8a5f5acbab9394633842d8ae5b4b95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeRight</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a3c0abde580f35e185bedb3d1bcf1d8ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>editHasChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a83e22689710b7674b9e010eee74235c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAllowedToReallocate</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a2ae4ff64704feefaa0ec117c41a5ffd5</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addListener</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>ad10515687ed1b0fbc25702dfd5800cfd</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeListener</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a14eb4b7bd79a5d37dd85dc6badbfe2d2</anchor>
      <arglist>(Listener *l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callRecordingAboutToStartListeners</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>ad8c0c10503d76d99ea76128fef505318</anchor>
      <arglist>(InputDeviceInstance &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callRecordingAboutToStopListeners</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a3ee579f14ee2d7f7b78bb0639af28377</anchor>
      <arglist>(InputDeviceInstance &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callRecordingFinishedListeners</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a89b62fabe5d3f80cde074786aad864cf</anchor>
      <arglist>(InputDeviceInstance &amp;, EditItemID, juce::ReferenceCountedArray&lt; Clip &gt;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::Array&lt; TransportControl * &gt;</type>
      <name>getAllActiveTransports</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a35f404b2e9fb4e02982af8187bee8770</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getNumPlayingTransports</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>ad54815c2875a969e5f5cdfa341f9a4cf</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>stopAllTransports</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a0e7dc3953f844fcd33de394c7a3b3c39</anchor>
      <arglist>(Engine &amp;, bool discardRecordings, bool clearDevices)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::unique_ptr&lt; ScopedContextAllocator &gt; &gt;</type>
      <name>restartAllTransports</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>ab8a7158f42d796fb1b7a553f735d221c</anchor>
      <arglist>(Engine &amp;, bool clearDevices)</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>aee660852cdc95d6e392e68467a4aea71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>adddd22ba20a9799fbcbbb62c988418bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a28cbdb37abbb2d8e073b4dbc21290aa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; TimePosition &gt;</type>
      <name>startPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>afb56c8da586f2b65545de718fdf03099</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; TimePosition &gt;</type>
      <name>position</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>add3486e489da5182209218e86ed70f43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; TimePosition &gt;</type>
      <name>loopPoint1</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>aac1f87c69c3013224e54653cb13e9f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; TimePosition &gt;</type>
      <name>loopPoint2</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>ae8ab9553d7d67bfaf80e42e5d55dcf71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; TimeDuration &gt;</type>
      <name>scrubInterval</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>a9aa22edbaa0336b9d856b80d53808a1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>snapToTimecode</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>abefb4740a6943e301f2ae181ac90f76f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>looping</name>
      <anchorfile>classtracktion_1_1engine_1_1TransportControl.html</anchorfile>
      <anchor>aad5d471a269c9595d7d9ef658c38973d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::TranzportControlSurface</name>
    <filename>classtracktion_1_1engine_1_1TranzportControlSurface.html</filename>
    <base>tracktion::engine::ControlSurface</base>
    <member kind="function">
      <type></type>
      <name>TranzportControlSurface</name>
      <anchorfile>classtracktion_1_1engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a36708bc2acbaa9d61a9564eb90f9c6f2</anchor>
      <arglist>(ExternalControllerManager &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TranzportControlSurface</name>
      <anchorfile>classtracktion_1_1engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a1a070f5a55082ac58fd381c0368edd8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a0707196b6b51a45cb46b3e4e48038460</anchor>
      <arglist>(bool connect) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutDownDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>af9bbe6e64699efa919a7b16825acd282</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a4afb2c5f8f01db6b43f5b67189598aa2</anchor>
      <arglist>(int, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveFader</name>
      <anchorfile>classtracktion_1_1engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>ab3fe1ea9afb59a72854ca3bf81c9f607</anchor>
      <arglist>(int channelNum, float newSliderPos) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>movePanPot</name>
      <anchorfile>classtracktion_1_1engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a6223f647b20ba67317639a9984c95579</anchor>
      <arglist>(int channelNum, float newPan) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSoloAndMute</name>
      <anchorfile>classtracktion_1_1engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a149786ec2c138d60d2b94faa05c15fb2</anchor>
      <arglist>(int channelNum, Track::MuteAndSoloLightState, bool isBright) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soloCountChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a2e60021d3ed8d780148866da5abe2d16</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordStateChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>ab1cfc7947d1947d1349d9b6bc37cb921</anchor>
      <arglist>(bool isRecording) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>faderBankChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a7c65ef816353c699fd28523bf0941bb2</anchor>
      <arglist>(int newStartChannelNumber, const juce::StringArray &amp;trackNames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trackRecordEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a918c8d4375ae23537366cc2d6a84f3ef</anchor>
      <arglist>(int channel, bool isEnabled) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timecodeChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>afefa8d77f5738a761ad82fc72e95a181</anchor>
      <arglist>(int barsOrHours, int beatsOrMinutes, int ticksOrSeconds, int millisecs, bool isBarsBeats, bool isFrames) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a9517c2205a1a3b9eccde293707ad0f8d</anchor>
      <arglist>(bool isSnapOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loopOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>aedeb96d7d8f3f8bd6122d4bf2e15f691</anchor>
      <arglist>(bool isLoopOn) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>punchOnOffChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a5dba37baa749446d6ab9eb18ed31cd73</anchor>
      <arglist>(bool isPunching) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canChangeSelectedPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1TranzportControlSurface.html</anchorfile>
      <anchor>a38bfaad0d2e3013918a7bc9974e689e0</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::AutomatableParameterTree::TreeNode</name>
    <filename>structtracktion_1_1engine_1_1AutomatableParameterTree_1_1TreeNode.html</filename>
    <member kind="function">
      <type></type>
      <name>TreeNode</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameterTree_1_1TreeNode.html</anchorfile>
      <anchor>ae598af6be800e7be5d1c77cb64238a5a</anchor>
      <arglist>(const juce::String &amp;groupName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TreeNode</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameterTree_1_1TreeNode.html</anchorfile>
      <anchor>ab3c3d8bd27337d227d76bcdc35a11f73</anchor>
      <arglist>(const juce::ReferenceCountedObjectPtr&lt; AutomatableParameter &gt; &amp;param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSubNode</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameterTree_1_1TreeNode.html</anchorfile>
      <anchor>a9e1d0b6c914bcb4669e4eb347080571f</anchor>
      <arglist>(TreeNode *node)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getGroupName</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameterTree_1_1TreeNode.html</anchorfile>
      <anchor>ab8426eae2985743a841531447558995f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameterTree_1_1TreeNode.html</anchorfile>
      <anchor>a069c039e42dc06960d83230f5d888229</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const juce::ReferenceCountedObjectPtr&lt; AutomatableParameter &gt;</type>
      <name>parameter</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameterTree_1_1TreeNode.html</anchorfile>
      <anchor>a68220cd64f58fa6e5caf6e249316c32f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NodeType</type>
      <name>type</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameterTree_1_1TreeNode.html</anchorfile>
      <anchor>acd44e3c35e268a90aa356c8c5b3665b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; TreeNode &gt;</type>
      <name>subNodes</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameterTree_1_1TreeNode.html</anchorfile>
      <anchor>abe59769585eb6e6fa125d7a62cef84d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TreeNode *</type>
      <name>parent</name>
      <anchorfile>structtracktion_1_1engine_1_1AutomatableParameterTree_1_1TreeNode.html</anchorfile>
      <anchor>a2ada97c7d03fb59f30027a50b8b57c38</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::UIBehaviour</name>
    <filename>classtracktion_1_1engine_1_1UIBehaviour.html</filename>
    <member kind="function">
      <type></type>
      <name>UIBehaviour</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>adfb363f398f252eee7727881c31b9236</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UIBehaviour</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a105742239442b5703a29312ff86273da</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Edit *</type>
      <name>getCurrentlyFocusedEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a618fc653185256d658aedc5b8adb09da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Edit *</type>
      <name>getLastFocusedEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>aa4ac80bdb17abea1ab00b13e11f23797</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::Array&lt; Edit * &gt;</type>
      <name>getAllOpenEdits</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>af9a00acc243773b55300a42a321a4507</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isEditVisibleOnScreen</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a9953f0de3623a110ff1a3c1019e05747</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>closeAllEditsBelongingToProject</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>aeba82d42c8739fa49d55c0cb9b3ce491</anchor>
      <arglist>(Project &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>editNamesMayHaveChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a9303a20c1020be93e5444ecd71d1fba0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SelectionManager *</type>
      <name>getCurrentlyFocusedSelectionManager</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a6d77f35ca17033d9aee317cdae798ad8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SelectionManager *</type>
      <name>getSelectionManagerForRack</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a17f20c1a04f64ead8f1802c44080d8c3</anchor>
      <arglist>(const RackType &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>paste</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a762f5ab8a29dab889d7b9c3b3e969919</anchor>
      <arglist>(const Clipboard &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Project::Ptr</type>
      <name>getCurrentlyFocusedProject</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>af678fe6a9d03c3caee1d0fdd7a71cd6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>selectProjectInFocusedWindow</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a5897da068e3ffe76799fc6f2fac76fcb</anchor>
      <arglist>(Project::Ptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>updateAllProjectItemLists</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ab3015363a3cb09ea34acaa081dcec6b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::ApplicationCommandManager *</type>
      <name>getApplicationCommandManager</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ad59a215e1fec61bbd8a6af8ac10eb552</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getAllCommands</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a833b7d1d9035aeaba324db23f2af09dd</anchor>
      <arglist>(juce::Array&lt; juce::CommandID &gt; &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCommandInfo</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a22e8eb9f8e8a29fc29292ed4c13d7035</anchor>
      <arglist>(juce::CommandID, juce::ApplicationCommandInfo &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>perform</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ac2815be25a76063aac1641861de772fb</anchor>
      <arglist>(const juce::ApplicationCommandTarget::InvocationInfo &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Plugin::Ptr</type>
      <name>showMenuAndCreatePlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a6b2934b1513c6e8dbe3e8c188dcf5d43</anchor>
      <arglist>(Plugin::Type, Edit &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; juce::Component &gt;</type>
      <name>createPluginWindow</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a888ac304e1be7ca4bb556316cc24df1b</anchor>
      <arglist>(PluginWindowState &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>recreatePluginWindowContentAsync</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>aeb1fdb97690849a2f9637c6fa6a8a064</anchor>
      <arglist>(Plugin &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>newTrackCreated</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a394479ea2130ef8ba7b70224742f6c70</anchor>
      <arglist>(Track &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::unique_ptr&lt; juce::AudioThumbnailBase &gt;</type>
      <name>createAudioThumbnail</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a25e6d49da8982572f10ecac4b2cde176</anchor>
      <arglist>(int sourceSamplesPerThumbnailSample, juce::AudioFormatManager &amp;formatManagerToUse, juce::AudioThumbnailCache &amp;cacheToUse)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showWarningAlert</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a3b57fd6b5798647d9b9022fafd89391e</anchor>
      <arglist>(const juce::String &amp;title, const juce::String &amp;message)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>showOkCancelAlertBox</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ae25adeb871ca072f4dbe9ce63753f2bb</anchor>
      <arglist>(const juce::String &amp;title, const juce::String &amp;message, const juce::String &amp;ok={}, const juce::String &amp;cancel={})</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>showYesNoCancelAlertBox</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a7eca8813f114d850c34079b0f69bee73</anchor>
      <arglist>(const juce::String &amp;title, const juce::String &amp;message, const juce::String &amp;yes={}, const juce::String &amp;no={}, const juce::String &amp;cancel={})</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showInfoMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a5bb0e5e8395d940ab31ccae50cec6f24</anchor>
      <arglist>(const juce::String &amp;message)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showWarningMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ae07ebf8752549e168d0727f0487d80b5</anchor>
      <arglist>(const juce::String &amp;message)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showQuantisationLevel</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a79009c820450ee0b7ab11f59063065b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>runTaskWithProgressBar</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a184dd68b27c24cf1cc00449ae305f828</anchor>
      <arglist>(ThreadPoolJobWithProgress &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getBigInputMetersMode</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>af73f24a6d24281c9fab74187b9b3a5d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setBigInputMetersMode</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>afa714fdc0a4fa19c307c1ff5b75e955e</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>shouldGenerateLiveWaveformsWhenRecording</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a862e95ea9411a216b20be233352c024f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showSafeRecordDialog</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>abb4864d1c805de4d659698037306d273</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>hideSafeRecordDialog</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a3d0b5936a5feb9cff40908bcdb24f33b</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showProjectScreen</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>abba38fd6025b5a58b923c4eb061b96a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showSettingsScreen</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>acb477923c1586eb39208d2003cf5d76d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showEditScreen</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>aa9e97540bccc8926405dc7b67cd1969f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showHideVideo</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a32a6584edda4565843aee11f104954f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showHideInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a494eff3c598919cb9eac906d0f6746a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showHideOutputs</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a8dde77c8c47ba235ee95e302a272c1f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showHideMixer</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a33ef10398aa5a124ac952df993c2946c</anchor>
      <arglist>([[maybe_unused]] bool fullscreen)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showHideMidiEditor</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a8cd690276e7e127181d73b4225d26200</anchor>
      <arglist>([[maybe_unused]] bool fullscreen)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showHideTrackEditor</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a07951c5abbb8e69c0c8b0ce6a6c9eebf</anchor>
      <arglist>([[maybe_unused]] bool zoom)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showHideBrowser</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>af6b77f4d8d80607eae7ffb7b5587d7a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showHideActions</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a58273c99db410ceef74b2f4d7d9956aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>showHideAllPanes</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a93ceb207489a9e288cf61eae6bcbc9c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>toggleScroll</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a77a7bf2ea4532b13502007c85650dd9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isScrolling</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a02360fe1c702c2807e200f2af21ac97e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>performUserAction</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>aaf3f8282687b458c3a7f908c685b4517</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scrollTracksUp</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a64d90edb566ac5bd491a0fc344188c8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scrollTracksDown</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a10543286645e85ef60a92860e68d99bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scrollTracksLeft</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a479d857cf5979319d6f99e8afe36657c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scrollTracksRight</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a47fb4157ab81ccae0c20a8e2269d22aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>nudgeSelectedClips</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ad80f9076df56b9783268b07c33d6f887</anchor>
      <arglist>(TimecodeSnapType, const juce::String &amp;commandDesc, SelectionManager &amp;, const juce::Array&lt; Clip * &gt; &amp;, bool automationLocked)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>nudgeSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a2046c757276d937f60c3106052b53680</anchor>
      <arglist>(TimecodeSnapType, const juce::String &amp;commandDesc, bool automationLocked)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>nudgeSelected</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ac21455808dbbffbaa34d39bc11be9a39</anchor>
      <arglist>(const juce::String &amp;commandDesc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>stopPreviewPlayback</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a7b0da179c08961d5df8f43e14dcbefe0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetOverloads</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a1a8198324f0d72157c21e808d752ef80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetPeaks</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a883c0f68c2ded025bf47102e487047ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>zoomHorizontal</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a7ea52e2181ba09af83dfb528380c8c2d</anchor>
      <arglist>(float)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>zoomVertical</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a1c20d3b9af1ef1a96f009de446dfd6bf</anchor>
      <arglist>(float)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>zoomToSelection</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a70ba8b9597c5cafbed11437a15e02be9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>zoomToFitHorizontally</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a80c0b10e3819f24e3db84f27b32c3ee9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>zoomToFitVertically</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a9eaf878ffc80cf0fab7822212d46f2f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TimePosition</type>
      <name>getEditingPosition</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>ae31b083affd0f1c57e72fa8b816f3400</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual TimeRange</type>
      <name>getEditingRange</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a2612db6f499e4eb597aaf65053b1fc9c</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual juce::Array&lt; Track * &gt;</type>
      <name>getEditingTracks</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a94211500b5c8384e32fb660e63dfe71f</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SelectableList</type>
      <name>getAssociatedClipsToEdit</name>
      <anchorfile>classtracktion_1_1engine_1_1UIBehaviour.html</anchorfile>
      <anchor>a3a90d0e2def480393391bccdcc6d5662</anchor>
      <arglist>(const SelectableList &amp;items)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Edit::UndoTransactionInhibitor</name>
    <filename>structtracktion_1_1engine_1_1Edit_1_1UndoTransactionInhibitor.html</filename>
    <member kind="function">
      <type></type>
      <name>UndoTransactionInhibitor</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1UndoTransactionInhibitor.html</anchorfile>
      <anchor>a65360094678121135753fb271a48e667</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UndoTransactionInhibitor</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1UndoTransactionInhibitor.html</anchorfile>
      <anchor>a5dd85d4793e478ccc0dd2f24f58c62cc</anchor>
      <arglist>(const UndoTransactionInhibitor &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~UndoTransactionInhibitor</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1UndoTransactionInhibitor.html</anchorfile>
      <anchor>a195900625ff87098cc6e533fe6fc0cc8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ValueSmoother</name>
    <filename>classtracktion_1_1engine_1_1ValueSmoother.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>a84c3004622f656b20183c3d0413e867d</anchor>
      <arglist>(double sr, double time)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>aef97339aa1c6f7b5913ab21e4aad5217</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>a3b14a5548f3b32bcb495cc25952cdff0</anchor>
      <arglist>(T v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapToValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>af2b0b007a2246eab675b9bd40aac2838</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>a5766448533a65d6e86969de923c4668b</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getNextValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>a2d57067bb7d1c0a0fa25a3e00fc04a04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValueUnsmoothed</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>ad5060d084a39d441065f61bb6ae167df</anchor>
      <arglist>(T v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueSmoother&lt; float &gt;</name>
    <filename>classtracktion_1_1engine_1_1ValueSmoother.html</filename>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>a84c3004622f656b20183c3d0413e867d</anchor>
      <arglist>(double sr, double time)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>aef97339aa1c6f7b5913ab21e4aad5217</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>a3b14a5548f3b32bcb495cc25952cdff0</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapToValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>af2b0b007a2246eab675b9bd40aac2838</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>a5766448533a65d6e86969de923c4668b</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getNextValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>a2d57067bb7d1c0a0fa25a3e00fc04a04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValueUnsmoothed</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>ad5060d084a39d441065f61bb6ae167df</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>a84c3004622f656b20183c3d0413e867d</anchor>
      <arglist>(double sr, double time)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getCurrentValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>aef97339aa1c6f7b5913ab21e4aad5217</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>a3b14a5548f3b32bcb495cc25952cdff0</anchor>
      <arglist>(float v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>snapToValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>af2b0b007a2246eab675b9bd40aac2838</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>a5766448533a65d6e86969de923c4668b</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getNextValue</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>a2d57067bb7d1c0a0fa25a3e00fc04a04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValueUnsmoothed</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueSmoother.html</anchorfile>
      <anchor>ad5060d084a39d441065f61bb6ae167df</anchor>
      <arglist>(float v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ValueTreeAllEventListener</name>
    <filename>structtracktion_1_1engine_1_1ValueTreeAllEventListener.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>valueTreeChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1ValueTreeAllEventListener.html</anchorfile>
      <anchor>aae35372054a0563c79e5b8922cef51fc</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1ValueTreeAllEventListener.html</anchorfile>
      <anchor>a893ef79231a38065b7c3892dda2398ea</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>structtracktion_1_1engine_1_1ValueTreeAllEventListener.html</anchorfile>
      <anchor>af0a811d156a4e1aea7dee775c1329769</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>structtracktion_1_1engine_1_1ValueTreeAllEventListener.html</anchorfile>
      <anchor>a70d13d84668cf62126fb80db94775d54</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1ValueTreeAllEventListener.html</anchorfile>
      <anchor>a2784dc64963fcacbe607e3565b457c0f</anchor>
      <arglist>(juce::ValueTree &amp;, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1ValueTreeAllEventListener.html</anchorfile>
      <anchor>afafa1557fd944525def510693bf239f4</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>structtracktion_1_1engine_1_1ValueTreeAllEventListener.html</anchorfile>
      <anchor>ae83efcd4aae75465abbef0fd61930a58</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::ValueTreeComparator</name>
    <filename>structtracktion_1_1engine_1_1ValueTreeComparator.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ValueTreeComparator</name>
      <anchorfile>structtracktion_1_1engine_1_1ValueTreeComparator.html</anchorfile>
      <anchor>a6842f02c73cee3a7ee29c750e243f261</anchor>
      <arglist>(const juce::Identifier &amp;attributeToSort_, bool forwards)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>structtracktion_1_1engine_1_1ValueTreeComparator.html</anchorfile>
      <anchor>a366ba01d7e9d87978c3a589c014ae93c</anchor>
      <arglist>(const juce::ValueTree &amp;first, const juce::ValueTree &amp;second) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>structtracktion_1_1engine_1_1ValueTreeComparator.html</anchorfile>
      <anchor>ad996856be3830641e6e9e6c7610fc52d</anchor>
      <arglist>(const juce::ValueTree &amp;first, const juce::ValueTree &amp;second) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::ValueTreeObjectList</name>
    <filename>classtracktion_1_1engine_1_1ValueTreeObjectList.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ObjectType *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>ObjectType *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>ObjectType **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ObjectType *const  *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ObjectType **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ObjectType *const  *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ObjectType *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(ObjectType *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(ObjectType *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(ObjectType *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(ObjectType *first, ObjectType *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; ObjectType * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CriticalSectionType</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; ClipEffect &gt;</name>
    <filename>classtracktion_1_1engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect *const *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ClipEffect *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(ClipEffect *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(ClipEffect *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(ClipEffect *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(ClipEffect *first, ClipEffect *second) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClipEffect *const *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ClipEffect *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(ClipEffect *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(ClipEffect *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(ClipEffect *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(ClipEffect *first, ClipEffect *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; ClipEffect * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; ClipEffect * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; ClipSlot &gt;</name>
    <filename>classtracktion_1_1engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ClipSlot *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>ClipSlot *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>ClipSlot **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClipSlot *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ClipSlot **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClipSlot *const *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ClipSlot *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(ClipSlot *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(ClipSlot *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(ClipSlot *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(ClipSlot *first, ClipSlot *second) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>ClipSlot *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>ClipSlot *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>ClipSlot **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClipSlot *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ClipSlot **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClipSlot *const *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ClipSlot *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(ClipSlot *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(ClipSlot *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(ClipSlot *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(ClipSlot *first, ClipSlot *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; ClipSlot * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; ClipSlot * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; CompSection &gt;</name>
    <filename>classtracktion_1_1engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>CompSection **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CompSection *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CompSection **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CompSection *const *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CompSection *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(CompSection *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(CompSection *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(CompSection *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(CompSection *first, CompSection *second) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>CompSection *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>CompSection **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CompSection *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CompSection **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CompSection *const *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual CompSection *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(CompSection *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(CompSection *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(CompSection *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(CompSection *first, CompSection *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; CompSection * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; CompSection * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; Destination &gt;</name>
    <filename>classtracktion_1_1engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Destination *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>Destination *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>Destination **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Destination *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Destination **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Destination *const *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Destination *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(Destination *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(Destination *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(Destination *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(Destination *first, Destination *second) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Destination *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>Destination *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>Destination **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Destination *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Destination **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Destination *const *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Destination *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(Destination *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(Destination *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(Destination *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(Destination *first, Destination *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; Destination * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; Destination * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; EventType &gt;</name>
    <filename>classtracktion_1_1engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>EventType *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>EventType *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>EventType **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventType *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EventType **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventType *const *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual EventType *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(EventType *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(EventType *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(EventType *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(EventType *first, EventType *second) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>EventType *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>EventType *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>EventType **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventType *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EventType **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventType *const *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual EventType *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(EventType *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(EventType *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(EventType *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(EventType *first, EventType *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; EventType * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; EventType * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; Modifier &gt;</name>
    <filename>classtracktion_1_1engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Modifier *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>Modifier *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>Modifier **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Modifier *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Modifier **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Modifier *const *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Modifier *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(Modifier *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(Modifier *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(Modifier *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(Modifier *first, Modifier *second) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Modifier *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>Modifier *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>Modifier **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Modifier *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Modifier **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Modifier *const *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Modifier *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(Modifier *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(Modifier *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(Modifier *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(Modifier *first, Modifier *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; Modifier * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; Modifier * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; Scene &gt;</name>
    <filename>classtracktion_1_1engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Scene *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>Scene *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>Scene **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Scene *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Scene **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Scene *const *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Scene *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(Scene *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(Scene *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(Scene *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(Scene *first, Scene *second) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Scene *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>Scene *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>Scene **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Scene *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Scene **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Scene *const *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Scene *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(Scene *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(Scene *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(Scene *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(Scene *first, Scene *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; Scene * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; Scene * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; Track &gt;</name>
    <filename>classtracktion_1_1engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>Track **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Track *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Track **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Track *const *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Track *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(Track *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(Track *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(Track *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(Track *first, Track *second) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>Track **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Track *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Track **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Track *const *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Track *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(Track *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(Track *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(Track *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(Track *first, Track *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTreeObjectList&lt; WarpMarker &gt;</name>
    <filename>classtracktion_1_1engine_1_1ValueTreeObjectList.html</filename>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename CriticalSectionType::ScopedLockType</type>
      <name>ScopedLockType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8da8a7eeddfc212e9d275380b655c4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>WarpMarker *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>WarpMarker *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>WarpMarker **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WarpMarker *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WarpMarker **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WarpMarker *const *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WarpMarker *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(WarpMarker *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(WarpMarker *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(WarpMarker *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(WarpMarker *first, WarpMarker *second) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a6d13cf7f061d27d433ab3672c458770e</anchor>
      <arglist>(const juce::ValueTree &amp;parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTreeObjectList</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a32dfbbc4587a5532217f6cc02a999799</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a03a768abfae3a209c52875bf2971246b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a10c210fb48d0733c4045a275cbc99182</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>WarpMarker *</type>
      <name>operator[]</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5238b1810d9c5c94b525abff6089d83d</anchor>
      <arglist>(int idx) const</arglist>
    </member>
    <member kind="function">
      <type>WarpMarker *</type>
      <name>at</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae23e885d2f24ce99772fdc3e23ec949b</anchor>
      <arglist>(int idx)</arglist>
    </member>
    <member kind="function">
      <type>WarpMarker **</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2c705d21d806d17d7ea0a83dd2f09ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WarpMarker *const *</type>
      <name>begin</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a070e952f401a2ffbc89be7824b24d639</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WarpMarker **</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2d951db061670c5dbaf57d85120465a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WarpMarker *const *</type>
      <name>end</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a2e40297a3e30be6aa5fc4d0810dab03a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7f132eb85133ef40c3defce9a1384e11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae4cab424e5e76b608d4d1708abb8cb21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSuitableType</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ad89d75d7908ee1cf3224c59ffcea0c1b</anchor>
      <arglist>(const juce::ValueTree &amp;) const=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual WarpMarker *</type>
      <name>createNewObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ae56ab4e92f57c7ac36e22ef9efd68a6e</anchor>
      <arglist>(const juce::ValueTree &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deleteObject</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a02c5a37154b98e3b565745327220fdb4</anchor>
      <arglist>(WarpMarker *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>newObjectAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ab3e86978770c87dc4da891702f38b1d2</anchor>
      <arglist>(WarpMarker *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a7800d3414bf0df6ad0424f3d52d84455</anchor>
      <arglist>(WarpMarker *)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>objectOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a83c482e365e52a886141225895b18edf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildAdded</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8f1c40420cba3fe6ba0e3d4bdce241d3</anchor>
      <arglist>(juce::ValueTree &amp;, juce::ValueTree &amp;tree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildRemoved</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a08604493f826cb8601a4b5d042f83803</anchor>
      <arglist>(juce::ValueTree &amp;exParent, juce::ValueTree &amp;tree, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChildOrderChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a1e7531c78ab9224f2ac6b639588aab74</anchor>
      <arglist>(juce::ValueTree &amp;tree, int, int) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a748b96b306521987f2dbb1f38c09119b</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeParentChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4a7db08aa022f1a0d4f508fa44a00584</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeRedirected</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a585a7179f5371ed9309d911ef63abaa0</anchor>
      <arglist>(juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareElements</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>ac0b26305c51692f9b47f2b1c980c4264</anchor>
      <arglist>(WarpMarker *first, WarpMarker *second) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; WarpMarker * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::Array&lt; WarpMarker * &gt;</type>
      <name>objects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a5522809224016f2fb1409a4cd48bc1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::DummyCriticalSection</type>
      <name>arrayLock</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a536547ddb1a61687a48fdfa04b535cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteAllObjects</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a8dc989026c8d80b027a4cb74f2b03610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isChildTree</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4d6076ac13cb9f5790b2c274ab2ce05b</anchor>
      <arglist>(juce::ValueTree &amp;v) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>indexOf</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a66cfda9d82cf98d96517048d5c7cdefa</anchor>
      <arglist>(const juce::ValueTree &amp;v) const noexcept</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sortArray</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a4e5abf5da66646d343f775f3b909465b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::ValueTree</type>
      <name>parent</name>
      <anchorfile>classtracktion_1_1engine_1_1ValueTreeObjectList.html</anchorfile>
      <anchor>a3106979dcf5fe5e5e1c1ca7bd77f52f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::VSTXML::ValueType</name>
    <filename>structtracktion_1_1engine_1_1VSTXML_1_1ValueType.html</filename>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1ValueType.html</anchorfile>
      <anchor>a09f1095f85ec699cf8e5b784b94c9f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>label</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1ValueType.html</anchorfile>
      <anchor>a755747519b2cea23db2a7859d2b3c7be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; Entry &gt;</type>
      <name>entries</name>
      <anchorfile>structtracktion_1_1engine_1_1VSTXML_1_1ValueType.html</anchorfile>
      <anchor>ac6914a0154541a4b474c4ae8810043a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; Colour &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01Colour_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static Colour</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01Colour_01_4.html</anchorfile>
      <anchor>ab9dcbd16c229f6faf26844de828f9e6d</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01Colour_01_4.html</anchorfile>
      <anchor>ac50c4dd951a41dae6a5964314df05e4d</anchor>
      <arglist>(const Colour &amp;c)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::core::BeatDuration &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1core_1_1BeatDuration_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::core::BeatDuration</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1core_1_1BeatDuration_01_4.html</anchorfile>
      <anchor>ac4c7ff5307b4c49cc5fb1f926c779440</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1core_1_1BeatDuration_01_4.html</anchorfile>
      <anchor>a5c8ff65a4ecf376ea98627d2d9925d77</anchor>
      <arglist>(tracktion::core::BeatDuration v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::core::BeatPosition &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1core_1_1BeatPosition_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::core::BeatPosition</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1core_1_1BeatPosition_01_4.html</anchorfile>
      <anchor>ae7db496a4976b2a7c9705d01f901db58</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1core_1_1BeatPosition_01_4.html</anchorfile>
      <anchor>a9b2ae99e1c44458dfeb197e4fe35de51</anchor>
      <arglist>(tracktion::core::BeatPosition v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::core::TimeDuration &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1core_1_1TimeDuration_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::core::TimeDuration</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1core_1_1TimeDuration_01_4.html</anchorfile>
      <anchor>ac4711e4b9a8c328b90c3da505d551f4a</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1core_1_1TimeDuration_01_4.html</anchorfile>
      <anchor>af872432571cf16058bae5c1e3fd48a8c</anchor>
      <arglist>(tracktion::core::TimeDuration v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::core::TimePosition &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1core_1_1TimePosition_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::core::TimePosition</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1core_1_1TimePosition_01_4.html</anchorfile>
      <anchor>a57a5f41043e506b699381ac01410b0a5</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1core_1_1TimePosition_01_4.html</anchorfile>
      <anchor>ab574534cc15a5db314c510b67af9a345</anchor>
      <arglist>(tracktion::core::TimePosition v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::AudioClipBase::AutoPitchMode &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1AudioClipBase_1_1AutoPitchMode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::AudioClipBase::AutoPitchMode</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1AudioClipBase_1_1AutoPitchMode_01_4.html</anchorfile>
      <anchor>a59ef38a0ebcc9d529c3e76b83fe23951</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1AudioClipBase_1_1AutoPitchMode_01_4.html</anchorfile>
      <anchor>a9c5780890db2294ec4a2bc301c204cc9</anchor>
      <arglist>(tracktion::engine::AudioClipBase::AutoPitchMode v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::AudioClipBase::FadeBehaviour &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1AudioClipBase_1_1FadeBehaviour_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::AudioClipBase::FadeBehaviour</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1AudioClipBase_1_1FadeBehaviour_01_4.html</anchorfile>
      <anchor>ac366c761f794eee29da7ef71ea6cc6eb</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1AudioClipBase_1_1FadeBehaviour_01_4.html</anchorfile>
      <anchor>a67bce4613592b199227981ca455d41e8</anchor>
      <arglist>(tracktion::engine::AudioClipBase::FadeBehaviour v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::AudioFadeCurve::Type &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1AudioFadeCurve_1_1Type_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::AudioFadeCurve::Type</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1AudioFadeCurve_1_1Type_01_4.html</anchorfile>
      <anchor>a5870dc26b9b2777c439db61505de2e04</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1AudioFadeCurve_1_1Type_01_4.html</anchorfile>
      <anchor>a2e5b7e0d212b68eae0ee49086a3e7451</anchor>
      <arglist>(tracktion::engine::AudioFadeCurve::Type v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::Chord::ChordType &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1Chord_1_1ChordType_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::Chord::ChordType</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1Chord_1_1ChordType_01_4.html</anchorfile>
      <anchor>a6213d18d5556a7f384cdb9a21057f0ad</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1Chord_1_1ChordType_01_4.html</anchorfile>
      <anchor>a39b732dda1dc30cc30c11a8051b3e425</anchor>
      <arglist>(tracktion::engine::Chord::ChordType v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::Clip::FollowActionDurationType &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1Clip_1_1FollowActionDurationType_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::Clip::FollowActionDurationType</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1Clip_1_1FollowActionDurationType_01_4.html</anchorfile>
      <anchor>ab927934efcc681ebb4c859ca73677131</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1Clip_1_1FollowActionDurationType_01_4.html</anchorfile>
      <anchor>a1dad1cba7ba72d43148491fbbbd7fe87</anchor>
      <arglist>(tracktion::engine::Clip::FollowActionDurationType v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::Clip::SyncType &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1Clip_1_1SyncType_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::Clip::SyncType</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1Clip_1_1SyncType_01_4.html</anchorfile>
      <anchor>ad0e24103cc46415298bc62a92f7662ec</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1Clip_1_1SyncType_01_4.html</anchorfile>
      <anchor>a4e8d0c3fb2bf6daccdf050bd03b4f93c</anchor>
      <arglist>(tracktion::engine::Clip::SyncType v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::EditItemID &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1EditItemID_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::EditItemID</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1EditItemID_01_4.html</anchorfile>
      <anchor>a3901dd24cbdca45a16e65c107b4e83d6</anchor>
      <arglist>(const juce::var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1EditItemID_01_4.html</anchorfile>
      <anchor>a5d271dd3021420f68ecdde70f9b4e083</anchor>
      <arglist>(const tracktion::engine::EditItemID &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::FollowAction &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1FollowAction_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::FollowAction</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1FollowAction_01_4.html</anchorfile>
      <anchor>af9fd10169b8f960eae1762476ede26e4</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1FollowAction_01_4.html</anchorfile>
      <anchor>abab1dfb21a5c8828a1cc73ecd2870175</anchor>
      <arglist>(tracktion::engine::FollowAction v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::LaunchQType &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1LaunchQType_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::LaunchQType</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1LaunchQType_01_4.html</anchorfile>
      <anchor>a596a12ce05274841be2cc290f8275151</anchor>
      <arglist>(const juce::var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1LaunchQType_01_4.html</anchorfile>
      <anchor>ab0a106ef17288a2a5bb3e26252cb484e</anchor>
      <arglist>(const tracktion::engine::LaunchQType &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::MidiClip::LoopedSequenceType &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1MidiClip_1_1LoopedSequenceType_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::MidiClip::LoopedSequenceType</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1MidiClip_1_1LoopedSequenceType_01_4.html</anchorfile>
      <anchor>a1dbf1d6cce152efe68e9da21d415ed4a</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1MidiClip_1_1LoopedSequenceType_01_4.html</anchorfile>
      <anchor>ad9b5a268832128eceffd040671a5025c</anchor>
      <arglist>(tracktion::engine::MidiClip::LoopedSequenceType v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::PatternGenerator::Mode &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1PatternGenerator_1_1Mode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::PatternGenerator::Mode</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1PatternGenerator_1_1Mode_01_4.html</anchorfile>
      <anchor>aee6f87fc5454b21b4249912188bd87bb</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1PatternGenerator_1_1Mode_01_4.html</anchorfile>
      <anchor>a1594c5d368d504272663a9ceb7cef256</anchor>
      <arglist>(tracktion::engine::PatternGenerator::Mode v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::ProjectItemID &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1ProjectItemID_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::ProjectItemID</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1ProjectItemID_01_4.html</anchorfile>
      <anchor>a00611a72daa79fc0a34676e70da6ff6b</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1ProjectItemID_01_4.html</anchorfile>
      <anchor>a9c9b643b2ac74922b2aa91b1e8e9b74d</anchor>
      <arglist>(const tracktion::engine::ProjectItemID &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::RenderOptions::AddRenderOptions &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1RenderOptions_1_1AddRenderOptions_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::RenderOptions::AddRenderOptions</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1RenderOptions_1_1AddRenderOptions_01_4.html</anchorfile>
      <anchor>a526614a6f53dd0d92951757412bd1ce8</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1RenderOptions_1_1AddRenderOptions_01_4.html</anchorfile>
      <anchor>a6a8a289de8dcc382128ee71cf2e0026f</anchor>
      <arglist>(tracktion::engine::RenderOptions::AddRenderOptions v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::RenderOptions::RenderType &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1RenderOptions_1_1RenderType_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::RenderOptions::RenderType</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1RenderOptions_1_1RenderType_01_4.html</anchorfile>
      <anchor>ab6eca115a5657fc9d493490df8ab50fc</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1RenderOptions_1_1RenderType_01_4.html</anchorfile>
      <anchor>a3ec8b3108eed1640e47d92946a329432</anchor>
      <arglist>(tracktion::engine::RenderOptions::RenderType v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::RenderOptions::TargetFileFormat &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1RenderOptions_1_1TargetFileFormat_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::RenderOptions::TargetFileFormat</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1RenderOptions_1_1TargetFileFormat_01_4.html</anchorfile>
      <anchor>ad38c68c65ee3e57f12127a47c34969da</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1RenderOptions_1_1TargetFileFormat_01_4.html</anchorfile>
      <anchor>afbb6b19de5f30827017258d1da8b70f9</anchor>
      <arglist>(tracktion::engine::RenderOptions::TargetFileFormat v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::ResamplingQuality &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1ResamplingQuality_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::ResamplingQuality</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1ResamplingQuality_01_4.html</anchorfile>
      <anchor>a96c1fa50451723aa1ca03c4591a9d394</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1ResamplingQuality_01_4.html</anchorfile>
      <anchor>a6a0e1da2090a5991160ffd7a3156ac34</anchor>
      <arglist>(tracktion::engine::ResamplingQuality v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::Scale::ScaleType &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1Scale_1_1ScaleType_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::Scale::ScaleType</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1Scale_1_1ScaleType_01_4.html</anchorfile>
      <anchor>a2627eff49bbf42b888cf8e42a7ee2a8a</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1Scale_1_1ScaleType_01_4.html</anchorfile>
      <anchor>ac034483969ac2377e1387a90ad10404b</anchor>
      <arglist>(tracktion::engine::Scale::ScaleType v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::TimecodeDisplayFormat &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1TimecodeDisplayFormat_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::TimecodeDisplayFormat</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1TimecodeDisplayFormat_01_4.html</anchorfile>
      <anchor>a50577ea90a690296805a924cecffe15f</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1TimecodeDisplayFormat_01_4.html</anchorfile>
      <anchor>af02d6a871e255330cf0843ebc141fb5b</anchor>
      <arglist>(tracktion::engine::TimecodeDisplayFormat t)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::TimeStretcher::ElastiqueProOptions &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1TimeStretcher_1_1ElastiqueProOptions_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::TimeStretcher::ElastiqueProOptions</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1TimeStretcher_1_1ElastiqueProOptions_01_4.html</anchorfile>
      <anchor>ae3f9b3d769b346b6037d9d3c0051dc22</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1TimeStretcher_1_1ElastiqueProOptions_01_4.html</anchorfile>
      <anchor>a7525b239c0b2255bec35e7621d4efd3d</anchor>
      <arglist>(const tracktion::engine::TimeStretcher::ElastiqueProOptions &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::TimeStretcher::Mode &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1TimeStretcher_1_1Mode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::TimeStretcher::Mode</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1TimeStretcher_1_1Mode_01_4.html</anchorfile>
      <anchor>aadf86f9aa2868cdfed0a880f08af4e89</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1TimeStretcher_1_1Mode_01_4.html</anchorfile>
      <anchor>aba5531e3a91b7ae27772550a5c901343</anchor>
      <arglist>(tracktion::engine::TimeStretcher::Mode v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>juce::VariantConverter&lt; tracktion::engine::TrackCompManager::TrackComp::TimeFormat &gt;</name>
    <filename>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1TrackCompManager_1_1TrackComp_1_1TimeFormat_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static tracktion::engine::TrackCompManager::TrackComp::TimeFormat</type>
      <name>fromVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1TrackCompManager_1_1TrackComp_1_1TimeFormat_01_4.html</anchorfile>
      <anchor>a0a942b97cc77dd69ae08102d08623c8b</anchor>
      <arglist>(const var &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static var</type>
      <name>toVar</name>
      <anchorfile>structjuce_1_1VariantConverter_3_01tracktion_1_1engine_1_1TrackCompManager_1_1TrackComp_1_1TimeFormat_01_4.html</anchorfile>
      <anchor>a56aa9f7daf874f279d194d9c0cde3cd9</anchor>
      <arglist>(tracktion::engine::TrackCompManager::TrackComp::TimeFormat v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::VCAPlugin</name>
    <filename>classtracktion_1_1engine_1_1VCAPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="function">
      <type></type>
      <name>VCAPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a07e3b9d9648c4d557e673e7781bce6b8</anchor>
      <arglist>(PluginCreationInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VCAPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>af5487e3cb6a0033166118ad9761b20e2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getSliderPos</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>aea377ecdecd514bd5a4a013b281dc306</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVolumeDb</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>ae2407a50e3e873b476c910e761964292</anchor>
      <arglist>(float dB)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getVolumeDb</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>af830dc2290a70c64a2c55ae4bb2f1784</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSliderPos</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a816ab1b65f152e73f89af3438f95c945</anchor>
      <arglist>(float position)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>muteOrUnmute</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>acf48d2d77d9d4080c6c86ad8ef4748fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>updateAutomationStreamAndGetVolumeDb</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a4534a17e1f7f73190784b1d7bf36ff50</anchor>
      <arglist>(TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a52f10cad65e21bd6a28b91dac5419e38</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a8f15e827ae23d2decb5bb0c8212b0c59</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>aa2be2d374332b54ed03d3c077dd168d3</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToClip</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a93635617937ea58e4f804fb033b286cb</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>ae3a0bef42636dd8b5da6f6a4df9bdc34</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToFolderTrack</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a081fc30e313470d5d5a452c747796612</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeMoved</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a2359f0bbcbc7fc38156d233749ec14c0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a2a0bf640f96f540c42198f886f43dfb0</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a45be2365c294c8dbc10ede1ad6d94683</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>ad5f7d09baab6c8ff8fe2fa07339af123</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a4e1edcdf07a6528d7113fbd9645551ea</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>af5d2b9fe5917056dc4a6b5bff2feb67a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>volumeValue</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>ae631f11348e2375deed7e916e7f0968c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>volParam</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>ae4571b7fc6b74a77863c7e41f88f07b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1VCAPlugin.html</anchorfile>
      <anchor>a9053163d53ff066fe99dcc0ff11d6534</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::InputDeviceInstance::VirtualMidiInputDestination</name>
    <filename>structtracktion_1_1engine_1_1InputDeviceInstance_1_1VirtualMidiInputDestination.html</filename>
    <base>tracktion::engine::InputDeviceInstance::Destination</base>
    <member kind="function">
      <type></type>
      <name>VirtualMidiInputDestination</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1VirtualMidiInputDestination.html</anchorfile>
      <anchor>ae9645280c27a406df8b2499c8c2b3040</anchor>
      <arglist>(InputDeviceInstance &amp;i, juce::ValueTree v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VirtualMidiInputDestination</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1VirtualMidiInputDestination.html</anchorfile>
      <anchor>a5e5f143edfbe55869f5eee71afc685ec</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::VirtualMidiInputDevice</name>
    <filename>classtracktion_1_1engine_1_1VirtualMidiInputDevice.html</filename>
    <base>tracktion::engine::MidiInputDevice</base>
    <member kind="function">
      <type></type>
      <name>VirtualMidiInputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>ab3c8f0d6d604a9273da7ac2717a7f246</anchor>
      <arglist>(Engine &amp;, juce::String name, DeviceType, juce::String deviceID, bool isAllMIDIIns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VirtualMidiInputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>abfb6b075a4e38228bac0668ca79a2914</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance *</type>
      <name>createInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>a418689c55491c55ed29e805dead30520</anchor>
      <arglist>(EditPlaybackContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>aa4ffc56ea708f4caec8a56003347846a</anchor>
      <arglist>(const juce::MidiMessage &amp;, MPESourceID) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>aae6128b84dd6b6c922dd2091b4388a01</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>a9e03f3dae2074ccedca4baa84b8fb93c</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadProps</name>
      <anchorfile>classtracktion_1_1engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>a63156a5b592a3ae32c02cbbe10b2a921</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveProps</name>
      <anchorfile>classtracktion_1_1engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>a6fa34733daecc883e6dae7e944b2f49c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getMIDIInputSourceDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>a0fe355f6dbebdea7546a1fcfc57436b0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMIDIInputSourceDevices</name>
      <anchorfile>classtracktion_1_1engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>a8ae221f837e8d5554bcefc88f082b31f</anchor>
      <arglist>(const juce::StringArray deviceIDs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleMIDIInputSourceDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>ad8998e63df0e013d4d785e41df31cdc2</anchor>
      <arglist>(const juce::String &amp;deviceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleMessageFromPhysicalDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>a39b2f1a4f145a67b294f8c54e9e4bad6</anchor>
      <arglist>(PhysicalMidiInputDevice &amp;, const juce::MidiMessage &amp;)</arglist>
    </member>
    <member kind="function">
      <type>DeviceType</type>
      <name>getDeviceType</name>
      <anchorfile>classtracktion_1_1engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>a015b7d1e8a8f06d47f2ea6f26a876c6c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>a671c3aaae21a9aaa96cb75bed408cc2f</anchor>
      <arglist>(juce::MidiInput *, const juce::MidiMessage &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>virtual void</type>
      <name>handleIncomingMidiMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>ade5c87f9a1415977a0a7cae638024668</anchor>
      <arglist>(const juce::MidiMessage &amp;, MPESourceID)=0</arglist>
    </member>
    <member kind="variable">
      <type>const bool</type>
      <name>useAllInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1VirtualMidiInputDevice.html</anchorfile>
      <anchor>a197daebd18416dda92817a2f461122f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::detail::VisitNodesWithRecord</name>
    <filename>structtracktion_1_1graph_1_1detail_1_1VisitNodesWithRecord.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>visit</name>
      <anchorfile>structtracktion_1_1graph_1_1detail_1_1VisitNodesWithRecord.html</anchorfile>
      <anchor>a19db24adb60fbf8cc283f0bec33df29c</anchor>
      <arglist>(std::vector&lt; Node * &gt; &amp;visitedNodes, Node &amp;visitingNode, Visitor &amp;&amp;visitor, bool preordering)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::graph::detail::VisitNodesWithRecordBFS</name>
    <filename>structtracktion_1_1graph_1_1detail_1_1VisitNodesWithRecordBFS.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>visit</name>
      <anchorfile>structtracktion_1_1graph_1_1detail_1_1VisitNodesWithRecordBFS.html</anchorfile>
      <anchor>a1f0be2a2e0893e2b5bcfebfa4607730d</anchor>
      <arglist>(std::vector&lt; Node * &gt; &amp;visitedNodes, Node &amp;visitingNode, Visitor &amp;&amp;visitor)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::VolumeAndPanPlugin</name>
    <filename>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</filename>
    <base>tracktion::engine::Plugin</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; VolumeAndPanPlugin &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>ac63037c72ebc4cc1903c4145a1aa3028</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VolumeAndPanPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a0db9afb70b58ceabb5b5825a91587f74</anchor>
      <arglist>(Edit &amp;, const juce::ValueTree &amp;, bool isMasterVolumeNode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VolumeAndPanPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>ad3514694bc71448208723505dab58143</anchor>
      <arglist>(PluginCreationInfo, bool isMasterVolumeNode=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VolumeAndPanPlugin</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a28d57ada37aa7c4d67ee4bd7451b0197</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMasterVolAndPan</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a5b8c82a7215d8d4265098662de590cc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeAddedToRack</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a785f423d1dc1954c923daab5e3db0150</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canBeMoved</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a7d517664f403fda6c8487b27b85107e5</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getVolumeDb</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>af84cb099363ae8cfd1f9d4db9f2b6c3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getSliderPos</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>af9a0ef96ffc9ae1651e7e93ff2fbe259</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVolumeDb</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a06bc0e14b371da634402a95f318e31ae</anchor>
      <arglist>(float vol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSliderPos</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a786ec7a7ed87e59f99f821951951f2bc</anchor>
      <arglist>(float pos)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getPan</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>ab18aa38dcc20eee3a3448da5f2763850</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPan</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a0d1980137f4d68e3b7fbcf2f76082845</anchor>
      <arglist>(float pan)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPanLaw</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a253c0c52d05935f7bdd275967b997cd6</anchor>
      <arglist>(PanLaw newPanLaw)</arglist>
    </member>
    <member kind="function">
      <type>PanLaw</type>
      <name>getPanLaw</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a6c9195864c43abff50709b692addef0f</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAppliedToMidiVolumes</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a41f9133d221124aec2ef56d2762f4d12</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAppliedToMidiVolumes</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a5ff0a47467d0317aad6af956405317e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>muteOrUnmute</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>ae0ac65a5450cc119a8e5a1e97c134b1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldMeasureCpuUsage</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a957b9b18e4f5ae020a6f1e72c445ed50</anchor>
      <arglist>() const noexcept final</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>aa0b1b59faa101c063d21e3b2d7867a24</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPluginType</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>ab24c8ca64ec1087a2c2bf5da3842eadf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getShortName</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a8433b8a301d96e96d626ce04e8795611</anchor>
      <arglist>(int) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a008f368e970458d6d0df9b03e0227066</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a167ab9fb328aa1bb09922c9cb0e696e2</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialiseWithoutStopping</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>abeabc8116fd18e5efa8d4587d30114ed</anchor>
      <arglist>(const PluginInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deinitialise</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a06eb1b17b4a2d333be42d1b35c9e2956</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyToBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>adaad8e5e875d25f8b1da086aac9687ae</anchor>
      <arglist>(const PluginRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumOutputChannelsGivenInputs</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a1958e56a0c6847f9f2c69e8c443a677b</anchor>
      <arglist>(int numInputs) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restorePluginStateFromValueTree</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a111102a1468b8f8c35fb36044a33739a</anchor>
      <arglist>(const juce::ValueTree &amp;) override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>getPluginName</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a8f0e004fb3f2707b935ca68630d9e950</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::ValueTree</type>
      <name>create</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>ad043fbce1f6560efb3ba2fd66572285a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>volume</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a6f013e40f9af3adadb627a6ff7857b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>pan</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>ae9ccb7e7fe5679b0ffa7d3d00f52f66d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>applyToMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>ab06e2b1bc51a77ee74a19a71ef35a021</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>ignoreVca</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>ac05e54c0d082f2847dd27713d89f77c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; bool &gt;</type>
      <name>polarity</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a96e426dad39316e1f56690fbd620b920</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>panLaw</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a4ca6e53ff47bb63e74563c78fe541594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>volParam</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a632055601bac5685eace0769c9461463</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AutomatableParameter::Ptr</type>
      <name>panParam</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a827ec3c51064f4fe3c6af2dc39b4e5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>smoothingRampTimeSeconds</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a0477a505a1eb103152a9cf1b5245c29d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>xmlTypeName</name>
      <anchorfile>classtracktion_1_1engine_1_1VolumeAndPanPlugin.html</anchorfile>
      <anchor>a7cc93474dcb55fa0886baa96afbe35b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::VolumeEffect</name>
    <filename>structtracktion_1_1engine_1_1VolumeEffect.html</filename>
    <base>tracktion::engine::ClipEffect</base>
    <member kind="function">
      <type></type>
      <name>VolumeEffect</name>
      <anchorfile>structtracktion_1_1engine_1_1VolumeEffect.html</anchorfile>
      <anchor>a85584e02cb75da6400b95aba180f672d</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion_1_1engine_1_1VolumeEffect.html</anchorfile>
      <anchor>a20f9dc4c28d05d12fc3981109411e1e4</anchor>
      <arglist>(const AudioFile &amp;sourceFile, double sourceLength) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>structtracktion_1_1engine_1_1VolumeEffect.html</anchorfile>
      <anchor>a38089710863a2ffabc12d12918dfeaa1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProperties</name>
      <anchorfile>structtracktion_1_1engine_1_1VolumeEffect.html</anchorfile>
      <anchor>a715303010527d6ad6e73733baf025b1c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>propertiesButtonPressed</name>
      <anchorfile>structtracktion_1_1engine_1_1VolumeEffect.html</anchorfile>
      <anchor>a071f322b44eb81cba3e115ef2301270a</anchor>
      <arglist>(SelectionManager &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getIndividualHash</name>
      <anchorfile>structtracktion_1_1engine_1_1VolumeEffect.html</anchorfile>
      <anchor>af8e81501cbc102f3d9a9b358cc68f937</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreePropertyChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1VolumeEffect.html</anchorfile>
      <anchor>ad504261071eaafcd6932f1c1320b6a17</anchor>
      <arglist>(juce::ValueTree &amp;, const juce::Identifier &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueTreeChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1VolumeEffect.html</anchorfile>
      <anchor>a30c3df9a3bbd90d663792ae07137c655</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>structtracktion_1_1engine_1_1VolumeEffect.html</anchorfile>
      <anchor>aa131a6408c159e3a30b1840cb0a39596</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>VolumeAndPanPlugin::Ptr</type>
      <name>plugin</name>
      <anchorfile>structtracktion_1_1engine_1_1VolumeEffect.html</anchorfile>
      <anchor>ae584a7785b9b58bc144a0d671645f5b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; ClipEffects::RenderInhibitor &gt;</type>
      <name>inhibitor</name>
      <anchorfile>structtracktion_1_1engine_1_1VolumeEffect.html</anchorfile>
      <anchor>a3ce339fc859b92b3bc825bbd659e7c13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::VSTXML</name>
    <filename>classtracktion_1_1engine_1_1VSTXML.html</filename>
    <class kind="struct">tracktion::engine::VSTXML::Base</class>
    <class kind="struct">tracktion::engine::VSTXML::Entry</class>
    <class kind="struct">tracktion::engine::VSTXML::Group</class>
    <class kind="struct">tracktion::engine::VSTXML::Param</class>
    <class kind="struct">tracktion::engine::VSTXML::Range</class>
    <class kind="struct">tracktion::engine::VSTXML::Template</class>
    <class kind="struct">tracktion::engine::VSTXML::ValueType</class>
    <member kind="function">
      <type>const Param *</type>
      <name>getParamForID</name>
      <anchorfile>classtracktion_1_1engine_1_1VSTXML.html</anchorfile>
      <anchor>a2b5e1a8b963c28e367630a51dbbf6831</anchor>
      <arglist>(int paramID, const Group *grp) const</arglist>
    </member>
    <member kind="function">
      <type>const ValueType *</type>
      <name>getValueType</name>
      <anchorfile>classtracktion_1_1engine_1_1VSTXML.html</anchorfile>
      <anchor>a86219788a4becbcda36a5e67124fb1b8</anchor>
      <arglist>(const juce::String &amp;name) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VSTXML *</type>
      <name>createFor</name>
      <anchorfile>classtracktion_1_1engine_1_1VSTXML.html</anchorfile>
      <anchor>a4c43c849240ea0a7e904189290705294</anchor>
      <arglist>(const juce::XmlElement &amp;xml)</arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; Base &gt;</type>
      <name>paramTree</name>
      <anchorfile>classtracktion_1_1engine_1_1VSTXML.html</anchorfile>
      <anchor>a9e7456808950eee16f88cac1d80f1885</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; ValueType &gt;</type>
      <name>valueTypes</name>
      <anchorfile>classtracktion_1_1engine_1_1VSTXML.html</anchorfile>
      <anchor>a0fc4f6c81c24cec436d039bc2395e59f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::OwnedArray&lt; Template &gt;</type>
      <name>templates</name>
      <anchorfile>classtracktion_1_1engine_1_1VSTXML.html</anchorfile>
      <anchor>a60aa321984e423349e29c6dc7f7993a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::WarpMarker</name>
    <filename>structtracktion_1_1engine_1_1WarpMarker.html</filename>
    <member kind="function">
      <type></type>
      <name>WarpMarker</name>
      <anchorfile>structtracktion_1_1engine_1_1WarpMarker.html</anchorfile>
      <anchor>a46414530fb96f341f2b5a240c933d9aa</anchor>
      <arglist>() noexcept=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WarpMarker</name>
      <anchorfile>structtracktion_1_1engine_1_1WarpMarker.html</anchorfile>
      <anchor>a3260b680ad4089ca222835a81a73ac4f</anchor>
      <arglist>(TimePosition s, TimePosition w)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WarpMarker</name>
      <anchorfile>structtracktion_1_1engine_1_1WarpMarker.html</anchorfile>
      <anchor>a11186d8c3432fb844d19abc83b6815d9</anchor>
      <arglist>(const juce::ValueTree &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFrom</name>
      <anchorfile>structtracktion_1_1engine_1_1WarpMarker.html</anchorfile>
      <anchor>a1f6bd7884201983a437afa8d35bf3047</anchor>
      <arglist>(const juce::ValueTree &amp;v, const juce::Identifier &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>structtracktion_1_1engine_1_1WarpMarker.html</anchorfile>
      <anchor>aa9d3db31a9583562c41a13ce1565fefc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1WarpMarker.html</anchorfile>
      <anchor>ae1ecc51eada1090c01f83b2289dd1f16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimePosition</type>
      <name>sourceTime</name>
      <anchorfile>structtracktion_1_1engine_1_1WarpMarker.html</anchorfile>
      <anchor>a16ecaec736d752b153abfd7362c51d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimePosition</type>
      <name>warpTime</name>
      <anchorfile>structtracktion_1_1engine_1_1WarpMarker.html</anchorfile>
      <anchor>a668aa5284251ac2615766e9c161091d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::WarpPoint</name>
    <filename>structtracktion_1_1engine_1_1WarpPoint.html</filename>
    <member kind="variable">
      <type>TimePosition</type>
      <name>sourceTime</name>
      <anchorfile>structtracktion_1_1engine_1_1WarpPoint.html</anchorfile>
      <anchor>adb82d00a4c785f287c5f6efb79e5ca95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimePosition</type>
      <name>warpTime</name>
      <anchorfile>structtracktion_1_1engine_1_1WarpPoint.html</anchorfile>
      <anchor>a7b39f70bf3fad7387ddfcf86b1169325</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::WarpTimeEffect</name>
    <filename>structtracktion_1_1engine_1_1WarpTimeEffect.html</filename>
    <base>tracktion::engine::ClipEffect</base>
    <member kind="function">
      <type></type>
      <name>WarpTimeEffect</name>
      <anchorfile>structtracktion_1_1engine_1_1WarpTimeEffect.html</anchorfile>
      <anchor>a8c64f5c2c6624976afe027b34264f1e3</anchor>
      <arglist>(const juce::ValueTree &amp;, ClipEffects &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; ClipEffectRenderJob &gt;</type>
      <name>createRenderJob</name>
      <anchorfile>structtracktion_1_1engine_1_1WarpTimeEffect.html</anchorfile>
      <anchor>a62684bdb419e4309da197cee36ea3e14</anchor>
      <arglist>(const AudioFile &amp;, double sourceLength) override</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getIndividualHash</name>
      <anchorfile>structtracktion_1_1engine_1_1WarpTimeEffect.html</anchorfile>
      <anchor>a0e0100a549916890cbe7a159b599e24d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sourceChanged</name>
      <anchorfile>structtracktion_1_1engine_1_1WarpTimeEffect.html</anchorfile>
      <anchor>a6e4c1dce52cf277d8afd7395cf6ffa96</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>editFinishedLoading</name>
      <anchorfile>structtracktion_1_1engine_1_1WarpTimeEffect.html</anchorfile>
      <anchor>a05f5ab9ea36db6f0da1f7fa1a84e17e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>WarpTimeManager::Ptr</type>
      <name>warpTimeManager</name>
      <anchorfile>structtracktion_1_1engine_1_1WarpTimeEffect.html</anchorfile>
      <anchor>a57425e4905f7a51cfc7671b154755562</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; Edit::LoadFinishedCallback&lt; WarpTimeEffect &gt; &gt;</type>
      <name>editLoadedCallback</name>
      <anchorfile>structtracktion_1_1engine_1_1WarpTimeEffect.html</anchorfile>
      <anchor>a45193f39c4c6747fa96c008bca1f48e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::WarpTimeFactory</name>
    <filename>classtracktion_1_1engine_1_1WarpTimeFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>WarpTimeFactory</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeFactory.html</anchorfile>
      <anchor>a203498e399e4892f6e42b58c00edb302</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WarpTimeFactory</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeFactory.html</anchorfile>
      <anchor>a95e395e55bed962d9831784964ce7b2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WarpTimeManager::Ptr</type>
      <name>getWarpTimeManager</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeFactory.html</anchorfile>
      <anchor>a36c7ec1fb9c48d4556a5257ec9aef712</anchor>
      <arglist>(const Clip &amp;)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>WarpTimeManager</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeFactory.html</anchorfile>
      <anchor>a1a368f535de9a30921add07fed520f55</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::WarpTimeManager</name>
    <filename>classtracktion_1_1engine_1_1WarpTimeManager.html</filename>
    <base>tracktion::engine::RenderManager::Job::Listener</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; WarpTimeManager &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a778de0bf56c3a7bb3d072a7b59f280a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WarpTimeManager</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a54c6a4c43572c4ea4e62ffbb65134ba5</anchor>
      <arglist>(AudioClipBase &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WarpTimeManager</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a5f4e71d763b4c9e56b479b34bc3fdaee</anchor>
      <arglist>(Edit &amp;, const AudioFile &amp;sourceFile, juce::ValueTree parentTree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WarpTimeManager</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>ac6666fa32c63ee2e488c44d415a8ef0f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSourceFile</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>aba77f5a5cce0b5a1f22fcb7d3d697863</anchor>
      <arglist>(const AudioFile &amp;)</arglist>
    </member>
    <member kind="function">
      <type>AudioFile</type>
      <name>getSourceFile</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a87e420c6faf98aece266d4ebf007f2ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getSourceLength</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>afe0a000bd865dd301a59b3f9e73ef8d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWarpEndMarkerEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a1b5f2f474a90065aa071b3db75a4f3da</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areEndMarkersLimited</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a98b8346623a721db9455a018a66efb4d</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::Array&lt; WarpMarker * &gt; &amp;</type>
      <name>getMarkers</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a081781a5b1d274879430b4aca94e8c0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>insertMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>acc10831ed0b67dc85c3a0bc47dcd8cce</anchor>
      <arglist>(WarpMarker)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>aa4d50e5d9e8b91991649d9cd539ca840</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllMarkers</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a051df40d0c43a8f6ee0c5129b9907bc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>moveMarker</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a4af52f24df804d823855d5b4e1f3ddc2</anchor>
      <arglist>(int index, TimePosition newWarpTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWarpEndMarkerTime</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>abc85a2e323c3d8b18117452ce6d6df25</anchor>
      <arglist>(TimePosition endTime)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; TimeRange &gt;</type>
      <name>getWarpTimeRegions</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a0b53aa6341c25f17b5e8cc2f384a0d39</anchor>
      <arglist>(TimeRange overallTimeRegion) const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; bool, juce::Array&lt; TimePosition &gt; &gt;</type>
      <name>getTransientTimes</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a33ce8848504222f7ad688ec337ef0df6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>warpTimeToSourceTime</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>aa63ad3583640609a055293fb9c9d27e8</anchor>
      <arglist>(TimePosition warpTime) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>sourceTimeToWarpTime</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>ad4c6834a0c9f40a6f20044c23521d9cf</anchor>
      <arglist>(TimePosition sourceTime) const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getWarpedStart</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>aded403f8421dd7a2f8e057be5e864e03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getWarpedEnd</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a0750c621270dfe21e57867814b09d26d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>getWarpEndMarkerTime</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>ade04801664762ee8f8efca215655a3fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a4cf41654caaa42716536313c075ec820</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>editFinishedLoading</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>ac79244f994855876d23a58ff9389b0d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Edit &amp;</type>
      <name>edit</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>aba990d99020b59360724190fed1715da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a09dd8e95a04a69f60a4e02a092772332</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>WarpTimeFactory</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeManager.html</anchorfile>
      <anchor>a9dcceb5c2cd8adb5e6089150c54ead12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::WarpTimeRenderJob</name>
    <filename>classtracktion_1_1engine_1_1WarpTimeRenderJob.html</filename>
    <base>tracktion::engine::RenderManager::Job</base>
    <member kind="function" static="yes">
      <type>static Ptr</type>
      <name>getOrCreateRenderJob</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeRenderJob.html</anchorfile>
      <anchor>ac0404951f42ad72a539b0d08a783e157</anchor>
      <arglist>(AudioClipBase &amp;clip, const juce::File &amp;source, const juce::File &amp;destination)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>setUpRender</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeRenderJob.html</anchorfile>
      <anchor>afad9e43ed2e5a54559d546a2a05ebb86</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>renderNextBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeRenderJob.html</anchorfile>
      <anchor>ae71c379f9c94246721c0492c6316542e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>completeRender</name>
      <anchorfile>classtracktion_1_1engine_1_1WarpTimeRenderJob.html</anchorfile>
      <anchor>a8047604172edaaa6d58243ce19858958</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Edit::WastedMidiMessagesListener</name>
    <filename>structtracktion_1_1engine_1_1Edit_1_1WastedMidiMessagesListener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WastedMidiMessagesListener</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1WastedMidiMessagesListener.html</anchorfile>
      <anchor>a4854fe01ea36ee2b0ca2d55294563b9f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>warnOfWastedMidiMessages</name>
      <anchorfile>structtracktion_1_1engine_1_1Edit_1_1WastedMidiMessagesListener.html</anchorfile>
      <anchor>a90ff996682e070e23a9c650c4791b5c1</anchor>
      <arglist>(InputDevice *, Track *)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::WaveAudioClip</name>
    <filename>classtracktion_1_1engine_1_1WaveAudioClip.html</filename>
    <base>tracktion::engine::AudioClipBase</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; WaveAudioClip &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>acc8e24846cb0a1a9f7f0d6d89a0f3b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WaveAudioClip</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a5e234adc79e526430ea532b8d6f0233d</anchor>
      <arglist>(const juce::ValueTree &amp;, EditItemID, ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WaveAudioClip</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a6d38d00e160f2ac152f8e82469f72eea</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTake</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>ad94a55066c78ed5745a405fcead42be6</anchor>
      <arglist>(ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTake</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a8ef18abd6feb0ddc3fa3d132d172fd8b</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteAllUnusedTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a89b441687a65900a4a49344685a43f82</anchor>
      <arglist>(bool deleteSourceFiles)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteAllUnusedTakesConfirmingWithUser</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a48f8102d34ba4254784afeee65418ba2</anchor>
      <arglist>(bool deleteSourceFiles)</arglist>
    </member>
    <member kind="function">
      <type>WaveCompManager &amp;</type>
      <name>getCompManager</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a0e4e03620d6a56acf81d017ea9a42114</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsRender</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a614e6c9a50e9ed03121a2781585a232a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>RenderManager::Job::Ptr</type>
      <name>getRenderJob</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a636fd84e4bcbfb6bf44b2a31a0013376</anchor>
      <arglist>(const AudioFile &amp;destFile) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getRenderMessage</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a3762b18b6556576d01ac4314b4720d22</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderComplete</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a0de864828940b042ad4131683d1a944e</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsingFile</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>ab837de68167ff8b02bd5c4b35d48b5a3</anchor>
      <arglist>(const AudioFile &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialise</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>ad3140d4530f449e701d4c2d9700b4ac7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cloneFrom</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>aa79c1e3ca22126ab737ef94aeaea317c</anchor>
      <arglist>(Clip *) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a5ed8406d5f77cfc13d4164d897b3ae4f</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidi</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>ae15751cef45364790047ed9736d39513</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesSourceFile</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a4c16255d149ecba1cbf2a4e6197ca0f1</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getSourceLength</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a71cf4a2152e2db7b2637b5379f394bbf</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sourceMediaChanged</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a935eec0fbe4dff5fc46df582dd2fe0a2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getOriginalFile</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a02978f8d7dd2f2f85d2eb0c1a4a85757</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getHash</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a65ac674df6d627f7f43af07576a05e09</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLoopDefaults</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>ab8c9183c7dbf74b5ef6d6673268220bf</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getTakeDescriptions</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>ac7a1b25f6667688e5c9a975994eb1b4a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAnyTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a47237212bf0e5eca479a17224aaab9b9</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a33d7cd3b0234d5ee5adbc4c3d01ae0c2</anchor>
      <arglist>(bool includeComps) override</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ProjectItemID &gt;</type>
      <name>getTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a3829614c209039a0459f80d8cfa3704d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>ad06c4c2522d9cd93f7ce13c88d8056a2</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCurrentTake</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a04c49487d12277e1434d54a78a14bd06</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentTake</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>aa47e45ad52afb709596a12cff7503982</anchor>
      <arglist>(int takeIndex) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCurrentTakeComp</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a6e230b8b100a65527b017939aa72e3aa</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>Clip::Array</type>
      <name>unpackTakes</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>adba28530061f716e9a2dd14ba6743604</anchor>
      <arglist>(bool toNewTracks) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reassignReferencedItem</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioClip.html</anchorfile>
      <anchor>a2c04c147ea0ecd6aac5ef643b86a6d44</anchor>
      <arglist>(const ReferencedItem &amp;, ProjectItemID newID, double newStartTime) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::WaveAudioNode</name>
    <filename>classtracktion_1_1engine_1_1WaveAudioNode.html</filename>
    <base>tracktion::engine::AudioNode</base>
    <member kind="function">
      <type></type>
      <name>WaveAudioNode</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>aac6a2b678843c9282dd9a33df3bd1359</anchor>
      <arglist>(const AudioFile &amp;file, legacy::EditTimeRange editTime, double offset, legacy::EditTimeRange loopSection, LiveClipLevel level, double speedRatio, const juce::AudioChannelSet &amp;channelsToUse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WaveAudioNode</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>a491d9b72936dc427b09a4e119afef55b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAudioNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>a0baa2b0427f28ff10095d0be5594aeeb</anchor>
      <arglist>(AudioNodeProperties &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>adf9aafb2e0de0e2f87006d6388a2b93c</anchor>
      <arglist>(const VisitorFn &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>purgeSubNodes</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>a5996bc549db02c031f856c404f2beb71</anchor>
      <arglist>(bool keepAudio, bool keepMidi) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareAudioNodeToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>ad0181ed82d0537c6f83c1b0cb319c699</anchor>
      <arglist>(const PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToRender</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>a2f8080b4d1c8151a1e17102923600349</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseAudioNodeResources</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>ac0513df2e7589976ae1188e7395c0669</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderOver</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>a8fb67857386ccbd2e92a1eff4f5ad31b</anchor>
      <arglist>(const AudioRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderAdding</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>ab0844fb99587626574a2983be3800467</anchor>
      <arglist>(const AudioRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareForNextBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>a20a48cd2db947bcdcd91e3dc12cb94d3</anchor>
      <arglist>(const AudioRenderContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderSection</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveAudioNode.html</anchorfile>
      <anchor>a0c4a02def28560212fcf29ba9920579f</anchor>
      <arglist>(const AudioRenderContext &amp;, legacy::EditTimeRange editTime)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::WaveCompManager</name>
    <filename>classtracktion_1_1engine_1_1WaveCompManager.html</filename>
    <base>tracktion::engine::CompManager</base>
    <member kind="typedef">
      <type>juce::ReferenceCountedObjectPtr&lt; WaveCompManager &gt;</type>
      <name>Ptr</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a8eeb4ad3fdf963708ab207789c418c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WaveCompManager</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>ae4f19984407879813759922670c84902</anchor>
      <arglist>(WaveAudioClip &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WaveCompManager</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a498ac19294292306efd2c793d32b1891</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateThumbnails</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>ae3bb632411fbf534888719e43b9f8f29</anchor>
      <arglist>(juce::Component &amp;, juce::OwnedArray&lt; SmartThumbnail &gt; &amp;thumbnails) const</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getCurrentCompFile</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>afe8c2edce3e9ffd004c635c73eaaa4f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>HashCode</type>
      <name>getBaseTakeHash</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a4e4803cf4d705de05b3ff4b08e3afddb</anchor>
      <arglist>(int takeIndex) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTakeLength</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>aceb29852f3422e1e3a2ac79bbb96c60e</anchor>
      <arglist>(int takeIndex) const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOffset</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>ad316d05f4c48be4c400e5b9ea49a94d3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLoopLength</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a146a12a9e1495214d44627323bc0d75b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAutoTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a01b3bf35be7179e5c0918a33402881ca</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSourceTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a7e9f8b24335f1cd0d245e74a91c1bff4</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getWarning</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a87b1568d9e2ad2f3dd325403e2c8edd9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getRenderProgress</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>ac9789560ba0be05f2a502c3662e39026</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>triggerCompRender</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a8d1ac4cb3b68997ef5430e7ad5d2bd0a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flattenTake</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a33b961857ac3d28b1f41442f55e6ea16</anchor>
      <arglist>(int takeIndex, bool deleteSourceFiles) override</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>pasteComp</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a28de25f26b3ced6edaa08268f7c9cb2c</anchor>
      <arglist>(const juce::ValueTree &amp;compTree) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStripToUpdate</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a9b6669bd8d143877cab45b4dbfa127cd</anchor>
      <arglist>(juce::Component *strip) override</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>addNewComp</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>aa58fd36a32c2d9b6d0207b4f2979d042</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>CompRenderContext *</type>
      <name>createRenderContext</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a14ea6ba31d0d5904e67e9faa5e4228da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>renderTake</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveCompManager.html</anchorfile>
      <anchor>a97134e39ac986cd5478f403a43704a60</anchor>
      <arglist>(CompRenderContext &amp;, AudioFileWriter &amp;, juce::ThreadPoolJob &amp;, std::atomic&lt; float &gt; &amp;progress)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::WaveDeviceDescription</name>
    <filename>structtracktion_1_1engine_1_1WaveDeviceDescription.html</filename>
    <member kind="function">
      <type></type>
      <name>WaveDeviceDescription</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveDeviceDescription.html</anchorfile>
      <anchor>ad35d9f3de00734a034cbbd97759bf157</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WaveDeviceDescription</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveDeviceDescription.html</anchorfile>
      <anchor>a4e178ddc2cac2815c91f0dc1efc38e2f</anchor>
      <arglist>(const juce::String &amp;name, int leftChanIndex, int rightChanIndex, bool isEnabled)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WaveDeviceDescription</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveDeviceDescription.html</anchorfile>
      <anchor>a6036f08861cf2492699c900c46c889d2</anchor>
      <arglist>(const juce::String &amp;nm, const ChannelIndex *channels, int numChannels, bool isEnabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveDeviceDescription.html</anchorfile>
      <anchor>aa40be0bfd1016daa14d399be35bf0aa6</anchor>
      <arglist>(const WaveDeviceDescription &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveDeviceDescription.html</anchorfile>
      <anchor>ab4934dd042dcce30e004f2fb7c083e0a</anchor>
      <arglist>(const WaveDeviceDescription &amp;) const</arglist>
    </member>
    <member kind="variable">
      <type>juce::String</type>
      <name>name</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveDeviceDescription.html</anchorfile>
      <anchor>aa610f07fbf9dcc11c2da4606e5f102e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ChannelIndex &gt;</type>
      <name>channels</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveDeviceDescription.html</anchorfile>
      <anchor>a64b3ec062cfa51510e617e55d76146ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enabled</name>
      <anchorfile>structtracktion_1_1engine_1_1WaveDeviceDescription.html</anchorfile>
      <anchor>ac4b587df9d90e8ca9802124c6d194681</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::InputDeviceInstance::WaveInputDestination</name>
    <filename>structtracktion_1_1engine_1_1InputDeviceInstance_1_1WaveInputDestination.html</filename>
    <base>tracktion::engine::InputDeviceInstance::Destination</base>
    <member kind="function">
      <type></type>
      <name>WaveInputDestination</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1WaveInputDestination.html</anchorfile>
      <anchor>a5bb37ab7608a78d9585b568de360df45</anchor>
      <arglist>(InputDeviceInstance &amp;i, juce::ValueTree v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WaveInputDestination</name>
      <anchorfile>structtracktion_1_1engine_1_1InputDeviceInstance_1_1WaveInputDestination.html</anchorfile>
      <anchor>aa36189b82bdf83ff32400b377c1ed001</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::WaveInputDevice</name>
    <filename>classtracktion_1_1engine_1_1WaveInputDevice.html</filename>
    <base>tracktion::engine::InputDevice</base>
    <member kind="function">
      <type></type>
      <name>WaveInputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a6c7989d18d8f9e337aad93087a13be4e</anchor>
      <arglist>(Engine &amp;, const juce::String &amp;type, const WaveDeviceDescription &amp;, DeviceType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WaveInputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a5facab8c8138fe8bd3bf1858fc97b5c0</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getRecordFormatNames</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a09ed5ffc06b1404baa3500c4cd518460</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a4bb55ac8efdb236235bc2c021f2f53ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>aaecb79fdcc9b4f18a1efb43dd30e13c0</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>DeviceType</type>
      <name>getDeviceType</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a4e141c349fd42cbd91d622c580badd51</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance *</type>
      <name>createInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>afd328e5ba102ed0a2e210407fb80737d</anchor>
      <arglist>(EditPlaybackContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRecordAdjustment</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a1c4e6f7ec70cb20a5b48265c02ecd9aa</anchor>
      <arglist>(TimeDuration)</arglist>
    </member>
    <member kind="function">
      <type>TimeDuration</type>
      <name>getRecordAdjustment</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a3543494806bd7a8b87822800ac917fa3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRecordAdjustmentMs</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>aef8f24124bb66758ffeed27aa67eee74</anchor>
      <arglist>(double ms)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRecordAdjustmentMs</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a122fedcd250fb368967c8dfe169e6b7b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStereoPair</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a6d28700251ff8db3726fc5703f818002</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStereoPair</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>afed7d83e0b36dc6c2728282d6cebe8ce</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; int &gt;</type>
      <name>getAvailableBitDepths</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>aba01879552fc208c978d371a68d1be97</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBitDepth</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a87b3a542fa6c4cba2b4186477ceb4b43</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBitDepth</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>ac1a4229325a63033074536041d153123</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkBitDepth</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a01435c7e7c43158c82a77b89e0b15230</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInputGainDb</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>abbd9c028d8ce6ac56abee25b92aa16ac</anchor>
      <arglist>(float gain)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getInputGainDb</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a78ad7f3f3012eba5f67e79b4903a3791</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRecordTriggerDb</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>ab93e688d8aea3f476ff78662da2f0b1c</anchor>
      <arglist>(float)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getRecordTriggerDb</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>ae9ee9879da8af631c84e379290b3f6ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilenameMask</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a8ae4ea2aa4501b7ecf92c46b222ad6a4</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getFilenameMask</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a77e938a20289befcd12804f541327cc4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilenameMaskToDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>ab222d50adfc09482638ad481645a7728</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a9dac495b6931ef1469e331ac5a7ce457</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getOutputFormat</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a17dea094cb5f944462d8d0916faa6697</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMergeMode</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a23e426ac937722b1e85a2aabe41b9a34</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getMergeMode</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a98b02b33b4865b6ded8d658ff10e1360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; ChannelIndex &gt; &amp;</type>
      <name>getChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a8158ce6b7e936511f75c2a3bad270677</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::AudioChannelSet &amp;</type>
      <name>getChannelSet</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>accee57940109a842a178b938cecce3e4</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>masterTimeUpdate</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>acbf1bc7bfe45efe124848a34d66bcd24</anchor>
      <arglist>(double) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>consumeNextAudioBlock</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a91ce4248d1aa11c5973a097ca36608ad</anchor>
      <arglist>(const float *const *allChannels, int numChannels, int numSamples, double streamTime)</arglist>
    </member>
    <member kind="function">
      <type>RetrospectiveRecordBuffer *</type>
      <name>getRetrospectiveRecordBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a784ab668785bc62a9809b291bf5621ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateRetrospectiveBufferLength</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a7e55d28e58b912adef754ad837b13421</anchor>
      <arglist>(double length) override</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSelectableDescription</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a18333292ef09aa42bd4905a790f3453c</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::StringArray</type>
      <name>getMergeModes</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a04c315a0bf6511d43d537dae202f93d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static juce::String</type>
      <name>getDefaultMask</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a7438b661f09a1634564112de013771a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>juce::String</type>
      <name>openDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a04bf8968b55cbaf369691eed58d9ca38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>closeDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>a827b562cf1f205585ffceddae72cfe49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>DeviceManager</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>aead9a9546ea765538d3f95894afea912</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>WaveInputDeviceInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDevice.html</anchorfile>
      <anchor>abf393b0c32d5de0dcf030c4122ed2c18</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::WaveInputDeviceNode</name>
    <filename>classtracktion_1_1engine_1_1WaveInputDeviceNode.html</filename>
    <base>tracktion::graph::Node</base>
    <base>tracktion::engine::InputDeviceInstance::Consumer</base>
    <member kind="function">
      <type></type>
      <name>WaveInputDeviceNode</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDeviceNode.html</anchorfile>
      <anchor>a81ba0eaaec32c9222894659e695ae534</anchor>
      <arglist>(InputDeviceInstance &amp;, WaveInputDevice &amp;, const juce::AudioChannelSet &amp;destChannelsToFill)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WaveInputDeviceNode</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDeviceNode.html</anchorfile>
      <anchor>a14e336885026cda58b28887b109de561</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDeviceNode.html</anchorfile>
      <anchor>a200802f5dadc71a33cd2e0703ab4952a</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDeviceNode.html</anchorfile>
      <anchor>a17ce2a61e8cab78289cde4f050693866</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDeviceNode.html</anchorfile>
      <anchor>af2d5482890416c371d8f2a8827cb30b1</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDeviceNode.html</anchorfile>
      <anchor>ab468e68048e58f503073ba2a1b409c7c</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptInputBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputDeviceNode.html</anchorfile>
      <anchor>affd02458d1f2b50b218ee37734cc1393</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::WaveInputRecordingThread</name>
    <filename>classtracktion_1_1engine_1_1WaveInputRecordingThread.html</filename>
    <class kind="struct">tracktion::engine::WaveInputRecordingThread::ScopedInitialiser</class>
    <member kind="function">
      <type></type>
      <name>WaveInputRecordingThread</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputRecordingThread.html</anchorfile>
      <anchor>ab0384a0ac13d52e98f811c5fc3bda7e1</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WaveInputRecordingThread</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputRecordingThread.html</anchorfile>
      <anchor>a5e2cdbbdd83d17ed23b3a67b0600bd73</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addUser</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputRecordingThread.html</anchorfile>
      <anchor>a5a67a304571b76acfcfa322ebff46a0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeUser</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputRecordingThread.html</anchorfile>
      <anchor>aeb3b6fb6f70080aa3058eb942b5d99c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBlockToRecord</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputRecordingThread.html</anchorfile>
      <anchor>a31948bd35cd0b04d39af9ac0f367b9be</anchor>
      <arglist>(AudioFileWriter &amp;, const juce::AudioBuffer&lt; float &gt; &amp;, int start, int numSamples, const RecordingThumbnailManager::Thumbnail::Ptr &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>waitForWriterToFinish</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputRecordingThread.html</anchorfile>
      <anchor>a553147e802aa0f9ec7a0df68d1680d43</anchor>
      <arglist>(AudioFileWriter &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputRecordingThread.html</anchorfile>
      <anchor>ab43c3c4f27e410f0b6e36334de231db7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timerCallback</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputRecordingThread.html</anchorfile>
      <anchor>af196b6219462d577071f85a49a4499da</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="variable">
      <type>Engine &amp;</type>
      <name>engine</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveInputRecordingThread.html</anchorfile>
      <anchor>a36272886c32124b68e45f6d6ca1529d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::WaveNode</name>
    <filename>classtracktion_1_1engine_1_1WaveNode.html</filename>
    <base>tracktion::graph::Node</base>
    <base>tracktion::engine::TracktionEngineNode</base>
    <member kind="function">
      <type></type>
      <name>WaveNode</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveNode.html</anchorfile>
      <anchor>af0ed5283b17017d048fbbc1ade6407e3</anchor>
      <arglist>(const AudioFile &amp;, TimeRange editTime, TimeDuration offset, TimeRange loopSection, LiveClipLevel, double speedRatio, const juce::AudioChannelSet &amp;sourceChannelsToUse, const juce::AudioChannelSet &amp;destChannelsToFill, ProcessState &amp;, EditItemID, bool isOfflineRender)</arglist>
    </member>
    <member kind="function">
      <type>tracktion::graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveNode.html</anchorfile>
      <anchor>a718babedce4d3bb336df3fd513e2f8b7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveNode.html</anchorfile>
      <anchor>acb05dc4b71744922338861555f35f10f</anchor>
      <arglist>(const tracktion::graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveNode.html</anchorfile>
      <anchor>af09ef125e931bd6b70fe1781f8d58e09</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveNode.html</anchorfile>
      <anchor>ac0fc93ed804337f69a1bed4ff74bb9f6</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::WaveNodeRealTime</name>
    <filename>classtracktion_1_1engine_1_1WaveNodeRealTime.html</filename>
    <base>tracktion::graph::Node</base>
    <base>tracktion::engine::TracktionEngineNode</base>
    <base>tracktion::engine::DynamicallyOffsettableNodeBase</base>
    <class kind="struct">tracktion::engine::WaveNodeRealTime::BeatConfig</class>
    <member kind="enumeration">
      <type></type>
      <name>ReadAhead</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveNodeRealTime.html</anchorfile>
      <anchor>ad6fef24de866d868234a6d5624f5eebd</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1WaveNodeRealTime.html" anchor="ad6fef24de866d868234a6d5624f5eebda7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1WaveNodeRealTime.html" anchor="ad6fef24de866d868234a6d5624f5eebdaa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SyncTempo</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveNodeRealTime.html</anchorfile>
      <anchor>a5344568de02983a82feb480f494403ef</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1WaveNodeRealTime.html" anchor="a5344568de02983a82feb480f494403efa7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1WaveNodeRealTime.html" anchor="a5344568de02983a82feb480f494403efaa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SyncPitch</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveNodeRealTime.html</anchorfile>
      <anchor>aa6e19053cc6abc23eea7f6d677c09738</anchor>
      <arglist></arglist>
      <enumvalue file="classtracktion_1_1engine_1_1WaveNodeRealTime.html" anchor="aa6e19053cc6abc23eea7f6d677c09738a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="classtracktion_1_1engine_1_1WaveNodeRealTime.html" anchor="aa6e19053cc6abc23eea7f6d677c09738aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>WaveNodeRealTime</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveNodeRealTime.html</anchorfile>
      <anchor>a9b49cfccaffe66e429b7e313147ff18f</anchor>
      <arglist>(const AudioFile &amp;, TimeRange editTime, TimeDuration offset, TimeRange loopSection, LiveClipLevel, double speedRatio, const juce::AudioChannelSet &amp;sourceChannelsToUse, const juce::AudioChannelSet &amp;destChannelsToFill, ProcessState &amp;, EditItemID, bool isOfflineRender, ResamplingQuality=ResamplingQuality::lagrange, SpeedFadeDescription={}, std::optional&lt; tempo::Sequence::Position &gt; editTempoSequence={}, TimeStretcher::Mode=TimeStretcher::Mode::disabled, TimeStretcher::ElastiqueProOptions={}, float pitchChangeSemitones=0.0f, ReadAhead=ReadAhead::no)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WaveNodeRealTime</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveNodeRealTime.html</anchorfile>
      <anchor>a4f5223e310e2de69db7b413bbb9e7428</anchor>
      <arglist>(BeatConfig)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WaveNodeRealTime</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveNodeRealTime.html</anchorfile>
      <anchor>a2beee4a48ac78fcec1b545d7f1383239</anchor>
      <arglist>(const AudioFile &amp;, TimeStretcher::Mode, TimeStretcher::ElastiqueProOptions, BeatRange editTime, BeatDuration offset, BeatRange loopSection, LiveClipLevel, const juce::AudioChannelSet &amp;sourceChannelsToUse, const juce::AudioChannelSet &amp;destChannelsToFill, ProcessState &amp;, EditItemID, bool isOfflineRender, ResamplingQuality, SpeedFadeDescription, std::optional&lt; tempo::Sequence::Position &gt; editTempoSequence, std::optional&lt; WarpMap &gt;, tempo::Sequence sourceFileTempoMap, SyncTempo, SyncPitch, std::optional&lt; tempo::Sequence &gt; chordPitchSequence, float pitchChangeSemitones=1.0f, ReadAhead=ReadAhead::no)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDynamicOffsetBeats</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveNodeRealTime.html</anchorfile>
      <anchor>a8a545bbe10d508ba9932e143dfc73077</anchor>
      <arglist>(BeatDuration) override</arglist>
    </member>
    <member kind="function">
      <type>graph::NodeProperties</type>
      <name>getNodeProperties</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveNodeRealTime.html</anchorfile>
      <anchor>a7e3dcd45b455e36e9743ab366a393ff9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveNodeRealTime.html</anchorfile>
      <anchor>a662c667dc47e70aec48a4f69d2231fe2</anchor>
      <arglist>(const graph::PlaybackInitialisationInfo &amp;) override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReadyToProcess</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveNodeRealTime.html</anchorfile>
      <anchor>a0dec7e87ed1ca05ceabcdcabde8c7c9b</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>process</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveNodeRealTime.html</anchorfile>
      <anchor>ac723a85060ddb61d699570d1adcc7fb9</anchor>
      <arglist>(ProcessContext &amp;) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::WaveOutputDevice</name>
    <filename>classtracktion_1_1engine_1_1WaveOutputDevice.html</filename>
    <base>tracktion::engine::OutputDevice</base>
    <member kind="function">
      <type></type>
      <name>WaveOutputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a9f82490290a1faf191f634b588496aaa</anchor>
      <arglist>(Engine &amp;, const WaveDeviceDescription &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WaveOutputDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>ab8d06f445ead9b271cc2327eee308c95</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetToDefault</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a697f00b2df0b5766455679fb39e9b269</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnabled</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>adf53ad6500b3b9696b757015c630442d</anchor>
      <arglist>(bool) override</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; ChannelIndex &gt; &amp;</type>
      <name>getChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a776172c71c702a8b6d0a2e17532e63e2</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>const juce::AudioChannelSet &amp;</type>
      <name>getChannelSet</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a3484a69c954623fd078ea893d1760ae9</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reverseChannels</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>aba2ec4859e4a3ed5d492f3eba5cae19d</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isReversed</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>aa4ce019790a3cbefb459207d9bb4a3e0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDithered</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a9b50dfc83a1e87f9f03dee1edb167be8</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDithered</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a949da10884a751f6b00dd67c451a76bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLeftChannel</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a22b0b77ecc64c406ddfcedd4b26900ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRightChannel</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a25d90db1505ad58f725a146788336c0f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStereoPair</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a4c4c7247beedd8dddf1c01daefae9386</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStereoPair</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a032dec862dcb537d4f16060fe39693c8</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>WaveOutputDeviceInstance *</type>
      <name>createInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a62c5cba46fa25e8e2812cda5ce213610</anchor>
      <arglist>(EditPlaybackContext &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>juce::String</type>
      <name>openDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>afdc3053246e5a8d3fe583c7d930ada34</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>closeDevice</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>a5475ca8199571283f9969554644a4710</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>DeviceManager</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>aead9a9546ea765538d3f95894afea912</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>WaveOutputDeviceInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDevice.html</anchorfile>
      <anchor>ac1a658bfbb8131f7a30de939b11cf0aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tracktion::engine::WaveOutputDeviceInstance</name>
    <filename>classtracktion_1_1engine_1_1WaveOutputDeviceInstance.html</filename>
    <base>tracktion::engine::OutputDeviceInstance</base>
    <member kind="function">
      <type></type>
      <name>WaveOutputDeviceInstance</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDeviceInstance.html</anchorfile>
      <anchor>ac71f9268ff76654a2f927d284ae74c66</anchor>
      <arglist>(WaveOutputDevice &amp;, EditPlaybackContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareToPlay</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDeviceInstance.html</anchorfile>
      <anchor>a4557ed05cdb370c1039fdb05e8c30533</anchor>
      <arglist>(double sampleRate, int blockSizeSamples)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>WaveOutputDevice &amp;</type>
      <name>getWaveOutput</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDeviceInstance.html</anchorfile>
      <anchor>a6ca4bdab2926613bae5bd6c86f2c6543</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Ditherer</type>
      <name>ditherers</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDeviceInstance.html</anchorfile>
      <anchor>a5a1d556d422860ff5d3e551ba78f0c4d</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MidiMessageArray</type>
      <name>midiBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDeviceInstance.html</anchorfile>
      <anchor>a06e523d1954c22e750e0b6174e05d738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>juce::AudioBuffer&lt; float &gt;</type>
      <name>outputBuffer</name>
      <anchorfile>classtracktion_1_1engine_1_1WaveOutputDeviceInstance.html</anchorfile>
      <anchor>a2784103e924321933197e48207c7d329</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Plugin::WindowState</name>
    <filename>structtracktion_1_1engine_1_1Plugin_1_1WindowState.html</filename>
    <base>tracktion::engine::PluginWindowState</base>
    <member kind="function">
      <type></type>
      <name>WindowState</name>
      <anchorfile>structtracktion_1_1engine_1_1Plugin_1_1WindowState.html</anchorfile>
      <anchor>a1291a8a07e6f1c2af0979b2b0419f1c8</anchor>
      <arglist>(Plugin &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>Plugin &amp;</type>
      <name>plugin</name>
      <anchorfile>structtracktion_1_1engine_1_1Plugin_1_1WindowState.html</anchorfile>
      <anchor>a3c3b085de35f422c79719353833e630a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::RackType::WindowState</name>
    <filename>structtracktion_1_1engine_1_1RackType_1_1WindowState.html</filename>
    <base>tracktion::engine::PluginWindowState</base>
    <member kind="function">
      <type></type>
      <name>WindowState</name>
      <anchorfile>structtracktion_1_1engine_1_1RackType_1_1WindowState.html</anchorfile>
      <anchor>a0765327cba2acd2b43f2e78b344cf709</anchor>
      <arglist>(RackType &amp;, juce::ValueTree windowStateTree)</arglist>
    </member>
    <member kind="variable">
      <type>RackType &amp;</type>
      <name>rack</name>
      <anchorfile>structtracktion_1_1engine_1_1RackType_1_1WindowState.html</anchorfile>
      <anchor>af239641c02ee1931128f934cec93209d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1RackType_1_1WindowState.html</anchorfile>
      <anchor>a2dd9ed0ee683826b4e8a11d2eb9bb23e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::PatchBayPlugin::Wire</name>
    <filename>structtracktion_1_1engine_1_1PatchBayPlugin_1_1Wire.html</filename>
    <member kind="function">
      <type></type>
      <name>Wire</name>
      <anchorfile>structtracktion_1_1engine_1_1PatchBayPlugin_1_1Wire.html</anchorfile>
      <anchor>a59646f668d35b5b6385b797e02d64016</anchor>
      <arglist>(const juce::ValueTree &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1PatchBayPlugin_1_1Wire.html</anchorfile>
      <anchor>a2a8a34df79087eb6b6739086d83bca11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>sourceChannelIndex</name>
      <anchorfile>structtracktion_1_1engine_1_1PatchBayPlugin_1_1Wire.html</anchorfile>
      <anchor>a4d559aa68b397df25f329ae65516cd4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>destChannelIndex</name>
      <anchorfile>structtracktion_1_1engine_1_1PatchBayPlugin_1_1Wire.html</anchorfile>
      <anchor>a962c751653873be1af48dbeb5a420c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; float &gt;</type>
      <name>gainDb</name>
      <anchorfile>structtracktion_1_1engine_1_1PatchBayPlugin_1_1Wire.html</anchorfile>
      <anchor>a118b07841111d0ea5710a9a4412a5a8e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>tracktion::engine::Plugin::Wire</name>
    <filename>structtracktion_1_1engine_1_1Plugin_1_1Wire.html</filename>
    <member kind="function">
      <type></type>
      <name>Wire</name>
      <anchorfile>structtracktion_1_1engine_1_1Plugin_1_1Wire.html</anchorfile>
      <anchor>a5648f0c5bc0294511cb309b50cf4f6b7</anchor>
      <arglist>(const juce::ValueTree &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="variable">
      <type>juce::ValueTree</type>
      <name>state</name>
      <anchorfile>structtracktion_1_1engine_1_1Plugin_1_1Wire.html</anchorfile>
      <anchor>a12156a091ead90997511077709886a86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>sourceChannelIndex</name>
      <anchorfile>structtracktion_1_1engine_1_1Plugin_1_1Wire.html</anchorfile>
      <anchor>a16c2bbb4f6540eb6dafa198bafeff57c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>juce::CachedValue&lt; int &gt;</type>
      <name>destChannelIndex</name>
      <anchorfile>structtracktion_1_1engine_1_1Plugin_1_1Wire.html</anchorfile>
      <anchor>a3f3fbb1c04ca917351ced275755b188b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>engine</name>
    <filename>namespaceengine.html</filename>
    <namespace>engine::render_utils</namespace>
    <class kind="class">engine::FollowActions</class>
    <class kind="class">engine::LaunchHandle</class>
    <class kind="class">engine::EditLoader</class>
    <class kind="class">engine::Renderer</class>
    <class kind="class">engine::EditRenderer</class>
    <class kind="class">engine::ReadAheadTimeStretcher</class>
    <class kind="struct">engine::DiscreteLabelledParameter</class>
    <class kind="struct">engine::SuffixedParameter</class>
    <class kind="struct">engine::ParameterWithStateValue</class>
    <class kind="struct">engine::ScopedThreadExitStatusEnabler</class>
    <member kind="enumeration">
      <type></type>
      <name>FollowAction</name>
      <anchorfile>namespaceengine.html</anchorfile>
      <anchor>a8adf9568644e9fd569d34ea8751bfdde</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddeac456cb28eeacbc581b046d213222b66f">globalStop</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea4c8570a6cb79b980dfeae85b23f75c7a">globalReturnToArrangement</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea47f0147f51842988f934e149e7e8caaa">globalPlayAgain</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddeaef3d2841cf4246e8b9f731941fdcd5ab">trackPrevious</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea36acab6e718fdbe3cad86bbd4c66b9a5">trackNext</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddeaa0423cb783ee63a100fd8ee8ecf10cf7">trackFirst</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea3e65b5ade6cd882ec1fea127d91cde89">trackLast</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea8c43284b6586cfeb4400f88ef70eb2f4">trackAny</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddeaa5e6e7ec14f7cfc9d318c9e39439b3be">trackOther</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddead19212628735bf203ef61085a310ba73">trackRoundRobin</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea9b671acea9d6903ceaedb125ff9ec0dc">currentGroupPrevious</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea051833ed22a7462c628356f0e3c68c61">currentGroupNext</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea0ec01b92ff0fd15ab7000fc00cc358a0">currentGroupFirst</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddeaadbe34fd022dd8a0f27064f1e134cab3">currentGroupLast</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea53284b089ec091e764e4c61382f686df">currentGroupAny</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea0fcb2c7f9aee87f3faac9ca6bb4156dc">currentGroupOther</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddeae785f60552a59533d8a01daa4eb764f8">currentGroupRoundRobin</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea052043fefd6705d4534070da78d5e1c6">previousGroupFirst</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea0456776f695d81268b58cda00ea241e4">previousGroupLast</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddeacc942fea2a26dae8b174d6aa4bbd8711">previousGroupAny</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea9816290541861b2d4cf0becf68f17764">nextGroupFirst</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddead937543b1c75fedc3dd8c868168941d2">nextGroupLast</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddeadfdd5f882185f9b50f24fe45509914c4">nextGroupAny</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea78949abcd4a4661279003b1afc897489">otherGroupFirst</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddeae9d9a48525e3046f3f5e6efcf13f5133">otherGroupLast</enumvalue>
      <enumvalue file="namespaceengine.html" anchor="a8adf9568644e9fd569d34ea8751bfddea07e4a5758b30294d27a92b0b096a5aaa">otherGroupAny</enumvalue>
    </member>
    <member kind="function">
      <type>std::optional&lt; FollowAction &gt;</type>
      <name>followActionFromChoice</name>
      <anchorfile>namespaceengine.html</anchorfile>
      <anchor>aa07b83a67660d947ac6bd868d6a8d970</anchor>
      <arglist>(juce::String)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; FollowAction &gt;</type>
      <name>followActionFromString</name>
      <anchorfile>namespaceengine.html</anchorfile>
      <anchor>a529f143817fffbadfe408f74e3a46ad2</anchor>
      <arglist>(juce::String)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>toString</name>
      <anchorfile>namespaceengine.html</anchorfile>
      <anchor>a9dd1960b5f512aec90454c3e72bb60a9</anchor>
      <arglist>(FollowAction)</arglist>
    </member>
    <member kind="function">
      <type>std::function&lt; void(MonotonicBeat)&gt;</type>
      <name>createFollowAction</name>
      <anchorfile>namespaceengine.html</anchorfile>
      <anchor>a943f764db7a45607709ffcdb098ef23a</anchor>
      <arglist>(Clip &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringPairArray</type>
      <name>createAcidInfo</name>
      <anchorfile>namespaceengine.html</anchorfile>
      <anchor>ae6a89212d22c82b573d1471b23478e35</anchor>
      <arglist>(Edit &amp;, TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCurrentThreadSupplyingExitStatus</name>
      <anchorfile>namespaceengine.html</anchorfile>
      <anchor>ac427378780eb22c695cb6ffc6c5af8cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>signalThreadShouldExit</name>
      <anchorfile>namespaceengine.html</anchorfile>
      <anchor>a792bf2375807d23ca1e6ce5f9516d0b6</anchor>
      <arglist>(std::thread::id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldCurrentThreadExit</name>
      <anchorfile>namespaceengine.html</anchorfile>
      <anchor>a3e0b9dd13c3ba3d7fe6c9905e9368e27</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>engine::render_utils</name>
    <filename>namespaceengine_1_1render__utils.html</filename>
    <member kind="function">
      <type>std::unique_ptr&lt; Renderer::RenderTask &gt;</type>
      <name>createRenderTask</name>
      <anchorfile>namespaceengine_1_1render__utils.html</anchorfile>
      <anchor>a44a3897f11c7a44c5d95f26b30856aac</anchor>
      <arglist>(Renderer::Parameters, juce::String desc, std::atomic&lt; float &gt; *progressToUpdate, juce::AudioFormatWriter::ThreadedWriter::IncomingDataReceiver *thumbnail)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>graph</name>
    <filename>namespacegraph.html</filename>
  </compound>
  <compound kind="namespace">
    <name>juce</name>
    <filename>namespacejuce.html</filename>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::Chord::ChordType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::Scale::ScaleType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::PatternGenerator::Mode &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::AudioClipBase::FadeBehaviour &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::AudioClipBase::AutoPitchMode &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::Clip::SyncType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::Clip::FollowActionDurationType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::FollowAction &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::MidiClip::LoopedSequenceType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::EditItemID &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::LaunchQType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::TimecodeDisplayFormat &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::RenderOptions::RenderType &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::RenderOptions::TargetFileFormat &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::RenderOptions::AddRenderOptions &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::core::TimePosition &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::core::TimeDuration &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::core::BeatPosition &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::core::BeatDuration &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::TrackCompManager::TrackComp::TimeFormat &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::ProjectItemID &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::TimeStretcher::Mode &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::TimeStretcher::ElastiqueProOptions &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::AudioFadeCurve::Type &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; tracktion::engine::ResamplingQuality &gt;</class>
    <class kind="struct">juce::VariantConverter&lt; Colour &gt;</class>
  </compound>
  <compound kind="namespace">
    <name>moodycamel</name>
    <filename>namespacemoodycamel.html</filename>
    <namespace>moodycamel::details</namespace>
  </compound>
  <compound kind="namespace">
    <name>moodycamel::details</name>
    <filename>namespacemoodycamel_1_1details.html</filename>
  </compound>
  <compound kind="namespace">
    <name>tracktion</name>
    <filename>namespacetracktion.html</filename>
    <namespace>tracktion::AppFunctions</namespace>
    <namespace>tracktion::benchmark_utilities</namespace>
    <namespace>tracktion::Click</namespace>
    <namespace>tracktion::ClipConstants</namespace>
    <namespace>tracktion::detail</namespace>
    <namespace>tracktion::details</namespace>
    <namespace>tracktion::engine</namespace>
    <namespace>tracktion::graph</namespace>
    <namespace>tracktion::IDs</namespace>
    <namespace>tracktion::legacy</namespace>
    <namespace>tracktion::MidiNodeHelpers</namespace>
    <namespace>tracktion::modifier</namespace>
    <namespace>tracktion::ModifierCommon</namespace>
    <namespace>tracktion::node_player_utils</namespace>
    <namespace>tracktion::PredefinedWavetable</namespace>
    <namespace>tracktion::RackNodeBuilder</namespace>
    <namespace>tracktion::test_utilities</namespace>
    <namespace>tracktion::TracktionBinaryData</namespace>
    <class kind="class">tracktion::FloatAudioFormat</class>
    <class kind="class">tracktion::LAMEManager</class>
    <class kind="struct">tracktion::MemoryMappedFileReader</class>
    <class kind="class">tracktion::BufferingAudioReaderWrapper</class>
    <class kind="class">tracktion::AudioFifo</class>
    <class kind="struct">tracktion::AudioFileInfo</class>
    <class kind="class">tracktion::AudioFile</class>
    <class kind="struct">tracktion::FallbackReader</class>
    <class kind="class">tracktion::AudioFileCache</class>
    <class kind="class">tracktion::AudioFileManager</class>
    <class kind="struct">tracktion::AudioFileUtils</class>
    <class kind="class">tracktion::AudioFileWriter</class>
    <class kind="class">tracktion::AudioFileFormatManager</class>
    <class kind="class">tracktion::AudioProxyGenerator</class>
    <class kind="class">tracktion::BufferedAudioReader</class>
    <class kind="class">tracktion::BufferedFileReaderWrapper</class>
    <class kind="class">tracktion::BufferedAudioFileManager</class>
    <class kind="class">tracktion::BufferedFileReader</class>
    <class kind="class">tracktion::LoopInfo</class>
    <class kind="class">tracktion::RecordingThumbnailManager</class>
    <class kind="class">tracktion::SmartThumbnail</class>
    <class kind="struct">tracktion::ParameterSetting</class>
    <class kind="struct">tracktion::MarkerSetting</class>
    <class kind="struct">tracktion::MidiID</class>
    <class kind="class">tracktion::ControlSurface</class>
    <class kind="class">tracktion::CustomControlSurface</class>
    <class kind="class">tracktion::ExternalController</class>
    <class kind="struct">tracktion::ColourArea</class>
    <class kind="class">tracktion::ExternalControllerManager</class>
    <class kind="class">tracktion::AlphaTrackControlSurface</class>
    <class kind="class">tracktion::IconProG2</class>
    <class kind="class">tracktion::MackieC4</class>
    <class kind="class">tracktion::MackieMCU</class>
    <class kind="class">tracktion::MackieXT</class>
    <class kind="class">tracktion::NovationRemoteSl</class>
    <class kind="class">tracktion::RemoteSLCompact</class>
    <class kind="class">tracktion::TranzportControlSurface</class>
    <class kind="struct">tracktion::ActiveNoteList</class>
    <class kind="struct">tracktion::MidiChannel</class>
    <class kind="class">tracktion::MidiControllerEvent</class>
    <class kind="struct">tracktion::MidiExpression</class>
    <class kind="class">tracktion::MidiList</class>
    <class kind="class">tracktion::MidiNote</class>
    <class kind="class">tracktion::MidiProgramManager</class>
    <class kind="class">tracktion::MidiSysexEvent</class>
    <class kind="class">tracktion::Chord</class>
    <class kind="class">tracktion::Scale</class>
    <class kind="class">tracktion::PatternGenerator</class>
    <class kind="struct">tracktion::KeyResult</class>
    <class kind="class">tracktion::SelectedMidiEvents</class>
    <class kind="class">tracktion::BreakpointOscillatorModifier</class>
    <class kind="class">tracktion::EnvelopeFollowerModifier</class>
    <class kind="class">tracktion::LFOModifier</class>
    <class kind="class">tracktion::MIDITrackerModifier</class>
    <class kind="struct">tracktion::Ramp</class>
    <class kind="class">tracktion::RandomModifier</class>
    <class kind="class">tracktion::StepModifier</class>
    <class kind="class">tracktion::AutomatableEditItem</class>
    <class kind="class">tracktion::AutomatableParameter</class>
    <class kind="class">tracktion::AutomationDragDropTarget</class>
    <class kind="class">tracktion::ParameterisableDragDropSource</class>
    <class kind="struct">tracktion::AutomationIterator</class>
    <class kind="class">tracktion::AutomatableParameterTree</class>
    <class kind="class">tracktion::AutomationCurve</class>
    <class kind="class">tracktion::AutomationRecordManager</class>
    <class kind="class">tracktion::MacroParameter</class>
    <class kind="class">tracktion::MacroParameterList</class>
    <class kind="class">tracktion::MacroParameterElement</class>
    <class kind="class">tracktion::MidiLearnState</class>
    <class kind="class">tracktion::MidiAssignable</class>
    <class kind="struct">tracktion::ModifierTimer</class>
    <class kind="struct">tracktion::Modifier</class>
    <class kind="class">tracktion::ModifierList</class>
    <class kind="class">tracktion::ParameterChangeHandler</class>
    <class kind="class">tracktion::ParameterControlMappings</class>
    <class kind="class">tracktion::ArrangerClip</class>
    <class kind="class">tracktion::AudioClipBase</class>
    <class kind="class">tracktion::AudioSegmentList</class>
    <class kind="class">tracktion::ChordClip</class>
    <class kind="struct">tracktion::ClipLevel</class>
    <class kind="struct">tracktion::LiveClipLevel</class>
    <class kind="class">tracktion::Clip</class>
    <class kind="class">tracktion::ClipEffect</class>
    <class kind="class">tracktion::ClipEffects</class>
    <class kind="struct">tracktion::ScopedPluginUnloadInhibitor</class>
    <class kind="struct">tracktion::VolumeEffect</class>
    <class kind="struct">tracktion::FadeInOutEffect</class>
    <class kind="struct">tracktion::StepVolumeEffect</class>
    <class kind="struct">tracktion::PitchShiftEffect</class>
    <class kind="struct">tracktion::WarpTimeEffect</class>
    <class kind="struct">tracktion::PluginEffect</class>
    <class kind="struct">tracktion::NormaliseEffect</class>
    <class kind="struct">tracktion::MakeMonoEffect</class>
    <class kind="struct">tracktion::ReverseEffect</class>
    <class kind="struct">tracktion::InvertEffect</class>
    <class kind="class">tracktion::ClipOwner</class>
    <class kind="class">tracktion::CollectionClip</class>
    <class kind="class">tracktion::CompManager</class>
    <class kind="class">tracktion::CompFactory</class>
    <class kind="class">tracktion::WaveCompManager</class>
    <class kind="class">tracktion::MidiCompManager</class>
    <class kind="class">tracktion::ContainerClip</class>
    <class kind="class">tracktion::EditClip</class>
    <class kind="class">tracktion::EditRenderJob</class>
    <class kind="class">tracktion::LauncherClipPlaybackHandle</class>
    <class kind="class">tracktion::MarkerClip</class>
    <class kind="class">tracktion::MidiClip</class>
    <class kind="class">tracktion::ReverseRenderJob</class>
    <class kind="class">tracktion::StepClip</class>
    <class kind="struct">tracktion::WarpMarker</class>
    <class kind="class">tracktion::WarpTimeManager</class>
    <class kind="class">tracktion::WarpTimeFactory</class>
    <class kind="class">tracktion::WarpTimeRenderJob</class>
    <class kind="class">tracktion::WaveAudioClip</class>
    <class kind="class">tracktion::Edit</class>
    <class kind="struct">tracktion::EditDeleter</class>
    <class kind="struct">tracktion::ActiveEdits</class>
    <class kind="class">tracktion::EditFileOperations</class>
    <class kind="class">tracktion::EditInsertPoint</class>
    <class kind="struct">tracktion::EditItemID</class>
    <class kind="class">tracktion::EditItem</class>
    <class kind="struct">tracktion::EditItemCache</class>
    <class kind="class">tracktion::EditSnapshot</class>
    <class kind="class">tracktion::GrooveTemplate</class>
    <class kind="class">tracktion::GrooveTemplateManager</class>
    <class kind="class">tracktion::LaunchQuantisation</class>
    <class kind="class">tracktion::MarkerManager</class>
    <class kind="struct">tracktion::OldEditConversion</class>
    <class kind="class">tracktion::PitchSequence</class>
    <class kind="class">tracktion::PitchSetting</class>
    <class kind="class">tracktion::QuantisationType</class>
    <class kind="class">tracktion::Scene</class>
    <class kind="class">tracktion::SceneWatcher</class>
    <class kind="class">tracktion::SceneList</class>
    <class kind="class">tracktion::SourceFileReference</class>
    <class kind="class">tracktion::TempoSequence</class>
    <class kind="struct">tracktion::EditTimecodeRemapperSnapshot</class>
    <class kind="class">tracktion::TempoSetting</class>
    <class kind="struct">tracktion::TimecodeSnapType</class>
    <class kind="class">tracktion::TimecodeDuration</class>
    <class kind="struct">tracktion::TimecodeDisplayFormat</class>
    <class kind="struct">tracktion::TimecodeDisplayIterator</class>
    <class kind="class">tracktion::TimeSigSetting</class>
    <class kind="class">tracktion::TracktionArchiveFile</class>
    <class kind="class">tracktion::Exportable</class>
    <class kind="class">tracktion::ExportJob</class>
    <class kind="class">tracktion::ReferencedMaterialList</class>
    <class kind="class">tracktion::RenderManager</class>
    <class kind="class">tracktion::RenderOptions</class>
    <class kind="class">tracktion::ArrangerTrack</class>
    <class kind="class">tracktion::AudioTrack</class>
    <class kind="class">tracktion::AutomationTrack</class>
    <class kind="class">tracktion::ChordTrack</class>
    <class kind="class">tracktion::ClipSlot</class>
    <class kind="class">tracktion::ClipSlotList</class>
    <class kind="class">tracktion::ClipTrack</class>
    <class kind="struct">tracktion::EditTime</class>
    <class kind="struct">tracktion::EditTimeRange</class>
    <class kind="struct">tracktion::ClipPosition</class>
    <class kind="class">tracktion::FolderTrack</class>
    <class kind="class">tracktion::MarkerTrack</class>
    <class kind="class">tracktion::MasterTrack</class>
    <class kind="class">tracktion::TempoTrack</class>
    <class kind="class">tracktion::Track</class>
    <class kind="class">tracktion::TrackCompManager</class>
    <class kind="class">tracktion::TrackItem</class>
    <class kind="class">tracktion::TrackOutput</class>
    <class kind="struct">tracktion::TrackInsertPoint</class>
    <class kind="struct">tracktion::TrackList</class>
    <class kind="struct">tracktion::TrackSection</class>
    <class kind="struct">tracktion::TrackAutomationSection</class>
    <class kind="struct">tracktion::AudioNodeProperties</class>
    <class kind="struct">tracktion::PlaybackInitialisationInfo</class>
    <class kind="struct">tracktion::CreateAudioNodeParams</class>
    <class kind="struct">tracktion::AudioRenderContext</class>
    <class kind="class">tracktion::AudioNode</class>
    <class kind="class">tracktion::SingleInputAudioNode</class>
    <class kind="struct">tracktion::MuteAudioNode</class>
    <class kind="class">tracktion::CombiningAudioNode</class>
    <class kind="class">tracktion::FadeInOutAudioNode</class>
    <class kind="class">tracktion::PlayHead</class>
    <class kind="class">tracktion::PluginAudioNode</class>
    <class kind="class">tracktion::SubSampleWaveAudioNode</class>
    <class kind="class">tracktion::SpeedRampAudioNode</class>
    <class kind="class">tracktion::TimedMutingAudioNode</class>
    <class kind="class">tracktion::WaveAudioNode</class>
    <class kind="class">tracktion::InputDevice</class>
    <class kind="class">tracktion::InputDeviceInstance</class>
    <class kind="class">tracktion::MidiInputDevice</class>
    <class kind="class">tracktion::MidiOutputDevice</class>
    <class kind="class">tracktion::SoftwareMidiOutputDevice</class>
    <class kind="class">tracktion::MidiOutputDeviceInstance</class>
    <class kind="class">tracktion::OutputDevice</class>
    <class kind="class">tracktion::OutputDeviceInstance</class>
    <class kind="class">tracktion::PhysicalMidiInputDevice</class>
    <class kind="class">tracktion::VirtualMidiInputDevice</class>
    <class kind="struct">tracktion::ChannelIndex</class>
    <class kind="struct">tracktion::WaveDeviceDescription</class>
    <class kind="class">tracktion::WaveInputDevice</class>
    <class kind="class">tracktion::WaveInputRecordingThread</class>
    <class kind="class">tracktion::WaveOutputDevice</class>
    <class kind="class">tracktion::WaveOutputDeviceInstance</class>
    <class kind="class">tracktion::SampleFader</class>
    <class kind="class">tracktion::ArrangerLauncherSwitchingNode</class>
    <class kind="class">tracktion::AuxSendNode</class>
    <class kind="class">tracktion::ClickGenerator</class>
    <class kind="class">tracktion::ClickNode</class>
    <class kind="class">tracktion::CombiningNode</class>
    <class kind="class">tracktion::ContainerClipNode</class>
    <class kind="class">tracktion::DynamicOffsetNode</class>
    <class kind="struct">tracktion::CreateNodeParams</class>
    <class kind="struct">tracktion::EditNodeBuilder</class>
    <class kind="class">tracktion::FadeInOutNode</class>
    <class kind="class">tracktion::HostedMidiInputDeviceNode</class>
    <class kind="class">tracktion::InsertNode</class>
    <class kind="class">tracktion::InsertSendNode</class>
    <class kind="class">tracktion::LevelMeasurerProcessingNode</class>
    <class kind="class">tracktion::LevelMeasuringNode</class>
    <class kind="class">tracktion::LiveMidiInjectingNode</class>
    <class kind="class">tracktion::LiveMidiOutputNode</class>
    <class kind="class">tracktion::LoopingMidiNode</class>
    <class kind="class">tracktion::MelodyneNode</class>
    <class kind="class">tracktion::MidiInputDeviceNode</class>
    <class kind="class">tracktion::MidiNode</class>
    <class kind="class">tracktion::MidiOutputDeviceInstanceInjectingNode</class>
    <class kind="class">tracktion::ModifierNode</class>
    <class kind="class">tracktion::MultiThreadedNodePlayer</class>
    <class kind="class">tracktion::NodeRenderContext</class>
    <class kind="class">tracktion::PlayHeadPositionNode</class>
    <class kind="class">tracktion::PluginNode</class>
    <class kind="class">tracktion::RackInstanceNode</class>
    <class kind="struct">tracktion::InputProvider</class>
    <class kind="class">tracktion::RackNodePlayer</class>
    <class kind="class">tracktion::RackReturnNode</class>
    <class kind="class">tracktion::SharedLevelMeasuringNode</class>
    <class kind="class">tracktion::SlotControlNode</class>
    <class kind="struct">tracktion::SpeedFadeDescription</class>
    <class kind="class">tracktion::SpeedRampWaveNode</class>
    <class kind="class">tracktion::TimedMutingNode</class>
    <class kind="class">tracktion::TimeStretchingWaveNode</class>
    <class kind="class">tracktion::TrackMidiInputDeviceNode</class>
    <class kind="class">tracktion::TrackMuteState</class>
    <class kind="class">tracktion::TrackMutingNode</class>
    <class kind="struct">tracktion::ProcessState</class>
    <class kind="class">tracktion::TracktionEngineNode</class>
    <class kind="class">tracktion::DynamicallyOffsettableNodeBase</class>
    <class kind="class">tracktion::TracktionNodePlayer</class>
    <class kind="class">tracktion::TrackWaveInputDeviceNode</class>
    <class kind="class">tracktion::WaveInputDeviceNode</class>
    <class kind="struct">tracktion::WarpPoint</class>
    <class kind="class">tracktion::WaveNode</class>
    <class kind="class">tracktion::WaveNodeRealTime</class>
    <class kind="class">tracktion::AbletonLink</class>
    <class kind="class">tracktion::DeviceManager</class>
    <class kind="class">tracktion::EditInputDevices</class>
    <class kind="class">tracktion::EditPlaybackContext</class>
    <class kind="class">tracktion::HostedAudioDeviceInterface</class>
    <class kind="struct">tracktion::DbTimePair</class>
    <class kind="class">tracktion::LevelMeasurer</class>
    <class kind="class">tracktion::SharedLevelMeasurer</class>
    <class kind="class">tracktion::MidiNoteDispatcher</class>
    <class kind="struct">tracktion::MPEStartTrimmer</class>
    <class kind="class">tracktion::ScopedSteadyLoad</class>
    <class kind="class">tracktion::TransportControl</class>
    <class kind="class">tracktion::AirWindowsCallback</class>
    <class kind="class">tracktion::AirWindowsPlugin</class>
    <class kind="class">tracktion::AirWindowsBase</class>
    <class kind="class">tracktion::AirWindowsAutomatableParameter</class>
    <class kind="class">tracktion::MelodyneFileReader</class>
    <class kind="struct">tracktion::ARADocumentHolder</class>
    <class kind="class">tracktion::ChorusPlugin</class>
    <class kind="class">tracktion::CompressorPlugin</class>
    <class kind="struct">tracktion::DelayBufferBase</class>
    <class kind="class">tracktion::DelayPlugin</class>
    <class kind="class">tracktion::EqualiserPlugin</class>
    <class kind="class">tracktion::ValueSmoother</class>
    <class kind="class">tracktion::SimpleLFO</class>
    <class kind="class">tracktion::FourOscPlugin</class>
    <class kind="class">tracktion::ImpulseResponsePlugin</class>
    <class kind="class">tracktion::LatencyPlugin</class>
    <class kind="class">tracktion::LowPassPlugin</class>
    <class kind="class">tracktion::MidiModifierPlugin</class>
    <class kind="class">tracktion::MidiPatchBayPlugin</class>
    <class kind="class">tracktion::PatchBayPlugin</class>
    <class kind="class">tracktion::PhaserPlugin</class>
    <class kind="class">tracktion::PitchShiftPlugin</class>
    <class kind="class">tracktion::ReverbPlugin</class>
    <class kind="class">tracktion::SamplerPlugin</class>
    <class kind="class">tracktion::ToneGeneratorPlugin</class>
    <class kind="class">tracktion::ExternalAutomatableParameter</class>
    <class kind="class">tracktion::ExternalPlugin</class>
    <class kind="struct">tracktion::PluginWetDryAutomatableParam</class>
    <class kind="class">tracktion::VSTXML</class>
    <class kind="class">tracktion::AuxReturnPlugin</class>
    <class kind="class">tracktion::AuxSendPlugin</class>
    <class kind="class">tracktion::FreezePointPlugin</class>
    <class kind="class">tracktion::InsertPlugin</class>
    <class kind="class">tracktion::LevelMeterPlugin</class>
    <class kind="class">tracktion::RackInstance</class>
    <class kind="struct">tracktion::RackConnection</class>
    <class kind="class">tracktion::RackType</class>
    <class kind="class">tracktion::RackTypeList</class>
    <class kind="class">tracktion::TextPlugin</class>
    <class kind="class">tracktion::VCAPlugin</class>
    <class kind="class">tracktion::VolumeAndPanPlugin</class>
    <class kind="struct">tracktion::PluginCreationInfo</class>
    <class kind="struct">tracktion::PluginInitialisationInfo</class>
    <class kind="struct">tracktion::PluginRenderContext</class>
    <class kind="class">tracktion::Plugin</class>
    <class kind="class">tracktion::PluginList</class>
    <class kind="class">tracktion::PluginManager</class>
    <class kind="class">tracktion::PluginCache</class>
    <class kind="struct">tracktion::PluginScanHelpers</class>
    <class kind="struct">tracktion::PluginWindowState</class>
    <class kind="class">tracktion::Project</class>
    <class kind="class">tracktion::ProjectItem</class>
    <class kind="class">tracktion::ProjectItemID</class>
    <class kind="class">tracktion::ProjectManager</class>
    <class kind="class">tracktion::ProjectSearchIndex</class>
    <class kind="class">tracktion::SearchOperation</class>
    <class kind="class">tracktion::Clipboard</class>
    <class kind="class">tracktion::SelectableListener</class>
    <class kind="class">tracktion::Selectable</class>
    <class kind="struct">tracktion::SelectableList</class>
    <class kind="class">tracktion::SafeSelectable</class>
    <class kind="class">tracktion::LambdaSelectableListener</class>
    <class kind="class">tracktion::SelectableClass</class>
    <class kind="class">tracktion::SelectableClassWithVolume</class>
    <class kind="class">tracktion::SelectableClassWithPan</class>
    <class kind="class">tracktion::SelectionManager</class>
    <class kind="struct">tracktion::BeatDetect</class>
    <class kind="class">tracktion::TempoDetect</class>
    <class kind="class">tracktion::TimeStretcher</class>
    <class kind="struct">tracktion::AsyncCaller</class>
    <class kind="struct">tracktion::AsyncFunctionCaller</class>
    <class kind="class">tracktion::LambdaTimer</class>
    <class kind="class">tracktion::MessageThreadCallback</class>
    <class kind="struct">tracktion::BlockingFunction</class>
    <class kind="struct">tracktion::DummyConstrainer</class>
    <class kind="struct">tracktion::AtomicWrapper</class>
    <class kind="struct">tracktion::AudioFadeCurve</class>
    <class kind="class">tracktion::AudioScratchBuffer</class>
    <class kind="class">tracktion::AudioMidiFifo</class>
    <class kind="class">tracktion::AudioBufferSnapshot</class>
    <class kind="class">tracktion::ThreadPoolJobWithProgress</class>
    <class kind="class">tracktion::BackgroundJobManager</class>
    <class kind="class">tracktion::ConstrainedCachedValue</class>
    <class kind="struct">tracktion::ScopedCpuMeter</class>
    <class kind="struct">tracktion::StopwatchTimer</class>
    <class kind="struct">tracktion::CrashStackTracer</class>
    <class kind="struct">tracktion::DeadMansPedalMessage</class>
    <class kind="struct">tracktion::TransparentToMouseInTrackItemComp</class>
    <class kind="struct">tracktion::CurvePoint</class>
    <class kind="class">tracktion::CurveEditorPoint</class>
    <class kind="class">tracktion::CurveEditor</class>
    <class kind="struct">tracktion::Ditherer</class>
    <class kind="class">tracktion::Engine</class>
    <class kind="struct">tracktion::EditLimits</class>
    <class kind="class">tracktion::EngineBehaviour</class>
    <class kind="class">tracktion::ExpEnvelope</class>
    <class kind="class">tracktion::LinEnvelope</class>
    <class kind="class">tracktion::ExternalPlayheadSynchroniser</class>
    <class kind="struct">tracktion::ScopedDirectoryDeleter</class>
    <class kind="struct">tracktion::FileDragList</class>
    <class kind="class">tracktion::ScopedWaitCursor</class>
    <class kind="class">tracktion::MouseHoverDetector</class>
    <class kind="class">tracktion::BandlimitedWaveLookupTables</class>
    <class kind="class">tracktion::Oscillator</class>
    <class kind="class">tracktion::MultiVoiceOscillator</class>
    <class kind="struct">tracktion::Pitch</class>
    <class kind="struct">tracktion::PluginComponent</class>
    <class kind="class">tracktion::PropertyStorage</class>
    <class kind="class">tracktion::SafeScopedListener</class>
    <class kind="class">tracktion::ScopedListener</class>
    <class kind="struct">tracktion::HertzTag</class>
    <class kind="class">tracktion::SharedTimer</class>
    <class kind="struct">tracktion::Spline</class>
    <class kind="class">tracktion::TemporaryFileManager</class>
    <class kind="struct">tracktion::MonotonicBeat</class>
    <class kind="struct">tracktion::MonotonicBeatRange</class>
    <class kind="struct">tracktion::SyncPoint</class>
    <class kind="struct">tracktion::SyncRange</class>
    <class kind="class">tracktion::UIBehaviour</class>
    <class kind="class">tracktion::ValueTreeObjectList</class>
    <class kind="struct">tracktion::SortedValueTreeObjectList</class>
    <class kind="struct">tracktion::ValueTreeAllEventListener</class>
    <class kind="struct">tracktion::ValueTreeComparator</class>
    <class kind="class">tracktion::ReferenceCountedValueTree</class>
    <class kind="struct">tracktion::ChannelConnection</class>
    <class kind="class">tracktion::ConnectedNode</class>
    <class kind="class">tracktion::LatencyNode</class>
    <class kind="class">tracktion::SummingNode</class>
    <class kind="class">tracktion::SimpleNodePlayer</class>
    <class kind="class">tracktion::LockFreeMultiThreadedNodePlayer</class>
    <class kind="struct">tracktion::NodeBuffer</class>
    <class kind="struct">tracktion::NodeAndID</class>
    <class kind="struct">tracktion::NodeGraph</class>
    <class kind="struct">tracktion::NodeProperties</class>
    <class kind="struct">tracktion::NodeOptimisations</class>
    <class kind="class">tracktion::TransformCache</class>
    <class kind="class">tracktion::Node</class>
    <class kind="class">tracktion::NodePlayer</class>
    <class kind="struct">tracktion::SplitTimelineRange</class>
    <class kind="class">tracktion::PlayHeadState</class>
    <class kind="class">tracktion::SinNode</class>
    <class kind="class">tracktion::SilentNode</class>
    <class kind="class">tracktion::BasicSummingNode</class>
    <class kind="class">tracktion::FunctionNode</class>
    <class kind="class">tracktion::GainNode</class>
    <class kind="class">tracktion::SendNode</class>
    <class kind="class">tracktion::ReturnNode</class>
    <class kind="class">tracktion::ChannelRemappingNode</class>
    <class kind="class">tracktion::SinkNode</class>
    <class kind="class">tracktion::ForwardingNode</class>
    <class kind="class">tracktion::AudioBufferPool</class>
    <class kind="class">tracktion::AudioBufferStack</class>
    <class kind="struct">tracktion::LatencyProcessor</class>
    <class kind="class">tracktion::LockFreeObject</class>
    <class kind="struct">tracktion::MidiMessageArray</class>
    <class kind="struct">tracktion::MidiMessageWithSource</class>
    <class kind="struct">tracktion::ScopedSignpost</class>
    <class kind="class">tracktion::PerformanceMeasurement</class>
    <class kind="class">tracktion::ScopedPerformanceMeasurement</class>
    <class kind="class">tracktion::RealTimeSpinLock</class>
    <class kind="class">tracktion::Semaphore</class>
    <class kind="class">tracktion::LightweightSemaphore</class>
  </compound>
  <compound kind="namespace">
    <name>tracktion::engine</name>
    <filename>namespacetracktion_1_1engine.html</filename>
    <namespace>tracktion::engine::AppFunctions</namespace>
    <namespace>tracktion::engine::benchmark_utilities</namespace>
    <namespace>tracktion::engine::Click</namespace>
    <namespace>tracktion::engine::ClipConstants</namespace>
    <namespace>tracktion::engine::detail</namespace>
    <namespace>tracktion::engine::details</namespace>
    <namespace>tracktion::engine::IDs</namespace>
    <namespace>tracktion::engine::legacy</namespace>
    <namespace>tracktion::engine::MidiNodeHelpers</namespace>
    <namespace>tracktion::engine::modifier</namespace>
    <namespace>tracktion::engine::ModifierCommon</namespace>
    <namespace>tracktion::engine::PredefinedWavetable</namespace>
    <namespace>tracktion::engine::RackNodeBuilder</namespace>
    <namespace>tracktion::engine::TracktionBinaryData</namespace>
    <class kind="class">tracktion::engine::FloatAudioFormat</class>
    <class kind="class">tracktion::engine::LAMEManager</class>
    <class kind="struct">tracktion::engine::MemoryMappedFileReader</class>
    <class kind="class">tracktion::engine::BufferingAudioReaderWrapper</class>
    <class kind="class">tracktion::engine::AudioFifo</class>
    <class kind="struct">tracktion::engine::AudioFileInfo</class>
    <class kind="class">tracktion::engine::AudioFile</class>
    <class kind="struct">tracktion::engine::FallbackReader</class>
    <class kind="class">tracktion::engine::AudioFileCache</class>
    <class kind="class">tracktion::engine::AudioFileManager</class>
    <class kind="struct">tracktion::engine::AudioFileUtils</class>
    <class kind="class">tracktion::engine::AudioFileWriter</class>
    <class kind="class">tracktion::engine::AudioFileFormatManager</class>
    <class kind="class">tracktion::engine::AudioProxyGenerator</class>
    <class kind="class">tracktion::engine::BufferedAudioReader</class>
    <class kind="class">tracktion::engine::BufferedFileReaderWrapper</class>
    <class kind="class">tracktion::engine::BufferedAudioFileManager</class>
    <class kind="class">tracktion::engine::BufferedFileReader</class>
    <class kind="class">tracktion::engine::LoopInfo</class>
    <class kind="class">tracktion::engine::RecordingThumbnailManager</class>
    <class kind="class">tracktion::engine::SmartThumbnail</class>
    <class kind="struct">tracktion::engine::ParameterSetting</class>
    <class kind="struct">tracktion::engine::MarkerSetting</class>
    <class kind="struct">tracktion::engine::MidiID</class>
    <class kind="class">tracktion::engine::ControlSurface</class>
    <class kind="class">tracktion::engine::CustomControlSurface</class>
    <class kind="class">tracktion::engine::ExternalController</class>
    <class kind="struct">tracktion::engine::ColourArea</class>
    <class kind="class">tracktion::engine::ExternalControllerManager</class>
    <class kind="class">tracktion::engine::AlphaTrackControlSurface</class>
    <class kind="class">tracktion::engine::IconProG2</class>
    <class kind="class">tracktion::engine::MackieC4</class>
    <class kind="class">tracktion::engine::MackieMCU</class>
    <class kind="class">tracktion::engine::MackieXT</class>
    <class kind="class">tracktion::engine::NovationRemoteSl</class>
    <class kind="class">tracktion::engine::RemoteSLCompact</class>
    <class kind="class">tracktion::engine::TranzportControlSurface</class>
    <class kind="struct">tracktion::engine::ActiveNoteList</class>
    <class kind="struct">tracktion::engine::MidiChannel</class>
    <class kind="class">tracktion::engine::MidiControllerEvent</class>
    <class kind="struct">tracktion::engine::MidiExpression</class>
    <class kind="class">tracktion::engine::MidiList</class>
    <class kind="class">tracktion::engine::MidiNote</class>
    <class kind="class">tracktion::engine::MidiProgramManager</class>
    <class kind="class">tracktion::engine::MidiSysexEvent</class>
    <class kind="class">tracktion::engine::Chord</class>
    <class kind="class">tracktion::engine::Scale</class>
    <class kind="class">tracktion::engine::PatternGenerator</class>
    <class kind="struct">tracktion::engine::KeyResult</class>
    <class kind="class">tracktion::engine::SelectedMidiEvents</class>
    <class kind="class">tracktion::engine::BreakpointOscillatorModifier</class>
    <class kind="class">tracktion::engine::EnvelopeFollowerModifier</class>
    <class kind="class">tracktion::engine::LFOModifier</class>
    <class kind="class">tracktion::engine::MIDITrackerModifier</class>
    <class kind="struct">tracktion::engine::Ramp</class>
    <class kind="class">tracktion::engine::RandomModifier</class>
    <class kind="class">tracktion::engine::StepModifier</class>
    <class kind="class">tracktion::engine::AutomatableEditItem</class>
    <class kind="class">tracktion::engine::AutomatableParameter</class>
    <class kind="class">tracktion::engine::AutomationDragDropTarget</class>
    <class kind="class">tracktion::engine::ParameterisableDragDropSource</class>
    <class kind="struct">tracktion::engine::AutomationIterator</class>
    <class kind="class">tracktion::engine::AutomatableParameterTree</class>
    <class kind="class">tracktion::engine::AutomationCurve</class>
    <class kind="class">tracktion::engine::AutomationRecordManager</class>
    <class kind="class">tracktion::engine::MacroParameter</class>
    <class kind="class">tracktion::engine::MacroParameterList</class>
    <class kind="class">tracktion::engine::MacroParameterElement</class>
    <class kind="class">tracktion::engine::MidiLearnState</class>
    <class kind="class">tracktion::engine::MidiAssignable</class>
    <class kind="struct">tracktion::engine::ModifierTimer</class>
    <class kind="struct">tracktion::engine::Modifier</class>
    <class kind="class">tracktion::engine::ModifierList</class>
    <class kind="class">tracktion::engine::ParameterChangeHandler</class>
    <class kind="class">tracktion::engine::ParameterControlMappings</class>
    <class kind="class">tracktion::engine::ArrangerClip</class>
    <class kind="class">tracktion::engine::AudioClipBase</class>
    <class kind="class">tracktion::engine::AudioSegmentList</class>
    <class kind="class">tracktion::engine::ChordClip</class>
    <class kind="struct">tracktion::engine::ClipLevel</class>
    <class kind="struct">tracktion::engine::LiveClipLevel</class>
    <class kind="class">tracktion::engine::Clip</class>
    <class kind="class">tracktion::engine::ClipEffect</class>
    <class kind="class">tracktion::engine::ClipEffects</class>
    <class kind="struct">tracktion::engine::ScopedPluginUnloadInhibitor</class>
    <class kind="struct">tracktion::engine::VolumeEffect</class>
    <class kind="struct">tracktion::engine::FadeInOutEffect</class>
    <class kind="struct">tracktion::engine::StepVolumeEffect</class>
    <class kind="struct">tracktion::engine::PitchShiftEffect</class>
    <class kind="struct">tracktion::engine::WarpTimeEffect</class>
    <class kind="struct">tracktion::engine::PluginEffect</class>
    <class kind="struct">tracktion::engine::NormaliseEffect</class>
    <class kind="struct">tracktion::engine::MakeMonoEffect</class>
    <class kind="struct">tracktion::engine::ReverseEffect</class>
    <class kind="struct">tracktion::engine::InvertEffect</class>
    <class kind="class">tracktion::engine::ClipOwner</class>
    <class kind="class">tracktion::engine::CollectionClip</class>
    <class kind="class">tracktion::engine::CompManager</class>
    <class kind="class">tracktion::engine::CompFactory</class>
    <class kind="class">tracktion::engine::WaveCompManager</class>
    <class kind="class">tracktion::engine::MidiCompManager</class>
    <class kind="class">tracktion::engine::ContainerClip</class>
    <class kind="class">tracktion::engine::EditClip</class>
    <class kind="class">tracktion::engine::EditRenderJob</class>
    <class kind="class">tracktion::engine::LauncherClipPlaybackHandle</class>
    <class kind="class">tracktion::engine::MarkerClip</class>
    <class kind="class">tracktion::engine::MidiClip</class>
    <class kind="class">tracktion::engine::ReverseRenderJob</class>
    <class kind="class">tracktion::engine::StepClip</class>
    <class kind="struct">tracktion::engine::WarpMarker</class>
    <class kind="class">tracktion::engine::WarpTimeManager</class>
    <class kind="class">tracktion::engine::WarpTimeFactory</class>
    <class kind="class">tracktion::engine::WarpTimeRenderJob</class>
    <class kind="class">tracktion::engine::WaveAudioClip</class>
    <class kind="class">tracktion::engine::Edit</class>
    <class kind="struct">tracktion::engine::EditDeleter</class>
    <class kind="struct">tracktion::engine::ActiveEdits</class>
    <class kind="class">tracktion::engine::EditFileOperations</class>
    <class kind="class">tracktion::engine::EditInsertPoint</class>
    <class kind="struct">tracktion::engine::EditItemID</class>
    <class kind="class">tracktion::engine::EditItem</class>
    <class kind="struct">tracktion::engine::EditItemCache</class>
    <class kind="class">tracktion::engine::EditSnapshot</class>
    <class kind="class">tracktion::engine::GrooveTemplate</class>
    <class kind="class">tracktion::engine::GrooveTemplateManager</class>
    <class kind="class">tracktion::engine::LaunchQuantisation</class>
    <class kind="class">tracktion::engine::MarkerManager</class>
    <class kind="struct">tracktion::engine::OldEditConversion</class>
    <class kind="class">tracktion::engine::PitchSequence</class>
    <class kind="class">tracktion::engine::PitchSetting</class>
    <class kind="class">tracktion::engine::QuantisationType</class>
    <class kind="class">tracktion::engine::Scene</class>
    <class kind="class">tracktion::engine::SceneWatcher</class>
    <class kind="class">tracktion::engine::SceneList</class>
    <class kind="class">tracktion::engine::SourceFileReference</class>
    <class kind="class">tracktion::engine::TempoSequence</class>
    <class kind="struct">tracktion::engine::EditTimecodeRemapperSnapshot</class>
    <class kind="class">tracktion::engine::TempoSetting</class>
    <class kind="struct">tracktion::engine::TimecodeSnapType</class>
    <class kind="class">tracktion::engine::TimecodeDuration</class>
    <class kind="struct">tracktion::engine::TimecodeDisplayFormat</class>
    <class kind="struct">tracktion::engine::TimecodeDisplayIterator</class>
    <class kind="class">tracktion::engine::TimeSigSetting</class>
    <class kind="class">tracktion::engine::TracktionArchiveFile</class>
    <class kind="class">tracktion::engine::Exportable</class>
    <class kind="class">tracktion::engine::ExportJob</class>
    <class kind="class">tracktion::engine::ReferencedMaterialList</class>
    <class kind="class">tracktion::engine::RenderManager</class>
    <class kind="class">tracktion::engine::RenderOptions</class>
    <class kind="class">tracktion::engine::ArrangerTrack</class>
    <class kind="class">tracktion::engine::AudioTrack</class>
    <class kind="class">tracktion::engine::AutomationTrack</class>
    <class kind="class">tracktion::engine::ChordTrack</class>
    <class kind="class">tracktion::engine::ClipSlot</class>
    <class kind="class">tracktion::engine::ClipSlotList</class>
    <class kind="class">tracktion::engine::ClipTrack</class>
    <class kind="struct">tracktion::engine::EditTime</class>
    <class kind="struct">tracktion::engine::EditTimeRange</class>
    <class kind="struct">tracktion::engine::ClipPosition</class>
    <class kind="class">tracktion::engine::FolderTrack</class>
    <class kind="class">tracktion::engine::MarkerTrack</class>
    <class kind="class">tracktion::engine::MasterTrack</class>
    <class kind="class">tracktion::engine::TempoTrack</class>
    <class kind="class">tracktion::engine::Track</class>
    <class kind="class">tracktion::engine::TrackCompManager</class>
    <class kind="class">tracktion::engine::TrackItem</class>
    <class kind="class">tracktion::engine::TrackOutput</class>
    <class kind="struct">tracktion::engine::TrackInsertPoint</class>
    <class kind="struct">tracktion::engine::TrackList</class>
    <class kind="struct">tracktion::engine::TrackSection</class>
    <class kind="struct">tracktion::engine::TrackAutomationSection</class>
    <class kind="struct">tracktion::engine::AudioNodeProperties</class>
    <class kind="struct">tracktion::engine::PlaybackInitialisationInfo</class>
    <class kind="struct">tracktion::engine::CreateAudioNodeParams</class>
    <class kind="struct">tracktion::engine::AudioRenderContext</class>
    <class kind="class">tracktion::engine::AudioNode</class>
    <class kind="class">tracktion::engine::SingleInputAudioNode</class>
    <class kind="struct">tracktion::engine::MuteAudioNode</class>
    <class kind="class">tracktion::engine::CombiningAudioNode</class>
    <class kind="class">tracktion::engine::FadeInOutAudioNode</class>
    <class kind="class">tracktion::engine::PlayHead</class>
    <class kind="class">tracktion::engine::PluginAudioNode</class>
    <class kind="class">tracktion::engine::SubSampleWaveAudioNode</class>
    <class kind="class">tracktion::engine::SpeedRampAudioNode</class>
    <class kind="class">tracktion::engine::TimedMutingAudioNode</class>
    <class kind="class">tracktion::engine::WaveAudioNode</class>
    <class kind="class">tracktion::engine::InputDevice</class>
    <class kind="class">tracktion::engine::InputDeviceInstance</class>
    <class kind="class">tracktion::engine::MidiInputDevice</class>
    <class kind="class">tracktion::engine::MidiOutputDevice</class>
    <class kind="class">tracktion::engine::SoftwareMidiOutputDevice</class>
    <class kind="class">tracktion::engine::MidiOutputDeviceInstance</class>
    <class kind="class">tracktion::engine::OutputDevice</class>
    <class kind="class">tracktion::engine::OutputDeviceInstance</class>
    <class kind="class">tracktion::engine::PhysicalMidiInputDevice</class>
    <class kind="class">tracktion::engine::VirtualMidiInputDevice</class>
    <class kind="struct">tracktion::engine::ChannelIndex</class>
    <class kind="struct">tracktion::engine::WaveDeviceDescription</class>
    <class kind="class">tracktion::engine::WaveInputDevice</class>
    <class kind="class">tracktion::engine::WaveInputRecordingThread</class>
    <class kind="class">tracktion::engine::WaveOutputDevice</class>
    <class kind="class">tracktion::engine::WaveOutputDeviceInstance</class>
    <class kind="class">tracktion::engine::SampleFader</class>
    <class kind="class">tracktion::engine::ArrangerLauncherSwitchingNode</class>
    <class kind="class">tracktion::engine::AuxSendNode</class>
    <class kind="class">tracktion::engine::ClickGenerator</class>
    <class kind="class">tracktion::engine::ClickNode</class>
    <class kind="class">tracktion::engine::CombiningNode</class>
    <class kind="class">tracktion::engine::ContainerClipNode</class>
    <class kind="class">tracktion::engine::DynamicOffsetNode</class>
    <class kind="struct">tracktion::engine::CreateNodeParams</class>
    <class kind="struct">tracktion::engine::EditNodeBuilder</class>
    <class kind="class">tracktion::engine::FadeInOutNode</class>
    <class kind="class">tracktion::engine::HostedMidiInputDeviceNode</class>
    <class kind="class">tracktion::engine::InsertNode</class>
    <class kind="class">tracktion::engine::InsertSendNode</class>
    <class kind="class">tracktion::engine::LevelMeasurerProcessingNode</class>
    <class kind="class">tracktion::engine::LevelMeasuringNode</class>
    <class kind="class">tracktion::engine::LiveMidiInjectingNode</class>
    <class kind="class">tracktion::engine::LiveMidiOutputNode</class>
    <class kind="class">tracktion::engine::LoopingMidiNode</class>
    <class kind="class">tracktion::engine::MelodyneNode</class>
    <class kind="class">tracktion::engine::MidiInputDeviceNode</class>
    <class kind="class">tracktion::engine::MidiNode</class>
    <class kind="class">tracktion::engine::MidiOutputDeviceInstanceInjectingNode</class>
    <class kind="class">tracktion::engine::ModifierNode</class>
    <class kind="class">tracktion::engine::MultiThreadedNodePlayer</class>
    <class kind="class">tracktion::engine::NodeRenderContext</class>
    <class kind="class">tracktion::engine::PlayHeadPositionNode</class>
    <class kind="class">tracktion::engine::PluginNode</class>
    <class kind="class">tracktion::engine::RackInstanceNode</class>
    <class kind="struct">tracktion::engine::InputProvider</class>
    <class kind="class">tracktion::engine::RackNodePlayer</class>
    <class kind="class">tracktion::engine::RackReturnNode</class>
    <class kind="class">tracktion::engine::SharedLevelMeasuringNode</class>
    <class kind="class">tracktion::engine::SlotControlNode</class>
    <class kind="struct">tracktion::engine::SpeedFadeDescription</class>
    <class kind="class">tracktion::engine::SpeedRampWaveNode</class>
    <class kind="class">tracktion::engine::TimedMutingNode</class>
    <class kind="class">tracktion::engine::TimeStretchingWaveNode</class>
    <class kind="class">tracktion::engine::TrackMidiInputDeviceNode</class>
    <class kind="class">tracktion::engine::TrackMuteState</class>
    <class kind="class">tracktion::engine::TrackMutingNode</class>
    <class kind="struct">tracktion::engine::ProcessState</class>
    <class kind="class">tracktion::engine::TracktionEngineNode</class>
    <class kind="class">tracktion::engine::DynamicallyOffsettableNodeBase</class>
    <class kind="class">tracktion::engine::TracktionNodePlayer</class>
    <class kind="class">tracktion::engine::TrackWaveInputDeviceNode</class>
    <class kind="class">tracktion::engine::WaveInputDeviceNode</class>
    <class kind="struct">tracktion::engine::WarpPoint</class>
    <class kind="class">tracktion::engine::WaveNode</class>
    <class kind="class">tracktion::engine::WaveNodeRealTime</class>
    <class kind="class">tracktion::engine::AbletonLink</class>
    <class kind="class">tracktion::engine::DeviceManager</class>
    <class kind="class">tracktion::engine::EditInputDevices</class>
    <class kind="class">tracktion::engine::EditPlaybackContext</class>
    <class kind="class">tracktion::engine::HostedAudioDeviceInterface</class>
    <class kind="struct">tracktion::engine::DbTimePair</class>
    <class kind="class">tracktion::engine::LevelMeasurer</class>
    <class kind="class">tracktion::engine::SharedLevelMeasurer</class>
    <class kind="class">tracktion::engine::MidiNoteDispatcher</class>
    <class kind="struct">tracktion::engine::MPEStartTrimmer</class>
    <class kind="class">tracktion::engine::ScopedSteadyLoad</class>
    <class kind="class">tracktion::engine::TransportControl</class>
    <class kind="class">tracktion::engine::AirWindowsCallback</class>
    <class kind="class">tracktion::engine::AirWindowsPlugin</class>
    <class kind="class">tracktion::engine::AirWindowsBase</class>
    <class kind="class">tracktion::engine::AirWindowsAutomatableParameter</class>
    <class kind="class">tracktion::engine::MelodyneFileReader</class>
    <class kind="struct">tracktion::engine::ARADocumentHolder</class>
    <class kind="class">tracktion::engine::ChorusPlugin</class>
    <class kind="class">tracktion::engine::CompressorPlugin</class>
    <class kind="struct">tracktion::engine::DelayBufferBase</class>
    <class kind="class">tracktion::engine::DelayPlugin</class>
    <class kind="class">tracktion::engine::EqualiserPlugin</class>
    <class kind="class">tracktion::engine::ValueSmoother</class>
    <class kind="class">tracktion::engine::SimpleLFO</class>
    <class kind="class">tracktion::engine::FourOscPlugin</class>
    <class kind="class">tracktion::engine::ImpulseResponsePlugin</class>
    <class kind="class">tracktion::engine::LatencyPlugin</class>
    <class kind="class">tracktion::engine::LowPassPlugin</class>
    <class kind="class">tracktion::engine::MidiModifierPlugin</class>
    <class kind="class">tracktion::engine::MidiPatchBayPlugin</class>
    <class kind="class">tracktion::engine::PatchBayPlugin</class>
    <class kind="class">tracktion::engine::PhaserPlugin</class>
    <class kind="class">tracktion::engine::PitchShiftPlugin</class>
    <class kind="class">tracktion::engine::ReverbPlugin</class>
    <class kind="class">tracktion::engine::SamplerPlugin</class>
    <class kind="class">tracktion::engine::ToneGeneratorPlugin</class>
    <class kind="class">tracktion::engine::ExternalAutomatableParameter</class>
    <class kind="class">tracktion::engine::ExternalPlugin</class>
    <class kind="struct">tracktion::engine::PluginWetDryAutomatableParam</class>
    <class kind="class">tracktion::engine::VSTXML</class>
    <class kind="class">tracktion::engine::AuxReturnPlugin</class>
    <class kind="class">tracktion::engine::AuxSendPlugin</class>
    <class kind="class">tracktion::engine::FreezePointPlugin</class>
    <class kind="class">tracktion::engine::InsertPlugin</class>
    <class kind="class">tracktion::engine::LevelMeterPlugin</class>
    <class kind="class">tracktion::engine::RackInstance</class>
    <class kind="struct">tracktion::engine::RackConnection</class>
    <class kind="class">tracktion::engine::RackType</class>
    <class kind="class">tracktion::engine::RackTypeList</class>
    <class kind="class">tracktion::engine::TextPlugin</class>
    <class kind="class">tracktion::engine::VCAPlugin</class>
    <class kind="class">tracktion::engine::VolumeAndPanPlugin</class>
    <class kind="struct">tracktion::engine::PluginCreationInfo</class>
    <class kind="struct">tracktion::engine::PluginInitialisationInfo</class>
    <class kind="struct">tracktion::engine::PluginRenderContext</class>
    <class kind="class">tracktion::engine::Plugin</class>
    <class kind="class">tracktion::engine::PluginList</class>
    <class kind="class">tracktion::engine::PluginManager</class>
    <class kind="class">tracktion::engine::PluginCache</class>
    <class kind="struct">tracktion::engine::PluginScanHelpers</class>
    <class kind="struct">tracktion::engine::PluginWindowState</class>
    <class kind="class">tracktion::engine::Project</class>
    <class kind="class">tracktion::engine::ProjectItem</class>
    <class kind="class">tracktion::engine::ProjectItemID</class>
    <class kind="class">tracktion::engine::ProjectManager</class>
    <class kind="class">tracktion::engine::ProjectSearchIndex</class>
    <class kind="class">tracktion::engine::SearchOperation</class>
    <class kind="class">tracktion::engine::Clipboard</class>
    <class kind="class">tracktion::engine::SelectableListener</class>
    <class kind="class">tracktion::engine::Selectable</class>
    <class kind="struct">tracktion::engine::SelectableList</class>
    <class kind="class">tracktion::engine::SafeSelectable</class>
    <class kind="class">tracktion::engine::LambdaSelectableListener</class>
    <class kind="class">tracktion::engine::SelectableClass</class>
    <class kind="class">tracktion::engine::SelectableClassWithVolume</class>
    <class kind="class">tracktion::engine::SelectableClassWithPan</class>
    <class kind="class">tracktion::engine::SelectionManager</class>
    <class kind="struct">tracktion::engine::BeatDetect</class>
    <class kind="class">tracktion::engine::TempoDetect</class>
    <class kind="class">tracktion::engine::TimeStretcher</class>
    <class kind="struct">tracktion::engine::AsyncCaller</class>
    <class kind="struct">tracktion::engine::AsyncFunctionCaller</class>
    <class kind="class">tracktion::engine::LambdaTimer</class>
    <class kind="class">tracktion::engine::MessageThreadCallback</class>
    <class kind="struct">tracktion::engine::BlockingFunction</class>
    <class kind="struct">tracktion::engine::DummyConstrainer</class>
    <class kind="struct">tracktion::engine::AtomicWrapper</class>
    <class kind="struct">tracktion::engine::AudioFadeCurve</class>
    <class kind="class">tracktion::engine::AudioScratchBuffer</class>
    <class kind="class">tracktion::engine::AudioMidiFifo</class>
    <class kind="class">tracktion::engine::AudioBufferSnapshot</class>
    <class kind="class">tracktion::engine::ThreadPoolJobWithProgress</class>
    <class kind="class">tracktion::engine::BackgroundJobManager</class>
    <class kind="class">tracktion::engine::ConstrainedCachedValue</class>
    <class kind="struct">tracktion::engine::ScopedCpuMeter</class>
    <class kind="struct">tracktion::engine::StopwatchTimer</class>
    <class kind="struct">tracktion::engine::CrashStackTracer</class>
    <class kind="struct">tracktion::engine::DeadMansPedalMessage</class>
    <class kind="struct">tracktion::engine::TransparentToMouseInTrackItemComp</class>
    <class kind="struct">tracktion::engine::CurvePoint</class>
    <class kind="class">tracktion::engine::CurveEditorPoint</class>
    <class kind="class">tracktion::engine::CurveEditor</class>
    <class kind="struct">tracktion::engine::Ditherer</class>
    <class kind="class">tracktion::engine::Engine</class>
    <class kind="struct">tracktion::engine::EditLimits</class>
    <class kind="class">tracktion::engine::EngineBehaviour</class>
    <class kind="class">tracktion::engine::ExpEnvelope</class>
    <class kind="class">tracktion::engine::LinEnvelope</class>
    <class kind="class">tracktion::engine::ExternalPlayheadSynchroniser</class>
    <class kind="struct">tracktion::engine::ScopedDirectoryDeleter</class>
    <class kind="struct">tracktion::engine::FileDragList</class>
    <class kind="class">tracktion::engine::ScopedWaitCursor</class>
    <class kind="class">tracktion::engine::MouseHoverDetector</class>
    <class kind="class">tracktion::engine::BandlimitedWaveLookupTables</class>
    <class kind="class">tracktion::engine::Oscillator</class>
    <class kind="class">tracktion::engine::MultiVoiceOscillator</class>
    <class kind="struct">tracktion::engine::Pitch</class>
    <class kind="struct">tracktion::engine::PluginComponent</class>
    <class kind="class">tracktion::engine::PropertyStorage</class>
    <class kind="class">tracktion::engine::SafeScopedListener</class>
    <class kind="class">tracktion::engine::ScopedListener</class>
    <class kind="struct">tracktion::engine::HertzTag</class>
    <class kind="class">tracktion::engine::SharedTimer</class>
    <class kind="struct">tracktion::engine::Spline</class>
    <class kind="class">tracktion::engine::TemporaryFileManager</class>
    <class kind="struct">tracktion::engine::MonotonicBeat</class>
    <class kind="struct">tracktion::engine::MonotonicBeatRange</class>
    <class kind="struct">tracktion::engine::SyncPoint</class>
    <class kind="struct">tracktion::engine::SyncRange</class>
    <class kind="class">tracktion::engine::UIBehaviour</class>
    <class kind="class">tracktion::engine::ValueTreeObjectList</class>
    <class kind="struct">tracktion::engine::SortedValueTreeObjectList</class>
    <class kind="struct">tracktion::engine::ValueTreeAllEventListener</class>
    <class kind="struct">tracktion::engine::ValueTreeComparator</class>
    <class kind="class">tracktion::engine::ReferenceCountedValueTree</class>
    <class kind="struct">tracktion::engine::MidiMessageArray</class>
    <class kind="struct">tracktion::engine::MidiMessageWithSource</class>
    <member kind="typedef">
      <type>std::vector&lt; WarpPoint &gt;</type>
      <name>WarpMap</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>adeeadbd2dea66b29cc5bb3586b64326a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int64_t</type>
      <name>SampleCount</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a85052134975073481bd9888cbc71f3c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>juce::Range&lt; SampleCount &gt;</type>
      <name>SampleRange</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a8944ee32cc6ed4eb531572d627f9538f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int64_t</type>
      <name>HashCode</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a134d0029d7c5db278db98865a49c1b84</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>MPESourceID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a48992ea02a0d6d6f423dcb9111351598</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DeleteExistingClips</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>acb9cf874dc4e4feb1c368815603c6c9e</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="acb9cf874dc4e4feb1c368815603c6c9ea7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="acb9cf874dc4e4feb1c368815603c6c9eaa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CloseGap</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a2b33ff26f5a23b76bceb9d152c43b34c</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a2b33ff26f5a23b76bceb9d152c43b34ca7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a2b33ff26f5a23b76bceb9d152c43b34caa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MoveClipAction</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>addf8245ddf875ad562228c1b4911c5ee</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="addf8245ddf875ad562228c1b4911c5eea689bf948adf5d301d601b677fe1d95a9">moveToEndOfLast</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="addf8245ddf875ad562228c1b4911c5eead98c519c261eac28a987e2cd523d2efb">moveToStartOfNext</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="addf8245ddf875ad562228c1b4911c5eea6c946346c9811d724e9aabb70d992aac">moveStartToCursor</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="addf8245ddf875ad562228c1b4911c5eea76fc3972a4183c47e5f8cebdc5371526">moveEndToCursor</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LaunchQType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae39e83d3d91167656e40c7d65b801e95</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95af2deebc8413aae20409eeb10bbd9431c">eightBars</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95aec08c8fecba7f3dea2d1bf3e8f2c51b4">fourBars</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a4e9b8cd9865ad579301facd6c315d948">twoBars</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a37b51d194a7513e45b56f6524f2d51f2">bar</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a998829c3bd4bd924a6ab5161eec428fd">halfT</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a7afe399f1415b137d0962f82662fa9d4">half</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95ac7c1d479f14e54e7784205a88f161e02">halfD</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95aac2527e879843b55ad31b5d983a30c50">quarterT</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95aac9e2504b3cf2cadf8ca121523b110b4">quarter</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a6009cd25211d9cb7c07ddc0ea48caaf1">quarterD</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a73910ed0856fbae6996c1fe8cdccc131">eighthT</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95aa76a3a8b8cba2cbe41bd4310b12ad2db">eighth</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a5aa4b6df735b84a7a115dd747ca9d8a2">eighthD</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95afaf9595af501765ae04c046a952bb19c">sixteenthT</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a80e1ed18749046947dd9aba3166b0f08">sixteenth</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a43412f87525e6a16c023d94359bba55e">sixteenthD</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a167e1e44dbf4b61a7137624d40b16971">thirtySecondT</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a442d0097548e01242ae77d3cc91c6585">thirtySecond</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a9beb6e597257c8ea614e19311ad2171c">thirtySecondD</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95ad03f20763bedd7c66fc4aed0ad26bdb0">sixtyFourthT</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a1cd670520c232df91f57d060f59b7c92">sixtyFourth</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="ae39e83d3d91167656e40c7d65b801e95a14430c1fe99d2a12c779c638628cc373">sixtyFourthD</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TimecodeType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a106acf13adac6f34b462a0c4de6e4fe3</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a106acf13adac6f34b462a0c4de6e4fe3a89e893579b272eb562aa17cb401ac7b7">millisecs</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a106acf13adac6f34b462a0c4de6e4fe3a77c84d786e6839a25295c0e73b3342c9">barsBeats</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a106acf13adac6f34b462a0c4de6e4fe3aa2dc2407a46ee1b7331225183f4b34c0">fps24</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a106acf13adac6f34b462a0c4de6e4fe3a745ffcdd19b34f7d8d4028a0380f7808">fps25</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a106acf13adac6f34b462a0c4de6e4fe3a51b0fa64094004b47e32034da78f7a75">fps30</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResamplingQuality</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a80cc60aadbaf1dca652f40a5544b3e6b</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a80cc60aadbaf1dca652f40a5544b3e6ba358bbd8944e77ed1509836a4fb9ad265">lagrange</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a80cc60aadbaf1dca652f40a5544b3e6baa72f77d7d8c1b76e929603e5964990cd">sincFast</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a80cc60aadbaf1dca652f40a5544b3e6baace0edda6e9949c6547a238e023d9a1c">sincMedium</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a80cc60aadbaf1dca652f40a5544b3e6ba68f771a1079c302c71e2526c357497d0">sincBest</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PanLaw</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a40238495220f5d933844bcfe2397d810</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLawDefault</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a40238495220f5d933844bcfe2397d810aebabcdb59c49709439ce5b4f30e8f545</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLawLinear</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a40238495220f5d933844bcfe2397d810aed7f066574fd62bf7ad505132fab47ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLaw2point5dBCenter</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a40238495220f5d933844bcfe2397d810ad5b1719cd8ca63ecfac700f08c427293</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLaw3dBCenter</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a40238495220f5d933844bcfe2397d810a4b8e8b610e84ecef3c164e10af7da3e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLaw4point5dBCenter</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a40238495220f5d933844bcfe2397d810a14f75510187a8f1d9ded522b7353a019</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PanLaw6dBCenter</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a40238495220f5d933844bcfe2397d810a13930b9129878e3d54a8362be5586cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AuxPosition</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9e8ea43658d2da6652d441bb65cdca4d</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a9e8ea43658d2da6652d441bb65cdca4da4f64bbe2baee5b3a2dca4855df1d0c63">byBus</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="a9e8ea43658d2da6652d441bb65cdca4da85a22b5fd75556bce2a556429fb64823">byPosition</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SettingID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aef0092bdbd8a28c3968f7f81912f815e</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eafedb2d84cafe20862cb4399751a8a7e3">invalid</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaf4a6dd1d859d0c75be53bdd8e10903e6">addAntiDenormalNoise</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eabae1d66bf6e7bd077603dd923ab3ef3c">audio_device_setup</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea36ff6680f35223d9a37377f7e849d82c">audiosettings</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eab570b65e1f142172d29d10553384b1ba">autoFreeze</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaabdbefcb7beb917dea85d1ce8acedb14">autoTempoMatch</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea49d0b9d90b866b75dd141d2c139eeb82">autoTempoDetect</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea415ada9d2d71ce32a632151ae7131d33">automapVst</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eae0caca9a9974a0eb4e76cc511f42293f">automapNative</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea8abed3d089b4528c2023ebd418b934ba">automapGuids1</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eada19f4cd43cb28828063fcb18bee2a69">automapGuids2</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea146bdabbf35fb3c93ba9780757a03ef3">cacheSizeSamples</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaa8360068305889e0630dbea1c25fd008">compCrossfadeMs</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea64c13455dd1fe041ad15987c09caaaf9">countInMode</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaf9ceba609737c6c58f0ee7c4179db4a1">clickTrackMidiNoteBig</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eae126f9e6072e4c7b39fc46ac354a3922">clickTrackMidiNoteLittle</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eae4cb99e059e6526c7dd0bc4647ca6cdc">clickTrackSampleSmall</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea07fd0fba07d9b1098131ba5689befcd0">clickTrackSampleBig</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea33317b96a63f7c2c075553f62c40c988">crossfadeBlock</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ead9747e2da342bdb995f6389533ad1a3d">cpu</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea5b28355506754f09c1aefddd2b83ed0b">customMidiControllers</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea732b8be068c98a77b3b321705c16c9c4">deadMansPedal</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaa62e6a9b96a5a46ca1e8df8bdf61f22a">defaultMidiOutDevice</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea015769f76c6033c69d783a89b0afedf3">defaultWaveOutDevice</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eafea66fb91cbf2d78d2bace53a399d84f">defaultMidiInDevice</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea8873e2c579f6e0cdad6bf53c14440209">defaultWaveInDevice</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaab5dbffa8d328b4ee3c038b03db636a9">externControlIn</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea15b23b93b04ee1f66a8e853395711d8b">externControlOut</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ead3b6c594a822b4858b52daef222f5921">externControlNum</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eadb759e79468893b2baaf9556d47bf22d">externControlMain</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea31b14445c2b17c9d967b7319d731a1a8">externControlShowSelection</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea1918ff077a302b29d9bac97cc5eb70cc">externControlSelectionColour</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaf37db2cd80d1ec81f8201a888987e99e">externControlEnable</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea386ac11ab2989a84b771e586cb83ef80">externOscInputPort</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea8b69d1116ebfb1e0a04d282b51214bc8">externOscOutputPort</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea6c0181cbf07dc90e143aa5dabbee22d8">externOscOutputAddr</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea3a2da2036002bcc377f599727cf771d5">filterControlMappingPresets</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea93f5564cc510d197a37af4fae5acd88c">filterGui</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea133823cfadbff75b8d9d7b3c4f4fdaf4">fitClipsToRegion</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea6a7d0e75a9396fcc5c73218ffd2f1e6a">findExamples</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaea96cab3cbe5d21dbdc9f8834885a71e">freezePoint</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea1ef2784670057be89a5320f13bfcbca4">hasEnabledMidiDefaultDevs</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea13cdced4c5e7c68ee57a6667491a2fa4">glideLength</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eacb2c1d30fff1f26672afd4f682e279fe">grooveTemplates</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ead4be0f64bf0d12c19719d73ee2e7dd2a">knownPluginList</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea8f618cf8b9d6f75493e756fe3e742d40">knownPluginList64</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea0852db5a857dd043f95d3af0bb73fac9">lameEncoder</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eae35835e50542993db63c630df92d181f">lastClickTrackLevel</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea69eb61fb57e7ffd44f2b08134080f334">lastEditRender</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eadf6f056bd22d8a4e86d91b964bcb7163">lowLatencyBuffer</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea08742b9203bf4d5ffb9c20ee2111866f">MCUoneTouchRecord</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea7829fddc435afb7d958bdde7713394b1">maxLatency</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea3f76e19b8be570ab42fa74157fd3c8af">midiin</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea2e68786ada734ce9728d1738fb0b21d4">midiout</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eae492cd4c2633cc4beba787942b8d55c1">midiEditorOctaves</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaa77620469659abf39ab038d1a96cfd20">midiProgramManager</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea5cbf4c22d5264f26fe59bc8c4962f8b3">newMarker</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea5c055d665fa2b6d747d438549bb2b336">numThreadsForPluginScanning</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaab3be0baacb19d5b398e3ad4e760e2d5">projectList</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea35a2864c314e4367eb1684bfe126a967">projects</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea1c2daf6d2feb296a59ff633379d58480">recentProjects</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaff8ed4f53819dcf20438b964fec10fa2">renameClipRenamesSource</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea2cdbd15b771628de0256bab7909a8046">renameMode</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea4f0f5be4892f3fd7fe272df168c73857">renderRecentFilesList</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea35bb7b2bdacc8c03899179261a1ce7cf">resetCursorOnPlay</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea6118d3bbbb834510d5533f4d2b721cf0">retrospectiveRecord</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea51c42b14b1831fc29eec3a15c27b5f41">reWireEnabled</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea0cc34e5dab44f5677beb8606ddbd364e">safeRecord</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea4575629cfb51fb2d9487ee2d907ee1b8">sendControllerOffMessages</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eab2743c7f7477f7d812ecf5ad60fddd2b">simplifyAfterRecording</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eab25669aa29c4de54cf3e79e75630600e">snapCursor</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea7065a657acc31d03990ae857307cb984">tempDirectory</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaf20e670bd4b44c06095587c42c059a57">trackExpansionMode</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea117764216c0ac64c6b8db535df3eac30">use64Bit</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaa5d51cbdfb33b9d96114dd79348a8a0e">xFade</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea87154d5531917a96b35bae4993259a37">xtCount</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea49b2d1e2befcd40dfea67e1daf091dc4">xtIndices</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eadc17b81e0fcc4244d653e30e5552af7f">virtualmididevices</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea30c1138f8420913e5253a0fd215212f4">virtualmidiin</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eafe6b599e61fd47db5ec49770211a8873">midiScanIntervalSeconds</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eae09c5665396629f42adc7c8fd637137b">useSeparateProcessForScanning</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea060c0316a269e325c58b3984fec89e7a">useRealtime</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eac733e4221d487351d76843e7d172fa06">wavein</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea33871eeb66dd165b9d0482fb8585ab32">waveout</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eae044eeed17ec4bc3c3258fe518fa6460">windowsDoubleClick</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea0a161e311b986d94825458f8e192e54b">renderFormat</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eabfe9884d29a1bc6c20535b21feb81fcc">trackRenderSampRate</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea1b874b9100170a2bfc595c462997355e">trackRenderBits</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea32dc181ee9a3989f69390fd115610849">bypassFilters</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eab3d70f37909a1657efd2efeae8f95d86">markedRegion</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea82f6a120d0d01ec5ba611f8a4493d581">editClipRenderSampRate</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea67d48752bee2d7b159258294f638226f">editClipRenderBits</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea102baf00f489b06c966ec93503af4bdc">editClipRenderDither</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea2501b72cee1761c35c2e8b90d2741be3">editClipRealtime</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eac064c494b752ea8be2d4289a9c9c2fdf">editClipRenderStereo</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea71ca533d7470e635df1021f64cd6bf26">editClipRenderNormalise</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea2e6f92476054e669cc36cb60887a82ab">editClipRenderRMS</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaa9d038283f7b683fc08b5bd90c9d58c9">editClipRenderRMSLevelDb</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaff89a6921c18e2d9a340be45b0c8c7e2">editClipRenderPeakLevelDb</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea13e9ee05f30bd1994fa972300ba96f5a">editClipPassThroughFilters</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaf2632d3ae14c6bc38a44a524a1c3bfde">exportFormat</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eafba022231b903d6edb8fe1ee5b50c442">renderOnlySelectedClips</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea6355d6a086c29f993cf48fccab4b09bd">renderOnlyMarked</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea3e63b09d6c9384cf6189ae1cde6288cf">renderNormalise</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea08e87b5239d6cf0be149b139f3cb1836">renderRMS</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea5a4a44cc3a53ec31714031bf8801dc45">renderRMSLevelDb</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea49439ce96bbe5130e3c5573993eb2a3f">renderPeakLevelDb</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ead8de6460b5cb7402a2feef9655663462">renderTrimSilence</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eabd3bdf946b94629a735ee2e5cd30e44e">renderSampRate</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eadc32e81c91da85b1a1e87f4206aa8993">renderStereo</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea5d87425648c90ff47bb1d8b70a4c82be">renderBits</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea6a2c3de0c23697686dbcbd562dccc46e">renderDither</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ead66636b253cb346dbb6240e30def3618">quality</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eaebf43e996821d24d05eda0d2450c1b0c">addId3Info</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea37e2a166d3ab28426a1d1a481d356d33">realtime</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea01372905495e6c5db01a5baa92da0d98">passThroughFilters</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815ea3de70b17fc38e2631a7c5ce85f1c4ed8">externControlShowClipSlotSelection</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine.html" anchor="aef0092bdbd8a28c3968f7f81912f815eae9f0ae9d4723099d46d0fcdba664fd62">addAcidMetadata</enumvalue>
    </member>
    <member kind="function">
      <type>juce::Array&lt; KeyResult &gt;</type>
      <name>determineKeyOfNotes</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>afb8aba506ac87a1db1e93d91682f0bda</anchor>
      <arglist>(const juce::Array&lt; MidiNote * &gt; &amp;notes)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; AssignmentType &gt;</type>
      <name>getAssignmentsOfType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab239e09de49359c23962e48a4538aabb</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ModifierType * &gt;</type>
      <name>getModifiersOfType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>abc3cdcd5b219205652a6fedc13c9b363</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; AssignmentType &gt;</type>
      <name>getAssignmentsForSource</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4f6ca88eb1cf03a815592c13840bb74d</anchor>
      <arglist>(EditType &amp;edit, const ModifierSourceType &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter::ModifierSource *</type>
      <name>getSourceForAssignment</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>acb0013792be98c354e97e2d2d324cb3d</anchor>
      <arglist>(const AutomatableParameter::ModifierAssignment &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; AutomatableParameter &gt;</type>
      <name>getAllParametersBeingModifiedBy</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a3ce66da95fdec2841b8bac9100185a0d</anchor>
      <arglist>(Edit &amp;, AutomatableParameter::ModifierSource &amp;)</arglist>
    </member>
    <member kind="function">
      <type>AutomatableParameter *</type>
      <name>getParameter</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9a8236ff7c884599861a4465a242bfee</anchor>
      <arglist>(AutomatableParameter::ModifierAssignment &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIntParamValue</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>acd4ebe86479d7b528dc90f269d149921</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getBoolParamValue</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a78650c121d9cebaedff12e345d159f82</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>getTypedParamValue</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a1a2159b3e62924be7e808a558fa966fe</anchor>
      <arglist>(const AutomatableParameter &amp;ap)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>simplify</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a7323140bc0794f96471d49cfcde34908</anchor>
      <arglist>(AutomationCurve &amp;, int strength, TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>MacroParameter::Ptr</type>
      <name>getMacroParameterForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a6e6c0ed11ef20e173700d375b05ce0fb</anchor>
      <arglist>(Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; Plugin &gt;</type>
      <name>getOwnerPlugin</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aa98cad821850e2c14ff86fcfa9b8f6a4</anchor>
      <arglist>(MacroParameterList *)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; ModifierType &gt;</type>
      <name>getModifiersOfType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a5b27ccda936c1b9fa60093365eab616e</anchor>
      <arglist>(const ModifierList &amp;ml)</arglist>
    </member>
    <member kind="function">
      <type>Modifier::Ptr</type>
      <name>findModifierForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a92172060d5623ea1950e31e5879815da</anchor>
      <arglist>(ModifierList &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>findClipForState</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a424d915816fce94fb9af7c6c8c820e9d</anchor>
      <arglist>(ClipOwner &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>findClipForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aa17f7f539896c575f7648c9cd6f83a86</anchor>
      <arglist>(ClipOwner &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertClipWithState</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af122ceb01516fd8eab5dc1593e4bd6e9</anchor>
      <arglist>(ClipOwner &amp;, juce::ValueTree)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertClipWithState</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a40faa74c310138e5161006df65ea3bb0</anchor>
      <arglist>(ClipOwner &amp;, const juce::ValueTree &amp;stateToUse, const juce::String &amp;name, TrackItem::Type, ClipPosition, DeleteExistingClips, bool allowSpottingAdjustment)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertNewClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9183c8dc31634b574a600f302f235e4c</anchor>
      <arglist>(ClipOwner &amp;, TrackItem::Type, EditTimeRange)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertNewClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a8b511de0d9b08a840c2e962e3dfca076</anchor>
      <arglist>(ClipOwner &amp;, TrackItem::Type, const juce::String &amp;name, EditTimeRange)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>insertNewClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a18fb32af4e33560e0a9cc73a14736235</anchor>
      <arglist>(ClipOwner &amp;, TrackItem::Type, const juce::String &amp;name, ClipPosition)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; WaveAudioClip &gt;</type>
      <name>insertWaveClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a6fd956ff5def788e9dc7251151116225</anchor>
      <arglist>(ClipOwner &amp;, const juce::String &amp;name, const juce::File &amp;sourceFile, ClipPosition, DeleteExistingClips)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; WaveAudioClip &gt;</type>
      <name>insertWaveClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae2413335c05ce95535e854eec4549b2e</anchor>
      <arglist>(ClipOwner &amp;, const juce::String &amp;name, ProjectItemID sourceID, ClipPosition, DeleteExistingClips)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; MidiClip &gt;</type>
      <name>insertMIDIClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>abd32d137357fe1a9d6f324aba389fcf5</anchor>
      <arglist>(ClipOwner &amp;, const juce::String &amp;name, TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; MidiClip &gt;</type>
      <name>insertMIDIClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aca4d87704bf49e8728bc60c49bd0cb46</anchor>
      <arglist>(ClipOwner &amp;, TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; EditClip &gt;</type>
      <name>insertEditClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0ff69f1c4f08dcda37e0631c3ba0e68c</anchor>
      <arglist>(ClipOwner &amp;, TimeRange, ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Clip * &gt;</type>
      <name>deleteRegion</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a3816c134835e1a0752e3522b8c9342be</anchor>
      <arglist>(ClipOwner &amp;, TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Clip * &gt;</type>
      <name>deleteRegion</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac02c955b64cc8cabe1f86c6fb90c5e7a</anchor>
      <arglist>(Clip &amp;, TimeRange)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Clip * &gt;</type>
      <name>split</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ad52f63d32aaabe8b7e767e4f9c6183b4</anchor>
      <arglist>(ClipOwner &amp;, TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>split</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a6f33dc3327f6e53eb98c7e7f6c1f88fb</anchor>
      <arglist>(Clip &amp;, TimePosition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsAnyMIDIClips</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a1c2c64a9f961cf578fb0fd6175acef37</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ClipType * &gt;</type>
      <name>getClipsOfType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a04e2868f9a01a8d72610b9fc69be0c0e</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ClipType * &gt;</type>
      <name>getClipsOfTypeRecursive</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac6a69e00179990b2578fa4e566edd7bf</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMasterTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>afb324a5c0788c55450272935b6c8ef67</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTempoTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>afe9906c6968f309202ea1f319c032d9a</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAutomationTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a60ec9f68ae4b0d8ec6d65be121fc2d83</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAudioTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a79aa6cca822633b3a0b0cb7c589ddd7f</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFolderTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a72ef6d793d0c8c54bbebb85cf2a15783</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMarkerTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab3e0e2f5e2a5ba33dd4945400f02755f</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChordTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aca97f9000707b1cbe89b63a4819738d9</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isArrangerTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a844ae27339725c4a014b3f531fa7a4b3</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAudioTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aacebeb9301594bcbe97aaad9fb905787</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFolderTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ad99071613966ffc19e2180b5ef213968</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMarkerTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a5a5b6b174fb3924b4b94f5e568081200</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChordTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a16ce80c18cb2ff9311fabbb8f3bafa6a</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isArrangerTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac0fb3a8585f188b6cc703db29c2a80a9</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainMIDI</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a1ead560d6524f7008e20bf9a386a49cb</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canContainAudio</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a2327ec945ec11825d6481bb78777229d</anchor>
      <arglist>(const ClipOwner &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMovable</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a8298bd396d9de38aee1f38fc3fc4b67a</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOnTop</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4a884d27fad06ec84710c2ac9c370a38</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeInMidiSequence</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab8f56799a4714693459f833ae271131b</anchor>
      <arglist>(MidiClip &amp;, juce::MidiMessageSequence, TimeDuration offsetToApply, MidiList::NoteAutomationType)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>loadEditFromFile</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac0fcf69eb1498ff4218e53686dc7dd3a</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;, Edit::EditRole role=Edit::EditRole::forEditing)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>createEmptyEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aae825708f9508e570bc14043e71b4f0f</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>loadEditFromProjectManager</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4aa541258aaf959e9f971c99838bb16b</anchor>
      <arglist>(ProjectManager &amp;, ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>loadEditForExamining</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae31a86857c0dd8ae6d531ee4712dbb53</anchor>
      <arglist>(ProjectManager &amp;, ProjectItemID, Edit::EditRole role=Edit::EditRole::forExamining)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>loadEditFromFile</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4c99b6568e766dc5773cb8318a7140fc</anchor>
      <arglist>(Engine &amp;, const juce::File &amp;, ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>createEmptyEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab1efdc2396029ca68f24d5240f32bb24</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>updateLegacyEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab6e53d2a24df14d596b0070a7464171b</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateLegacyEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a36a997dc7770cea7e15e52017f2bf15c</anchor>
      <arglist>(juce::XmlElement &amp;editXML)</arglist>
    </member>
    <member kind="function">
      <type>Project::Ptr</type>
      <name>getProjectForEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aae466a389e8e35257870b2d94a63cf04</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ProjectItem::Ptr</type>
      <name>getProjectItemForEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a7f2114ad4120a4a61a2181770dd462f7</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getEditFileFromProjectManager</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a01d8465701b6f02e86c7fc1dbf5acfc3</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>referencesProjectItem</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a06a4e52427c2509c81ad566f92eebb45</anchor>
      <arglist>(Edit &amp;, ProjectItemID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpaceIntoEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0aba895236d5599b5d11024b69aaeff7</anchor>
      <arglist>(Edit &amp;, TimeRange timeRangeToInsert)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertSpaceIntoEditFromBeatRange</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a245654947a66c50d5f154678fad82800</anchor>
      <arglist>(Edit &amp;, BeatRange)</arglist>
    </member>
    <member kind="function">
      <type>EditItem *</type>
      <name>findEditItemForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac161742cea6307e65faa1c7cae07a9a1</anchor>
      <arglist>(Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>getAllTracks</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab6cb66f72b2ef86a854be852286e7d0a</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>getTopLevelTracks</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aeecc5778a8a18b5697926b6cb03f6d24</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; TrackType * &gt;</type>
      <name>getTracksOfType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0fa51010fccb2e5d435cfc9f8ae68018</anchor>
      <arglist>(const Edit &amp;, bool recursive)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AudioTrack * &gt;</type>
      <name>getAudioTracks</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a334f8daa6a3d18b9b9aa582e01817666</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ClipTrack * &gt;</type>
      <name>getClipTracks</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0e424e2f3ee228d21ac19fe16ef2d71d</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalNumTracks</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9558cf662d9c0f275cb68aec4d963ebf</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>findTrackForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a174ed4d1d54041b11ed8733d53a923d6</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>AudioTrack *</type>
      <name>findAudioTrackForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a19e1f7f399ecf97415c004c0a4f5b06d</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>findTracksForIDs</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a41ad308eb23192d8e7557b4ccc34f022</anchor>
      <arglist>(const Edit &amp;, const juce::Array&lt; EditItemID &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>findTrackForState</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab154fe33f4b982e2ebd9cba277c688f7</anchor>
      <arglist>(const Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>AudioTrack *</type>
      <name>getFirstAudioTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a54c78f52a67314cebbf40245571b180f</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>findAllTracksContainingSelectedItems</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a7acf40792562d425be01291016324887</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ClipTrack *</type>
      <name>findFirstClipTrackFromSelection</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a518e63ded1e8499e7f1ea9ccea6cb81b</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4fe5b2d92d83baa75ae2d868d9df8e70</anchor>
      <arglist>(const Edit &amp;, const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TrackOutput *</type>
      <name>getTrackOutput</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae068ee1a6295cb9d7a060f133e92083e</anchor>
      <arglist>(Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::BigInteger</type>
      <name>toBitSet</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a63cc17d19aca7fd9dd0835666e6a312a</anchor>
      <arglist>(const juce::Array&lt; Track * &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; Track * &gt;</type>
      <name>toTrackArray</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ad575b8b00deb9ca34d23a8a0ee8d592e</anchor>
      <arglist>(Edit &amp;, const juce::BigInteger &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; TrackItemType * &gt;</type>
      <name>getTrackItemsOfType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aeed6b8603d1bc17e7d90397ecd9234ac</anchor>
      <arglist>(const Track &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ClipOwner *</type>
      <name>findClipOwnerForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a65a7870026df98adea8a75be92c300dd</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>ClipSlot *</type>
      <name>findClipSlotForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aee1fceecfddb41842be4cc798a5d7002</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findClipSlotIndex</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a44d90c0517f23accae22a8c9106086dd</anchor>
      <arglist>(ClipSlot &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>findClipForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab6257fe64c38c421e5d57737c5ebfaf6</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Clip *</type>
      <name>findClipForState</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>abf9a9cea542a63b447f0d15e363c8be9</anchor>
      <arglist>(const Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae3612dab8a8fb905aa5479594db73f1a</anchor>
      <arglist>(const Edit &amp;, Clip *)</arglist>
    </member>
    <member kind="function">
      <type>Clip::Ptr</type>
      <name>duplicateClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a29558aac7e748a12adfbd8c944b92c07</anchor>
      <arglist>(const Clip &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitAllTrackItems</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a5ef0e3f57d6d2c81f6775a01dc2f210a</anchor>
      <arglist>(const Edit &amp;, std::function&lt; bool(TrackItem &amp;)&gt;)</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>getTimeRangeForSelectedItems</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a292da5c810ea5afeebbed87d205aff8a</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionOfTracks</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a87276f33e55502d367018ceaf052efa7</anchor>
      <arglist>(Edit &amp;, TimeRange rangeToDelete, bool onlySelectedTracks, CloseGap, SelectionManager *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionOfClip</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a7c6438cc2f31d066cb9b8924b408a68b</anchor>
      <arglist>(Clip &amp;, TimeRange rangeToDelete)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionOfSelectedClips</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9d319fb4fb956a5fba78c223ac1b81c6</anchor>
      <arglist>(SelectionManager &amp;, TimeRange rangeToDelete, CloseGap, bool moveAllSubsequentClipsOnTrack)</arglist>
    </member>
    <member kind="function">
      <type>SelectableList</type>
      <name>splitClips</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0ddaa472901ba7defc7ab640f9f2024b</anchor>
      <arglist>(const SelectableList &amp;clips, TimePosition time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveSelectedClips</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab505f520ae95a684bb81ae84e244c881</anchor>
      <arglist>(const SelectableList &amp;, Edit &amp;, MoveClipAction mode, bool alsoMoveAutomation)</arglist>
    </member>
    <member kind="function">
      <type>SelectableList</type>
      <name>getClipSelectionWithCollectionClipContents</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a18c1d8c7c001eda9903fd8ae833cf8e4</anchor>
      <arglist>(const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; ClipEffect * &gt;</type>
      <name>getAllClipEffects</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af93ad28d48d2939908d9b157f7b38822</anchor>
      <arglist>(Edit &amp;edit)</arglist>
    </member>
    <member kind="function">
      <type>MidiNote *</type>
      <name>findNoteForState</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a510e1ec7553e96ac2b794d514c20fc0d</anchor>
      <arglist>(const Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>mergeMidiClips</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a2823efb0387ec814c20b6e909981ceda</anchor>
      <arglist>(juce::Array&lt; MidiClip * &gt;, SelectionManager *sm=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>juce::OwnedArray&lt; MidiList &gt;</type>
      <name>readFileToMidiList</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a46ce0ca0a1577de863b7b33aa56c8f0c</anchor>
      <arglist>(juce::File midiFile, bool importAsNoteExpression)</arglist>
    </member>
    <member kind="function">
      <type>MidiClip::Ptr</type>
      <name>createClipFromFile</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae1026d32121b7f187f3b5056874913c3</anchor>
      <arglist>(juce::File midiFile, ClipOwner &amp;, bool importAsNoteExpression)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Array</type>
      <name>getAllPlugins</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae63b847e91e8ee3378257dcd5ee26b98</anchor>
      <arglist>(const Edit &amp;, bool includeMasterVolume)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>findPluginForState</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a6d007b1f094b948fc258ffb1851de950</anchor>
      <arglist>(const Edit &amp;, const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Plugin::Ptr</type>
      <name>findPluginForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a8548c91b6648c728aa54b714b7f66b1a</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrackContainingPlugin</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a08444a5db0c5e4ad726127cdaeda2e0e</anchor>
      <arglist>(const Edit &amp;, const Plugin *)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areAnyPluginsMissing</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a345db08141a6bde661fcf0e920d1aebd</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; RackInstance * &gt;</type>
      <name>getRackInstancesInEditForType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9444b1a46e10f4c32c92c78c73b08520</anchor>
      <arglist>(const RackType &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>muteOrUnmuteAllPlugins</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aac0bf73a3ae386875f6df57b46881b14</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>midiPanic</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>abec75e330b13aa6aa67643a4d5d14be3</anchor>
      <arglist>(Edit &amp;, bool resetPlugins)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedObjectPtr&lt; PluginType &gt;</type>
      <name>insertNewPlugin</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab06103f2b654c81b0f74d2f567d8e7f9</anchor>
      <arglist>(Track &amp;, int index=0)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomatableEditItem * &gt;</type>
      <name>getAllAutomatableEditItems</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ad10842488931c334cadac593a7dfafb0</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteAutomation</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a1d375ae29d2e69f2120865b3820b2b8a</anchor>
      <arglist>(const SelectableList &amp;selectedClips)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AutomatableParameter::ModifierSource * &gt;</type>
      <name>getAllModifierSources</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a635c4b7ae6bc0d9fae26bd1e386e4945</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::ReferenceCountedArray&lt; Modifier &gt;</type>
      <name>getAllModifiers</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab7790bddd5194fe7abc1a68b0543298a</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ModifierType::Ptr</type>
      <name>findModifierTypeForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a5e66c2037c8694f26ec95b10ebc083e2</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Modifier::Ptr</type>
      <name>findModifierForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a7448489352bb5af8530fc78d411032ac</anchor>
      <arglist>(const Edit &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Modifier::Ptr</type>
      <name>findModifierForID</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aedee9c54b7ee6c0d8f6cc4992eb596a7</anchor>
      <arglist>(const RackType &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>Track *</type>
      <name>getTrackContainingModifier</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab67dc8afa8d56759d90ddd9cfe0b283b</anchor>
      <arglist>(const Edit &amp;, const Modifier::Ptr &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; MacroParameterList * &gt;</type>
      <name>getAllMacroParameterLists</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab0bce96fb9edf8a48796f7c4cab119a2</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; MacroParameterElement * &gt;</type>
      <name>getAllMacroParameterElements</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac5c6acfd3b9bffb885bbf237a6cb8e91</anchor>
      <arglist>(const Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance::RecordingParameters</type>
      <name>getDefaultRecordingParameters</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac03348f3bb8498dad4e90b3ec3ef0546</anchor>
      <arglist>(const EditPlaybackContext &amp;, TimePosition playStart, TimePosition punchIn)</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>prepareAndPunchRecord</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aa12a1f79f693581dc59030621679ca79</anchor>
      <arglist>(InputDeviceInstance &amp;, EditItemID)</arglist>
    </member>
    <member kind="function">
      <type>tl::expected&lt; Clip::Array, juce::String &gt;</type>
      <name>punchOutRecording</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a2e5dbe7fc65c310e91306ecc8f6af588</anchor>
      <arglist>(InputDeviceInstance &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRecording</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab909bad277a9242846beb493f99bd48d</anchor>
      <arglist>(EditPlaybackContext &amp;)</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance::Destination *</type>
      <name>assignTrackAsInput</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af2738f3ef9ba3cd1b1b2971226ad5be9</anchor>
      <arglist>(AudioTrack &amp;destinationTrack, const AudioTrack &amp;sourceTrack, InputDevice::DeviceType)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getLaunchQTypeChoices</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae80ed07c6e97b66ae96f72b6f501e252</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; LaunchQType &gt;</type>
      <name>launchQTypeFromName</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a22dad481cfb530163435ae114fdea618</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a1391e7da8a21eb9a58d872aea23fbf7a</anchor>
      <arglist>(LaunchQType)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>toBarFraction</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a152ce69edd7a1fa4f268fd2ce95d4124</anchor>
      <arglist>(LaunchQType) noexcept</arglist>
    </member>
    <member kind="function">
      <type>LaunchQType</type>
      <name>fromBarFraction</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab49d21c2223bd6644f185d3b874f90d2</anchor>
      <arglist>(double) noexcept</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getNext</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a38d6efbf9bca006f913c9cc016c6f41a</anchor>
      <arglist>(LaunchQType, const TempoSequence &amp;, BeatPosition) noexcept</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>getNext</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a633b812c19677c2239936bfc5570a886</anchor>
      <arglist>(LaunchQType, const tempo::Sequence &amp;, BeatPosition) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a09a6841a3e10b92f78ed1b26ecc861e0</anchor>
      <arglist>(const PitchSetting &amp;p1, const PitchSetting &amp;p2) noexcept</arglist>
    </member>
    <member kind="function">
      <type>tempo::Sequence::Position</type>
      <name>createPosition</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a564f980e2aa5935966c9c451de04fe57</anchor>
      <arglist>(const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>toBeats</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a86078b4c3af1bab0fa8e6f4c4d4c0016</anchor>
      <arglist>(TimePosition, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>toTime</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae67adc128e2ee1d34bd1fef7f21ef1ab</anchor>
      <arglist>(BeatPosition, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>BeatRange</type>
      <name>toBeats</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>afdd970102e969ca364b3574d489443a2</anchor>
      <arglist>(TimeRange, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>toTime</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4d5db5c71d7218e346355032823c042c</anchor>
      <arglist>(BeatRange, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TimePosition</type>
      <name>toTime</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a005c43559d1f8fa64e7156227147539a</anchor>
      <arglist>(EditTime, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>BeatPosition</type>
      <name>toBeats</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a584d4ba3c883672c2bead4d1ba40c6bf</anchor>
      <arglist>(EditTime, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>toTime</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0ac4ae904f79527089472a38e84288d7</anchor>
      <arglist>(EditTimeRange, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>BeatRange</type>
      <name>toBeats</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a53677fe52b2e7d61d34e343b70ad2c70</anchor>
      <arglist>(EditTimeRange, const TempoSequence &amp;)</arglist>
    </member>
    <member kind="function">
      <type>ClipPosition</type>
      <name>createClipPosition</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a98835e892f35befe2365f84e884eee31</anchor>
      <arglist>(const TempoSequence &amp;, TimeRange, TimeDuration offset={})</arglist>
    </member>
    <member kind="function">
      <type>ClipPosition</type>
      <name>createClipPosition</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af998faa7c14d93fa2450d16c0accacc0</anchor>
      <arglist>(const TempoSequence &amp;, BeatRange, BeatDuration offset={})</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>countNumTracks</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a2a50aef21e8360a45b96daa81e6b1b96</anchor>
      <arglist>(const juce::ValueTree &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveAutomation</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9524435c5c2eed1256ff4f22793a54aa</anchor>
      <arglist>(const juce::Array&lt; TrackAutomationSection &gt; &amp;, TimeDuration offset, bool copy)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findIndexOfNextItemAt</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a3d25fb562b57876499b384ac8189a42d</anchor>
      <arglist>(const ArrayType &amp;items, TimePosition time)</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>findUnionOfEditTimeRanges</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab45ad0d328dc7d71bc055f042604c528</anchor>
      <arglist>(const ArrayType &amp;items)</arglist>
    </member>
    <member kind="function">
      <type>TimeRange</type>
      <name>toTimeRange</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9036be9d384990705b8e9ea7af9b75ad</anchor>
      <arglist>(legacy::EditTimeRange r)</arglist>
    </member>
    <member kind="function">
      <type>legacy::EditTimeRange</type>
      <name>toEditTimeRange</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae758e56a7e1a7ce32da92d3eb320a869</anchor>
      <arglist>(TimeRange r)</arglist>
    </member>
    <member kind="function">
      <type>AudioNode *</type>
      <name>createTrackCompAudioNode</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a7d04cde27fc699e121b5f504138e3745</anchor>
      <arglist>(AudioNode *input, const juce::Array&lt; legacy::EditTimeRange &gt; &amp;muteTimes, const juce::Array&lt; legacy::EditTimeRange &gt; &amp;nonMuteTimes, double crossfadeTime)</arglist>
    </member>
    <member kind="function">
      <type>AudioNode *</type>
      <name>createTrackCompAudioNode</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9b8e25a345220d85979a8bd0d82ec32b</anchor>
      <arglist>(AudioNode *input, const juce::Array&lt; TimeRange &gt; &amp;muteTimes, const juce::Array&lt; TimeRange &gt; &amp;nonMuteTimes, TimeDuration crossfadeTime)</arglist>
    </member>
    <member kind="function">
      <type>AudioNode *</type>
      <name>createAudioNode</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ad89810c74bb8915dd6515060cdf9b48b</anchor>
      <arglist>(TrackCompManager::TrackComp &amp;trackComp, Track &amp;t, AudioNode *input)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; std::pair&lt; AudioTrack *, int &gt; &gt;</type>
      <name>getTargetTracksAndIndexes</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aa07b81b67faf6bfdcd599ce7a09de387</anchor>
      <arglist>(InputDeviceInstance &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; AudioTrack * &gt;</type>
      <name>getTargetTracks</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae51b18b7d4da819a2ca23ca636d72fd2</anchor>
      <arglist>(InputDeviceInstance &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOnTargetTrack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a76ef6c74bbdae7ebf1518ab31fec952e</anchor>
      <arglist>(InputDeviceInstance &amp;, const Track &amp;, int idx)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAttached</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a32c58952e58529d27bac31c7d29dd8b0</anchor>
      <arglist>(InputDeviceInstance &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::Result</type>
      <name>clearFromTargets</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4ffb1db47ff5013cf386ef9bdd61a7b5</anchor>
      <arglist>(InputDeviceInstance &amp;, juce::UndoManager *)</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance::Destination *</type>
      <name>getDestination</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a5a7efd9a3159373fd2135fca298c4f6e</anchor>
      <arglist>(InputDeviceInstance &amp;, const Track &amp;track, int index)</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance::Destination *</type>
      <name>getDestination</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a172660cb030d260e7e153441b4ab9c63</anchor>
      <arglist>(InputDeviceInstance &amp;, const ClipSlot &amp;)</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance::Destination *</type>
      <name>getDestination</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac57c3124fc8b729515ca60ca054bdc9f</anchor>
      <arglist>(InputDeviceInstance &amp;, const juce::ValueTree &amp;destinationState)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasErrors</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a72a847da65b887222836b9349292eedd</anchor>
      <arglist>(const InputDeviceInstance::PreparedContext &amp;pc)</arglist>
    </member>
    <member kind="function">
      <type>InputDeviceInstance::PreparedContext &amp;</type>
      <name>append</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae274e8faf731a5250d52c65e2a14c26f</anchor>
      <arglist>(InputDeviceInstance::PreparedContext &amp;dest, InputDeviceInstance::PreparedContext &amp;&amp;src)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::vector&lt; std::unique_ptr&lt; InputDeviceInstance::RecordingContext &gt; &gt;, juce::StringArray &gt;</type>
      <name>extract</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a36bd6c662b8613ecbcaf3d0fce1df1ed</anchor>
      <arglist>(InputDeviceInstance::PreparedContext &amp;&amp;pc)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>createDescriptionOfChannels</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a65a4a5fe4542e142e5d26cb4f222ce7f</anchor>
      <arglist>(const std::vector&lt; ChannelIndex &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioChannelSet</type>
      <name>createChannelSet</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a3c8112780d46e17c9850daf533cebc42</anchor>
      <arglist>(const std::vector&lt; ChannelIndex &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioChannelSet::ChannelType</type>
      <name>channelTypeFromAbbreviatedName</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a440427617e36d5762e2430245429a2b6</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioChannelSet</type>
      <name>channelSetFromSpeakerArrangmentString</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a8210dd18b3030c9c7c629b60322467c7</anchor>
      <arglist>(const juce::String &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; tracktion::graph::Node &gt;</type>
      <name>createNodeForEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae6bd635dfddd3f1d7e8c2a1eba9f82f2</anchor>
      <arglist>(EditPlaybackContext &amp;, std::atomic&lt; double &gt; &amp;audibleTimeToUpdate, const CreateNodeParams &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; tracktion::graph::Node &gt;</type>
      <name>createNodeForEdit</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4eae39e9fec55c44c6b5390321027eea</anchor>
      <arglist>(Edit &amp;, const CreateNodeParams &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toStart</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a88daee5561f65d71651ea3ed879d1835</anchor>
      <arglist>(TransportControl &amp;, const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toEnd</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a98b2f38d48ccc0a562f6e16ed1ffbe87</anchor>
      <arglist>(TransportControl &amp;, const SelectableList &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tabBack</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae29ce2e0dedff20542eb9343c76a6f96</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tabForward</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae48bb055ba87d22654520a4fc6a1d00f</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markIn</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>adb01a768216c31447b18ab2e3ce2a11f</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markOut</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a7ff0c9d1cbc64b226f11351cf835d63a</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrub</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af99084ce0af88559fff4b7dfe80baf72</anchor>
      <arglist>(TransportControl &amp;, double unitsForwards)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freePlaybackContextIfNotRecording</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a932b2a0eb111cb020335f88ec52eac04</anchor>
      <arglist>(TransportControl &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>float2string</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a638e70e2ab56fe6577ba34b38e5b9fc2</anchor>
      <arglist>(float f, char *text, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>int2string</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0f50efa6bb6c0a2811ebe90c93c9be75</anchor>
      <arglist>(float i, char *text, int len)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dB2string</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae1bfebc47422a24cc0e7aee07d90b962</anchor>
      <arglist>(float value, char *text, int maxLen)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getCmajorVersion</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a42453812204c457c55e8b236454830e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; juce::AudioPluginFormat &gt;</type>
      <name>createCmajorPatchPluginFormat</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a2cd1396b493761f883570b33eac59653</anchor>
      <arglist>(Engine &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCmajorPatchPluginFormat</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af6edb5eef7031809593f6169f1568109</anchor>
      <arglist>(const juce::PluginDescription &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCmajorPatchPluginFormat</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4feb875d4a7298314f3ec8929af84ae1</anchor>
      <arglist>(const juce::String &amp;formatName)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getCmajorPatchPluginFormatName</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ad6b7ea2657f84ff48290beffd5fd829f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getCmajorPatchCompileError</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>abd4073f3c724245e29625644452d76eb</anchor>
      <arglist>(Plugin &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>createIdentifierString</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a736ab1213342cd9dd0b5677ab5fb391a</anchor>
      <arglist>(const juce::PluginDescription &amp;)</arglist>
    </member>
    <member kind="function">
      <type>SearchOperation *</type>
      <name>createSearchForKeywords</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a3cda81c803722385e76aa065bfe880ff</anchor>
      <arglist>(const juce::String &amp;keywords)</arglist>
    </member>
    <member kind="function">
      <type>AudioTrack *</type>
      <name>getOrInsertAudioTrackNearestIndex</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a2c2fc20eca6d70248deda9a9b8da4164</anchor>
      <arglist>(Edit &amp;edit, int trackIndex)</arglist>
    </member>
    <member kind="function">
      <type>SafeSelectable&lt; SelectableType &gt;</type>
      <name>makeSafeRef</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9a916ab6aa43f5cd75071dc3910e537e</anchor>
      <arglist>(SelectableType &amp;selectable)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>makeSafeVector</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ad816a0b77df0e6473b704191ada77091</anchor>
      <arglist>(const Iterable &amp;selectables) -&gt; std::vector&lt; SafeSelectable&lt; typename std::remove_reference&lt; decltype(*selectables[0])&gt;::type &gt;&gt;</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>callBlocking</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0292b1e3fc9926303224136c8acba0fc</anchor>
      <arglist>(std::function&lt; void()&gt; f)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dbToGain</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9959a561e577cc680f7ccc85145f0a8c</anchor>
      <arglist>(float db) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>gainToDb</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ad40eb09e57907af7a7191f8ac0fcb808</anchor>
      <arglist>(float gain) noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>gainToDbString</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a58fab54f7bb273b92e814312623469d5</anchor>
      <arglist>(float gain, float infLevel=-96.0f, int decPlaces=2)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dbStringToDb</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab4d2ef3ea81e550a97b0a99444bbd64a</anchor>
      <arglist>(const juce::String &amp;dbStr)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>dbStringToGain</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aaf32eee29d8f5033577799995ae4ecce</anchor>
      <arglist>(const juce::String &amp;dbStr)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getPanString</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a398e344b7234c1c5fe64b8da9ffb4597</anchor>
      <arglist>(float pan)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getSemitonesAsString</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a2bc451413f55e020c348804f5055fbdd</anchor>
      <arglist>(double semitones)</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>midiNoteToFrequency</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>adabb2b17dda824c467b22214ee9249eb</anchor>
      <arglist>(FloatType midiNote)</arglist>
    </member>
    <member kind="function">
      <type>FloatType</type>
      <name>frequencyToMidiNote</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af7b3517b18082e90e83061a3eb5f49b8</anchor>
      <arglist>(FloatType freq)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanitiseValues</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a1c05be5a2c59651a6def70ac3a09e7be</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;, int startSample, int numSamples, float maxAbsValue, float minAbsThreshold=1.0f/262144.0f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAntiDenormalisationNoise</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a8b26e17ae901ef258ce6e7333b7a3aa9</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;, int start, int numSamples) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetFP</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a25e75fe73cd04a87734130dae55caf33</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFloatingPointDenormaliseOccurred</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a36273c4a3f8cff9873a523394e4f6ea1</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zeroDenormalisedValuesIfNeeded</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ad43685ffed5afbfeb8551d522233e0a4</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAudioDataAlmostSilent</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae2ec74f20c24fa966e1a1349c80c0c68</anchor>
      <arglist>(const float *data, int num)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getAudioDataMagnitude</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae57ebbb60fa2b187fd97ef7d811aa51f</anchor>
      <arglist>(const float *data, int num)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertIntsToFloats</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aae8f18d4d3c1e14b29450751d05c3c14</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertFloatsToInts</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab814d7c671ef5a64d9303c9cca7a4e4c</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yieldGUIThread</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a46088c3176177549ed24a5f75e59bbb7</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::BufferView&lt; SampleType, choc::buffer::SeparateChannelLayout &gt;</type>
      <name>toBufferView</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a3f2501a80903044874931a048b231e11</anchor>
      <arglist>(juce::AudioBuffer&lt; SampleType &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>PanLaw</type>
      <name>getDefaultPanLaw</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aba1426996eca5c89d11cfc8e1b4fb8bf</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultPanLaw</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a7a86651567d8754cdbc66448fcde7a13</anchor>
      <arglist>(PanLaw)</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getPanLawChoices</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a257fe29968d8029ec65d28828b4c5ae6</anchor>
      <arglist>(bool includeDefault) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>decibelsToVolumeFaderPosition</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a3f9466b1fcbb874d7564f2f1347cb7fa</anchor>
      <arglist>(float dB) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>volumeFaderPositionToDB</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a32253fa191a31ade818aab6097ad15de</anchor>
      <arglist>(float position) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>volumeFaderPositionToGain</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a561e06eef999d0be41dadaf9d697d49d</anchor>
      <arglist>(float position) noexcept</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>gainToVolumeFaderPosition</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a20c0770b5297330da94fb6dd1da93a14</anchor>
      <arglist>(float gain) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGainsFromVolumeFaderPositionAndPan</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>acc616046aabb4e54c97e940ca2a2f416</anchor>
      <arglist>(float volSliderPos, float pan, PanLaw lawToUse, float &amp;leftGain, float &amp;rightGain) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearChannels</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af548704ab6e2b2670245cbfa956a9b0f</anchor>
      <arglist>(juce::AudioBuffer&lt; float &gt; &amp;buffer, int startChannel, int endChannel=-1, int startSample=0, int endSample=-1)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioPlayHead::CurrentPositionInfo</type>
      <name>getCurrentPositionInfo</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae2258f5d9cc2f0c1ab6e145664edb5f0</anchor>
      <arglist>(Edit &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>synchroniseEditPosition</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a8ae9d5497d4841c8d300db949c2ae3b0</anchor>
      <arglist>(Edit &amp;, const juce::AudioPlayHead::CurrentPositionInfo &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMidiFile</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a6af924a2c93c8c790b2f47f8b268aeea</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTracktionEditFile</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab23b7d701da3deada9bf714c16c2d175</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTracktionArchiveFile</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9de14a25ce140ee0870053c2d5e52685</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTracktionProjectFile</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>acccc63b0df9c7d5a0fba45d43be6e564</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTracktionPresetFile</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aa73b9395c9b79c25a3e249006ef6bcb9</anchor>
      <arglist>(const juce::File &amp;)</arglist>
    </member>
    <member kind="function">
      <type>juce::File</type>
      <name>getNonExistentSiblingWithIncrementedNumberSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a5c7e43f5dfde80d18d12d8d661970b63</anchor>
      <arglist>(const juce::File &amp;, bool addHashSymbol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSortedListToMenu</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>abebe09ff2579cd31c4dc6cdc25d01318</anchor>
      <arglist>(juce::PopupMenu &amp;m, juce::StringArray names, int startID)</arglist>
    </member>
    <member kind="function">
      <type>juce::AffineTransform</type>
      <name>getScaleAroundCentre</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a710c9d4dc28b809b518cf34843233807</anchor>
      <arglist>(juce::Rectangle&lt; float &gt; r, float numPixels)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveXMLAttributeToStart</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>acfcf46ac54828204be2e06366050319a</anchor>
      <arglist>(juce::XmlElement &amp;xml, juce::StringRef att)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeIf</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4aa00742c535ee0c6c342c0ae0b8dad4</anchor>
      <arglist>(Vector &amp;v, Predicate &amp;&amp;pred)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>almostEqual</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a64829bb587e21890e5a821bec24b43a0</anchor>
      <arglist>(FloatingPointType firstValue, FloatingPointType secondValue, FloatingPointType precision=(FloatingPointType) 0.00001)</arglist>
    </member>
    <member kind="function">
      <type>MonotonicBeatRange</type>
      <name>getMonotonicBeatRange</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af597851a9154530afddc3ddbd28cfb96</anchor>
      <arglist>(const SyncRange &amp;)</arglist>
    </member>
    <member kind="function">
      <type>BeatRange</type>
      <name>getBeatRange</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ab4f7df059bcfb9e4e9e7870c6d65e534</anchor>
      <arglist>(const SyncRange &amp;)</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getNumSamples</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae85f2d84aff184bf9c6d40e3bd3bcdb7</anchor>
      <arglist>(const SyncRange &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertPropertyToType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a47184c19d1ade74fc5e926a1d147ffe5</anchor>
      <arglist>(juce::ValueTree &amp;v, const juce::Identifier &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>matchesAnyOf</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aee0a9ef3d9926b450bc94d6f5d0f84b7</anchor>
      <arglist>(const Type &amp;needle, const std::initializer_list&lt; Type &gt; &amp;haystack)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>forEachItem</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a3d9878b62133b71510093f2f3eae0c7a</anchor>
      <arglist>(const juce::Array&lt; Type * &gt; &amp;items, const UnaryFunction &amp;fn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addValueTreeProperties</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a86ff4c6886cc9a39cc77c7f74bc9757c</anchor>
      <arglist>(juce::ValueTree &amp;v, const juce::Identifier &amp;name, const juce::var &amp;value, Others &amp;&amp;... others)</arglist>
    </member>
    <member kind="function">
      <type>juce::ValueTree</type>
      <name>createValueTree</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a3145152f582f07457d66eae07ce03858</anchor>
      <arglist>(const juce::Identifier &amp;name, Properties &amp;&amp;... properties)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; juce::ValueTree &gt; &amp;</type>
      <name>removeInvalidValueTrees</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a866cd9a4c66405e8026491910731bdbc</anchor>
      <arglist>(juce::Array&lt; juce::ValueTree &gt; &amp;trees)</arglist>
    </member>
    <member kind="function">
      <type>juce::Array&lt; juce::ValueTree &gt;</type>
      <name>getTreesOfType</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a511e77d2cba152cb03dd2f822d459ec0</anchor>
      <arglist>(const juce::Array&lt; juce::ValueTree &gt; &amp;trees, const juce::Identifier &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getChildTreesRecursive</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a2f69093e597e76c0308dadb3180e24ed</anchor>
      <arglist>(juce::Array&lt; juce::ValueTree &gt; &amp;result, const juce::ValueTree &amp;tree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renamePropertyRecursive</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0ae869b93cf61cf1b6ba878969835267</anchor>
      <arglist>(juce::ValueTree &amp;tree, const juce::Identifier &amp;oldName, const juce::Identifier &amp;newName, juce::UndoManager *um)</arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>projectFileSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aaff412cade0bbcac962443d37d1d5413</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>editFileSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0750dbba2385d572c1502dc7550e2482</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>legacyEditFileSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a0467400787bf63c0d686fbf7cd4965f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>archiveFileSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a4a57d4ccc7a6105b30617b7409fa0db4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>soundFileWildCard</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a6df817fa28f72fc287d52a5380e14902</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>soundFileAndMidiWildCard</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac6f605889215895e37653dfaf67b2f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>midiFileWildCard</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aee430ae9d89a39a9dfd3be6ba7b75420</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>soundFileExtensions</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a5a649c510bb473e9cc542992a4d3b77b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>soundFileAndMidiExtensions</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a41b18766cfb995284cab2f45378c3e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>midiFileExtensions</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>af95cea2db8943a48c156f92057694b17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>keyMapWildCard</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac099f7fa922c71a9e5025d30bf4844bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>keyMapSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a9cbbe3be6814817ff65ab8f1ea2a5ba4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>customControllerFileSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a925f48dc4ba64d01138085de0ccfc594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>customProgramSetWildcard</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a7f5c0e8824cf4145c9df20f4dff64f12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>customProgramSetFileSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ae5e5ab3dd625719faeb2e6971c10ae88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>presetFileSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a758bdf59ac7b3ffb8d675a4c935b3e6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>rackFileSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>ac368b7dafe38a687e216248ea378d8a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>scriptFileSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aca5fadaa571a81385795c6118ee95e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>grooveTemplateSuffix</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a965c7297def4170f8ccbc7f1d196ee9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *const</type>
      <name>grooveTemplateWildCard</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>aac88c92680ea1928e7f326675a261ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>concept</type>
      <name>WeakReferenceable</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>abf177de2e03ea68a9c3c4da1dffd47da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr HertzTag</type>
      <name>HertzTag_t</name>
      <anchorfile>namespacetracktion_1_1engine.html</anchorfile>
      <anchor>a96a975d8e8f2a0ca68dbad80e28c153e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion::engine::AppFunctions</name>
    <filename>namespacetracktion_1_1engine_1_1AppFunctions.html</filename>
    <member kind="function">
      <type>void</type>
      <name>cut</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a47e075e91e0b761b350425d3c4bd372e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a1a5187c6f2ed5dd86cf91647b8071a0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>paste</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ad0e271c18c789de8cd873153e16ff6c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pasteIntoProject</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ae2bb6cb48a71a04bf6f1deedf3892f8a</anchor>
      <arglist>(Project &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertPaste</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a046284c39db5f0af27f805908de004c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteSelected</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a2879abb2cffeb84dc4507c7fca646712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegion</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a94c8b4b88034add92328c01d6e1131ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionAndCloseGapFromSelected</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ac7261edf974453fb2d5b2b286380aebb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRegionAndCloseGap</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a46caffa99c7b3a1c97d8a1a2890f7f28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>goToStart</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a083cf56e92f2d2298e4ba0f9590b59ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>goToEnd</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a89db14c3973508e888a01dbe30d48afd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markIn</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>aa5f914a1772ef5bb704e0450c7fef70f</anchor>
      <arglist>(bool forceAtCursor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markOut</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>afd0acb05880427d6400d52d0fd809fe0</anchor>
      <arglist>(bool forceAtCursor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>aaed7799fceb937ffd101296baa7f765e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a63b4a8754aa2e0d3c17c1ed837223c30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startStopPlay</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a51d62237577de6d43b2997a76bf6fee0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>continueStopPlay</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a747d9ab5dd2c737229968889f1fdd31c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>record</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ac5c46ae9a6660ed9edb210a9c8d2df63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleTimecode</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>aabc5fa9a155947a706c914fb6258f227</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleLoop</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>abd79c0a82fd9c7447ff367dacc105d71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>togglePunch</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a09b098230e536ce238fd24d7aeed36a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleSnap</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a3a9bb6a14f5c346ba897b02d770da824</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleClick</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a62e21adb9922b2f4762aaf0dc9b0c15e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleMidiChase</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a1ddf7afa21695cd79bac3028c74d94a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tabBack</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a1a9e527173891f1543e919268b45cac7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tabForward</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a8f4271138f9c2de01bea187453bb27bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeUp</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a2dc425eaf32a9c81e5e2c86c3d1e3d48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeDown</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a97e48ef7ae95dcd9bd10fb37d3a19608</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeLeft</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a995680b7f4587789716bd85a1672257f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nudgeRight</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>afbb54f96944464361c22b2659abe0fad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomIn</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>aafae0e2c20071bd56333dc71d1a39167</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomOut</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a293ee513eb553c2cf1319687ba215a09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksUp</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a4bd83e6c21fafe32730c17a57afe12fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksDown</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a900513ec122f982f5a2355733a25f28f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksLeft</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a9bab039c0b701ac60e8b2e5ecb04c907</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scrollTracksRight</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a18b79f0f97fa138fd3df2dc0e8c39435</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleEndToEnd</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ae3a18ac76042971f8f6b72d82210a8d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveEdit</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a3b806ef00d08303b7dd2392a1c24dded</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveEditAs</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ad31a22647d2729e1bfd5b9bd9f96953d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>armOrDisarmAllInputs</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a8e6e5eb289b40216745a4d95981e5f5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>goToMarkIn</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a6cb752ce8b440bfe5869f0524b805c84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>goToMarkOut</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a844b8334c044714c5b82ab572fe718dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomTracksIn</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ae5e68f54e5fae85c307942d749f71d41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomTracksOut</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a45ef96a909913140a7f66d69253f3ce0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomToFitVertically</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ac47a78e5412b27ce7e84da484be626a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomToFitHorizontally</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ad7b7a75edfe9e92a18f065b6bc13fb0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomToFitAll</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>af276b63ba0396c69152aa9e44b90e27e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zoomToSelection</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>aa1ce19d04351b77315e6438f990ea5aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveToNextMarker</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a0e83e7af6ded3800e23e6a754b56e35c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>moveToPrevMarker</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a02e8ace5c7609597657f942294b12638</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redo</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ae5ded825ecc77b42f98ed869a8ca5d9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>undo</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>abcad4ccf4c833968037a2f80581ddbe9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleScroll</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a3835888531cb22ed1859327c7a252301</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isScrolling</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a489bde023ab028fbb32fc8460c27a82d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopRecordingAndDiscard</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a7e6f7150a707371cd6f479732567345e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopRecordingAndRestart</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a5b52edc5f5a49050d295fe0df322329b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertTempoChange</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a56b27e1a20e6052a2d62add7a420ccee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertPitchChange</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a112fc30dda781c7491f5e4e964685e84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertTimeSigChange</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a695d1b580f5423b619de49e562c82617</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertChord</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a21d1cb1e49fe182b3cd5ef64d5c53437</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideVideo</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a4b61314fefc597fd16f1e979bc3f1c6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideMixer</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a9e0dfbe937e9e63f7b2205c0da680573</anchor>
      <arglist>(bool fs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideMidiEditor</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>aeba0870c6695a4ec6c59cb7f9fa0f84d</anchor>
      <arglist>(bool fs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideTrackEditor</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>aaad4825d1d9d50ea4d702c93059e1ee0</anchor>
      <arglist>(bool zoom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideBrowser</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a0f9f62c3b44d3bf462aa128853741f21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideActions</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>ae4addb706392c3b4b37a1e8d11b59842</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>performUserAction</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a632d12c1d521fe57d5609ba9f1d72650</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideAllPanes</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a782128b64e43af7f5070ec7cd3feac9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>split</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>af8e29bda14e7bb06099e1f69219133eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleAutomationReadMode</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a00f1620f16212cd23ae2096979363733</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleAutomationWriteMode</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a9c193039f34c5cb78090d3f99249527f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideBigMeters</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a086ca3a3f9c3d9436e510ae8a04aa7e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideInputs</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a23aba953b8377f2c0d3af8fb9f623e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showHideOutputs</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>afc93748f1d96893407da61d5f01d08cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showProjectScreen</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a6b1047f0641204420b3c861539f38e0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showSettingsScreen</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a5f0de7c91eba63572cd01c8e8adfb824</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showEditScreen</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a56baed5859a00bfbe4813cfb6e8012a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetOverloads</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a9ed970e0b6d1981b84541607d8953ad6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetPeaks</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a53a7d53debc332f64c3870edb6e83a54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toggleTrackFreeze</name>
      <anchorfile>namespacetracktion_1_1engine_1_1AppFunctions.html</anchorfile>
      <anchor>a201e3c8446b3dd47bd06443a160c0832</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion::engine::benchmark_utilities</name>
    <filename>namespacetracktion_1_1engine_1_1benchmark__utilities.html</filename>
    <class kind="struct">tracktion::engine::benchmark_utilities::BenchmarkOptions</class>
    <member kind="enumeration">
      <type></type>
      <name>MultiThreaded</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>acbaa9c9a2c7b9d5a33c3dbc121968924</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine_1_1benchmark__utilities.html" anchor="acbaa9c9a2c7b9d5a33c3dbc121968924a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine_1_1benchmark__utilities.html" anchor="acbaa9c9a2c7b9d5a33c3dbc121968924aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LockFree</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a63fd5578b92c0d393e77aa155a9bff96</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine_1_1benchmark__utilities.html" anchor="a63fd5578b92c0d393e77aa155a9bff96a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine_1_1benchmark__utilities.html" anchor="a63fd5578b92c0d393e77aa155a9bff96aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PoolMemoryAllocations</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>af922dd3f8b06e0e8071049c5aeedbdbb</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine_1_1benchmark__utilities.html" anchor="af922dd3f8b06e0e8071049c5aeedbdbba7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine_1_1benchmark__utilities.html" anchor="af922dd3f8b06e0e8071049c5aeedbdbbaa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ShareNodeMemory</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a1dc131828611e7721cdc0a42d0037477</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1engine_1_1benchmark__utilities.html" anchor="a1dc131828611e7721cdc0a42d0037477a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion_1_1engine_1_1benchmark__utilities.html" anchor="a1dc131828611e7721cdc0a42d0037477aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getDescription</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a8cf478f9c5d50516e6c090e45df1ca72</anchor>
      <arglist>(const BenchmarkOptions &amp;opts)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; tracktion::graph::Node &gt;</type>
      <name>createNode</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a809cbe0aa6c772ad109f5b6abd15101e</anchor>
      <arglist>(Edit &amp;edit, ProcessState &amp;processState, double sampleRate, int blockSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prepareRenderAndDestroy</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a7f081772c3cd7b989ef01dc14fdac28c</anchor>
      <arglist>(juce::UnitTest &amp;ut, juce::String editName, juce::String description, tracktion::graph::test_utilities::TestProcess&lt; NodePlayerType &gt; &amp;testContext, tracktion::graph::PlayHeadState &amp;playHeadState, MultiThreaded isMultiThreaded)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderEdit</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a158071b552b0459b735802e21257c0ac</anchor>
      <arglist>(juce::UnitTest &amp;ut, BenchmarkOptions opts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>renderEdit</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>af671b2ddaa26f86d942155fc547af7af</anchor>
      <arglist>(juce::UnitTest &amp;ut, juce::String editName, Edit &amp;edit, tracktion::graph::test_utilities::TestSetup ts, MultiThreaded isMultiThreaded, LockFree isLockFree, tracktion::graph::ThreadPoolStrategy poolType)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>openEditfromArchiveData</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a1bddddf3fc523da38c656f72096fb1af</anchor>
      <arglist>(Engine &amp;engine, const char *data, int size)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>loadEditFromValueTree</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>afc76717c3a9fe887e71068cd4b952c44</anchor>
      <arglist>(Engine &amp;engine, const juce::ValueTree &amp;editState)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Edit &gt;</type>
      <name>openEditFromZipData</name>
      <anchorfile>namespacetracktion_1_1engine_1_1benchmark__utilities.html</anchorfile>
      <anchor>a9583681d3840597f50607c060f1a30da</anchor>
      <arglist>(Engine &amp;engine, const void *data, size_t numBytes)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion::engine::Click</name>
    <filename>namespacetracktion_1_1engine_1_1Click.html</filename>
    <member kind="function">
      <type>int</type>
      <name>getMidiClickNote</name>
      <anchorfile>namespacetracktion_1_1engine_1_1Click.html</anchorfile>
      <anchor>a92a94e50129578a5b5df63f1a9d18eef</anchor>
      <arglist>(Engine &amp;, bool big)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getClickWaveFile</name>
      <anchorfile>namespacetracktion_1_1engine_1_1Click.html</anchorfile>
      <anchor>a3fe0d70d7cc5f679bec090d748e2a4c1</anchor>
      <arglist>(Engine &amp;, bool big)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMidiClickNote</name>
      <anchorfile>namespacetracktion_1_1engine_1_1Click.html</anchorfile>
      <anchor>a0b22f070a08dbc3a9ea2984c013cc6fc</anchor>
      <arglist>(Engine &amp;, bool big, int noteNum)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClickWaveFile</name>
      <anchorfile>namespacetracktion_1_1engine_1_1Click.html</anchorfile>
      <anchor>ab93b93c6198c10aeb6e3f343b8e91ca0</anchor>
      <arglist>(Engine &amp;, bool big, const juce::String &amp;filename)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion::engine::ClipConstants</name>
    <filename>namespacetracktion_1_1engine_1_1ClipConstants.html</filename>
    <member kind="variable">
      <type>const double</type>
      <name>speedRatioMin</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ClipConstants.html</anchorfile>
      <anchor>a9e739085d094c774730db07f79cb822b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>speedRatioMax</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ClipConstants.html</anchorfile>
      <anchor>a698ca679308d1dcfa39d667ab5f0ca1b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion::engine::detail</name>
    <filename>namespacetracktion_1_1engine_1_1detail.html</filename>
    <class kind="struct">tracktion::engine::detail::ScopedActiveRecordingDevice</class>
  </compound>
  <compound kind="namespace">
    <name>tracktion::engine::details</name>
    <filename>namespacetracktion_1_1engine_1_1details.html</filename>
    <member kind="function">
      <type>Clip::FollowActionDurationType</type>
      <name>followActionDurationTypeFromString</name>
      <anchorfile>namespacetracktion_1_1engine_1_1details.html</anchorfile>
      <anchor>ad1624d70e4c73563cc086784fa67c9e9</anchor>
      <arglist>(juce::String)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>toString</name>
      <anchorfile>namespacetracktion_1_1engine_1_1details.html</anchorfile>
      <anchor>a5598d0f0ef3396a982384182e4b95672</anchor>
      <arglist>(Clip::FollowActionDurationType)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion::engine::IDs</name>
    <filename>namespacetracktion_1_1engine_1_1IDs.html</filename>
  </compound>
  <compound kind="namespace">
    <name>tracktion::engine::legacy</name>
    <filename>namespacetracktion_1_1engine_1_1legacy.html</filename>
    <class kind="struct">tracktion::engine::legacy::EditTimeRange</class>
  </compound>
  <compound kind="namespace">
    <name>tracktion::engine::MidiNodeHelpers</name>
    <filename>namespacetracktion_1_1engine_1_1MidiNodeHelpers.html</filename>
    <member kind="function">
      <type>void</type>
      <name>createMessagesForTime</name>
      <anchorfile>namespacetracktion_1_1engine_1_1MidiNodeHelpers.html</anchorfile>
      <anchor>aa44ea3451a512b49958ede81d09ff645</anchor>
      <arglist>(MidiMessageArray &amp;destBuffer, juce::MidiMessageSequence &amp;sourceSequence, double time, juce::Range&lt; int &gt; channelNumbers, LiveClipLevel &amp;clipLevel, bool useMPEChannelMode, MPESourceID midiSourceID, juce::Array&lt; juce::MidiMessage &gt; &amp;controllerMessagesScratchBuffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNoteOffs</name>
      <anchorfile>namespacetracktion_1_1engine_1_1MidiNodeHelpers.html</anchorfile>
      <anchor>a3977b15e1c5da475a66f1bec58c58ffa</anchor>
      <arglist>(MidiMessageArray &amp;destination, const juce::MidiMessageSequence &amp;sourceSequence, MPESourceID midiSourceID, double time, double midiTimeOffset, bool isPlaying)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanityCheckMidiBuffer</name>
      <anchorfile>namespacetracktion_1_1engine_1_1MidiNodeHelpers.html</anchorfile>
      <anchor>afe685681eef1653d3a025b7570268b6f</anchor>
      <arglist>(const MidiMessageArray &amp;midi, double maxTimeStamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNoteOffs</name>
      <anchorfile>namespacetracktion_1_1engine_1_1MidiNodeHelpers.html</anchorfile>
      <anchor>ac2af7d6541190626a1ea431cacfd1ec7</anchor>
      <arglist>(ActiveNoteList &amp;activeNoteList, MidiMessageArray &amp;destination, MPESourceID midiSourceID, double midiTimeOffset, bool isPlaying)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion::engine::modifier</name>
    <filename>namespacetracktion_1_1engine_1_1modifier.html</filename>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getEnabledNames</name>
      <anchorfile>namespacetracktion_1_1engine_1_1modifier.html</anchorfile>
      <anchor>afadfb107b3125162e43191d0a7e736b9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion::engine::ModifierCommon</name>
    <filename>namespacetracktion_1_1engine_1_1ModifierCommon.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>RateType</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>hertz</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbac128a9cb1609c306129da1d194a20e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>fourBars</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbaa14396b4906781aab32bee790e1dfc62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>twoBars</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba5550344b6e55f77f212bd71adab61db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>bar</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba1db8ef3c4b1fd3f8bab2c981521813c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfT</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba388dacc09f742e90461e47fe19a7f2ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>half</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba4156de6c297f5e051db638795a9c09af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>halfD</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbafec7b66c0731e73a2ee2a6a5ef9e7a42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>quarterT</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbae0581745fe2aaf6a32e6b93076e09468</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>quarter</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba63aae0f7c2d6df0bc4ed85c7cb899c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>quarterD</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbad780c5d052494129144f256fab005a27</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eighthT</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbafa96e7ae3c6ebe0b5235bd4a23fbcc4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eighth</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbab77e33fee58fb0c8bd5143a44647fb7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>eighthD</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba6d7e3d53da294d9f68cd1f7efcc0551a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixteenthT</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba5faa86731f44667559d4de9b39405568</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixteenth</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbae7ab9d82bd5293bbb4421aea5e4d9b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixteenthD</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbadcfad79aa5604e68feb497e8e469ec23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>thirtySecondT</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbafaa466f701b59ff073cb0f98d2354c6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>thirtySecond</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba2a92a4b742c0a3b010316c5b7a42e27f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>thirtySecondD</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba240ed9a77ac432e646df5a94f9549e42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixtyFourthT</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba8878a745852e8494d5dd26c50d656c9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixtyFourth</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacbaa9cfb3d2839f0424b69237560decf502</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>sixtyFourthD</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a8196f0dce2231f21fcd54b02462ddacba48861fddc04af2490aae995371df103f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SyncType</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a4dcd9d7ff08bc5c648d14f9b798e6276</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>free</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a4dcd9d7ff08bc5c648d14f9b798e6276aa747f9ccdab493effaac15025515568f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>transport</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a4dcd9d7ff08bc5c648d14f9b798e6276a37862afecabd0f5070a76065c3b842d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>note</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a4dcd9d7ff08bc5c648d14f9b798e6276a58f6d378a6b4967604d43261e733e081</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getRateTypeChoices</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a825887025a67600211e7c1b683d6b8c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBarFraction</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>a5bc60b5d724b4850a12299319a83ab50</anchor>
      <arglist>(RateType) noexcept</arglist>
    </member>
    <member kind="function">
      <type>juce::StringArray</type>
      <name>getSyncTypeChoices</name>
      <anchorfile>namespacetracktion_1_1engine_1_1ModifierCommon.html</anchorfile>
      <anchor>ae83e1b872dabf5bf9813cc7016abfc10</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion::engine::PredefinedWavetable</name>
    <filename>namespacetracktion_1_1engine_1_1PredefinedWavetable.html</filename>
  </compound>
  <compound kind="namespace">
    <name>tracktion::engine::RackNodeBuilder</name>
    <filename>namespacetracktion_1_1engine_1_1RackNodeBuilder.html</filename>
    <member kind="function">
      <type>std::unique_ptr&lt; tracktion::graph::Node &gt;</type>
      <name>createRackNode</name>
      <anchorfile>namespacetracktion_1_1engine_1_1RackNodeBuilder.html</anchorfile>
      <anchor>a04a7a746c4e0509e07c8a5f17420a113</anchor>
      <arglist>(tracktion::engine::RackType &amp;, double sampleRate, int blockSize, std::unique_ptr&lt; tracktion::graph::Node &gt;, ProcessState &amp;, bool isRendering)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion::engine::TracktionBinaryData</name>
    <filename>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</filename>
    <member kind="function">
      <type>const char *</type>
      <name>getNamedResource</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>ae76d8bc94ed84886cf0c840948c42108</anchor>
      <arglist>(const char *resourceNameUTF8, int &amp;dataSizeInBytes) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>patchnames_zip</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a3476f253f8f98f2a5af3e4cb02aa08a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>patchnames_zipSize</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>ab1b1205d23faedee380d2e36dc96bf57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>bigclick_wav</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a8e42ae8da7aacfc20f15e48d11c386c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>bigclick_wavSize</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a2c8593137e978bbb077d31a6e72b3762</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>littleclick_wav</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a5fd5db97a5c117e75154045d9554cf6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>littleclick_wavSize</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a1469d20b635d9b7a1e84c43971cbe3b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>groove_templates_xml</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>ad037e525ff774a6886f3de6b6f02232f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>groove_templates_xmlSize</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a6509c7e7d680549c9f5871136ede5d47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>groove_templates_2_xml</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a501c5c671406e1e9a6512002a40fc668</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>groove_templates_2_xmlSize</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a5efa0f4b90392a143abd4bbe14b614d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>namedResourceList</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>a30c702f20ccfe16af00882ff5cb84c93</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>namedResourceListSize</name>
      <anchorfile>namespacetracktion_1_1engine_1_1TracktionBinaryData.html</anchorfile>
      <anchor>abaed1201a14e27996973b004d67a0595</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion::graph</name>
    <filename>namespacetracktion_1_1graph.html</filename>
    <namespace>tracktion::graph::detail</namespace>
    <namespace>tracktion::graph::node_player_utils</namespace>
    <namespace>tracktion::graph::test_utilities</namespace>
    <class kind="struct">tracktion::graph::ChannelConnection</class>
    <class kind="class">tracktion::graph::ConnectedNode</class>
    <class kind="class">tracktion::graph::LatencyNode</class>
    <class kind="class">tracktion::graph::SummingNode</class>
    <class kind="class">tracktion::graph::SimpleNodePlayer</class>
    <class kind="class">tracktion::graph::LockFreeMultiThreadedNodePlayer</class>
    <class kind="class">tracktion::graph::MultiThreadedNodePlayer</class>
    <class kind="struct">tracktion::graph::NodeBuffer</class>
    <class kind="struct">tracktion::graph::NodeAndID</class>
    <class kind="struct">tracktion::graph::NodeGraph</class>
    <class kind="struct">tracktion::graph::PlaybackInitialisationInfo</class>
    <class kind="struct">tracktion::graph::NodeProperties</class>
    <class kind="struct">tracktion::graph::NodeOptimisations</class>
    <class kind="class">tracktion::graph::TransformCache</class>
    <class kind="class">tracktion::graph::Node</class>
    <class kind="class">tracktion::graph::NodePlayer</class>
    <class kind="struct">tracktion::graph::SplitTimelineRange</class>
    <class kind="class">tracktion::graph::PlayHead</class>
    <class kind="class">tracktion::graph::PlayHeadState</class>
    <class kind="class">tracktion::graph::MidiNode</class>
    <class kind="class">tracktion::graph::SinNode</class>
    <class kind="class">tracktion::graph::SilentNode</class>
    <class kind="class">tracktion::graph::BasicSummingNode</class>
    <class kind="class">tracktion::graph::FunctionNode</class>
    <class kind="class">tracktion::graph::GainNode</class>
    <class kind="class">tracktion::graph::SendNode</class>
    <class kind="class">tracktion::graph::ReturnNode</class>
    <class kind="class">tracktion::graph::ChannelRemappingNode</class>
    <class kind="class">tracktion::graph::SinkNode</class>
    <class kind="class">tracktion::graph::ForwardingNode</class>
    <class kind="class">tracktion::graph::AudioBufferPool</class>
    <class kind="class">tracktion::graph::AudioBufferStack</class>
    <class kind="class">tracktion::graph::AudioFifo</class>
    <class kind="struct">tracktion::graph::LatencyProcessor</class>
    <class kind="class">tracktion::graph::LockFreeObject</class>
    <class kind="struct">tracktion::graph::ScopedSignpost</class>
    <class kind="class">tracktion::graph::PerformanceMeasurement</class>
    <class kind="class">tracktion::graph::ScopedPerformanceMeasurement</class>
    <class kind="class">tracktion::graph::RealTimeSpinLock</class>
    <class kind="class">tracktion::graph::Semaphore</class>
    <class kind="class">tracktion::graph::LightweightSemaphore</class>
    <member kind="enumeration">
      <type></type>
      <name>TransformResult</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>ae8337885018777ed501740f02dcbca0d</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="ae8337885018777ed501740f02dcbca0da334c4a4c42fdb79d7ebc3e73b517e6f8">none</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="ae8337885018777ed501740f02dcbca0da2bc4ad49aaeeedd7b7b4cbbd3cc1835e">connectionsMade</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="ae8337885018777ed501740f02dcbca0daeeb724e7295815f3a8eec90846f596c8">nodesDeleted</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ClearBuffers</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a963afb16027e92506362c8076ba7d33d</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a963afb16027e92506362c8076ba7d33da7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a963afb16027e92506362c8076ba7d33daa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AllocateAudioBuffer</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a19c133dba445db6c09987c16ddd1c240</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a19c133dba445db6c09987c16ddd1c240a7fa3b767c460b54a2be4d49030b349c7">no</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a19c133dba445db6c09987c16ddd1c240aa6105c0a611b41b08f1209506350279e">yes</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VertexOrdering</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a6e378d0ba35c5e768fff3ed692e30c58</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a6e378d0ba35c5e768fff3ed692e30c58ac9a7dcee6c8867427cad06075090ea8c">preordering</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a6e378d0ba35c5e768fff3ed692e30c58aa594bbe6c0bebbd5e0ac45a054a7ea19">postordering</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a6e378d0ba35c5e768fff3ed692e30c58aae32c07adc26714e62b0e2cd5f77f72d">reversePreordering</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a6e378d0ba35c5e768fff3ed692e30c58afe1fe1181a7b661c316a10925c500c9e">reversePostordering</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a6e378d0ba35c5e768fff3ed692e30c58a867d33f817886982c81cc3934e489e24">bfsPreordering</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a6e378d0ba35c5e768fff3ed692e30c58a25f364f7adcbbf7a7cc5874f97ae1f12">bfsReversePreordering</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ThreadPoolStrategy</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a269844fbe17f2d681b0a3df8ae112f96</anchor>
      <arglist></arglist>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a269844fbe17f2d681b0a3df8ae112f96a1c6ad0e53f832c22dd2da6ab1b03c14d">conditionVariable</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a269844fbe17f2d681b0a3df8ae112f96a9bfda1f9ada0dd18d1aacb35e1ac4e1e">realTime</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a269844fbe17f2d681b0a3df8ae112f96af7befc67e4b1ddf3a03d496537760671">hybrid</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a269844fbe17f2d681b0a3df8ae112f96ace1bc7755b9332cfacdf8ee58ef2e3c1">semaphore</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a269844fbe17f2d681b0a3df8ae112f96a86073a83d32632d6993e1dd75ff62947">lightweightSemaphore</enumvalue>
      <enumvalue file="namespacetracktion_1_1graph.html" anchor="a269844fbe17f2d681b0a3df8ae112f96a8af14eb3725884652791f95d6016b355">lightweightSemHybrid</enumvalue>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; Node &gt;</type>
      <name>makeNode</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>afc2a8b4a5885756fefc95f2c81db5232</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a9a019ae7e8df5784887de4a9b90c9487</anchor>
      <arglist>(NodeAndID n1, NodeAndID n2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a75dd88b79b4ead64785c8e9be4a5ee9e</anchor>
      <arglist>(NodeAndID n1, NodeAndID n2)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; NodeGraph &gt;</type>
      <name>createNodeGraph</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>affddc1ea5f169421b306a7af1799cb0c</anchor>
      <arglist>(std::unique_ptr&lt; Node &gt;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitNodes</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a32023348ff2e4fef0dd312ffe050deec</anchor>
      <arglist>(Node &amp;, Visitor &amp;&amp;, bool preordering)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>visitNodesBFS</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a8616c2aebe687547f29be0af50553f50</anchor>
      <arglist>(Node &amp;node, Visitor &amp;&amp;visitor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNodesRecursive</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a679577226460cf0586b59680de93c387</anchor>
      <arglist>(std::vector&lt; NodeAndID &gt; &amp;nodeMap, Node &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NodeAndID &gt;</type>
      <name>createNodeMap</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>aca0fc95ac30e3afed7136e908c6d47ea</anchor>
      <arglist>(const std::vector&lt; Node * &gt; &amp;nodes)</arglist>
    </member>
    <member kind="function">
      <type>LockFreeMultiThreadedNodePlayer::ThreadPoolCreator</type>
      <name>getPoolCreatorFunction</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a37f64bb3d9fbdc10da0f161a2b6f396e</anchor>
      <arglist>(ThreadPoolStrategy)</arglist>
    </member>
    <member kind="function">
      <type>constexpr double</type>
      <name>sampleToTime</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>aead11ad22d40aec3b67e52cca4dad2e2</anchor>
      <arglist>(IntType samplePosition, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>constexpr int64_t</type>
      <name>timeToSample</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>adb6b4da97d8e333b68b622ef5a030645</anchor>
      <arglist>(std::floating_point auto timeInSeconds, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>constexpr juce::Range&lt; double &gt;</type>
      <name>sampleToTime</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a7145ceca4209ca70966ae5ae76a13556</anchor>
      <arglist>(juce::Range&lt; IntType &gt; sampleRange, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>constexpr juce::Range&lt; int64_t &gt;</type>
      <name>timeToSample</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>abc6e1c1e50e586f192a49e411a366361</anchor>
      <arglist>(juce::Range&lt; double &gt; timeInSeconds, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>constexpr juce::Range&lt; int64_t &gt;</type>
      <name>timeToSample</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a3bc6b60f6939dc57a9cc932a222749cb</anchor>
      <arglist>(RangeType timeInSeconds, double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>NodeType *</type>
      <name>findNode</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a2e7781d94eceb21ebd4a60276cfc9ba3</anchor>
      <arglist>(NodeGraph &amp;nodeGraph, Predicate pred)</arglist>
    </member>
    <member kind="function">
      <type>NodeType *</type>
      <name>findNodeWithID</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a4b113f1d6413b4d9d2297ce1c4582cce</anchor>
      <arglist>(NodeGraph &amp;nodeGraph, size_t nodeIDToLookFor)</arglist>
    </member>
    <member kind="function">
      <type>NodeType *</type>
      <name>findNodeWithIDIfNonZero</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a71cc05a34576c2310a79ebe2e66c1bd2</anchor>
      <arglist>(NodeGraph *nodeGraph, size_t nodeIDToLookFor)</arglist>
    </member>
    <member kind="function">
      <type>juce::AudioBuffer&lt; float &gt;</type>
      <name>toAudioBuffer</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a514ef258c89b58227b3f6ad2d8b3ee1f</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::BufferView&lt; SampleType, choc::buffer::SeparateChannelLayout &gt;</type>
      <name>toBufferView</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a4139f76d207395ded86b1969235644dd</anchor>
      <arglist>(juce::AudioBuffer&lt; SampleType &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::FrameRange</type>
      <name>createFrameRange</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a0bf4a996c7e326b2ccc25872ad558b83</anchor>
      <arglist>(std::integral auto start, std::integral auto end)</arglist>
    </member>
    <member kind="function">
      <type>juce::MidiMessage</type>
      <name>toMidiMessage</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a75610fd2541186d3d2577e14ac219446</anchor>
      <arglist>(const choc::midi::Sequence::Event &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiplyBy</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a646eb6e0395196d82b5f3532c5a08d8c</anchor>
      <arglist>(BufferViewType &amp;view, juce::SmoothedValue&lt; SampleType, SmoothingType &gt; &amp;value) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyGainRamp</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>aa89f848b24ce52d37f797b335458178b</anchor>
      <arglist>(BufferType &amp;&amp;buffer, GainType startGain, GainType endGain) noexcept</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::FrameRange</type>
      <name>frameRangeWithStartAndLength</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>ab1e6a6c82ce30b1f839877327d96baa0</anchor>
      <arglist>(choc::buffer::FrameCount start, choc::buffer::FrameCount length)</arglist>
    </member>
    <member kind="function">
      <type>choc::buffer::ChannelRange</type>
      <name>channelRangeWithStartAndLength</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a4497898df2d88e7ec62c528015f994b1</anchor>
      <arglist>(choc::buffer::ChannelCount start, choc::buffer::ChannelCount length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanitise</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a0db582faaeca8844b714175eb0fa458d</anchor>
      <arglist>(Buffer &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sanityCheckView</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a557f634035815360b710a944ea7e0c5b</anchor>
      <arglist>(const choc::buffer::BufferView&lt; SampleType, LayoutType &gt; &amp;view)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setThreadPriority</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>af3c29a82f756ecd6d9d36c1f77e049f4</anchor>
      <arglist>(std::thread &amp;, int priority)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tryToUpgradeCurrentThreadToRealtime</name>
      <anchorfile>namespacetracktion_1_1graph.html</anchorfile>
      <anchor>a6f8debef577496d588684166661b8ce0</anchor>
      <arglist>(const juce::Thread::RealtimeOptions &amp;)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion::graph::detail</name>
    <filename>namespacetracktion_1_1graph_1_1detail.html</filename>
    <class kind="struct">tracktion::graph::detail::VisitNodesWithRecord</class>
    <class kind="struct">tracktion::graph::detail::VisitNodesWithRecordBFS</class>
  </compound>
  <compound kind="namespace">
    <name>tracktion::graph::node_player_utils</name>
    <filename>namespacetracktion_1_1graph_1_1node__player__utils.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>areNodeIDsUnique</name>
      <anchorfile>namespacetracktion_1_1graph_1_1node__player__utils.html</anchorfile>
      <anchor>a4b1c4e5cabcdcc57cc3f0fe522548177</anchor>
      <arglist>(Collection &amp;&amp;nodes, bool ignoreZeroIDs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserveAudioBufferPool</name>
      <anchorfile>namespacetracktion_1_1graph_1_1node__player__utils.html</anchorfile>
      <anchor>a3a2dcb31d870f9c43c952a91ecfc7a43</anchor>
      <arglist>(Node *rootNode, const std::vector&lt; Node * &gt; &amp;allNodes, AudioBufferPool &amp;audioBufferPool, size_t numThreads, int blockSize)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tracktion::graph::test_utilities</name>
    <filename>namespacetracktion_1_1graph_1_1test__utilities.html</filename>
    <class kind="struct">tracktion::graph::test_utilities::SineOscillator</class>
    <class kind="struct">tracktion::graph::test_utilities::TestSetup</class>
    <class kind="struct">tracktion::graph::test_utilities::TestContext</class>
    <class kind="struct">tracktion::graph::test_utilities::TestProcess</class>
    <member kind="function">
      <type>void</type>
      <name>writeToFile</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>a5d40f4397abaca6c0c186e0962bc960c</anchor>
      <arglist>(juce::File file, choc::buffer::ChannelArrayView&lt; float &gt; block, double sampleRate, int qualityOptionIndex)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; juce::TemporaryFile &gt;</type>
      <name>writeToTemporaryFile</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>aa33c2029ce8b5e1a6ccc174be8310aa5</anchor>
      <arglist>(choc::buffer::ChannelArrayView&lt; float &gt; block, double sampleRate, int qualityOptionIndex=0)</arglist>
    </member>
    <member kind="function">
      <type>juce::String</type>
      <name>getName</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>abfd4e10a5038e7f09625e88384d7f97b</anchor>
      <arglist>(ThreadPoolStrategy type)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ThreadPoolStrategy &gt;</type>
      <name>getThreadPoolStrategies</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>a8a3d2b96f7ff9fe3afe44af69a01b704</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logGraph</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>a79c19dc6bb0e3e4eaae305450b41b87b</anchor>
      <arglist>(Node &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>createGraphDescription</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>ad087d37360b2bd70408bcf191fa37bab</anchor>
      <arglist>(Node &amp;)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; juce::TemporaryFile &gt;</type>
      <name>getSinFile</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>aff3e7fc61eb18acfe550afcf7e31fe3d</anchor>
      <arglist>(double sampleRate, double durationInSeconds, int numChannels=1, float frequency=220.0f, int qualityOptionIndex=-1)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; juce::TemporaryFile &gt;</type>
      <name>getSquareFile</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>a13bb65070355467aebecb665ea51a28b</anchor>
      <arglist>(double sampleRate, double durationInSeconds, int numChannels=1, float frequency=220.0f, int qualityOptionIndex=-1)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; juce::TemporaryFile &gt;</type>
      <name>getTimeEncodedFile</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>a42cdc3d75afd1583451e0f49626fa4c8</anchor>
      <arglist>(double sampleRate, TimeDuration duration, TimeDuration stepDuration, int numChannels=1, int qualityOptionIndex=-1)</arglist>
    </member>
    <member kind="function">
      <type>std::unique_ptr&lt; juce::TemporaryFile &gt;</type>
      <name>getTransientFile</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>a2868bf5289237c91c88844aa1f84dc30</anchor>
      <arglist>(double sampleRate, TimeDuration duration, TimePosition transientPos, float transientVal, int numChannels=1, int qualityOptionIndex=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>buffersAreEqual</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>acd5fa4003dbc2bd842bf311aceee0100</anchor>
      <arglist>(const juce::AudioBuffer&lt; float &gt; &amp;a, const juce::AudioBuffer&lt; float &gt; &amp;b, float absSampleTolerance=0.0f)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>buffersAreEqual</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>aae86a05d5249a8634ce4b26b5402596e</anchor>
      <arglist>(const choc::buffer::ChannelArrayView&lt; float &gt; &amp;a, const choc::buffer::ChannelArrayView&lt; float &gt; &amp;b, float absSampleTolerance=0.0f)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::pair&lt; choc::buffer::FrameCount, float &gt; &gt;</type>
      <name>findFirstNonZeroSample</name>
      <anchorfile>namespacetracktion_1_1graph_1_1test__utilities.html</anchorfile>
      <anchor>afc31d033b00391d0566cb9fa5bf3f4e6</anchor>
      <arglist>(choc::buffer::MonoView&lt; float &gt; buffer)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-3rd_party</name>
    <title>3rd_party</title>
    <filename>group__tracktion__engine-3rd__party.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_graph-3rd_party</name>
    <title>3rd_party</title>
    <filename>group__tracktion__graph-3rd__party.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-audio_files</name>
    <title>audio_files</title>
    <filename>group__tracktion__engine-audio__files.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-control_surfaces</name>
    <title>control_surfaces</title>
    <filename>group__tracktion__engine-control__surfaces.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_graph-docs</name>
    <title>docs</title>
    <filename>group__tracktion__graph-docs.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-midi</name>
    <title>midi</title>
    <filename>group__tracktion__engine-midi.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-model</name>
    <title>model</title>
    <filename>group__tracktion__engine-model.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-playback</name>
    <title>playback</title>
    <filename>group__tracktion__engine-playback.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-plugins</name>
    <title>plugins</title>
    <filename>group__tracktion__engine-plugins.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-project</name>
    <title>project</title>
    <filename>group__tracktion__engine-project.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-selection</name>
    <title>selection</title>
    <filename>group__tracktion__engine-selection.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-testing</name>
    <title>testing</title>
    <filename>group__tracktion__engine-testing.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-timestretch</name>
    <title>timestretch</title>
    <filename>group__tracktion__engine-timestretch.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_engine</name>
    <title>tracktion_engine</title>
    <filename>group__tracktion__engine.html</filename>
    <subgroup>tracktion_engine-3rd_party</subgroup>
    <subgroup>tracktion_engine-audio_files</subgroup>
    <subgroup>tracktion_engine-control_surfaces</subgroup>
    <subgroup>tracktion_engine-midi</subgroup>
    <subgroup>tracktion_engine-model</subgroup>
    <subgroup>tracktion_engine-playback</subgroup>
    <subgroup>tracktion_engine-plugins</subgroup>
    <subgroup>tracktion_engine-project</subgroup>
    <subgroup>tracktion_engine-selection</subgroup>
    <subgroup>tracktion_engine-testing</subgroup>
    <subgroup>tracktion_engine-timestretch</subgroup>
    <subgroup>tracktion_engine-utilities</subgroup>
  </compound>
  <compound kind="group">
    <name>tracktion_graph-tracktion_graph</name>
    <title>tracktion_graph</title>
    <filename>group__tracktion__graph-tracktion__graph.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_graph</name>
    <title>tracktion_graph</title>
    <filename>group__tracktion__graph.html</filename>
    <subgroup>tracktion_graph-3rd_party</subgroup>
    <subgroup>tracktion_graph-docs</subgroup>
    <subgroup>tracktion_graph-tracktion_graph</subgroup>
    <subgroup>tracktion_graph-utilities</subgroup>
  </compound>
  <compound kind="group">
    <name>tracktion_engine-utilities</name>
    <title>utilities</title>
    <filename>group__tracktion__engine-utilities.html</filename>
  </compound>
  <compound kind="group">
    <name>tracktion_graph-utilities</name>
    <title>utilities</title>
    <filename>group__tracktion__graph-utilities.html</filename>
  </compound>
</tagfile>
